// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12070

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1371,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	233, 208,
	488, 208,
	-2, 0,
	-1, 82,
	221, 1164,
	235, 1164,
	251, 351,
	376, 351,
	386, 946,
	418, 351,
	430, 946,
	472, 946,
	499, 351,
	525, 946,
	-2, 0,
	-1, 88,
	251, 355,
	-2, 0,
	-1, 89,
	129, 1371,
	228, 1371,
	510, 1371,
	511, 1371,
	-2, 0,
	-1, 105,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	505, 1342,
	-2, 1313,
	-1, 141,
	154, 821,
	250, 821,
	379, 790,
	435, 790,
	491, 821,
	493, 790,
	-2, 0,
	-1, 143,
	4, 1373,
	21, 1373,
	22, 1373,
	23, 1373,
	24, 1373,
	25, 1373,
	26, 1373,
	27, 1373,
	29, 1373,
	30, 1373,
	36, 1373,
	41, 1373,
	42, 1373,
	44, 1373,
	45, 1373,
	46, 1373,
	47, 1373,
	48, 1373,
	49, 1373,
	50, 1373,
	52, 1373,
	53, 1373,
	54, 1373,
	55, 1373,
	57, 1373,
	58, 1373,
	59, 1373,
	60, 1373,
	61, 1373,
	62, 1373,
	63, 1373,
	67, 1373,
	68, 1373,
	69, 1373,
	70, 1373,
	72, 1373,
	73, 1373,
	74, 1373,
	78, 1373,
	79, 1373,
	80, 1373,
	81, 1373,
	82, 1373,
	83, 1373,
	84, 1373,
	87, 1373,
	88, 1373,
	89, 1373,
	90, 1373,
	91, 1373,
	93, 1373,
	95, 1373,
	96, 1373,
	97, 1373,
	98, 1373,
	99, 1373,
	100, 1373,
	102, 1373,
	103, 1373,
	104, 1373,
	106, 1373,
	107, 1373,
	115, 1373,
	116, 1373,
	117, 1373,
	118, 1373,
	120, 1373,
	121, 1373,
	122, 1373,
	124, 1373,
	125, 1373,
	126, 1373,
	128, 1373,
	129, 1373,
	131, 1373,
	132, 1373,
	133, 1373,
	136, 1373,
	137, 1373,
	138, 1373,
	140, 1373,
	141, 1373,
	143, 1373,
	144, 1373,
	145, 1373,
	147, 1373,
	148, 1373,
	149, 1373,
	150, 1373,
	151, 1373,
	152, 1373,
	153, 1373,
	154, 1373,
	155, 1373,
	156, 1373,
	157, 1373,
	158, 1373,
	159, 1373,
	160, 1373,
	161, 1373,
	163, 1373,
	169, 1373,
	170, 1373,
	171, 1373,
	172, 1373,
	176, 1373,
	178, 1373,
	182, 1373,
	183, 1373,
	184, 1373,
	185, 1373,
	186, 1373,
	187, 1373,
	188, 1373,
	189, 1373,
	190, 1373,
	191, 1373,
	192, 1373,
	193, 1373,
	195, 1373,
	196, 1373,
	198, 1373,
	199, 1373,
	201, 1373,
	202, 1373,
	203, 1373,
	204, 1373,
	205, 1373,
	206, 1373,
	207, 1373,
	208, 1373,
	209, 1373,
	211, 1373,
	212, 1373,
	214, 1373,
	215, 1373,
	216, 1373,
	217, 1373,
	221, 1373,
	222, 1373,
	223, 1373,
	224, 1373,
	225, 1373,
	228, 1373,
	229, 1373,
	230, 1373,
	232, 1373,
	234, 1373,
	235, 1373,
	237, 1373,
	239, 1373,
	240, 1373,
	241, 1373,
	243, 1373,
	247, 1373,
	248, 1373,
	249, 1373,
	250, 1373,
	251, 1373,
	252, 1373,
	254, 1373,
	255, 1373,
	256, 1373,
	258, 1373,
	259, 1373,
	261, 1373,
	262, 1373,
	265, 1373,
	269, 1373,
	270, 1373,
	273, 1373,
	274, 1373,
	275, 1373,
	276, 1373,
	278, 1373,
	279, 1373,
	280, 1373,
	281, 1373,
	282, 1373,
	283, 1373,
	284, 1373,
	285, 1373,
	286, 1373,
	287, 1373,
	288, 1373,
	289, 1373,
	290, 1373,
	291, 1373,
	292, 1373,
	293, 1373,
	294, 1373,
	295, 1373,
	296, 1373,
	297, 1373,
	298, 1373,
	299, 1373,
	301, 1373,
	303, 1373,
	304, 1373,
	305, 1373,
	306, 1373,
	307, 1373,
	308, 1373,
	309, 1373,
	310, 1373,
	311, 1373,
	312, 1373,
	313, 1373,
	314, 1373,
	316, 1373,
	318, 1373,
	320, 1373,
	321, 1373,
	323, 1373,
	324, 1373,
	325, 1373,
	326, 1373,
	327, 1373,
	330, 1373,
	333, 1373,
	334, 1373,
	335, 1373,
	336, 1373,
	339, 1373,
	340, 1373,
	341, 1373,
	343, 1373,
	345, 1373,
	346, 1373,
	347, 1373,
	348, 1373,
	349, 1373,
	350, 1373,
	351, 1373,
	352, 1373,
	353, 1373,
	354, 1373,
	355, 1373,
	356, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	361, 1373,
	362, 1373,
	363, 1373,
	364, 1373,
	365, 1373,
	366, 1373,
	367, 1373,
	368, 1373,
	369, 1373,
	370, 1373,
	371, 1373,
	372, 1373,
	374, 1373,
	375, 1373,
	377, 1373,
	378, 1373,
	379, 1373,
	380, 1373,
	381, 1373,
	382, 1373,
	383, 1373,
	384, 1373,
	385, 1373,
	386, 1373,
	387, 1373,
	388, 1373,
	390, 1373,
	396, 1373,
	398, 1373,
	399, 1373,
	400, 1373,
	401, 1373,
	402, 1373,
	403, 1373,
	404, 1373,
	405, 1373,
	407, 1373,
	408, 1373,
	409, 1373,
	411, 1373,
	412, 1373,
	413, 1373,
	414, 1373,
	415, 1373,
	416, 1373,
	418, 1373,
	419, 1373,
	420, 1373,
	421, 1373,
	422, 1373,
	423, 1373,
	424, 1373,
	425, 1373,
	426, 1373,
	427, 1373,
	428, 1373,
	430, 1373,
	431, 1373,
	432, 1373,
	433, 1373,
	434, 1373,
	435, 1373,
	437, 1373,
	438, 1373,
	439, 1373,
	440, 1373,
	441, 1373,
	442, 1373,
	444, 1373,
	445, 1373,
	446, 1373,
	447, 1373,
	448, 1373,
	449, 1373,
	450, 1373,
	452, 1373,
	454, 1373,
	455, 1373,
	456, 1373,
	457, 1373,
	458, 1373,
	459, 1373,
	460, 1373,
	461, 1373,
	462, 1373,
	463, 1373,
	464, 1373,
	465, 1373,
	466, 1373,
	468, 1373,
	469, 1373,
	471, 1373,
	473, 1373,
	474, 1373,
	475, 1373,
	476, 1373,
	477, 1373,
	478, 1373,
	479, 1373,
	480, 1373,
	481, 1373,
	483, 1373,
	484, 1373,
	485, 1373,
	486, 1373,
	487, 1373,
	489, 1373,
	491, 1373,
	492, 1373,
	493, 1373,
	494, 1373,
	495, 1373,
	496, 1373,
	498, 1373,
	499, 1373,
	500, 1373,
	501, 1373,
	503, 1373,
	504, 1373,
	507, 1373,
	508, 1373,
	509, 1373,
	510, 1373,
	511, 1373,
	512, 1373,
	513, 1373,
	515, 1373,
	518, 1373,
	519, 1373,
	520, 1373,
	521, 1373,
	522, 1373,
	523, 1373,
	525, 1373,
	526, 1373,
	527, 1373,
	528, 1373,
	533, 1373,
	534, 1373,
	535, 1373,
	536, 1373,
	537, 1373,
	538, 1373,
	-2, 0,
	-1, 144,
	1, 1242,
	127, 1242,
	239, 1242,
	317, 1242,
	374, 1242,
	383, 1242,
	542, 1242,
	566, 1242,
	-2, 0,
	-1, 146,
	1, 1242,
	566, 1242,
	-2, 0,
	-1, 147,
	1, 1242,
	566, 1242,
	-2, 0,
	-1, 148,
	1, 1242,
	488, 1242,
	566, 1242,
	-2, 0,
	-1, 177,
	146, 1341,
	164, 1341,
	177, 1341,
	231, 1341,
	264, 1341,
	328, 1341,
	338, 1341,
	505, 1341,
	-2, 1316,
	-1, 215,
	4, 1380,
	5, 1380,
	6, 1380,
	7, 1380,
	8, 1380,
	9, 1380,
	10, 1380,
	21, 1380,
	22, 1380,
	23, 1380,
	24, 1380,
	25, 1380,
	26, 1380,
	27, 1380,
	29, 1380,
	30, 1380,
	36, 1380,
	37, 1380,
	41, 1380,
	42, 1380,
	43, 1380,
	44, 1380,
	45, 1380,
	46, 1380,
	47, 1380,
	48, 1380,
	49, 1380,
	50, 1380,
	52, 1380,
	53, 1380,
	54, 1380,
	55, 1380,
	57, 1380,
	58, 1380,
	59, 1380,
	60, 1380,
	61, 1380,
	62, 1380,
	63, 1380,
	64, 1380,
	65, 1380,
	66, 1380,
	67, 1380,
	68, 1380,
	69, 1380,
	70, 1380,
	72, 1380,
	73, 1380,
	74, 1380,
	76, 1380,
	78, 1380,
	79, 1380,
	80, 1380,
	81, 1380,
	82, 1380,
	83, 1380,
	84, 1380,
	87, 1380,
	88, 1380,
	89, 1380,
	90, 1380,
	91, 1380,
	93, 1380,
	95, 1380,
	96, 1380,
	97, 1380,
	98, 1380,
	99, 1380,
	100, 1380,
	102, 1380,
	103, 1380,
	104, 1380,
	105, 1380,
	106, 1380,
	107, 1380,
	108, 1380,
	109, 1380,
	110, 1380,
	111, 1380,
	112, 1380,
	113, 1380,
	114, 1380,
	115, 1380,
	116, 1380,
	117, 1380,
	118, 1380,
	119, 1380,
	120, 1380,
	121, 1380,
	122, 1380,
	123, 1380,
	124, 1380,
	125, 1380,
	126, 1380,
	128, 1380,
	129, 1380,
	131, 1380,
	132, 1380,
	133, 1380,
	136, 1380,
	137, 1380,
	138, 1380,
	140, 1380,
	141, 1380,
	143, 1380,
	144, 1380,
	145, 1380,
	147, 1380,
	148, 1380,
	149, 1380,
	150, 1380,
	151, 1380,
	152, 1380,
	153, 1380,
	154, 1380,
	155, 1380,
	156, 1380,
	157, 1380,
	158, 1380,
	159, 1380,
	160, 1380,
	161, 1380,
	162, 1380,
	163, 1380,
	169, 1380,
	170, 1380,
	171, 1380,
	172, 1380,
	176, 1380,
	178, 1380,
	181, 1380,
	182, 1380,
	183, 1380,
	184, 1380,
	185, 1380,
	186, 1380,
	187, 1380,
	188, 1380,
	189, 1380,
	190, 1380,
	191, 1380,
	192, 1380,
	193, 1380,
	195, 1380,
	196, 1380,
	198, 1380,
	199, 1380,
	201, 1380,
	202, 1380,
	203, 1380,
	204, 1380,
	205, 1380,
	206, 1380,
	207, 1380,
	208, 1380,
	209, 1380,
	210, 1380,
	211, 1380,
	212, 1380,
	214, 1380,
	215, 1380,
	216, 1380,
	217, 1380,
	221, 1380,
	222, 1380,
	223, 1380,
	224, 1380,
	225, 1380,
	227, 1380,
	228, 1380,
	229, 1380,
	230, 1380,
	232, 1380,
	234, 1380,
	235, 1380,
	236, 1380,
	237, 1380,
	238, 1380,
	239, 1380,
	240, 1380,
	241, 1380,
	242, 1380,
	243, 1380,
	247, 1380,
	248, 1380,
	249, 1380,
	250, 1380,
	251, 1380,
	252, 1380,
	254, 1380,
	255, 1380,
	256, 1380,
	258, 1380,
	259, 1380,
	260, 1380,
	261, 1380,
	262, 1380,
	263, 1380,
	265, 1380,
	269, 1380,
	270, 1380,
	271, 1380,
	272, 1380,
	273, 1380,
	274, 1380,
	275, 1380,
	276, 1380,
	278, 1380,
	279, 1380,
	280, 1380,
	281, 1380,
	282, 1380,
	283, 1380,
	284, 1380,
	285, 1380,
	286, 1380,
	287, 1380,
	288, 1380,
	289, 1380,
	290, 1380,
	291, 1380,
	292, 1380,
	293, 1380,
	294, 1380,
	295, 1380,
	296, 1380,
	297, 1380,
	298, 1380,
	299, 1380,
	301, 1380,
	302, 1380,
	303, 1380,
	304, 1380,
	305, 1380,
	306, 1380,
	307, 1380,
	308, 1380,
	309, 1380,
	310, 1380,
	311, 1380,
	312, 1380,
	313, 1380,
	314, 1380,
	315, 1380,
	316, 1380,
	317, 1380,
	318, 1380,
	319, 1380,
	320, 1380,
	321, 1380,
	322, 1380,
	323, 1380,
	324, 1380,
	325, 1380,
	326, 1380,
	327, 1380,
	330, 1380,
	334, 1380,
	335, 1380,
	336, 1380,
	339, 1380,
	340, 1380,
	341, 1380,
	342, 1380,
	343, 1380,
	344, 1380,
	345, 1380,
	346, 1380,
	347, 1380,
	348, 1380,
	349, 1380,
	350, 1380,
	351, 1380,
	352, 1380,
	353, 1380,
	354, 1380,
	355, 1380,
	356, 1380,
	358, 1380,
	359, 1380,
	360, 1380,
	361, 1380,
	362, 1380,
	363, 1380,
	364, 1380,
	365, 1380,
	366, 1380,
	367, 1380,
	368, 1380,
	369, 1380,
	370, 1380,
	371, 1380,
	372, 1380,
	374, 1380,
	375, 1380,
	377, 1380,
	378, 1380,
	379, 1380,
	380, 1380,
	381, 1380,
	382, 1380,
	383, 1380,
	384, 1380,
	385, 1380,
	386, 1380,
	387, 1380,
	388, 1380,
	390, 1380,
	396, 1380,
	398, 1380,
	399, 1380,
	400, 1380,
	401, 1380,
	402, 1380,
	403, 1380,
	404, 1380,
	405, 1380,
	407, 1380,
	408, 1380,
	409, 1380,
	410, 1380,
	411, 1380,
	412, 1380,
	413, 1380,
	414, 1380,
	415, 1380,
	416, 1380,
	418, 1380,
	419, 1380,
	420, 1380,
	421, 1380,
	422, 1380,
	423, 1380,
	424, 1380,
	425, 1380,
	426, 1380,
	427, 1380,
	428, 1380,
	430, 1380,
	431, 1380,
	432, 1380,
	433, 1380,
	434, 1380,
	435, 1380,
	436, 1380,
	437, 1380,
	438, 1380,
	439, 1380,
	440, 1380,
	441, 1380,
	442, 1380,
	443, 1380,
	444, 1380,
	445, 1380,
	446, 1380,
	447, 1380,
	448, 1380,
	449, 1380,
	450, 1380,
	452, 1380,
	454, 1380,
	455, 1380,
	456, 1380,
	457, 1380,
	458, 1380,
	459, 1380,
	460, 1380,
	461, 1380,
	462, 1380,
	463, 1380,
	464, 1380,
	465, 1380,
	466, 1380,
	468, 1380,
	469, 1380,
	470, 1380,
	471, 1380,
	473, 1380,
	474, 1380,
	475, 1380,
	476, 1380,
	477, 1380,
	478, 1380,
	479, 1380,
	480, 1380,
	481, 1380,
	483, 1380,
	484, 1380,
	485, 1380,
	486, 1380,
	487, 1380,
	489, 1380,
	491, 1380,
	492, 1380,
	493, 1380,
	494, 1380,
	495, 1380,
	496, 1380,
	497, 1380,
	498, 1380,
	499, 1380,
	500, 1380,
	501, 1380,
	503, 1380,
	504, 1380,
	506, 1380,
	507, 1380,
	508, 1380,
	509, 1380,
	510, 1380,
	511, 1380,
	512, 1380,
	513, 1380,
	514, 1380,
	515, 1380,
	518, 1380,
	519, 1380,
	520, 1380,
	521, 1380,
	522, 1380,
	523, 1380,
	525, 1380,
	526, 1380,
	527, 1380,
	528, 1380,
	533, 1380,
	534, 1380,
	535, 1380,
	536, 1380,
	537, 1380,
	538, 1380,
	539, 1380,
	547, 1380,
	554, 1380,
	555, 1380,
	556, 1380,
	563, 1380,
	567, 1380,
	-2, 0,
	-1, 677,
	180, 2128,
	488, 2128,
	546, 2128,
	565, 2128,
	-2, 0,
	-1, 678,
	180, 2227,
	488, 2227,
	546, 2227,
	565, 2227,
	-2, 0,
	-1, 679,
	180, 2115,
	488, 2115,
	546, 2115,
	565, 2115,
	-2, 0,
	-1, 681,
	180, 2352,
	488, 2352,
	546, 2352,
	565, 2352,
	-2, 0,
	-1, 683,
	180, 2388,
	488, 2388,
	546, 2388,
	565, 2388,
	-2, 0,
	-1, 690,
	180, 2253,
	488, 2253,
	546, 2253,
	565, 2253,
	-2, 631,
	-1, 722,
	565, 2065,
	568, 2065,
	-2, 879,
	-1, 723,
	565, 2067,
	568, 2067,
	-2, 880,
	-1, 724,
	565, 2066,
	568, 2066,
	-2, 881,
	-1, 725,
	568, 1999,
	-2, 882,
	-1, 748,
	177, 222,
	-2, 0,
	-1, 771,
	43, 2069,
	-2, 0,
	-1, 772,
	525, 1141,
	-2, 947,
	-1, 788,
	4, 1508,
	21, 1508,
	22, 1508,
	23, 1508,
	24, 1508,
	25, 1508,
	26, 1508,
	27, 1508,
	29, 1508,
	30, 1508,
	36, 1508,
	41, 1508,
	42, 1508,
	44, 1508,
	45, 1508,
	46, 1508,
	47, 1508,
	48, 1508,
	49, 1508,
	50, 1508,
	52, 1508,
	53, 1508,
	54, 1508,
	55, 1508,
	57, 1508,
	58, 1508,
	59, 1508,
	60, 1508,
	61, 1508,
	62, 1508,
	63, 1508,
	67, 1508,
	68, 1508,
	69, 1508,
	70, 1508,
	72, 1508,
	73, 1508,
	74, 1508,
	78, 1508,
	79, 1508,
	80, 1508,
	81, 1508,
	82, 1508,
	83, 1508,
	84, 1508,
	87, 1508,
	88, 1508,
	89, 1508,
	90, 1508,
	91, 1508,
	93, 1508,
	95, 1508,
	96, 1508,
	97, 1508,
	98, 1508,
	99, 1508,
	100, 1508,
	102, 1508,
	103, 1508,
	104, 1508,
	106, 1508,
	107, 1508,
	115, 1508,
	116, 1508,
	117, 1508,
	118, 1508,
	120, 1508,
	121, 1508,
	122, 1508,
	124, 1508,
	125, 1508,
	126, 1508,
	128, 1508,
	129, 1508,
	131, 1508,
	132, 1508,
	133, 1508,
	136, 1508,
	137, 1508,
	138, 1508,
	140, 1508,
	141, 1508,
	143, 1508,
	144, 1508,
	145, 1508,
	147, 1508,
	148, 1508,
	149, 1508,
	150, 1508,
	151, 1508,
	152, 1508,
	153, 1508,
	154, 1508,
	155, 1508,
	156, 1508,
	157, 1508,
	158, 1508,
	159, 1508,
	160, 1508,
	161, 1508,
	163, 1508,
	169, 1508,
	170, 1508,
	171, 1508,
	172, 1508,
	176, 1508,
	178, 1508,
	182, 1508,
	183, 1508,
	184, 1508,
	185, 1508,
	186, 1508,
	187, 1508,
	188, 1508,
	189, 1508,
	190, 1508,
	191, 1508,
	192, 1508,
	193, 1508,
	195, 1508,
	196, 1508,
	198, 1508,
	199, 1508,
	201, 1508,
	202, 1508,
	203, 1508,
	204, 1508,
	205, 1508,
	206, 1508,
	207, 1508,
	208, 1508,
	209, 1508,
	211, 1508,
	212, 1508,
	214, 1508,
	215, 1508,
	216, 1508,
	217, 1508,
	221, 1508,
	222, 1508,
	223, 1508,
	224, 1508,
	225, 1508,
	228, 1508,
	229, 1508,
	230, 1508,
	232, 1508,
	234, 1508,
	235, 1508,
	237, 1508,
	239, 1508,
	240, 1508,
	241, 1508,
	243, 1508,
	247, 1508,
	248, 1508,
	249, 1508,
	250, 1508,
	251, 1508,
	252, 1508,
	254, 1508,
	255, 1508,
	256, 1508,
	258, 1508,
	259, 1508,
	261, 1508,
	262, 1508,
	265, 1508,
	269, 1508,
	270, 1508,
	273, 1508,
	274, 1508,
	275, 1508,
	276, 1508,
	278, 1508,
	279, 1508,
	280, 1508,
	281, 1508,
	282, 1508,
	283, 1508,
	284, 1508,
	285, 1508,
	286, 1508,
	287, 1508,
	288, 1508,
	289, 1508,
	290, 1508,
	291, 1508,
	292, 1508,
	293, 1508,
	294, 1508,
	295, 1508,
	296, 1508,
	297, 1508,
	298, 1508,
	299, 1508,
	301, 1508,
	303, 1508,
	304, 1508,
	305, 1508,
	306, 1508,
	307, 1508,
	308, 1508,
	309, 1508,
	310, 1508,
	311, 1508,
	312, 1508,
	313, 1508,
	314, 1508,
	316, 1508,
	318, 1508,
	320, 1508,
	321, 1508,
	323, 1508,
	324, 1508,
	325, 1508,
	326, 1508,
	327, 1508,
	330, 1508,
	334, 1508,
	335, 1508,
	336, 1508,
	339, 1508,
	340, 1508,
	341, 1508,
	343, 1508,
	345, 1508,
	346, 1508,
	347, 1508,
	348, 1508,
	349, 1508,
	350, 1508,
	351, 1508,
	352, 1508,
	353, 1508,
	354, 1508,
	355, 1508,
	356, 1508,
	358, 1508,
	359, 1508,
	360, 1508,
	361, 1508,
	362, 1508,
	363, 1508,
	364, 1508,
	365, 1508,
	366, 1508,
	367, 1508,
	368, 1508,
	369, 1508,
	370, 1508,
	371, 1508,
	372, 1508,
	374, 1508,
	375, 1508,
	377, 1508,
	378, 1508,
	379, 1508,
	380, 1508,
	381, 1508,
	382, 1508,
	383, 1508,
	384, 1508,
	385, 1508,
	386, 1508,
	387, 1508,
	388, 1508,
	390, 1508,
	396, 1508,
	398, 1508,
	399, 1508,
	400, 1508,
	401, 1508,
	402, 1508,
	403, 1508,
	404, 1508,
	405, 1508,
	407, 1508,
	408, 1508,
	409, 1508,
	411, 1508,
	412, 1508,
	413, 1508,
	414, 1508,
	415, 1508,
	416, 1508,
	418, 1508,
	419, 1508,
	420, 1508,
	421, 1508,
	422, 1508,
	423, 1508,
	424, 1508,
	425, 1508,
	426, 1508,
	427, 1508,
	428, 1508,
	430, 1508,
	431, 1508,
	432, 1508,
	433, 1508,
	434, 1508,
	435, 1508,
	437, 1508,
	438, 1508,
	439, 1508,
	440, 1508,
	441, 1508,
	442, 1508,
	444, 1508,
	445, 1508,
	446, 1508,
	447, 1508,
	448, 1508,
	449, 1508,
	450, 1508,
	452, 1508,
	454, 1508,
	455, 1508,
	456, 1508,
	457, 1508,
	458, 1508,
	459, 1508,
	460, 1508,
	461, 1508,
	462, 1508,
	463, 1508,
	464, 1508,
	465, 1508,
	466, 1508,
	468, 1508,
	469, 1508,
	471, 1508,
	473, 1508,
	474, 1508,
	475, 1508,
	476, 1508,
	477, 1508,
	478, 1508,
	479, 1508,
	480, 1508,
	481, 1508,
	483, 1508,
	484, 1508,
	485, 1508,
	486, 1508,
	487, 1508,
	489, 1508,
	491, 1508,
	492, 1508,
	493, 1508,
	494, 1508,
	495, 1508,
	496, 1508,
	498, 1508,
	499, 1508,
	500, 1508,
	501, 1508,
	503, 1508,
	504, 1508,
	507, 1508,
	508, 1508,
	509, 1508,
	510, 1508,
	511, 1508,
	512, 1508,
	513, 1508,
	515, 1508,
	518, 1508,
	519, 1508,
	520, 1508,
	521, 1508,
	522, 1508,
	523, 1508,
	525, 1508,
	526, 1508,
	527, 1508,
	528, 1508,
	533, 1508,
	534, 1508,
	535, 1508,
	536, 1508,
	537, 1508,
	538, 1508,
	-2, 0,
	-1, 813,
	4, 1162,
	21, 1162,
	22, 1162,
	23, 1162,
	24, 1162,
	25, 1162,
	26, 1162,
	27, 1162,
	29, 1162,
	30, 1162,
	36, 1162,
	41, 1162,
	42, 1162,
	44, 1162,
	45, 1162,
	46, 1162,
	47, 1162,
	48, 1162,
	49, 1162,
	50, 1162,
	52, 1162,
	53, 1162,
	54, 1162,
	55, 1162,
	57, 1162,
	58, 1162,
	59, 1162,
	60, 1162,
	61, 1162,
	62, 1162,
	63, 1162,
	67, 1162,
	68, 1162,
	69, 1162,
	70, 1162,
	72, 1162,
	73, 1162,
	74, 1162,
	78, 1162,
	79, 1162,
	80, 1162,
	81, 1162,
	82, 1162,
	83, 1162,
	84, 1162,
	87, 1162,
	88, 1162,
	89, 1162,
	90, 1162,
	91, 1162,
	93, 1162,
	95, 1162,
	96, 1162,
	97, 1162,
	98, 1162,
	99, 1162,
	100, 1162,
	102, 1162,
	103, 1162,
	104, 1162,
	106, 1162,
	107, 1162,
	115, 1162,
	116, 1162,
	117, 1162,
	118, 1162,
	120, 1162,
	121, 1162,
	122, 1162,
	124, 1162,
	125, 1162,
	126, 1162,
	128, 1162,
	129, 1162,
	131, 1162,
	132, 1162,
	133, 1162,
	136, 1162,
	137, 1162,
	138, 1162,
	140, 1162,
	141, 1162,
	143, 1162,
	144, 1162,
	145, 1162,
	147, 1162,
	148, 1162,
	149, 1162,
	150, 1162,
	151, 1162,
	152, 1162,
	153, 1162,
	154, 1162,
	155, 1162,
	156, 1162,
	157, 1162,
	158, 1162,
	159, 1162,
	160, 1162,
	161, 1162,
	163, 1162,
	169, 1162,
	170, 1162,
	171, 1162,
	172, 1162,
	176, 1162,
	178, 1162,
	182, 1162,
	183, 1162,
	184, 1162,
	185, 1162,
	186, 1162,
	187, 1162,
	188, 1162,
	189, 1162,
	190, 1162,
	191, 1162,
	192, 1162,
	193, 1162,
	195, 1162,
	196, 1162,
	198, 1162,
	199, 1162,
	201, 1162,
	202, 1162,
	203, 1162,
	204, 1162,
	205, 1162,
	206, 1162,
	207, 1162,
	208, 1162,
	209, 1162,
	211, 1162,
	212, 1162,
	214, 1162,
	215, 1162,
	216, 1162,
	217, 1162,
	221, 1162,
	222, 1162,
	223, 1162,
	224, 1162,
	225, 1162,
	228, 1162,
	229, 1162,
	230, 1162,
	232, 1162,
	234, 1162,
	235, 1162,
	237, 1162,
	239, 1162,
	240, 1162,
	241, 1162,
	243, 1162,
	247, 1162,
	248, 1162,
	249, 1162,
	250, 1162,
	251, 1162,
	252, 1162,
	254, 1162,
	255, 1162,
	256, 1162,
	258, 1162,
	259, 1162,
	261, 1162,
	262, 1162,
	265, 1162,
	269, 1162,
	270, 1162,
	273, 1162,
	274, 1162,
	275, 1162,
	276, 1162,
	278, 1162,
	279, 1162,
	280, 1162,
	281, 1162,
	282, 1162,
	283, 1162,
	284, 1162,
	285, 1162,
	286, 1162,
	287, 1162,
	288, 1162,
	289, 1162,
	290, 1162,
	291, 1162,
	292, 1162,
	293, 1162,
	294, 1162,
	295, 1162,
	296, 1162,
	297, 1162,
	298, 1162,
	299, 1162,
	301, 1162,
	303, 1162,
	304, 1162,
	305, 1162,
	306, 1162,
	307, 1162,
	308, 1162,
	309, 1162,
	310, 1162,
	311, 1162,
	312, 1162,
	313, 1162,
	314, 1162,
	316, 1162,
	318, 1162,
	320, 1162,
	321, 1162,
	323, 1162,
	324, 1162,
	325, 1162,
	326, 1162,
	327, 1162,
	330, 1162,
	334, 1162,
	335, 1162,
	336, 1162,
	339, 1162,
	340, 1162,
	341, 1162,
	343, 1162,
	345, 1162,
	346, 1162,
	347, 1162,
	348, 1162,
	349, 1162,
	350, 1162,
	351, 1162,
	352, 1162,
	353, 1162,
	354, 1162,
	355, 1162,
	356, 1162,
	358, 1162,
	359, 1162,
	360, 1162,
	361, 1162,
	362, 1162,
	363, 1162,
	364, 1162,
	365, 1162,
	366, 1162,
	367, 1162,
	368, 1162,
	369, 1162,
	370, 1162,
	371, 1162,
	372, 1162,
	374, 1162,
	375, 1162,
	377, 1162,
	378, 1162,
	379, 1162,
	380, 1162,
	381, 1162,
	382, 1162,
	383, 1162,
	384, 1162,
	385, 1162,
	386, 1162,
	387, 1162,
	388, 1162,
	390, 1162,
	396, 1162,
	398, 1162,
	399, 1162,
	400, 1162,
	401, 1162,
	402, 1162,
	403, 1162,
	404, 1162,
	405, 1162,
	407, 1162,
	408, 1162,
	409, 1162,
	411, 1162,
	412, 1162,
	413, 1162,
	414, 1162,
	415, 1162,
	416, 1162,
	418, 1162,
	419, 1162,
	420, 1162,
	421, 1162,
	422, 1162,
	423, 1162,
	424, 1162,
	425, 1162,
	426, 1162,
	427, 1162,
	428, 1162,
	430, 1162,
	431, 1162,
	432, 1162,
	433, 1162,
	434, 1162,
	435, 1162,
	437, 1162,
	438, 1162,
	439, 1162,
	440, 1162,
	441, 1162,
	442, 1162,
	444, 1162,
	445, 1162,
	446, 1162,
	447, 1162,
	448, 1162,
	449, 1162,
	450, 1162,
	452, 1162,
	454, 1162,
	455, 1162,
	456, 1162,
	457, 1162,
	458, 1162,
	459, 1162,
	460, 1162,
	461, 1162,
	462, 1162,
	463, 1162,
	464, 1162,
	465, 1162,
	466, 1162,
	468, 1162,
	469, 1162,
	471, 1162,
	473, 1162,
	474, 1162,
	475, 1162,
	476, 1162,
	477, 1162,
	478, 1162,
	479, 1162,
	480, 1162,
	481, 1162,
	483, 1162,
	484, 1162,
	485, 1162,
	486, 1162,
	487, 1162,
	489, 1162,
	491, 1162,
	492, 1162,
	493, 1162,
	494, 1162,
	495, 1162,
	496, 1162,
	498, 1162,
	499, 1162,
	500, 1162,
	501, 1162,
	503, 1162,
	504, 1162,
	507, 1162,
	508, 1162,
	509, 1162,
	510, 1162,
	511, 1162,
	512, 1162,
	513, 1162,
	515, 1162,
	518, 1162,
	519, 1162,
	520, 1162,
	521, 1162,
	522, 1162,
	523, 1162,
	525, 1162,
	526, 1162,
	527, 1162,
	528, 1162,
	533, 1162,
	534, 1162,
	535, 1162,
	536, 1162,
	537, 1162,
	538, 1162,
	-2, 0,
	-1, 894,
	379, 791,
	435, 791,
	493, 791,
	-2, 0,
	-1, 895,
	379, 790,
	435, 790,
	493, 790,
	-2, 732,
	-1, 899,
	1, 835,
	562, 835,
	564, 835,
	566, 835,
	-2, 0,
	-1, 900,
	1, 767,
	562, 767,
	564, 767,
	566, 767,
	-2, 0,
	-1, 901,
	1, 769,
	562, 769,
	564, 769,
	566, 769,
	-2, 0,
	-1, 902,
	1, 878,
	177, 878,
	562, 878,
	564, 878,
	566, 878,
	-2, 0,
	-1, 910,
	1, 794,
	562, 794,
	564, 794,
	566, 794,
	-2, 0,
	-1, 916,
	1, 835,
	562, 835,
	564, 835,
	566, 835,
	-2, 0,
	-1, 917,
	1, 837,
	562, 837,
	564, 837,
	566, 837,
	-2, 0,
	-1, 918,
	1, 840,
	562, 840,
	564, 840,
	566, 840,
	-2, 0,
	-1, 924,
	1, 857,
	562, 857,
	564, 857,
	566, 857,
	-2, 0,
	-1, 925,
	1, 859,
	562, 859,
	564, 859,
	566, 859,
	-2, 0,
	-1, 974,
	164, 1384,
	177, 1384,
	264, 1384,
	328, 1384,
	-2, 1320,
	-1, 989,
	164, 1383,
	177, 1383,
	264, 1383,
	328, 1383,
	-2, 1317,
	-1, 1015,
	565, 2064,
	-2, 639,
	-1, 1043,
	5, 2056,
	563, 2054,
	-2, 2045,
	-1, 1051,
	5, 2077,
	563, 2074,
	-2, 2065,
	-1, 1052,
	5, 2078,
	563, 2075,
	-2, 2066,
	-1, 1060,
	565, 2062,
	-2, 2044,
	-1, 1061,
	563, 2470,
	-2, 2063,
	-1, 1084,
	563, 2469,
	-2, 2079,
	-1, 1085,
	5, 1583,
	-2, 2440,
	-1, 1086,
	5, 1584,
	-2, 2441,
	-1, 1087,
	5, 1585,
	-2, 2455,
	-1, 1088,
	5, 1586,
	-2, 2419,
	-1, 1089,
	5, 1587,
	-2, 2453,
	-1, 1090,
	5, 1595,
	-2, 2432,
	-1, 1091,
	5, 1582,
	-2, 2428,
	-1, 1092,
	5, 1582,
	-2, 2427,
	-1, 1093,
	5, 1582,
	-2, 2446,
	-1, 1094,
	5, 1593,
	-2, 2421,
	-1, 1095,
	5, 1598,
	-2, 2420,
	-1, 1096,
	5, 1600,
	-2, 2465,
	-1, 1099,
	5, 1622,
	-2, 2458,
	-1, 1100,
	5, 1614,
	-2, 2459,
	-1, 1101,
	5, 1622,
	-2, 2460,
	-1, 1102,
	5, 1618,
	-2, 2461,
	-1, 1103,
	5, 1568,
	-2, 2433,
	-1, 1104,
	5, 1569,
	-2, 2434,
	-1, 1105,
	5, 1570,
	-2, 2422,
	-1, 1133,
	5, 1605,
	-2, 2466,
	-1, 1134,
	5, 1606,
	-2, 2456,
	-1, 1135,
	5, 1607,
	526, 1607,
	-2, 2423,
	-1, 1136,
	5, 1608,
	526, 1608,
	-2, 2424,
	-1, 1173,
	563, 2074,
	-2, 2065,
	-1, 1174,
	563, 2075,
	-2, 2066,
	-1, 1207,
	180, 2388,
	488, 2388,
	546, 2388,
	565, 2388,
	-2, 0,
	-1, 1210,
	1, 617,
	566, 617,
	-2, 1250,
	-1, 1339,
	398, 2040,
	437, 2040,
	556, 2040,
	-2, 2037,
	-1, 1351,
	567, 2040,
	-2, 2041,
	-1, 1358,
	1, 1138,
	562, 1138,
	564, 1138,
	566, 1138,
	-2, 1369,
	-1, 1414,
	386, 946,
	525, 946,
	-2, 350,
	-1, 1434,
	43, 2068,
	-2, 2038,
	-1, 1439,
	1, 1138,
	562, 1138,
	564, 1138,
	566, 1138,
	-2, 1369,
	-1, 1446,
	4, 1162,
	21, 1162,
	22, 1162,
	23, 1162,
	24, 1162,
	25, 1162,
	26, 1162,
	27, 1162,
	29, 1162,
	30, 1162,
	36, 1162,
	41, 1162,
	42, 1162,
	44, 1162,
	45, 1162,
	46, 1162,
	47, 1162,
	48, 1162,
	49, 1162,
	50, 1162,
	52, 1162,
	53, 1162,
	54, 1162,
	55, 1162,
	57, 1162,
	58, 1162,
	59, 1162,
	60, 1162,
	61, 1162,
	62, 1162,
	63, 1162,
	67, 1162,
	68, 1162,
	69, 1162,
	70, 1162,
	72, 1162,
	73, 1162,
	74, 1162,
	78, 1162,
	79, 1162,
	80, 1162,
	81, 1162,
	82, 1162,
	83, 1162,
	84, 1162,
	87, 1162,
	88, 1162,
	89, 1162,
	90, 1162,
	91, 1162,
	93, 1162,
	95, 1162,
	96, 1162,
	97, 1162,
	98, 1162,
	99, 1162,
	100, 1162,
	102, 1162,
	103, 1162,
	104, 1162,
	106, 1162,
	107, 1162,
	115, 1162,
	116, 1162,
	117, 1162,
	118, 1162,
	120, 1162,
	121, 1162,
	122, 1162,
	124, 1162,
	125, 1162,
	126, 1162,
	128, 1162,
	129, 1162,
	131, 1162,
	132, 1162,
	133, 1162,
	136, 1162,
	137, 1162,
	138, 1162,
	140, 1162,
	141, 1162,
	143, 1162,
	144, 1162,
	145, 1162,
	147, 1162,
	148, 1162,
	149, 1162,
	150, 1162,
	151, 1162,
	152, 1162,
	153, 1162,
	154, 1162,
	155, 1162,
	156, 1162,
	157, 1162,
	158, 1162,
	159, 1162,
	160, 1162,
	161, 1162,
	169, 1162,
	170, 1162,
	171, 1162,
	172, 1162,
	176, 1162,
	178, 1162,
	182, 1162,
	183, 1162,
	184, 1162,
	185, 1162,
	186, 1162,
	187, 1162,
	188, 1162,
	189, 1162,
	190, 1162,
	191, 1162,
	192, 1162,
	193, 1162,
	195, 1162,
	196, 1162,
	198, 1162,
	199, 1162,
	201, 1162,
	202, 1162,
	203, 1162,
	204, 1162,
	205, 1162,
	206, 1162,
	207, 1162,
	208, 1162,
	209, 1162,
	211, 1162,
	212, 1162,
	214, 1162,
	215, 1162,
	216, 1162,
	217, 1162,
	222, 1162,
	223, 1162,
	224, 1162,
	225, 1162,
	228, 1162,
	229, 1162,
	230, 1162,
	232, 1162,
	234, 1162,
	235, 1162,
	237, 1162,
	239, 1162,
	240, 1162,
	241, 1162,
	243, 1162,
	247, 1162,
	248, 1162,
	249, 1162,
	250, 1162,
	251, 1162,
	252, 1162,
	254, 1162,
	255, 1162,
	256, 1162,
	258, 1162,
	259, 1162,
	261, 1162,
	262, 1162,
	265, 1162,
	269, 1162,
	270, 1162,
	273, 1162,
	274, 1162,
	275, 1162,
	276, 1162,
	278, 1162,
	279, 1162,
	280, 1162,
	281, 1162,
	282, 1162,
	283, 1162,
	284, 1162,
	285, 1162,
	286, 1162,
	287, 1162,
	288, 1162,
	289, 1162,
	290, 1162,
	291, 1162,
	292, 1162,
	293, 1162,
	294, 1162,
	295, 1162,
	296, 1162,
	297, 1162,
	298, 1162,
	299, 1162,
	301, 1162,
	303, 1162,
	304, 1162,
	305, 1162,
	306, 1162,
	307, 1162,
	308, 1162,
	309, 1162,
	310, 1162,
	311, 1162,
	312, 1162,
	313, 1162,
	314, 1162,
	316, 1162,
	320, 1162,
	321, 1162,
	323, 1162,
	324, 1162,
	325, 1162,
	326, 1162,
	327, 1162,
	330, 1162,
	332, 1162,
	334, 1162,
	335, 1162,
	336, 1162,
	339, 1162,
	340, 1162,
	341, 1162,
	343, 1162,
	345, 1162,
	346, 1162,
	347, 1162,
	348, 1162,
	349, 1162,
	350, 1162,
	351, 1162,
	352, 1162,
	353, 1162,
	354, 1162,
	355, 1162,
	356, 1162,
	358, 1162,
	359, 1162,
	360, 1162,
	361, 1162,
	362, 1162,
	363, 1162,
	364, 1162,
	365, 1162,
	366, 1162,
	367, 1162,
	368, 1162,
	369, 1162,
	370, 1162,
	371, 1162,
	372, 1162,
	374, 1162,
	375, 1162,
	377, 1162,
	378, 1162,
	379, 1162,
	380, 1162,
	381, 1162,
	382, 1162,
	383, 1162,
	384, 1162,
	385, 1162,
	386, 1162,
	387, 1162,
	388, 1162,
	390, 1162,
	396, 1162,
	398, 1162,
	399, 1162,
	400, 1162,
	401, 1162,
	402, 1162,
	403, 1162,
	404, 1162,
	405, 1162,
	407, 1162,
	408, 1162,
	409, 1162,
	411, 1162,
	412, 1162,
	413, 1162,
	414, 1162,
	415, 1162,
	416, 1162,
	418, 1162,
	419, 1162,
	420, 1162,
	421, 1162,
	422, 1162,
	423, 1162,
	424, 1162,
	425, 1162,
	426, 1162,
	427, 1162,
	428, 1162,
	430, 1162,
	431, 1162,
	432, 1162,
	433, 1162,
	434, 1162,
	435, 1162,
	437, 1162,
	438, 1162,
	439, 1162,
	440, 1162,
	441, 1162,
	442, 1162,
	444, 1162,
	445, 1162,
	446, 1162,
	447, 1162,
	448, 1162,
	449, 1162,
	450, 1162,
	452, 1162,
	454, 1162,
	455, 1162,
	456, 1162,
	457, 1162,
	458, 1162,
	459, 1162,
	460, 1162,
	461, 1162,
	462, 1162,
	463, 1162,
	464, 1162,
	465, 1162,
	466, 1162,
	468, 1162,
	469, 1162,
	471, 1162,
	473, 1162,
	474, 1162,
	475, 1162,
	476, 1162,
	477, 1162,
	478, 1162,
	479, 1162,
	480, 1162,
	481, 1162,
	483, 1162,
	484, 1162,
	485, 1162,
	486, 1162,
	487, 1162,
	489, 1162,
	491, 1162,
	492, 1162,
	493, 1162,
	494, 1162,
	495, 1162,
	496, 1162,
	498, 1162,
	499, 1162,
	500, 1162,
	501, 1162,
	503, 1162,
	504, 1162,
	507, 1162,
	508, 1162,
	509, 1162,
	510, 1162,
	511, 1162,
	512, 1162,
	513, 1162,
	515, 1162,
	518, 1162,
	519, 1162,
	520, 1162,
	521, 1162,
	522, 1162,
	523, 1162,
	525, 1162,
	526, 1162,
	527, 1162,
	528, 1162,
	533, 1162,
	534, 1162,
	535, 1162,
	536, 1162,
	537, 1162,
	538, 1162,
	-2, 0,
	-1, 1521,
	1, 490,
	562, 490,
	564, 490,
	566, 490,
	-2, 1340,
	-1, 1524,
	4, 2464,
	11, 2464,
	12, 2464,
	14, 2464,
	15, 2464,
	16, 2464,
	17, 2464,
	18, 2464,
	19, 2464,
	21, 2464,
	22, 2464,
	23, 2464,
	24, 2464,
	25, 2464,
	26, 2464,
	27, 2464,
	29, 2464,
	30, 2464,
	33, 2464,
	34, 2464,
	36, 2464,
	38, 2464,
	41, 2464,
	42, 2464,
	44, 2464,
	45, 2464,
	46, 2464,
	47, 2464,
	48, 2464,
	49, 2464,
	50, 2464,
	52, 2464,
	53, 2464,
	54, 2464,
	55, 2464,
	57, 2464,
	58, 2464,
	59, 2464,
	60, 2464,
	61, 2464,
	62, 2464,
	63, 2464,
	67, 2464,
	68, 2464,
	69, 2464,
	70, 2464,
	72, 2464,
	73, 2464,
	74, 2464,
	75, 2464,
	78, 2464,
	79, 2464,
	80, 2464,
	81, 2464,
	82, 2464,
	83, 2464,
	84, 2464,
	85, 2464,
	87, 2464,
	88, 2464,
	89, 2464,
	90, 2464,
	91, 2464,
	93, 2464,
	94, 2464,
	95, 2464,
	96, 2464,
	97, 2464,
	98, 2464,
	99, 2464,
	100, 2464,
	102, 2464,
	103, 2464,
	104, 2464,
	105, 2464,
	106, 2464,
	107, 2464,
	115, 2464,
	116, 2464,
	117, 2464,
	118, 2464,
	120, 2464,
	121, 2464,
	122, 2464,
	124, 2464,
	125, 2464,
	126, 2464,
	128, 2464,
	129, 2464,
	131, 2464,
	132, 2464,
	133, 2464,
	136, 2464,
	137, 2464,
	138, 2464,
	140, 2464,
	141, 2464,
	143, 2464,
	144, 2464,
	145, 2464,
	147, 2464,
	148, 2464,
	149, 2464,
	150, 2464,
	151, 2464,
	152, 2464,
	153, 2464,
	154, 2464,
	155, 2464,
	156, 2464,
	157, 2464,
	158, 2464,
	159, 2464,
	160, 2464,
	161, 2464,
	165, 2464,
	166, 2464,
	167, 2464,
	168, 2464,
	169, 2464,
	170, 2464,
	171, 2464,
	172, 2464,
	175, 2464,
	176, 2464,
	178, 2464,
	181, 2464,
	182, 2464,
	183, 2464,
	184, 2464,
	185, 2464,
	186, 2464,
	187, 2464,
	188, 2464,
	189, 2464,
	190, 2464,
	191, 2464,
	192, 2464,
	193, 2464,
	195, 2464,
	196, 2464,
	198, 2464,
	199, 2464,
	201, 2464,
	202, 2464,
	203, 2464,
	204, 2464,
	205, 2464,
	206, 2464,
	207, 2464,
	208, 2464,
	209, 2464,
	210, 2464,
	211, 2464,
	212, 2464,
	213, 2464,
	214, 2464,
	215, 2464,
	216, 2464,
	217, 2464,
	219, 2464,
	220, 2464,
	222, 2464,
	223, 2464,
	224, 2464,
	225, 2464,
	227, 2464,
	228, 2464,
	229, 2464,
	230, 2464,
	232, 2464,
	234, 2464,
	235, 2464,
	236, 2464,
	237, 2464,
	238, 2464,
	239, 2464,
	240, 2464,
	241, 2464,
	242, 2464,
	243, 2464,
	245, 2464,
	246, 2464,
	247, 2464,
	248, 2464,
	249, 2464,
	250, 2464,
	251, 2464,
	252, 2464,
	254, 2464,
	255, 2464,
	256, 2464,
	258, 2464,
	259, 2464,
	260, 2464,
	261, 2464,
	262, 2464,
	263, 2464,
	265, 2464,
	269, 2464,
	270, 2464,
	273, 2464,
	274, 2464,
	275, 2464,
	276, 2464,
	277, 2464,
	278, 2464,
	279, 2464,
	280, 2464,
	281, 2464,
	282, 2464,
	283, 2464,
	284, 2464,
	285, 2464,
	286, 2464,
	287, 2464,
	288, 2464,
	289, 2464,
	290, 2464,
	291, 2464,
	292, 2464,
	293, 2464,
	294, 2464,
	295, 2464,
	296, 2464,
	297, 2464,
	298, 2464,
	299, 2464,
	301, 2464,
	302, 2464,
	303, 2464,
	304, 2464,
	305, 2464,
	306, 2464,
	307, 2464,
	308, 2464,
	309, 2464,
	310, 2464,
	311, 2464,
	312, 2464,
	313, 2464,
	314, 2464,
	316, 2464,
	319, 2464,
	320, 2464,
	321, 2464,
	323, 2464,
	324, 2464,
	325, 2464,
	326, 2464,
	327, 2464,
	330, 2464,
	334, 2464,
	335, 2464,
	336, 2464,
	337, 2464,
	339, 2464,
	340, 2464,
	341, 2464,
	343, 2464,
	345, 2464,
	346, 2464,
	347, 2464,
	348, 2464,
	349, 2464,
	350, 2464,
	351, 2464,
	352, 2464,
	353, 2464,
	354, 2464,
	355, 2464,
	356, 2464,
	358, 2464,
	359, 2464,
	360, 2464,
	361, 2464,
	362, 2464,
	363, 2464,
	364, 2464,
	365, 2464,
	366, 2464,
	367, 2464,
	368, 2464,
	369, 2464,
	370, 2464,
	371, 2464,
	372, 2464,
	374, 2464,
	375, 2464,
	377, 2464,
	378, 2464,
	379, 2464,
	380, 2464,
	381, 2464,
	382, 2464,
	383, 2464,
	384, 2464,
	385, 2464,
	386, 2464,
	387, 2464,
	388, 2464,
	390, 2464,
	396, 2464,
	397, 2464,
	398, 2464,
	399, 2464,
	400, 2464,
	401, 2464,
	402, 2464,
	403, 2464,
	404, 2464,
	405, 2464,
	407, 2464,
	408, 2464,
	409, 2464,
	410, 2464,
	411, 2464,
	412, 2464,
	413, 2464,
	414, 2464,
	415, 2464,
	416, 2464,
	417, 2464,
	418, 2464,
	419, 2464,
	420, 2464,
	421, 2464,
	422, 2464,
	423, 2464,
	424, 2464,
	425, 2464,
	426, 2464,
	427, 2464,
	428, 2464,
	430, 2464,
	431, 2464,
	432, 2464,
	433, 2464,
	434, 2464,
	435, 2464,
	437, 2464,
	438, 2464,
	439, 2464,
	440, 2464,
	441, 2464,
	442, 2464,
	443, 2464,
	444, 2464,
	445, 2464,
	446, 2464,
	447, 2464,
	448, 2464,
	449, 2464,
	450, 2464,
	452, 2464,
	454, 2464,
	455, 2464,
	456, 2464,
	457, 2464,
	458, 2464,
	459, 2464,
	460, 2464,
	461, 2464,
	462, 2464,
	463, 2464,
	464, 2464,
	465, 2464,
	466, 2464,
	468, 2464,
	469, 2464,
	471, 2464,
	473, 2464,
	474, 2464,
	475, 2464,
	476, 2464,
	477, 2464,
	478, 2464,
	479, 2464,
	480, 2464,
	481, 2464,
	483, 2464,
	484, 2464,
	485, 2464,
	486, 2464,
	487, 2464,
	489, 2464,
	491, 2464,
	492, 2464,
	493, 2464,
	494, 2464,
	495, 2464,
	496, 2464,
	498, 2464,
	499, 2464,
	500, 2464,
	501, 2464,
	503, 2464,
	504, 2464,
	507, 2464,
	508, 2464,
	509, 2464,
	510, 2464,
	511, 2464,
	512, 2464,
	513, 2464,
	515, 2464,
	518, 2464,
	519, 2464,
	520, 2464,
	521, 2464,
	522, 2464,
	523, 2464,
	525, 2464,
	526, 2464,
	527, 2464,
	528, 2464,
	533, 2464,
	534, 2464,
	535, 2464,
	536, 2464,
	537, 2464,
	538, 2464,
	539, 2464,
	541, 2464,
	544, 2464,
	545, 2464,
	546, 2464,
	547, 2464,
	548, 2464,
	549, 2464,
	551, 2464,
	552, 2464,
	553, 2464,
	554, 2464,
	555, 2464,
	556, 2464,
	557, 2464,
	558, 2464,
	559, 2464,
	561, 2464,
	564, 2464,
	565, 2464,
	567, 2464,
	568, 2464,
	-2, 0,
	-1, 1529,
	180, 2352,
	488, 2352,
	546, 2352,
	565, 2352,
	-2, 0,
	-1, 1578,
	379, 791,
	435, 791,
	493, 791,
	-2, 0,
	-1, 1604,
	1, 786,
	562, 786,
	564, 786,
	566, 786,
	-2, 0,
	-1, 1605,
	1, 822,
	562, 822,
	564, 822,
	566, 822,
	-2, 0,
	-1, 1606,
	1, 830,
	562, 830,
	564, 830,
	566, 830,
	-2, 0,
	-1, 1607,
	1, 793,
	562, 793,
	564, 793,
	566, 793,
	-2, 0,
	-1, 1609,
	1, 797,
	562, 797,
	564, 797,
	566, 797,
	-2, 0,
	-1, 1615,
	1, 804,
	562, 804,
	564, 804,
	566, 804,
	-2, 0,
	-1, 1643,
	1, 2410,
	562, 2410,
	564, 2410,
	565, 2410,
	566, 2410,
	-2, 855,
	-1, 1644,
	1, 2349,
	562, 2349,
	564, 2349,
	565, 2349,
	566, 2349,
	-2, 856,
	-1, 1659,
	1, 1245,
	566, 1245,
	-2, 1250,
	-1, 1662,
	164, 1383,
	177, 1383,
	264, 1383,
	328, 1383,
	-2, 1321,
	-1, 1756,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	505, 1342,
	-2, 1783,
	-1, 1816,
	564, 1933,
	-2, 0,
	-1, 1851,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	505, 1342,
	-2, 1470,
	-1, 1900,
	563, 1610,
	-2, 1598,
	-1, 1943,
	1, 619,
	566, 619,
	-2, 1250,
	-1, 2057,
	213, 223,
	-2, 2073,
	-1, 2058,
	213, 224,
	-2, 266,
	-1, 2187,
	1, 788,
	562, 788,
	564, 788,
	566, 788,
	-2, 0,
	-1, 2188,
	1, 824,
	562, 824,
	564, 824,
	566, 824,
	-2, 0,
	-1, 2189,
	1, 832,
	562, 832,
	564, 832,
	566, 832,
	-2, 0,
	-1, 2222,
	1, 806,
	562, 806,
	564, 806,
	566, 806,
	-2, 0,
	-1, 2268,
	415, 1410,
	416, 1410,
	-2, 1643,
	-1, 2299,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1663,
	-1, 2300,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1664,
	-1, 2301,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1665,
	-1, 2302,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1666,
	-1, 2303,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1667,
	-1, 2304,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1668,
	-1, 2305,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1669,
	-1, 2306,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1670,
	-1, 2318,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1682,
	-1, 2319,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1683,
	-1, 2320,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1684,
	-1, 2323,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1689,
	-1, 2329,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1693,
	-1, 2331,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1701,
	-1, 2332,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1702,
	-1, 2333,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1703,
	-1, 2334,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1704,
	-1, 2470,
	5, 2077,
	180, 1944,
	563, 2074,
	-2, 2065,
	-1, 2471,
	180, 1945,
	-2, 2415,
	-1, 2472,
	180, 1946,
	-2, 2252,
	-1, 2473,
	180, 1947,
	-2, 2144,
	-1, 2474,
	180, 1948,
	-2, 2194,
	-1, 2475,
	180, 1949,
	-2, 2237,
	-1, 2476,
	180, 1950,
	-2, 2347,
	-1, 2477,
	180, 1951,
	-2, 1766,
	-1, 2546,
	1, 1471,
	2, 1471,
	105, 1471,
	146, 1471,
	164, 1471,
	177, 1471,
	181, 1471,
	197, 1471,
	200, 1471,
	227, 1471,
	231, 1471,
	242, 1471,
	260, 1471,
	264, 1471,
	302, 1471,
	328, 1471,
	332, 1471,
	338, 1471,
	406, 1471,
	410, 1471,
	505, 1471,
	516, 1471,
	530, 1471,
	531, 1471,
	532, 1471,
	542, 1471,
	562, 1471,
	564, 1471,
	566, 1471,
	568, 1471,
	-2, 1470,
	-1, 2559,
	563, 2046,
	-2, 2060,
	-1, 2561,
	52, 1369,
	131, 1369,
	-2, 282,
	-1, 2586,
	563, 1609,
	-2, 1599,
	-1, 2727,
	1, 1138,
	562, 1138,
	564, 1138,
	566, 1138,
	-2, 1369,
	-1, 2904,
	333, 1413,
	-2, 2454,
	-1, 2905,
	333, 1414,
	-2, 2333,
	-1, 2909,
	415, 2010,
	416, 2010,
	-2, 1764,
	-1, 2910,
	415, 2014,
	416, 2014,
	-2, 1765,
	-1, 2911,
	415, 2011,
	416, 2011,
	-2, 1764,
	-1, 2912,
	415, 2015,
	416, 2015,
	-2, 1765,
	-1, 2925,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1691,
	-1, 2926,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1695,
	-1, 2932,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1697,
	-1, 3162,
	1, 616,
	562, 616,
	564, 616,
	566, 616,
	-2, 1250,
	-1, 3295,
	1, 1138,
	562, 1138,
	564, 1138,
	566, 1138,
	-2, 1369,
	-1, 3405,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1699,
	-1, 3412,
	236, 0,
	238, 0,
	319, 0,
	-2, 1718,
	-1, 3479,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1747,
	-1, 3480,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1748,
	-1, 3481,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1749,
	-1, 3485,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1753,
	-1, 3486,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1754,
	-1, 3487,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1755,
	-1, 3533,
	563, 2047,
	-2, 2061,
	-1, 3570,
	565, 2062,
	-2, 1172,
	-1, 3673,
	565, 2571,
	-2, 1297,
	-1, 3731,
	236, 0,
	238, 0,
	319, 0,
	-2, 1719,
	-1, 3734,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1722,
	-1, 3735,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1724,
	-1, 3951,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1723,
	-1, 3952,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1725,
	-1, 3963,
	236, 0,
	-2, 1756,
	-1, 4121,
	236, 0,
	-2, 1757,
	-1, 4281,
	49, 0,
	210, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 2418,
}

const sqlPrivate = 57344

const sqlLast = 115599

var sqlAct = [...]int{

	250, 2789, 3280, 4000, 2820, 3083, 3279, 4167, 4149, 4291,
	4255, 4393, 4171, 4280, 4236, 4003, 2624, 4221, 2054, 4293,
	3714, 4074, 4292, 4342, 4239, 4054, 3444, 4279, 1177, 3988,
	4047, 2665, 3908, 4125, 3903, 3307, 3875, 3972, 999, 3940,
	2278, 3665, 4063, 3889, 2165, 3607, 3180, 3818, 1512, 3801,
	3857, 3397, 4088, 1887, 3566, 3312, 3913, 1507, 3305, 990,
	2346, 2286, 2690, 3625, 3567, 3275, 3627, 1671, 3641, 2918,
	3968, 1998, 724, 2502, 2829, 1857, 1544, 1243, 2279, 2156,
	2140, 3362, 688, 2778, 3360, 2750, 3265, 2760, 1511, 2842,
	2831, 1336, 1341, 3106, 1378, 3536, 1935, 724, 3126, 3066,
	3098, 2839, 2100, 3713, 827, 2828, 2822, 3087, 2775, 3770,
	2790, 2049, 2163, 2773, 2008, 2626, 2283, 2048, 3065, 1826,
	2539, 3504, 4126, 2388, 1054, 2902, 2359, 2538, 1586, 1764,
	3089, 2390, 1344, 1361, 1802, 1543, 1487, 1432, 998, 168,
	2043, 2138, 2704, 2027, 244, 2761, 1166, 2541, 243, 719,
	2034, 104, 4, 1157, 1979, 1043, 1226, 2838, 1047, 1888,
	1659, 4168, 1827, 1982, 1097, 2379, 2343, 2664, 2267, 2520,
	2250, 1969, 2248, 2783, 3277, 1508, 1522, 1843, 2499, 2088,
	725, 1052, 2571, 1498, 1846, 2615, 726, 3133, 1212, 2570,
	653, 2832, 2382, 1437, 1797, 1160, 639, 1836, 1139, 1363,
	661, 2466, 2528, 1749, 2432, 1672, 1673, 2360, 721, 2510,
	1520, 2249, 1615, 177, 2087, 1045, 730, 2251, 1174, 682,
	733, 670, 2112, 1461, 800, 1373, 178, 1997, 168, 772,
	2272, 1028, 656, 43, 42, 40, 31, 1137, 29, 2953,
	27, 730, 821, 888, 664, 733, 1162, 1678, 1384, 1658,
	908, 2949, 2129, 1686, 1687, 2129, 1719, 1720, 1721, 1729,
	1730, 1731, 3518, 4460, 3519, 4450, 3085, 2519, 2129, 3341,
	2129, 2129, 994, 4437, 4436, 1722, 1717, 2519, 2519, 994,
	4427, 2962, 4410, 1689, 2062, 1156, 3817, 2963, 4408, 4322,
	4315, 1735, 3817, 4323, 2519, 4313, 4310, 4307, 1377, 2519,
	4311, 4308, 4302, 4277, 3321, 842, 2062, 2062, 4276, 4275,
	4270, 4269, 2062, 2149, 2149, 2149, 4264, 1688, 4262, 4234,
	3817, 4211, 3817, 3817, 4204, 2577, 4203, 1708, 2519, 4198,
	2519, 995, 3341, 3817, 4197, 2917, 1705, 4191, 3817, 1686,
	1687, 2062, 4163, 4123, 2519, 4105, 3867, 2577, 1154, 3702,
	4102, 4099, 4056, 3141, 2062, 3817, 4057, 1140, 1140, 4021,
	4020, 4012, 1717, 2062, 2062, 2062, 4011, 3979, 3953, 1689,
	3817, 2062, 2577, 1172, 3932, 3921, 3852, 3840, 2149, 3341,
	2519, 2519, 975, 3816, 3733, 1221, 3681, 3817, 2577, 3675,
	3357, 3322, 3639, 3357, 3528, 974, 3640, 3526, 3529, 1686,
	1687, 3527, 3511, 1688, 1221, 2596, 2519, 1711, 1712, 1713,
	1714, 2164, 3428, 4212, 4127, 3424, 2062, 1694, 989, 2519,
	984, 3356, 1717, 4118, 3348, 3357, 3156, 1050, 3349, 1689,
	3508, 3082, 3155, 2147, 3077, 2519, 1188, 3076, 2519, 3029,
	38, 2519, 3003, 3030, 2512, 2995, 3004, 89, 1141, 2996,
	2993, 1195, 1726, 2964, 2519, 1736, 2845, 2519, 4106, 2686,
	2149, 1716, 1718, 1688, 2818, 822, 2817, 1143, 2152, 1144,
	2152, 3038, 3039, 1708, 2573, 2599, 2149, 2576, 1732, 2519,
	1733, 2577, 1705, 3508, 2511, 2595, 2568, 1703, 1704, 2562,
	2519, 215, 70, 2062, 825, 824, 2518, 3902, 3867, 3841,
	2519, 1398, 2519, 1694, 2062, 1724, 3702, 2151, 71, 2952,
	2062, 2152, 1686, 1687, 3349, 2681, 1189, 2614, 2002, 1709,
	1686, 1687, 1948, 2128, 75, 2144, 2756, 2061, 2698, 2612,
	1822, 1372, 3598, 3727, 217, 1717, 3400, 3378, 1844, 2037,
	1588, 2555, 1689, 3323, 2554, 2553, 2552, 1716, 1718, 2551,
	1689, 1145, 1608, 1711, 1712, 1713, 1714, 1142, 983, 1686,
	1687, 1734, 3324, 1694, 82, 982, 981, 980, 979, 978,
	215, 977, 973, 2882, 1686, 1687, 1688, 972, 971, 1723,
	970, 969, 1717, 216, 1688, 968, 1708, 967, 966, 1689,
	965, 3038, 3039, 2130, 209, 1705, 2130, 1717, 964, 963,
	962, 88, 961, 210, 1689, 1709, 960, 1716, 1718, 2130,
	959, 2130, 2130, 217, 958, 103, 957, 939, 886, 885,
	89, 100, 884, 1688, 883, 179, 882, 881, 4298, 880,
	215, 879, 878, 1703, 1704, 3044, 877, 876, 1688, 1715,
	875, 874, 1392, 873, 872, 1169, 3409, 871, 870, 869,
	868, 867, 866, 865, 864, 863, 862, 861, 860, 1710,
	1552, 859, 216, 858, 857, 1709, 1711, 1712, 1713, 1714,
	856, 855, 845, 217, 844, 90, 1694, 840, 839, 833,
	832, 1538, 790, 789, 1694, 1727, 747, 1052, 746, 745,
	744, 1052, 736, 735, 734, 703, 694, 693, 1385, 692,
	3038, 3039, 676, 238, 179, 1397, 237, 1246, 236, 235,
	234, 1246, 1049, 233, 232, 1366, 231, 230, 229, 215,
	1716, 1718, 216, 1694, 2385, 1225, 228, 1386, 1216, 1230,
	227, 226, 141, 209, 225, 224, 223, 3054, 1694, 1052,
	222, 1052, 210, 1052, 221, 1710, 1703, 1704, 220, 1366,
	219, 218, 3786, 3745, 2415, 3044, 3546, 2806, 3522, 3358,
	2128, 3915, 217, 3129, 179, 1377, 2401, 1716, 1718, 2975,
	1352, 2958, 2399, 2147, 1366, 2144, 2243, 3080, 1709, 3321,
	1556, 1725, 1716, 1718, 2737, 1715, 1700, 1701, 1707, 1728,
	1706, 1702, 1347, 1699, 1697, 1698, 1690, 1691, 1692, 1693,
	1695, 1696, 1355, 2769, 1376, 1710, 3755, 4278, 2386, 1026,
	3754, 216, 2127, 2581, 1189, 3081, 1805, 93, 1366, 1052,
	2147, 2786, 209, 1804, 1366, 1709, 2560, 2545, 1366, 1847,
	1542, 210, 2511, 1443, 1445, 1386, 1052, 1977, 1052, 1189,
	1709, 1870, 1366, 2159, 1210, 1808, 1391, 4178, 1052, 1775,
	1052, 1380, 1685, 179, 1519, 1766, 1386, 3054, 1232, 1239,
	1430, 1333, 1338, 1176, 3044, 176, 96, 1805, 99, 4115,
	4109, 1448, 730, 1386, 1804, 4130, 733, 3055, 3998, 4107,
	1435, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 2387, 3967,
	2384, 3922, 215, 997, 1366, 3901, 1803, 1153, 1715, 3793,
	826, 1205, 3768, 3767, 3761, 141, 3760, 1501, 1375, 3759,
	3752, 3751, 1052, 3749, 1374, 1052, 3744, 3741, 1710, 3740,
	3038, 3039, 2158, 3644, 3038, 3039, 3638, 3550, 215, 3549,
	1168, 3548, 3532, 3499, 3498, 217, 1706, 1702, 3497, 1699,
	1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 1492, 1495,
	3038, 3039, 3352, 3056, 3057, 3058, 1557, 3420, 3917, 3416,
	3124, 143, 3073, 168, 168, 1710, 3064, 3037, 3038, 3039,
	3034, 217, 3729, 3033, 3031, 995, 180, 1525, 1527, 215,
	1710, 3002, 3001, 3000, 216, 2997, 2994, 2974, 1216, 2957,
	2950, 1216, 2650, 1773, 3053, 209, 3596, 3055, 1504, 2819,
	1768, 1767, 2546, 1765, 210, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 3047, 3048, 3040, 3041, 3042, 3043, 3045, 3046,
	216, 2372, 217, 1523, 3053, 1685, 823, 1170, 1766, 2103,
	2069, 209, 2389, 1684, 1663, 2067, 1052, 3038, 3039, 4454,
	210, 2771, 1052, 4402, 4401, 1624, 4372, 3645, 4332, 1706,
	1702, 4330, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695,
	1696, 3078, 179, 1690, 1691, 1692, 1693, 1695, 1696, 215,
	1178, 216, 3983, 3446, 1464, 4170, 4159, 4156, 4155, 1610,
	4154, 4146, 209, 4139, 3044, 1537, 4129, 215, 3044, 4128,
	4103, 210, 4087, 4086, 1657, 2349, 4072, 1551, 4069, 1699,
	1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 215, 1755,
	4017, 3147, 217, 179, 3044, 1697, 1698, 1690, 1691, 1692,
	1693, 1695, 1696, 3994, 3965, 215, 1462, 215, 3948, 3947,
	217, 3929, 3044, 1562, 3040, 3041, 3042, 3043, 3045, 3046,
	3928, 2383, 3892, 2579, 3868, 3785, 1579, 1052, 1052, 1052,
	3766, 217, 3703, 1052, 3697, 3694, 3645, 3586, 3585, 1611,
	1174, 216, 1174, 215, 3572, 3571, 3514, 2590, 217, 1824,
	217, 3502, 209, 3411, 1753, 3059, 2355, 1246, 3359, 216,
	1383, 210, 1390, 3342, 1396, 1052, 3054, 995, 724, 3916,
	209, 3298, 3237, 3210, 1905, 724, 1660, 3183, 1366, 210,
	216, 3044, 1668, 179, 3182, 1052, 217, 215, 1667, 1366,
	3149, 209, 975, 2979, 1662, 2978, 3054, 216, 2973, 216,
	210, 179, 2941, 2770, 2749, 974, 1833, 1052, 209, 1664,
	209, 1811, 1810, 1246, 3054, 1809, 1807, 210, 1806, 210,
	1681, 1682, 179, 3040, 3041, 3042, 3043, 3045, 3046, 1798,
	217, 1796, 1216, 2588, 2587, 216, 1966, 215, 1880, 179,
	1518, 2785, 2557, 1878, 2550, 1975, 209, 1830, 1831, 2517,
	2397, 1869, 1874, 1873, 1825, 210, 1820, 1536, 1941, 1541,
	1819, 215, 1818, 1884, 1817, 1940, 1140, 1799, 1800, 1550,
	1931, 1555, 1854, 1816, 3183, 1686, 1687, 179, 1815, 216,
	217, 1814, 168, 3054, 1813, 2160, 1812, 1545, 1793, 1792,
	209, 1791, 1790, 995, 1789, 1172, 2414, 1172, 1899, 210,
	215, 3121, 1788, 1787, 217, 1689, 3055, 4131, 2400, 1786,
	1785, 1936, 730, 3895, 2398, 1845, 733, 1877, 1784, 730,
	1876, 179, 1946, 733, 1783, 1782, 1781, 1855, 1780, 216,
	1779, 1609, 1768, 1754, 1752, 1747, 3055, 1852, 1902, 1688,
	209, 1204, 1193, 217, 1184, 3789, 3737, 3545, 1943, 210,
	3525, 1366, 1366, 216, 3055, 3517, 1823, 1686, 1687, 2961,
	2548, 1246, 1467, 1939, 209, 3791, 3038, 3039, 3544, 4399,
	1767, 179, 3145, 210, 1750, 3843, 1881, 1864, 1863, 1862,
	1860, 1990, 1859, 1928, 1858, 4110, 1849, 1689, 1968, 1893,
	1968, 3327, 216, 2023, 4108, 179, 2026, 1865, 1229, 2031,
	3213, 4392, 1885, 209, 3308, 4157, 1968, 4064, 4059, 4058,
	3920, 3870, 210, 3869, 3842, 3788, 3706, 1847, 3705, 3997,
	3704, 1688, 1227, 3055, 1788, 2002, 3520, 2055, 2059, 1788,
	3344, 3343, 1221, 1655, 179, 1971, 1961, 1467, 1152, 3398,
	3049, 3047, 3048, 3040, 3041, 3042, 3043, 3045, 3046, 3042,
	3043, 3045, 3046, 2999, 1805, 2998, 1228, 2669, 3648, 1578,
	1221, 1804, 2007, 3050, 3051, 3052, 2923, 2652, 1221, 1224,
	3049, 3047, 3048, 3040, 3041, 3042, 3043, 3045, 3046, 3584,
	955, 3282, 4274, 3281, 2179, 1777, 2157, 1587, 4055, 2035,
	3048, 3040, 3041, 3042, 3043, 3045, 3046, 730, 4318, 4303,
	3969, 733, 4290, 2052, 3266, 2843, 1588, 1366, 2093, 1366,
	1954, 1366, 2050, 1960, 1959, 3604, 3603, 1968, 1970, 3589,
	2380, 1694, 3375, 956, 3160, 3085, 3448, 1366, 1366, 2967,
	4299, 1774, 3273, 1375, 2104, 2586, 1821, 2098, 1366, 1374,
	2109, 1801, 2097, 1491, 1442, 1369, 1199, 2695, 4312, 4309,
	1366, 3317, 1366, 1366, 1366, 2030, 3561, 3049, 3047, 3048,
	3040, 3041, 3042, 3043, 3045, 3046, 1625, 1169, 2692, 1169,
	4150, 3904, 4233, 4136, 724, 2166, 1686, 1687, 2060, 1566,
	3186, 3579, 3259, 2826, 1861, 2782, 2258, 4359, 4358, 3392,
	1466, 2117, 4038, 3831, 4300, 4383, 1408, 953, 951, 1717,
	2600, 4449, 4031, 3617, 949, 3164, 1689, 1944, 2132, 2228,
	2106, 2226, 4023, 3865, 947, 3613, 944, 3612, 2162, 3606,
	2080, 3602, 2119, 3600, 2079, 1370, 3558, 3557, 1622, 3262,
	2178, 3140, 1963, 2171, 1416, 2972, 2971, 2970, 2183, 2969,
	1688, 993, 2927, 2702, 2256, 3146, 2701, 2580, 2697, 2688,
	2680, 2679, 2678, 2677, 3166, 1052, 935, 1052, 995, 2111,
	995, 1211, 2115, 2167, 1052, 1466, 3616, 1905, 1905, 1246,
	2656, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1523, 1052, 1523, 1052,
	1052, 1052, 1052, 1955, 2643, 1417, 2569, 2153, 730, 2154,
	2260, 1464, 733, 2114, 1621, 2114, 992, 3813, 2247, 1205,
	1229, 1052, 1222, 2628, 1052, 1052, 2002, 2330, 1661, 2428,
	1694, 1965, 1052, 2427, 1623, 1011, 1052, 2288, 1052, 1052,
	1454, 1477, 1453, 2170, 1564, 1229, 1246, 1999, 4387, 2779,
	3809, 785, 1052, 1052, 1052, 1052, 1559, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 2385, 2078, 2258, 3376, 1964,
	2257, 2187, 2204, 3212, 1716, 1718, 1222, 4384, 1228, 2241,
	1995, 1899, 1899, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 2618, 2157, 2175, 3946, 1052, 2361, 2362, 3564,
	2222, 1412, 3810, 1228, 2618, 2000, 2001, 2616, 1174, 1222,
	941, 2361, 2377, 1696, 1425, 1246, 2284, 2285, 2271, 2616,
	2561, 1902, 1902, 994, 1174, 2256, 1452, 2188, 1451, 2240,
	1604, 2631, 1709, 2195, 1218, 1996, 2607, 2423, 4388, 2255,
	1052, 1246, 1168, 3813, 1168, 2246, 2252, 2259, 2642, 2386,
	786, 2245, 2232, 2244, 2345, 2900, 2469, 2469, 2483, 2345,
	2361, 1634, 975, 2503, 2505, 975, 975, 2376, 2654, 2509,
	1371, 1560, 1893, 1893, 995, 2275, 3809, 2533, 2276, 2277,
	3802, 1666, 1865, 995, 3623, 2189, 1605, 995, 1218, 4411,
	2641, 2353, 1692, 1693, 1695, 1696, 1576, 3800, 2351, 3575,
	2425, 2603, 2673, 2254, 3046, 2426, 3804, 2192, 2429, 2380,
	2430, 2431, 1223, 2558, 1580, 2237, 2186, 2605, 1203, 3844,
	2116, 1218, 2357, 3622, 2666, 2667, 2666, 2667, 3810, 2387,
	704, 2384, 3227, 2239, 3220, 3827, 3383, 2196, 2525, 1170,
	1140, 1170, 2666, 2667, 1606, 2374, 4390, 2389, 1246, 3382,
	2606, 2915, 3864, 2547, 1854, 1620, 2879, 3601, 4358, 1654,
	1617, 2257, 1216, 1172, 853, 3599, 1223, 3588, 3803, 1219,
	2604, 3226, 1710, 3219, 3261, 995, 2524, 3434, 1220, 1172,
	1905, 3231, 2696, 2694, 3437, 2478, 2465, 2676, 1993, 1438,
	991, 2507, 1358, 2582, 2494, 168, 3805, 2655, 2532, 1223,
	2537, 3806, 1003, 2543, 2544, 2009, 2526, 1588, 1246, 2574,
	2515, 2516, 2597, 2530, 2531, 2693, 2341, 3163, 1638, 1852,
	4005, 2938, 1366, 1219, 1807, 2630, 1401, 2013, 2620, 2572,
	2255, 1181, 1220, 1436, 651, 2033, 2691, 1052, 1052, 2619,
	1052, 2066, 2065, 701, 2339, 709, 3945, 4375, 4369, 2936,
	4374, 1439, 3808, 1972, 1973, 1835, 1219, 3435, 2032, 783,
	646, 782, 2729, 1366, 2567, 1220, 2589, 2598, 3811, 2021,
	4396, 1179, 1563, 2389, 930, 2914, 2593, 945, 945, 1799,
	1800, 2674, 2010, 1565, 945, 2885, 1588, 2689, 2227, 2592,
	2225, 2028, 2658, 2594, 946, 1515, 945, 1476, 988, 2767,
	3315, 2728, 4414, 2793, 1899, 1531, 2601, 4347, 2020, 1690,
	1691, 1692, 1693, 1695, 1696, 3314, 2000, 2001, 2645, 2653,
	1366, 1366, 3805, 1366, 4389, 717, 2005, 3806, 2389, 3825,
	2657, 1839, 788, 787, 4007, 1366, 3719, 1221, 2732, 2659,
	2633, 2636, 2734, 2675, 1902, 2623, 2029, 699, 2840, 711,
	1366, 2753, 2668, 2670, 2671, 2672, 4296, 1411, 2629, 2759,
	3718, 4208, 1414, 2327, 4440, 2004, 2236, 2907, 2908, 2814,
	2763, 1570, 2809, 4151, 3314, 1182, 730, 1842, 3808, 846,
	733, 2335, 2383, 2014, 2238, 3807, 2933, 931, 2194, 2888,
	1052, 1221, 1837, 737, 3811, 1893, 1936, 2129, 3576, 2336,
	4165, 2389, 1438, 3587, 2337, 2808, 2811, 715, 2342, 2934,
	1840, 2844, 1375, 2939, 2047, 2617, 1983, 3165, 2735, 2848,
	2849, 1984, 3814, 1632, 1221, 820, 1561, 1191, 2002, 3198,
	2855, 2856, 2857, 2825, 1052, 1169, 2795, 2024, 2800, 2757,
	1052, 1052, 2803, 2747, 2804, 3884, 1993, 2864, 2015, 2016,
	2846, 1169, 1838, 930, 2850, 1635, 2851, 4346, 2863, 2788,
	168, 1794, 2777, 1993, 2866, 2046, 2867, 2868, 2796, 2871,
	2485, 2873, 2011, 2875, 2815, 2134, 3826, 988, 2136, 706,
	942, 2929, 3100, 1839, 2141, 3197, 2344, 2143, 2890, 2536,
	2892, 2146, 2861, 3240, 2812, 1052, 1052, 3143, 2810, 2816,
	3715, 1052, 3958, 2893, 2870, 2827, 2872, 4368, 2874, 710,
	4253, 3807, 4394, 2012, 1052, 1052, 2352, 1633, 1665, 2887,
	1052, 1052, 1523, 854, 2325, 4297, 1052, 2328, 2883, 1842,
	1985, 2618, 4244, 1575, 1577, 1052, 1052, 1052, 3850, 716,
	669, 1052, 2371, 4206, 2527, 2191, 2634, 1989, 3814, 2884,
	700, 1052, 713, 1746, 2185, 1202, 2869, 2977, 708, 2930,
	1841, 3630, 1840, 2906, 2529, 4325, 931, 2895, 1052, 4415,
	3628, 932, 2542, 834, 4326, 2038, 994, 2324, 4207, 2338,
	2045, 2916, 3450, 4403, 2935, 4006, 3942, 2897, 2896, 2340,
	1636, 647, 2951, 3894, 2937, 702, 3201, 3709, 698, 3541,
	705, 1196, 2901, 1676, 3720, 2271, 3394, 2898, 2649, 2955,
	2956, 4395, 3630, 3643, 2959, 1986, 1991, 847, 848, 4295,
	1592, 3628, 4172, 2017, 4294, 4357, 1180, 1835, 712, 4355,
	4187, 738, 739, 1675, 1675, 4071, 2960, 3663, 3301, 2242,
	2886, 2685, 718, 2086, 4397, 3203, 1670, 1832, 1194, 1187,
	4345, 638, 3716, 707, 2274, 3885, 2003, 1956, 1052, 1052,
	1052, 4420, 4014, 648, 2928, 4013, 3099, 1052, 1052, 1052,
	3134, 995, 1052, 3992, 1637, 4080, 2738, 1953, 3631, 2741,
	3830, 2743, 1052, 1174, 1246, 4135, 2022, 3829, 1052, 2044,
	1052, 3092, 3093, 3664, 3433, 2018, 3610, 1987, 1174, 3764,
	3560, 3488, 3302, 1839, 3294, 4441, 933, 649, 3202, 650,
	3178, 3174, 1841, 2768, 2966, 3941, 1246, 2762, 2751, 2110,
	1168, 2099, 2091, 2784, 2072, 1468, 2784, 4173, 1174, 3631,
	1405, 1246, 3503, 1674, 1674, 4222, 1168, 2025, 2130, 1992,
	3114, 3554, 675, 1993, 2264, 3075, 3395, 4188, 1905, 1842,
	932, 1951, 1246, 2233, 934, 1675, 3666, 2326, 1949, 3370,
	3909, 3094, 2748, 3370, 1837, 3626, 1366, 1366, 3363, 1052,
	741, 740, 3363, 4053, 1479, 2660, 4051, 3993, 3189, 3185,
	3104, 3184, 1840, 1052, 2921, 2176, 2899, 3516, 3128, 3097,
	3169, 1952, 3096, 1607, 3721, 1905, 3123, 1676, 1676, 849,
	850, 1460, 3170, 3171, 2566, 2565, 2564, 3161, 4324, 1458,
	2563, 835, 836, 1052, 1366, 1216, 3635, 1170, 1446, 2755,
	3187, 3167, 852, 3191, 1838, 742, 743, 2635, 3102, 2876,
	3103, 992, 1447, 1170, 3139, 3112, 4142, 3629, 1172, 2521,
	3120, 3115, 3116, 3132, 3086, 3070, 3071, 3072, 1746, 1366,
	3943, 3188, 4001, 1172, 3193, 1674, 3153, 3195, 3113, 1246,
	4419, 3365, 3157, 3158, 4048, 3365, 3101, 3175, 1366, 986,
	3876, 930, 1899, 1366, 3127, 3722, 3364, 2265, 3173, 3243,
	3364, 3828, 3246, 1172, 3489, 933, 3251, 3253, 3629, 3150,
	3151, 3765, 3152, 3490, 2639, 988, 1366, 3353, 2041, 1936,
	1936, 3118, 1366, 3119, 1366, 3215, 2108, 3144, 1246, 3269,
	3200, 1988, 1902, 2523, 3217, 724, 4174, 4365, 2522, 1899,
	4169, 3238, 3136, 3137, 3138, 2847, 1366, 2733, 3926, 3218,
	3555, 3162, 1841, 934, 2731, 3228, 3278, 1366, 4230, 3229,
	987, 2661, 2662, 3232, 1569, 3230, 1990, 1936, 3168, 2039,
	1593, 4002, 4219, 1174, 3179, 3247, 4225, 3310, 4143, 1902,
	3254, 3771, 3293, 1893, 3248, 3505, 3241, 3361, 2396, 3255,
	3204, 1758, 2840, 4248, 1652, 1763, 1650, 1990, 3264, 3211,
	3267, 2840, 1936, 4367, 931, 3990, 1629, 3135, 2040, 1877,
	3225, 1627, 3222, 837, 838, 3925, 1366, 1366, 1603, 1601,
	1599, 1936, 3233, 3239, 3287, 1597, 1936, 3223, 2155, 3249,
	1893, 3224, 3108, 2035, 3319, 3260, 3256, 3290, 1366, 674,
	1595, 2035, 4314, 1585, 1515, 2168, 1583, 1456, 3991, 4158,
	3964, 3763, 1459, 3634, 3067, 2169, 3410, 1435, 3373, 4226,
	1457, 4144, 3154, 3309, 3032, 2940, 2658, 2177, 2752, 2180,
	2181, 2182, 2687, 851, 3263, 1246, 2651, 3333, 1246, 730,
	3311, 3303, 2591, 733, 3271, 1872, 3291, 1868, 1653, 3340,
	1547, 3068, 2224, 3366, 3367, 3368, 3369, 3366, 3367, 3368,
	3369, 3391, 3390, 1670, 2881, 2880, 2853, 2253, 1052, 2235,
	1616, 2199, 2071, 1932, 1052, 1052, 1778, 1558, 1052, 1052,
	1052, 1429, 1052, 3109, 3377, 3318, 3371, 995, 1172, 3330,
	1169, 1052, 1905, 3316, 2395, 2801, 3355, 4289, 3351, 3334,
	1052, 2805, 3325, 1052, 3851, 1169, 168, 168, 4218, 1246,
	943, 3839, 3907, 4343, 4097, 3388, 3856, 3798, 1052, 3389,
	3338, 3339, 3662, 3654, 3615, 4335, 1246, 3430, 3386, 3582,
	3580, 3107, 1651, 3372, 1649, 1169, 1905, 1905, 1052, 1052,
	3559, 1052, 1052, 1052, 1628, 3413, 3396, 3242, 932, 1626,
	3379, 3297, 3380, 3306, 3381, 3292, 1602, 1600, 1598, 3283,
	2807, 2802, 3111, 1596, 3422, 3423, 4089, 3385, 2780, 2766,
	2758, 2745, 2730, 2150, 2148, 2145, 1244, 3393, 1594, 4090,
	1345, 1584, 2142, 1052, 1582, 1455, 3462, 1052, 2137, 1905,
	1905, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	4091, 1052, 3463, 2135, 2131, 2122, 1899, 2070, 1052, 1052,
	1905, 2068, 2051, 2036, 2019, 1052, 3418, 2223, 2006, 1994,
	1879, 1679, 3538, 4359, 1957, 2919, 1052, 3207, 3208, 1149,
	4258, 3209, 3931, 3429, 3436, 3438, 3439, 1174, 1174, 3250,
	3445, 1052, 3452, 3924, 2045, 3440, 1902, 948, 950, 952,
	1899, 1899, 3923, 3863, 3794, 1150, 2841, 3110, 1976, 4093,
	1410, 4082, 4075, 3234, 3235, 1060, 2640, 3236, 3459, 2618,
	1246, 985, 3460, 933, 2618, 3674, 3461, 3534, 2002, 2190,
	2107, 4092, 3521, 714, 2616, 2284, 3453, 1500, 3500, 2637,
	1902, 1902, 1647, 1648, 3465, 3467, 2219, 1893, 4094, 1499,
	2218, 3537, 4257, 1899, 1899, 3492, 3832, 1052, 2197, 3858,
	246, 246, 246, 1581, 641, 642, 2920, 657, 641, 657,
	667, 934, 673, 1052, 1174, 3493, 691, 1680, 4117, 3772,
	3750, 697, 1686, 1687, 1899, 2663, 2644, 246, 2284, 3468,
	3507, 1893, 1893, 1902, 1902, 1683, 1197, 1686, 1687, 4361,
	1169, 1052, 1052, 2044, 3509, 3510, 831, 168, 4353, 652,
	3609, 1151, 246, 239, 1500, 1168, 773, 3512, 3513, 3496,
	4319, 3501, 817, 2744, 1902, 3539, 3540, 1689, 1052, 3523,
	1168, 3608, 2221, 1500, 3651, 2092, 1208, 3524, 2692, 3551,
	3552, 3553, 1172, 1172, 1893, 1893, 1688, 2700, 2699, 2684,
	1366, 2648, 2682, 2646, 4213, 4182, 4179, 4141, 4067, 635,
	1168, 1688, 2683, 663, 2647, 4046, 242, 3653, 3642, 1905,
	3531, 3547, 3296, 2787, 3590, 1893, 3595, 3597, 2508, 1942,
	1886, 4391, 4250, 3999, 3142, 3594, 3563, 4251, 4418, 3038,
	3039, 3611, 1686, 1687, 4250, 2610, 2611, 4181, 1366, 4251,
	1568, 3605, 2608, 2609, 1377, 1052, 1567, 4371, 3742, 2391,
	3543, 2610, 1170, 1174, 1052, 2608, 3676, 2424, 1631, 3649,
	3568, 1630, 4068, 4032, 3859, 641, 641, 1170, 2793, 1172,
	2658, 3855, 3667, 246, 1366, 1366, 1366, 3685, 3854, 3738,
	3620, 3660, 3542, 3441, 3244, 3633, 1772, 1771, 4405, 2727,
	1366, 4376, 3650, 4217, 4216, 3621, 4215, 1170, 4132, 3671,
	3670, 4049, 4027, 3984, 2840, 3981, 3636, 3624, 3887, 1246,
	3632, 3790, 3700, 3680, 3652, 3637, 3578, 3573, 3328, 3300,
	3299, 3194, 3028, 4095, 3027, 3026, 3025, 3024, 4096, 3023,
	3657, 1246, 3022, 1899, 1052, 1052, 3021, 3020, 3701, 3019,
	1052, 1052, 1905, 3655, 3018, 1052, 1052, 3017, 1052, 3016,
	3015, 3669, 1052, 3014, 3013, 3012, 3689, 3011, 3010, 3009,
	3678, 3008, 3677, 1052, 3672, 3007, 3006, 3005, 3179, 2878,
	2860, 3668, 2859, 1902, 2858, 2798, 2772, 2746, 3684, 1052,
	2638, 2584, 3690, 3691, 2583, 3692, 2356, 2813, 1515, 3699,
	2220, 3698, 3696, 3724, 2217, 3732, 3695, 2216, 2215, 3723,
	2214, 2213, 2125, 2124, 2123, 2121, 2105, 2081, 1172, 2077,
	2076, 2075, 2074, 2073, 1646, 3707, 1645, 2854, 1590, 1589,
	1486, 3736, 1485, 3717, 1893, 1168, 1871, 1484, 1483, 1482,
	1481, 1480, 1478, 1473, 1472, 1471, 1470, 1469, 1424, 1174,
	1423, 1422, 2354, 3712, 1421, 1420, 1419, 1174, 1418, 1413,
	1409, 1246, 1407, 1246, 1169, 1169, 1406, 1758, 1237, 1236,
	1174, 1235, 1234, 1233, 1201, 1200, 1899, 1132, 1947, 954,
	940, 4004, 3812, 1640, 87, 1415, 760, 1246, 81, 2042,
	3577, 913, 1978, 4247, 1399, 4164, 768, 4232, 3196, 2703,
	2198, 1591, 2200, 3122, 2549, 3762, 4205, 3746, 2976, 4124,
	1052, 3957, 1174, 2394, 3795, 3796, 1902, 1776, 3079, 83,
	1036, 2490, 1082, 3780, 3883, 3882, 3799, 3562, 2830, 3880,
	3879, 1890, 1170, 1892, 1002, 1249, 1958, 3833, 1933, 1246,
	1042, 1974, 1967, 3783, 2585, 2468, 1059, 1246, 1056, 3777,
	1894, 1169, 3779, 3329, 3776, 1896, 3331, 3332, 3822, 3774,
	3775, 3335, 1058, 3336, 1057, 3337, 3823, 1893, 3784, 3834,
	3860, 3787, 3861, 1895, 3797, 1366, 1366, 1795, 1055, 3773,
	1889, 168, 3659, 3658, 2754, 2791, 3326, 3778, 1465, 1463,
	915, 1962, 1366, 2350, 2378, 3769, 2965, 3877, 1769, 1017,
	1038, 2375, 1192, 1246, 1172, 3874, 1027, 3824, 1366, 3853,
	1016, 3105, 1172, 3084, 3862, 3313, 3127, 3838, 3530, 2263,
	3835, 3836, 777, 3872, 3035, 1172, 3900, 2381, 3846, 1183,
	3848, 2491, 2484, 2480, 3849, 1174, 3159, 2781, 1656, 3971,
	2063, 1748, 3910, 3847, 2792, 1366, 1366, 1366, 1231, 2268,
	1020, 3866, 3873, 2348, 1760, 2945, 1246, 2273, 3568, 3871,
	3320, 3125, 2578, 4254, 3449, 3905, 2085, 1172, 1052, 1052,
	1052, 3878, 3893, 1148, 1147, 1190, 3919, 3656, 3914, 1146,
	3897, 4238, 4235, 3693, 3276, 1950, 1246, 2602, 3896, 3927,
	1169, 1052, 1738, 3912, 1052, 1052, 3284, 3899, 1032, 1350,
	3090, 3354, 1426, 696, 1052, 3819, 1044, 1905, 1737, 1185,
	2724, 2723, 1052, 1052, 4138, 1217, 1215, 1214, 1213, 3177,
	4439, 3574, 3936, 214, 3933, 1936, 2913, 1246, 3934, 1366,
	1677, 1669, 3930, 3944, 3949, 211, 213, 3938, 1198, 3954,
	212, 3911, 3888, 1246, 3535, 3131, 4317, 691, 3592, 1168,
	1168, 1052, 3268, 22, 3708, 21, 20, 108, 1174, 41,
	3966, 19, 123, 140, 139, 116, 138, 137, 136, 3960,
	1052, 246, 1905, 246, 246, 1342, 135, 246, 246, 1357,
	1052, 3568, 142, 1052, 134, 3977, 3978, 3986, 2486, 133,
	1172, 128, 1052, 246, 132, 1379, 131, 3980, 130, 1246,
	129, 127, 126, 125, 3987, 124, 122, 121, 120, 119,
	1366, 1366, 118, 3985, 117, 115, 1403, 114, 113, 112,
	111, 4026, 4008, 110, 109, 687, 684, 59, 58, 4009,
	107, 1899, 106, 18, 39, 1428, 1168, 1434, 14, 63,
	4061, 246, 246, 64, 1342, 17, 1170, 1170, 1246, 3278,
	13, 1366, 34, 4037, 4052, 86, 98, 4028, 97, 35,
	4034, 95, 94, 1475, 4024, 33, 16, 15, 4066, 1174,
	1174, 1902, 4042, 92, 4041, 246, 1169, 246, 246, 4065,
	1342, 246, 1357, 4029, 1169, 4076, 4050, 4044, 1052, 1052,
	91, 32, 691, 4039, 246, 246, 1899, 1169, 4060, 30,
	4045, 11, 9, 8, 3568, 1052, 1905, 36, 4040, 4079,
	4073, 4078, 1856, 1172, 12, 5, 4083, 831, 173, 4098,
	172, 4084, 1893, 4100, 4101, 1339, 175, 3914, 1351, 1354,
	171, 4016, 174, 1170, 85, 1052, 1902, 170, 1052, 1169,
	169, 84, 4085, 28, 3581, 10, 3583, 165, 2287, 4062,
	3647, 4081, 4104, 78, 167, 166, 164, 4116, 1174, 4122,
	4134, 4113, 4114, 163, 162, 79, 76, 4112, 161, 2490,
	80, 160, 77, 3257, 4145, 1168, 4133, 159, 26, 6,
	62, 7, 3939, 3374, 4077, 101, 102, 1893, 37, 246,
	74, 73, 1354, 1354, 72, 25, 61, 24, 4148, 1052,
	1052, 4147, 202, 3288, 3614, 201, 246, 4152, 200, 199,
	1174, 198, 4153, 1174, 3295, 3568, 3568, 1366, 4160, 197,
	192, 191, 196, 3886, 1172, 1172, 194, 1366, 1366, 193,
	1899, 195, 1354, 190, 3898, 2392, 4162, 4176, 4177, 205,
	204, 4175, 206, 203, 1366, 4180, 208, 4065, 4196, 2490,
	2490, 189, 187, 183, 182, 186, 3918, 188, 1052, 1052,
	4190, 185, 1169, 184, 4184, 181, 207, 4186, 1052, 4192,
	1902, 157, 1170, 3346, 3347, 4194, 4195, 158, 69, 4193,
	156, 155, 154, 3682, 153, 152, 4200, 3683, 151, 248,
	150, 68, 4199, 4227, 23, 2, 1, 1052, 1052, 4210,
	1052, 0, 0, 0, 3568, 4214, 0, 0, 0, 0,
	0, 0, 0, 1172, 4252, 4237, 4240, 0, 0, 0,
	4229, 1893, 0, 0, 4249, 0, 0, 4256, 0, 0,
	2559, 4209, 0, 0, 0, 0, 4242, 4268, 0, 0,
	0, 4273, 0, 4201, 0, 4202, 4272, 1052, 1052, 1052,
	4189, 0, 4271, 4246, 0, 4259, 3568, 0, 0, 3568,
	4263, 1168, 0, 4267, 4266, 1172, 0, 0, 1172, 1168,
	4241, 4301, 0, 4245, 1052, 4285, 4286, 0, 0, 0,
	4288, 4228, 1168, 4306, 0, 1169, 4287, 0, 0, 0,
	0, 1983, 0, 2490, 2490, 2490, 1984, 0, 0, 0,
	4304, 0, 0, 0, 641, 4320, 0, 0, 0, 0,
	0, 4329, 0, 0, 0, 0, 0, 0, 0, 4340,
	4331, 0, 1052, 0, 1168, 246, 4328, 246, 4339, 4334,
	4327, 246, 0, 0, 0, 4344, 2903, 2613, 4333, 0,
	0, 0, 4338, 0, 1379, 1342, 246, 4360, 246, 4350,
	4351, 0, 4354, 246, 1379, 657, 4356, 0, 1170, 4352,
	246, 1379, 4362, 4364, 0, 0, 1170, 0, 691, 4237,
	1015, 1174, 4240, 1174, 4373, 4377, 4366, 4363, 4370, 1170,
	4256, 4378, 0, 0, 0, 4379, 4385, 0, 0, 4336,
	4337, 0, 0, 0, 0, 4341, 1169, 1169, 0, 0,
	0, 0, 4381, 0, 0, 1985, 0, 0, 0, 0,
	4386, 4398, 4400, 0, 0, 0, 2486, 2486, 0, 0,
	0, 1170, 1989, 0, 4406, 4380, 0, 4382, 4412, 4409,
	0, 0, 1052, 1052, 4413, 0, 0, 0, 0, 0,
	1052, 0, 1052, 1052, 4422, 4416, 0, 1168, 4425, 0,
	4407, 0, 4431, 4433, 0, 4429, 4435, 4430, 4434, 4428,
	0, 0, 0, 0, 0, 0, 4432, 0, 2793, 0,
	0, 4438, 4442, 0, 0, 0, 0, 4444, 0, 4446,
	0, 4447, 0, 0, 4448, 1169, 4443, 0, 4451, 0,
	1986, 1991, 0, 4453, 0, 1052, 4456, 0, 4458, 1351,
	4455, 0, 4459, 4445, 4461, 0, 0, 4404, 4462, 0,
	0, 0, 0, 0, 4452, 4423, 4424, 3568, 1983, 3568,
	0, 0, 0, 1984, 0, 0, 1172, 4166, 1172, 0,
	0, 0, 0, 0, 0, 246, 0, 1169, 246, 0,
	1169, 0, 0, 0, 1170, 0, 0, 0, 4183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2486, 2486, 2486, 0, 0, 0, 0, 0, 4457, 0,
	1168, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 3618, 246, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 1993, 0,
	0, 0, 0, 246, 0, 246, 0, 0, 0, 641,
	0, 246, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2126, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	4260, 0, 0, 4261, 246, 3205, 0, 1170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	0, 1168, 1168, 0, 2942, 2943, 4018, 4019, 0, 0,
	0, 3686, 3687, 3688, 0, 691, 0, 0, 0, 831,
	0, 1717, 0, 0, 3206, 2719, 0, 1515, 1689, 0,
	4033, 0, 0, 4035, 4036, 0, 0, 1986, 1991, 0,
	0, 0, 0, 0, 246, 0, 1342, 246, 0, 0,
	0, 0, 0, 0, 2490, 2490, 0, 0, 2711, 2709,
	0, 691, 1688, 0, 0, 2713, 2715, 2705, 246, 0,
	0, 0, 1708, 2096, 0, 0, 0, 0, 0, 246,
	246, 1705, 246, 0, 246, 70, 246, 0, 246, 0,
	1168, 0, 0, 0, 0, 0, 0, 0, 1170, 1170,
	0, 71, 0, 0, 0, 0, 1988, 0, 0, 2229,
	0, 0, 2230, 0, 2231, 0, 0, 75, 1169, 1987,
	1169, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 3404, 0, 0, 1351, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 1168, 0, 673, 3061, 3062,
	3063, 691, 1711, 1712, 1713, 1714, 0, 82, 0, 0,
	0, 1992, 1694, 0, 0, 1993, 2490, 2490, 2490, 2490,
	2490, 2490, 2490, 2490, 2490, 2490, 2490, 2490, 2490, 2490,
	2490, 2490, 2490, 2490, 2490, 0, 2490, 1170, 0, 0,
	0, 0, 0, 3091, 88, 0, 1015, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 1716, 1718, 103, 0,
	4161, 0, 1980, 89, 100, 0, 1330, 0, 0, 0,
	1330, 0, 0, 0, 0, 3117, 0, 0, 0, 0,
	0, 0, 1703, 1704, 0, 0, 0, 2707, 0, 1170,
	3130, 0, 1170, 0, 0, 0, 0, 0, 2721, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3148, 0, 0, 1709, 0, 0, 0, 90, 2720,
	2712, 2710, 2714, 2716, 2706, 2708, 2722, 0, 0, 0,
	0, 0, 0, 2718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 2725, 0, 0, 0,
	0, 2486, 2486, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 1988, 0, 0, 0, 0, 0, 246,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 1357,
	0, 0, 3935, 0, 3937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	2575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 1687, 1168, 1710, 1168, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 246, 1357, 3130, 657, 4316,
	0, 0, 0, 0, 1717, 246, 0, 0, 0, 0,
	0, 1689, 0, 2486, 2486, 2486, 2486, 2486, 2486, 2486,
	2486, 2486, 2486, 2486, 2486, 2486, 2486, 2486, 2486, 2486,
	2486, 2486, 0, 2486, 0, 0, 3982, 0, 176, 96,
	0, 99, 0, 0, 0, 1688, 0, 0, 0, 2627,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	246, 2726, 0, 0, 1705, 215, 0, 0, 0, 0,
	2717, 0, 246, 826, 0, 0, 0, 0, 141, 0,
	1170, 0, 1170, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 246, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 1706, 1702, 4043, 1699, 1697,
	1698, 1690, 1691, 1692, 1693, 1695, 1696, 246, 2736, 0,
	0, 0, 0, 0, 143, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 1345, 1694, 1354, 1244, 0, 180,
	0, 0, 1379, 0, 0, 246, 0, 216, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 209, 3406,
	3407, 0, 2776, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 2627, 0, 641, 0, 0, 0, 2797, 1716,
	1718, 0, 0, 0, 246, 0, 0, 246, 0, 179,
	0, 246, 0, 246, 0, 0, 0, 0, 1342, 0,
	246, 246, 0, 1357, 1357, 1703, 1704, 0, 3426, 0,
	0, 0, 0, 2823, 831, 0, 2627, 2627, 0, 0,
	0, 0, 0, 0, 0, 3442, 1339, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	246, 1342, 246, 0, 0, 1379, 1330, 1379, 1379, 246,
	0, 0, 1342, 0, 1342, 0, 1342, 0, 0, 0,
	0, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477,
	3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
	0, 3491, 246, 246, 246, 246, 1342, 246, 0, 246,
	0, 0, 0, 0, 0, 0, 1015, 0, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 1515, 0, 0, 0, 0,
	246, 1686, 1687, 0, 0, 0, 0, 0, 246, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 1354, 0, 1717, 0, 0, 1715, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 1686, 1687,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 3533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 1688, 0, 0, 1689, 0,
	0, 0, 0, 1351, 0, 1708, 0, 0, 0, 0,
	1354, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 1688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 1351, 0, 1351, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 2490,
	1330, 0, 0, 0, 0, 3403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 2931, 0, 0, 0, 2490, 0, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 1711, 1712, 1713, 1714, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 1716,
	1718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3038, 3039, 0, 3056,
	3057, 3058, 0, 0, 0, 1703, 1704, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 1716, 1718, 3728, 0,
	0, 0, 0, 246, 0, 1686, 1687, 0, 641, 0,
	0, 0, 0, 641, 0, 0, 641, 1709, 0, 641,
	641, 0, 1703, 1704, 0, 641, 0, 0, 1717, 0,
	0, 0, 0, 246, 0, 1689, 0, 0, 0, 0,
	0, 1686, 1687, 0, 0, 1379, 0, 0, 0, 0,
	3053, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 1379, 0, 1688,
	0, 1689, 0, 0, 0, 0, 0, 0, 0, 1708,
	2490, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 2627, 2627, 246, 0, 1357, 0, 0, 2627, 0,
	0, 3181, 0, 0, 0, 1688, 0, 0, 0, 2627,
	3181, 0, 2627, 3181, 0, 1708, 3181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	246, 1357, 246, 0, 0, 0, 0, 1715, 0, 2924,
	3044, 0, 0, 0, 0, 0, 2486, 0, 0, 0,
	0, 0, 1357, 246, 0, 0, 1342, 1710, 0, 1711,
	1712, 1713, 1714, 0, 0, 0, 0, 0, 2627, 1694,
	3245, 2627, 1357, 0, 1715, 2627, 2627, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 3782, 2486, 1710, 1711, 1712, 1713, 1714, 0,
	0, 3059, 0, 0, 0, 1694, 246, 0, 0, 0,
	0, 0, 0, 1716, 1718, 0, 3792, 1834, 0, 0,
	246, 3272, 0, 0, 3274, 2627, 0, 0, 246, 0,
	0, 0, 246, 0, 1434, 0, 0, 0, 0, 1703,
	1704, 0, 3054, 0, 0, 0, 0, 0, 0, 1716,
	1718, 0, 0, 2776, 0, 0, 1342, 0, 246, 0,
	0, 2627, 0, 641, 0, 0, 0, 0, 0, 0,
	2627, 1709, 0, 0, 0, 1330, 0, 0, 246, 0,
	0, 1351, 246, 246, 0, 0, 0, 0, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 2096, 0, 0, 1709, 0, 246,
	2776, 0, 0, 2776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1702, 0, 1699, 1697,
	1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 2486, 3038, 3039,
	0, 3056, 3057, 3058, 0, 0, 0, 0, 3384, 0,
	0, 1342, 246, 0, 246, 0, 0, 0, 0, 0,
	1330, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3055, 0, 0, 1244, 0, 0, 71, 0,
	0, 1715, 0, 0, 0, 0, 0, 246, 1001, 0,
	0, 0, 1686, 1687, 75, 1719, 1720, 1721, 1729, 1730,
	1731, 1710, 0, 0, 3963, 3955, 0, 0, 0, 0,
	0, 0, 3053, 0, 1722, 1717, 0, 1715, 0, 0,
	0, 0, 1689, 1351, 1351, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 82, 0, 0, 1710, 0, 0,
	0, 0, 0, 3447, 0, 0, 3955, 0, 0, 0,
	0, 3995, 0, 0, 0, 0, 1688, 0, 0, 0,
	0, 0, 2287, 0, 0, 0, 1708, 1330, 0, 0,
	0, 88, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	89, 100, 0, 0, 0, 0, 0, 0, 0, 3050,
	3051, 3052, 3044, 0, 0, 1351, 3049, 3047, 3048, 3040,
	3041, 3042, 3043, 3045, 3046, 0, 0, 0, 2287, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691,
	1692, 1693, 1695, 1696, 0, 90, 1711, 1712, 1713, 1714,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 246, 246, 0, 0, 0, 0, 0, 0,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 641, 641, 0, 0, 0, 0,
	0, 1726, 0, 0, 1736, 0, 0, 0, 0, 0,
	1716, 1718, 0, 0, 3054, 4121, 1379, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 1733,
	1379, 1379, 1379, 0, 0, 0, 1703, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 3570,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 246, 0,
	0, 0, 0, 0, 0, 176, 96, 0, 99, 246,
	0, 0, 0, 0, 3055, 0, 0, 0, 0, 246,
	0, 0, 3038, 3039, 0, 3056, 3057, 3058, 246, 0,
	0, 0, 215, 246, 0, 0, 0, 246, 0, 0,
	826, 0, 0, 0, 3415, 141, 0, 0, 1715, 70,
	0, 0, 0, 0, 0, 0, 0, 2627, 246, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 217, 0, 2823, 2823, 0,
	0, 75, 0, 831, 831, 2627, 0, 0, 2776, 2776,
	0, 0, 831, 2627, 1727, 0, 3053, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 180, 0, 0, 0,
	0, 82, 0, 0, 216, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 3050, 3051, 3052, 210, 0, 0, 0, 3049, 3047,
	3048, 3040, 3041, 3042, 3043, 3045, 3046, 0, 88, 0,
	0, 0, 0, 0, 1001, 0, 179, 0, 1001, 0,
	0, 0, 103, 0, 0, 0, 0, 89, 100, 2096,
	0, 0, 3747, 0, 0, 0, 3044, 0, 0, 0,
	1725, 0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706,
	1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695,
	1696, 0, 0, 0, 0, 2989, 1381, 0, 1387, 2990,
	1393, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 3059, 0, 0,
	1379, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 3054, 0,
	0, 0, 0, 2627, 2627, 2627, 1516, 0, 0, 0,
	0, 71, 0, 0, 3820, 1330, 3820, 3570, 1379, 0,
	0, 0, 0, 1534, 0, 1539, 2627, 75, 3181, 0,
	1330, 1379, 1379, 246, 1357, 1548, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 1357, 246, 1357, 246, 0,
	0, 1330, 0, 0, 0, 0, 0, 0, 0, 2627,
	0, 2627, 246, 0, 0, 0, 0, 82, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1015, 0, 93, 0, 2627, 0, 0, 0,
	0, 3890, 0, 0, 0, 0, 0, 0, 0, 1612,
	246, 0, 1618, 0, 88, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 89, 100, 0, 0, 0, 0, 0,
	0, 0, 176, 96, 0, 99, 0, 0, 3055, 0,
	3570, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 1330, 215,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 90, 0,
	3038, 3039, 0, 3056, 3057, 3058, 0, 0, 0, 0,
	0, 0, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 2096,
	0, 0, 217, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 143, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 2627, 0, 3181, 0, 0, 3989,
	0, 216, 0, 0, 3053, 0, 0, 246, 0, 0,
	0, 0, 209, 3570, 0, 3050, 3051, 3052, 0, 0,
	0, 210, 3049, 3047, 3048, 3040, 3041, 3042, 3043, 3045,
	3046, 149, 0, 0, 0, 0, 0, 691, 0, 70,
	0, 45, 44, 1528, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 144, 0,
	1357, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	3989, 0, 65, 0, 1828, 1828, 1828, 0, 2627, 47,
	0, 146, 0, 0, 3044, 0, 0, 0, 0, 0,
	4070, 0, 0, 0, 1330, 0, 0, 1330, 0, 46,
	0, 82, 1379, 0, 0, 0, 0, 0, 176, 96,
	0, 99, 0, 0, 3570, 3570, 0, 0, 0, 0,
	0, 0, 3060, 0, 0, 49, 66, 0, 0, 0,
	0, 246, 246, 50, 0, 215, 0, 0, 88, 0,
	0, 0, 147, 826, 0, 3059, 0, 0, 141, 0,
	48, 0, 103, 0, 1001, 3447, 0, 89, 100, 1686,
	1687, 0, 0, 0, 0, 1729, 1730, 1731, 1330, 0,
	0, 0, 0, 0, 0, 0, 3989, 0, 217, 0,
	0, 0, 1717, 0, 0, 1330, 3054, 0, 0, 1689,
	0, 0, 0, 0, 51, 0, 3820, 1735, 0, 0,
	0, 0, 0, 3570, 143, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 1688, 246, 0, 0, 216, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 209, 0,
	0, 0, 1705, 3890, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 3570, 0, 246, 3570, 3038,
	3039, 0, 3056, 3057, 3058, 0, 0, 0, 3181, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3414, 0, 1351, 0, 3038, 3039, 0, 3056, 3057,
	3058, 0, 0, 0, 1379, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 1712, 1713, 1714, 0, 0, 0,
	0, 0, 0, 1694, 0, 4223, 3055, 0, 0, 0,
	0, 0, 1379, 3053, 0, 0, 0, 246, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 2627, 0, 1726, 3053,
	0, 1736, 0, 0, 0, 0, 0, 1716, 1718, 0,
	0, 52, 0, 246, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 55, 0, 0, 1175, 0,
	57, 0, 1175, 1703, 1704, 0, 67, 0, 3447, 0,
	0, 56, 176, 96, 0, 99, 0, 0, 0, 53,
	0, 1724, 0, 148, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 3044, 0, 1709, 1175, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 246,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 3044,
	0, 1175, 0, 3050, 3051, 3052, 145, 0, 0, 0,
	3049, 3047, 3048, 3040, 3041, 3042, 3043, 3045, 3046, 0,
	0, 0, 217, 0, 0, 3989, 0, 0, 0, 0,
	0, 0, 0, 0, 3059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 143, 0,
	0, 1175, 0, 0, 0, 1175, 0, 0, 0, 2627,
	3059, 0, 0, 180, 0, 0, 3570, 0, 3570, 1175,
	0, 216, 0, 0, 0, 3054, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 3054, 0, 0, 0, 0, 0, 0, 1379, 0,
	0, 0, 0, 179, 0, 1710, 3, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 2823,
	0, 1727, 0, 0, 0, 0, 0, 2627, 0, 0,
	0, 0, 2262, 0, 2266, 0, 0, 0, 0, 0,
	1330, 2280, 2823, 0, 0, 0, 0, 0, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 0, 2329, 0, 2331, 2332, 2333, 2334,
	0, 0, 0, 0, 0, 3055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 1757,
	0, 3055, 0, 2373, 0, 1728, 1706, 1702, 0, 1699,
	1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 2403,
	2406, 2409, 2412, 0, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2482, 0, 2493, 2495, 2500, 0, 0, 0,
	808, 0, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3050, 3051, 3052, 0, 0, 0, 0, 3049,
	3047, 3048, 3040, 3041, 3042, 3043, 3045, 3046, 1330, 0,
	0, 0, 0, 793, 0, 0, 1330, 0, 3050, 3051,
	3052, 0, 0, 0, 794, 3049, 3047, 3048, 3040, 3041,
	3042, 3043, 3045, 3046, 0, 0, 0, 1175, 0, 1175,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 0,
	0, 1906, 1330, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 797, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 798, 1686, 1687,
	799, 1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	1722, 1717, 0, 0, 0, 1330, 0, 0, 1689, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1688, 0, 2739, 2740, 1330, 2742, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 1175,
	0, 0, 1015, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1712, 1713, 1714, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 820, 0, 802, 1726, 0, 0,
	1736, 0, 0, 0, 0, 0, 1716, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2877, 0, 0,
	0, 0, 0, 1732, 0, 1733, 0, 0, 0, 716,
	0, 0, 1703, 1704, 0, 0, 803, 0, 0, 0,
	818, 819, 816, 0, 0, 0, 0, 0, 811, 0,
	1724, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 1739, 1740, 0,
	0, 0, 0, 0, 1175, 0, 1175, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 805,
	812, 0, 0, 0, 1175, 1175, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 1175, 1734, 0, 0, 0,
	0, 0, 0, 807, 0, 0, 0, 1175, 815, 1175,
	1175, 1175, 2925, 2926, 1723, 0, 0, 0, 2932, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 1015, 1015,
	0, 0, 0, 809, 0, 0, 0, 2946, 2947, 0,
	0, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 2954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2980, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	1727, 0, 0, 0, 1906, 1906, 1175, 1015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 245, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2500, 2500, 2500, 0, 0, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 3095, 0, 0,
	0, 0, 0, 1175, 0, 731, 1725, 0, 0, 0,
	0, 1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697,
	1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0,
	0, 2369, 0, 0, 0, 2370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 1722,
	1717, 0, 1175, 0, 0, 0, 1001, 1689, 0, 0,
	0, 1175, 0, 0, 0, 1735, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 0, 0,
	3199, 1708, 0, 0, 0, 0, 1171, 0, 0, 0,
	1705, 0, 0, 1686, 1687, 0, 1719, 1720, 1721, 1729,
	1730, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 1717, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1688, 0, 0,
	0, 1711, 1712, 1713, 1714, 1175, 0, 1708, 0, 0,
	0, 1694, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 1736,
	0, 0, 0, 0, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 0, 0, 0, 0, 1175,
	0, 1703, 1704, 0, 0, 0, 0, 1711, 1712, 1713,
	1714, 0, 0, 0, 0, 0, 0, 1694, 0, 1724,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	1175, 0, 1722, 1717, 0, 0, 0, 0, 0, 0,
	1689, 0, 1726, 0, 0, 1736, 0, 0, 1735, 0,
	0, 1716, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 1732, 0,
	1733, 0, 0, 0, 1688, 0, 0, 1703, 1704, 0,
	0, 0, 0, 1723, 1708, 0, 0, 1175, 1175, 0,
	1175, 0, 0, 1705, 0, 1724, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 2280, 0, 0, 0, 1709,
	0, 3401, 3402, 0, 0, 3405, 0, 1175, 0, 3408,
	0, 0, 0, 0, 0, 0, 0, 0, 3412, 0,
	0, 0, 0, 0, 0, 0, 0, 3419, 0, 0,
	3095, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 3431, 0, 0, 0, 0,
	0, 0, 0, 1710, 1711, 1712, 1713, 1714, 0, 1723,
	0, 0, 0, 0, 1694, 3454, 3455, 0, 3456, 3457,
	3458, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1736, 0, 0, 0, 0, 0, 1716, 1718,
	3464, 0, 0, 0, 3466, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 3494, 3495, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3506, 0, 1727, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 3515, 0,
	1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 3753, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 245, 0, 245, 245, 0, 0,
	245, 245, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 3556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3565, 1725, 0, 0, 0, 0, 1700, 1701, 1707, 1728,
	1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693,
	1695, 1696, 0, 0, 245, 245, 1715, 0, 0, 3591,
	3417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	245, 245, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 245, 245, 0,
	1175, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 1175, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 3679, 0, 0, 0, 1906, 0, 0, 0, 1175,
	0, 0, 0, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 1175, 0, 0, 0, 1725, 0,
	0, 0, 245, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 245,
	0, 0, 1906, 0, 0, 0, 0, 2992, 0, 247,
	247, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3725, 3726, 0, 0, 0, 247, 3730, 3731, 0,
	0, 0, 3734, 3735, 0, 0, 0, 0, 0, 3739,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	3743, 247, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 749, 0, 0, 1175, 3748, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 1175,
	0, 1175, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 753, 0, 770, 1164, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 754, 0, 0, 0, 0, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 241, 637, 0, 778, 0, 0,
	0, 0, 0, 756, 0, 0, 0, 3821, 0, 0,
	0, 0, 0, 1175, 1175, 0, 776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	1171, 0, 0, 0, 245, 1175, 0, 0, 0, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	1850, 245, 0, 0, 0, 0, 731, 0, 0, 757,
	0, 0, 758, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 780, 0, 1175, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	0, 0, 0, 1175, 0, 3950, 3951, 3952, 0, 0,
	0, 0, 0, 1906, 1906, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2280, 0,
	0, 3961, 3962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3970,
	3973, 0, 0, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 1906, 1906, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 4015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4022, 0, 0,
	1001, 0, 0, 0, 1175, 1175, 0, 0, 0, 4030,
	0, 716, 0, 0, 245, 0, 0, 0, 245, 0,
	0, 0, 748, 0, 771, 245, 0, 0, 0, 0,
	0, 245, 0, 763, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 245, 0,
	0, 0, 0, 0, 245, 0, 0, 769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 0, 765, 783, 0, 782, 0, 0,
	245, 766, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 1175, 0, 0, 0, 767, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 0, 784, 0, 781, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	245, 0, 4137, 0, 0, 4140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 245, 0, 245, 1906, 245, 0, 245,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1250, 247, 247, 0, 1250, 247, 247, 0, 1250,
	0, 0, 0, 0, 0, 1175, 1001, 1001, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 245,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 0, 0, 0, 0,
	0, 1175, 1175, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 1250, 0,
	247, 247, 0, 0, 0, 0, 2280, 0, 0, 0,
	0, 0, 0, 0, 0, 3973, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 247, 247, 1175, 0,
	247, 0, 1250, 0, 0, 1001, 0, 0, 1250, 1906,
	0, 0, 1250, 247, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4284, 4284, 4284, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 4305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 247, 0,
	0, 0, 0, 0, 1175, 0, 1171, 0, 1175, 0,
	1175, 0, 0, 0, 0, 247, 0, 1175, 0, 4284,
	0, 0, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 1490, 1175,
	1490, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 1533, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 1175, 0, 0, 0, 0, 0, 4284,
	4417, 0, 0, 0, 0, 0, 0, 4421, 0, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 1175, 1175, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 1906, 247, 247, 247, 245, 0,
	0, 0, 247, 0, 0, 0, 245, 0, 0, 247,
	0, 0, 1250, 0, 1175, 0, 1175, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	245, 0, 0, 0, 245, 1175, 245, 1250, 0, 0,
	0, 0, 0, 245, 245, 0, 0, 0, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 1175, 0,
	0, 0, 0, 245, 0, 245, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 245, 245, 245, 245, 0,
	245, 0, 245, 0, 1866, 0, 1175, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 247, 1250, 1250, 247, 0, 0,
	0, 245, 0, 1906, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 247, 1175, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 247, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	1175, 0, 0, 0, 1175, 0, 247, 0, 0, 0,
	0, 0, 0, 247, 1175, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 1250, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 247, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 1250, 1250, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 247,
	0, 247, 0, 247, 2083, 247, 0, 247, 2090, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2113, 0,
	0, 0, 0, 0, 2120, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 1686, 1687, 0, 1719, 1720, 1721, 1729,
	1730, 1731, 0, 1250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 1717, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 245, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 0, 0,
	2173, 0, 0, 0, 1037, 105, 0, 1688, 1175, 0,
	1175, 0, 245, 245, 0, 245, 0, 1708, 0, 0,
	0, 2193, 1850, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 2205, 0, 2207, 245, 2209, 0, 2211,
	1250, 2212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 105, 0, 0, 1711, 1712, 1713,
	1714, 0, 0, 731, 0, 0, 0, 1694, 0, 1250,
	0, 245, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 1250, 0, 0, 0, 0,
	0, 1171, 1726, 0, 0, 1736, 0, 247, 0, 0,
	0, 1716, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 245, 245, 0, 1732, 0,
	1733, 0, 0, 976, 0, 0, 0, 1703, 1704, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 247, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 245, 0, 245, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 1250, 0, 0, 0, 2556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 247, 0, 0, 1250, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 247, 0, 0, 0,
	247, 0, 247, 0, 0, 0, 0, 0, 0, 247,
	247, 0, 0, 0, 1250, 1250, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 1250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 1171, 0, 0, 247,
	0, 247, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 1725, 0, 0, 0, 1349, 1700, 1701, 1707, 1728,
	1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693,
	1695, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	2991, 247, 247, 247, 247, 0, 247, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 0, 2102, 0, 0, 247,
	0, 0, 1850, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2799, 0, 0,
	1490, 0, 0, 0, 1490, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 245, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	0, 0, 0, 0, 2852, 0, 0, 0, 0, 0,
	0, 245, 0, 1717, 0, 0, 251, 0, 0, 0,
	1689, 0, 245, 2862, 0, 2865, 0, 0, 1735, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 245, 0, 0, 0,
	245, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 2889, 1349, 2891, 1349, 0,
	2894, 1171, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 2922, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 105, 0, 105, 0,
	0, 0, 0, 0, 1711, 1712, 1713, 1714, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1736, 0, 0, 0, 0, 0, 1716, 1718,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 1250, 0, 0, 996, 105,
	105, 0, 0, 0, 1703, 1704, 0, 0, 0, 0,
	0, 105, 0, 105, 0, 0, 1250, 0, 0, 0,
	0, 0, 1724, 105, 0, 105, 0, 0, 0, 0,
	1250, 1250, 0, 0, 0, 0, 1709, 1171, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 247, 247,
	0, 247, 0, 0, 0, 0, 0, 0, 247, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 1250, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 1053, 0, 0, 245,
	0, 245, 1250, 0, 0, 0, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	1250, 0, 0, 0, 0, 247, 1250, 0, 1250, 0,
	0, 0, 1250, 976, 0, 0, 1710, 0, 0, 247,
	0, 0, 0, 245, 0, 0, 0, 247, 0, 0,
	1250, 247, 245, 1751, 0, 0, 0, 0, 0, 0,
	0, 1250, 1727, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 3172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 247, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 1250, 3214, 3216, 0, 2102, 0, 0, 247, 2461,
	2462, 2463, 2464, 2457, 2458, 2459, 2460, 0, 0, 0,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 1250,
	0, 247, 1250, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 1851, 0, 105, 0,
	245, 0, 0, 0, 0, 0, 1850, 0, 0, 2437,
	2438, 2439, 2440, 0, 0, 0, 247, 0, 0, 0,
	0, 3285, 0, 0, 0, 3289, 0, 0, 0, 0,
	0, 2449, 2450, 2451, 2452, 2445, 2446, 2447, 2448, 2453,
	2454, 2455, 2456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 1490, 0, 0, 0, 1349, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3350, 0, 2433, 2434, 2435, 2436, 2441, 2442,
	2443, 2444, 0, 0, 0, 0, 0, 1850, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3387, 0, 1349, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 1247, 0, 0,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 0, 245, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	245, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 1250, 0, 0, 247, 0, 0,
	0, 996, 0, 996, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 887, 0,
	930, 0, 247, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 893, 892, 0, 0, 0, 0, 0, 1250, 1250,
	1250, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 0, 0, 0, 894,
	0, 0, 0, 0, 897, 0, 0, 0, 0, 938,
	0, 247, 0, 1250, 0, 0, 0, 0, 906, 907,
	0, 0, 0, 0, 0, 0, 0, 923, 0, 0,
	0, 0, 0, 1248, 0, 1250, 0, 1248, 0, 0,
	0, 1368, 0, 931, 899, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 976, 976, 0, 1850,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	900, 2102, 0, 0, 0, 1368, 0, 0, 0, 929,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3646, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	3661, 2347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 996, 0, 891,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	1756, 0, 0, 0, 1368, 0, 0, 903, 904, 0,
	1368, 0, 0, 0, 1368, 1250, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 910, 1368, 0,
	0, 0, 0, 1247, 905, 0, 0, 0, 920, 0,
	0, 1250, 0, 0, 723, 3710, 0, 0, 0, 0,
	0, 723, 0, 0, 1367, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 247, 0, 0, 0, 0, 932, 1851, 1247,
	0, 0, 0, 1250, 0, 247, 0, 247, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 1250,
	1250, 0, 0, 0, 0, 0, 0, 0, 898, 0,
	0, 937, 0, 0, 0, 0, 1250, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 1250, 247, 0,
	0, 0, 1250, 896, 0, 0, 0, 927, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 925, 1250,
	1250, 1250, 0, 0, 0, 936, 921, 0, 914, 912,
	1250, 917, 0, 0, 0, 0, 0, 918, 0, 0,
	889, 0, 933, 0, 0, 0, 0, 1367, 1367, 0,
	0, 0, 105, 0, 0, 0, 0, 1247, 0, 0,
	1250, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 919, 0, 3837, 0, 0, 916,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 2102,
	934, 0, 0, 0, 0, 0, 0, 0, 922, 0,
	0, 1250, 0, 1250, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 0, 0,
	105, 924, 0, 105, 0, 105, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 926, 0, 0, 0, 0, 0,
	0, 0, 3906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	105, 0, 0, 1250, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 1248, 1250, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1367, 1368, 1367, 105, 1367, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 1250, 1367, 1367, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 1367, 0, 1367, 1367,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 105, 0, 0, 1686, 1687, 0, 1719,
	1720, 1721, 1729, 1730, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 1717,
	3996, 0, 0, 0, 0, 0, 1689, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 247, 2102, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 1368, 0,
	0, 0, 0, 2347, 0, 0, 247, 1248, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 1250, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1712, 1713, 1714, 4111, 1349, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 1736, 0,
	0, 0, 0, 0, 1716, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 247, 1733, 0, 0, 0, 0, 0, 0,
	1703, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 1368, 0, 1368, 0, 1368, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 1368, 1368, 0, 0, 0, 0, 0,
	4185, 0, 0, 0, 1368, 0, 0, 1158, 247, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 1368, 1368,
	1368, 0, 1158, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4265, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 105, 105, 0, 0, 105, 0, 0, 1727, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 105, 0,
	0, 105, 4321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 1700,
	1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690,
	1691, 1692, 1693, 1695, 1696, 0, 1367, 1367, 0, 1367,
	0, 0, 0, 2988, 0, 0, 0, 1158, 0, 0,
	996, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 105, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 1717, 0, 0, 0, 0,
	0, 0, 1689, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1688, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 1711, 1712, 1713, 1714,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 1686,
	1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 1722, 1717, 0, 0, 0, 0, 0, 0, 1689,
	0, 1726, 0, 0, 1736, 0, 0, 1735, 0, 0,
	1716, 1718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 1732, 0, 1733,
	0, 0, 0, 1688, 0, 0, 1703, 1704, 0, 0,
	0, 1158, 1158, 1708, 0, 0, 1368, 1368, 0, 1368,
	0, 0, 1705, 0, 1724, 0, 0, 0, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 1712, 1713, 1714, 1247, 1723, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 1367, 0, 0, 0, 0, 1726, 0,
	0, 1736, 0, 0, 0, 0, 0, 1716, 1718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 1732, 0, 1733, 0, 0, 0,
	0, 0, 0, 1703, 1704, 0, 0, 0, 1710, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1709, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 1367, 0, 0, 1158, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 1723, 0, 0, 1367, 0,
	1367, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 723, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 1367, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 1367, 0, 1700, 1701, 1707, 1728, 1706,
	1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695,
	1696, 0, 0, 0, 0, 1715, 0, 0, 0, 2987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 1367, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	1248, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 105, 0, 0,
	0, 1247, 0, 1158, 1247, 0, 0, 1248, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 1368, 0, 0, 0, 1725, 0, 0,
	0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0, 1699,
	1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 0,
	0, 0, 0, 0, 0, 1247, 2986, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 0, 0,
	1368, 0, 1247, 0, 0, 0, 0, 0, 0, 1722,
	1717, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 105, 0, 0,
	0, 1688, 0, 0, 1368, 0, 0, 0, 105, 1368,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 1368, 0, 0, 0, 0, 0, 1368, 0,
	1368, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1368, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1717, 0, 0, 0, 0, 0, 0,
	1689, 1711, 1712, 1713, 1714, 0, 0, 0, 1735, 0,
	0, 1694, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 1368, 1368, 1708, 0, 1726, 0, 0, 1736,
	0, 0, 0, 1705, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 0, 0, 0, 0, 0,
	0, 1703, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 1248, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1712, 1713, 1714, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1736, 1723, 0, 1248, 0, 0, 1716, 1718,
	0, 0, 0, 0, 0, 2347, 0, 0, 0, 0,
	0, 0, 1248, 0, 1367, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	1367, 1367, 1367, 1715, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 1727,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 1710, 0, 0, 0,
	1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0,
	0, 0, 1727, 0, 2370, 0, 0, 1247, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0,
	0, 1367, 1367, 4224, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	1368, 1368, 1368, 0, 0, 0, 1686, 1687, 0, 1719,
	1720, 1721, 1729, 1730, 1731, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 1717,
	0, 1367, 1367, 1367, 0, 1248, 1689, 0, 0, 0,
	0, 0, 1247, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1688, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1712, 1713, 1714, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 1248, 0, 1248,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 1367, 0, 0,
	0, 0, 0, 1248, 0, 1726, 0, 0, 1736, 0,
	0, 0, 0, 0, 1716, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 1733, 1247, 0, 0, 1367, 0, 0,
	1703, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 1724, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1368, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1368, 1368, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 1367, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1367, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 1248, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 1368, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 1700,
	1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690,
	1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0, 4220,
	0, 0, 0, 0, 1248, 0, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 1368, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 1251, 262, 263, 1252, 1253, 1254,
	1368, 1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 1260, 588, 273, 274, 275, 276, 277, 278,
	1261, 1262, 0, 279, 589, 590, 591, 1263, 280, 281,
	592, 1264, 1331, 1265, 282, 283, 284, 285, 286, 287,
	288, 0, 1266, 290, 291, 292, 289, 293, 1267, 294,
	0, 295, 296, 297, 298, 299, 300, 1268, 301, 302,
	303, 1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274,
	1275, 306, 307, 308, 309, 0, 310, 593, 594, 1276,
	314, 311, 312, 1277, 315, 313, 1278, 316, 317, 318,
	1279, 1280, 319, 320, 321, 1281, 322, 323, 1282, 324,
	325, 326, 1283, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 1284, 252,
	1285, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 1286, 344, 1287, 1288, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	1289, 355, 601, 1290, 602, 356, 1291, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 1119, 362, 363, 1292,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 1293, 1118, 371, 606, 607, 1294, 608, 1295,
	373, 374, 1120, 609, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 1296,
	385, 387, 386, 1297, 388, 610, 1123, 389, 390, 1124,
	1298, 391, 0, 0, 0, 392, 393, 1299, 1300, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 1301, 254, 1127, 434, 435, 1302, 611,
	436, 612, 438, 439, 1303, 0, 440, 0, 1304, 1305,
	442, 443, 444, 1306, 1307, 445, 446, 613, 1128, 447,
	1129, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 1308, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 1309,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 1310, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 1311, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 1312, 515, 516, 514, 517,
	518, 519, 1313, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 1314,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 1315, 542, 543, 0, 541, 1316, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 1317, 552,
	624, 625, 626, 627, 1318, 561, 1319, 553, 554, 555,
	628, 556, 629, 1320, 557, 558, 559, 560, 0, 562,
	563, 1321, 1322, 564, 565, 566, 568, 569, 567, 570,
	1323, 571, 1324, 0, 572, 573, 574, 630, 631, 632,
	1325, 576, 575, 577, 633, 1326, 1327, 1328, 1329, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 2535, 255, 257, 256, 258,
	259, 260, 261, 1251, 262, 263, 1252, 1253, 1254, 0,
	1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 1260, 588, 273, 274, 275, 276, 277, 278, 1261,
	1262, 0, 279, 589, 590, 591, 1263, 280, 281, 592,
	1264, 1331, 1265, 282, 283, 284, 285, 286, 287, 288,
	0, 1266, 290, 291, 292, 289, 293, 1267, 294, 0,
	295, 296, 297, 298, 299, 300, 1268, 301, 302, 303,
	1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275,
	306, 307, 308, 309, 0, 310, 593, 594, 1276, 314,
	311, 312, 1277, 315, 313, 1278, 316, 317, 318, 1279,
	1280, 319, 320, 321, 1281, 322, 323, 1282, 324, 325,
	326, 1283, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 1284, 252, 1285,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 1286, 344, 1287, 1288, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 1289,
	355, 601, 1290, 602, 356, 1291, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 1292, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 1293, 1118, 371, 606, 607, 1294, 608, 1295, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1296, 385,
	387, 386, 1297, 388, 610, 1123, 389, 390, 1124, 1298,
	391, 0, 0, 0, 392, 393, 1299, 1300, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1301, 254, 1127, 434, 435, 1302, 611, 436,
	612, 438, 439, 1303, 0, 440, 0, 1304, 1305, 442,
	443, 444, 1306, 1307, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 1308, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 1309, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 1310, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 1311, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 1312, 515, 516, 514, 517, 518,
	519, 1313, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 1314, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 1315, 542, 543, 0, 541, 1316, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 1317, 552, 624,
	625, 626, 627, 1318, 561, 1319, 553, 554, 555, 628,
	556, 629, 1320, 557, 558, 559, 560, 0, 562, 563,
	1321, 1322, 564, 565, 566, 568, 569, 567, 570, 1323,
	571, 1324, 0, 572, 573, 574, 630, 631, 632, 1325,
	576, 575, 577, 633, 1326, 1327, 1328, 1329, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 3425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3427, 255, 257, 256, 258, 259, 260, 261,
	1251, 262, 263, 1252, 1253, 1254, 0, 1255, 583, 1256,
	1257, 1258, 1259, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 1260, 588,
	273, 274, 275, 276, 277, 278, 1261, 1262, 0, 279,
	589, 590, 591, 1263, 280, 281, 592, 1264, 1331, 1265,
	282, 283, 284, 285, 286, 287, 288, 0, 1266, 290,
	291, 292, 289, 293, 1267, 294, 0, 295, 296, 297,
	298, 299, 300, 1268, 301, 302, 303, 1116, 304, 305,
	1269, 1270, 1272, 1271, 1273, 1274, 1275, 306, 307, 308,
	309, 0, 310, 593, 594, 1276, 314, 311, 312, 1277,
	315, 313, 1278, 316, 317, 318, 1279, 1280, 319, 320,
	321, 1281, 322, 323, 1282, 324, 325, 326, 1283, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 1284, 252, 1285, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 1286,
	344, 1287, 1288, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 1289, 355, 601, 1290,
	602, 356, 1291, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 1119, 362, 363, 1292, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 1293, 1118,
	371, 606, 607, 1294, 608, 1295, 373, 374, 1120, 609,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 1296, 385, 387, 386, 1297,
	388, 610, 1123, 389, 390, 1124, 1298, 391, 0, 0,
	0, 392, 393, 1299, 1300, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 1301,
	254, 1127, 434, 435, 1302, 611, 436, 612, 438, 439,
	1303, 0, 440, 0, 1304, 1305, 442, 443, 444, 1306,
	1307, 445, 446, 613, 1128, 447, 1129, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 1308,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 1309, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 1310, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 1311, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 1312, 515, 516, 514, 517, 518, 519, 1313, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 1314, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 1315,
	542, 543, 0, 541, 1316, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 1317, 552, 624, 625, 626, 627,
	1318, 561, 1319, 553, 554, 555, 628, 556, 629, 1320,
	557, 558, 559, 560, 0, 562, 563, 1321, 1322, 564,
	565, 566, 568, 569, 567, 570, 1323, 571, 1324, 0,
	572, 573, 574, 630, 631, 632, 1325, 576, 575, 577,
	633, 1326, 1327, 1328, 1329, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3781, 255, 257, 256, 258, 259, 260,
	261, 1251, 262, 263, 1252, 1253, 1254, 0, 1255, 583,
	1256, 1257, 1258, 1259, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 1260,
	588, 273, 274, 275, 276, 277, 278, 1261, 1262, 0,
	279, 589, 590, 591, 1263, 280, 281, 592, 1264, 1331,
	1265, 282, 283, 284, 285, 286, 287, 288, 0, 1266,
	290, 291, 292, 289, 293, 1267, 294, 0, 295, 296,
	297, 298, 299, 300, 1268, 301, 302, 303, 1116, 304,
	305, 1269, 1270, 1272, 1271, 1273, 1274, 1275, 306, 307,
	308, 309, 0, 310, 593, 594, 1276, 314, 311, 312,
	1277, 315, 313, 1278, 316, 317, 318, 1279, 1280, 319,
	320, 321, 1281, 322, 323, 1282, 324, 325, 326, 1283,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 1284, 252, 1285, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	1286, 344, 1287, 1288, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 1289, 355, 601,
	1290, 602, 356, 1291, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 1292, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1293,
	1118, 371, 606, 607, 1294, 608, 1295, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1296, 385, 387, 386,
	1297, 388, 610, 1123, 389, 390, 1124, 1298, 391, 0,
	0, 0, 392, 393, 1299, 1300, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1301, 254, 1127, 434, 435, 1302, 611, 436, 612, 438,
	439, 1303, 0, 440, 0, 1304, 1305, 442, 443, 444,
	1306, 1307, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1308, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 1309, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 1310, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 1311,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 1312, 515, 516, 514, 517, 518, 519, 1313,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 1314, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	1315, 542, 543, 0, 541, 1316, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 1317, 552, 624, 625, 626,
	627, 1318, 561, 1319, 553, 554, 555, 628, 556, 629,
	1320, 557, 558, 559, 560, 0, 562, 563, 1321, 1322,
	564, 565, 566, 568, 569, 567, 570, 1323, 571, 1324,
	0, 572, 573, 574, 630, 631, 632, 1325, 576, 575,
	577, 633, 1326, 1327, 1328, 1329, 578, 579, 634, 580,
	581, 582, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3956,
	255, 257, 256, 258, 259, 260, 261, 1251, 262, 263,
	1252, 1253, 1254, 0, 1255, 583, 1256, 1257, 1258, 1259,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 1260, 588, 273, 274, 275,
	276, 277, 278, 1261, 1262, 0, 279, 589, 590, 591,
	1263, 280, 281, 592, 1264, 1331, 1265, 282, 283, 284,
	285, 286, 287, 288, 0, 1266, 290, 291, 292, 289,
	293, 1267, 294, 0, 295, 296, 297, 298, 299, 300,
	1268, 301, 302, 303, 1116, 304, 305, 1269, 1270, 1272,
	1271, 1273, 1274, 1275, 306, 307, 308, 309, 0, 310,
	593, 594, 1276, 314, 311, 312, 1277, 315, 313, 1278,
	316, 317, 318, 1279, 1280, 319, 320, 321, 1281, 322,
	323, 1282, 324, 325, 326, 1283, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 1284, 252, 1285, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 1286, 344, 1287, 1288,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 1289, 355, 601, 1290, 602, 356, 1291,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 1119,
	362, 363, 1292, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 1293, 1118, 371, 606, 607,
	1294, 608, 1295, 373, 374, 1120, 609, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 1296, 385, 387, 386, 1297, 388, 610, 1123,
	389, 390, 1124, 1298, 391, 0, 0, 0, 392, 393,
	1299, 1300, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1301, 254, 1127, 434,
	435, 1302, 611, 436, 612, 438, 439, 1303, 0, 440,
	0, 1304, 1305, 442, 443, 444, 1306, 1307, 445, 446,
	613, 1128, 447, 1129, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 1308, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 1309, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 1310, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 1311, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 1312, 515,
	516, 514, 517, 518, 519, 1313, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 1314, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 1315, 542, 543, 0,
	541, 1316, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 1317, 552, 624, 625, 626, 627, 1318, 561, 1319,
	553, 554, 555, 628, 556, 629, 1320, 557, 558, 559,
	560, 0, 562, 563, 1321, 1322, 564, 565, 566, 568,
	569, 567, 570, 1323, 571, 1324, 0, 572, 573, 574,
	630, 631, 632, 1325, 576, 575, 577, 633, 1326, 1327,
	1328, 1329, 578, 579, 634, 580, 581, 582, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3845, 255, 257, 256, 258,
	259, 260, 261, 1251, 262, 263, 1252, 1253, 1254, 0,
	1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 1260, 588, 273, 274, 275, 276, 277, 278, 1261,
	1262, 0, 279, 589, 590, 591, 1263, 280, 281, 592,
	1264, 1331, 1265, 282, 283, 284, 285, 286, 287, 288,
	0, 1266, 290, 291, 292, 289, 293, 1267, 294, 0,
	295, 296, 297, 298, 299, 300, 1268, 301, 302, 303,
	1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275,
	306, 307, 308, 309, 0, 310, 593, 594, 1276, 314,
	311, 312, 1277, 315, 313, 1278, 316, 317, 318, 1279,
	1280, 319, 320, 321, 1281, 322, 323, 1282, 324, 325,
	326, 1283, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 1284, 252, 1285,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 1286, 344, 1287, 1288, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 1289,
	355, 601, 1290, 602, 356, 1291, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 1292, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 1293, 1118, 371, 606, 607, 1294, 608, 1295, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1296, 385,
	387, 386, 1297, 388, 610, 1123, 389, 390, 1124, 1298,
	391, 0, 0, 0, 392, 393, 1299, 1300, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1301, 254, 1127, 434, 435, 1302, 611, 436,
	612, 438, 439, 1303, 0, 440, 0, 1304, 1305, 442,
	443, 444, 1306, 1307, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 1308, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 1309, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 1310, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 1311, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 1312, 515, 516, 514, 517, 518,
	519, 1313, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 1314, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 1315, 542, 543, 0, 541, 1316, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 1317, 552, 624,
	625, 626, 627, 1318, 561, 1319, 553, 554, 555, 628,
	556, 629, 1320, 557, 558, 559, 560, 0, 562, 563,
	1321, 1322, 564, 565, 566, 568, 569, 567, 570, 1323,
	571, 1324, 0, 572, 573, 574, 630, 631, 632, 1325,
	576, 575, 577, 633, 1326, 1327, 1328, 1329, 578, 579,
	634, 580, 581, 582, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3711, 255, 257, 256, 258, 259, 260, 261, 1251,
	262, 263, 1252, 1253, 1254, 0, 1255, 583, 1256, 1257,
	1258, 1259, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 1260, 588, 273,
	274, 275, 276, 277, 278, 1261, 1262, 0, 279, 589,
	590, 591, 1263, 280, 281, 592, 1264, 1331, 1265, 282,
	283, 284, 285, 286, 287, 288, 0, 1266, 290, 291,
	292, 289, 293, 1267, 294, 0, 295, 296, 297, 298,
	299, 300, 1268, 301, 302, 303, 1116, 304, 305, 1269,
	1270, 1272, 1271, 1273, 1274, 1275, 306, 307, 308, 309,
	0, 310, 593, 594, 1276, 314, 311, 312, 1277, 315,
	313, 1278, 316, 317, 318, 1279, 1280, 319, 320, 321,
	1281, 322, 323, 1282, 324, 325, 326, 1283, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 1284, 252, 1285, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 1286, 344,
	1287, 1288, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 1289, 355, 601, 1290, 602,
	356, 1291, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 1292, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 1293, 1118, 371,
	606, 607, 1294, 608, 1295, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 1296, 385, 387, 386, 1297, 388,
	610, 1123, 389, 390, 1124, 1298, 391, 0, 0, 0,
	392, 393, 1299, 1300, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1301, 254,
	1127, 434, 435, 1302, 611, 436, 612, 438, 439, 1303,
	0, 440, 0, 1304, 1305, 442, 443, 444, 1306, 1307,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 1308, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 1309, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	1310, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 1311, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	1312, 515, 516, 514, 517, 518, 519, 1313, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 1314, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 1315, 542,
	543, 0, 541, 1316, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 1317, 552, 624, 625, 626, 627, 1318,
	561, 1319, 553, 554, 555, 628, 556, 629, 1320, 557,
	558, 559, 560, 0, 562, 563, 1321, 1322, 564, 565,
	566, 568, 569, 567, 570, 1323, 571, 1324, 0, 572,
	573, 574, 630, 631, 632, 1325, 576, 575, 577, 633,
	1326, 1327, 1328, 1329, 578, 579, 634, 580, 581, 582,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3443, 255, 257,
	256, 258, 259, 260, 261, 1251, 262, 263, 1252, 1253,
	1254, 0, 1255, 583, 1256, 1257, 1258, 1259, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 1260, 588, 273, 274, 275, 276, 277,
	278, 1261, 1262, 0, 279, 589, 590, 591, 1263, 280,
	281, 592, 1264, 1331, 1265, 282, 283, 284, 285, 286,
	287, 288, 0, 1266, 290, 291, 292, 289, 293, 1267,
	294, 0, 295, 296, 297, 298, 299, 300, 1268, 301,
	302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271, 1273,
	1274, 1275, 306, 307, 308, 309, 0, 310, 593, 594,
	1276, 314, 311, 312, 1277, 315, 313, 1278, 316, 317,
	318, 1279, 1280, 319, 320, 321, 1281, 322, 323, 1282,
	324, 325, 326, 1283, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 1284,
	252, 1285, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 1286, 344, 1287, 1288, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 1289, 355, 601, 1290, 602, 356, 1291, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	1292, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 1293, 1118, 371, 606, 607, 1294, 608,
	1295, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	1296, 385, 387, 386, 1297, 388, 610, 1123, 389, 390,
	1124, 1298, 391, 0, 0, 0, 392, 393, 1299, 1300,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1301, 254, 1127, 434, 435, 1302,
	611, 436, 612, 438, 439, 1303, 0, 440, 0, 1304,
	1305, 442, 443, 444, 1306, 1307, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 1308, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	1309, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 1310, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 1311, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 1312, 515, 516, 514,
	517, 518, 519, 1313, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	1314, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 1315, 542, 543, 0, 541, 1316,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 1317,
	552, 624, 625, 626, 627, 1318, 561, 1319, 553, 554,
	555, 628, 556, 629, 1320, 557, 558, 559, 560, 0,
	562, 563, 1321, 1322, 564, 565, 566, 568, 569, 567,
	570, 1323, 571, 1324, 0, 572, 573, 574, 630, 631,
	632, 1325, 576, 575, 577, 633, 1326, 1327, 1328, 1329,
	578, 579, 634, 580, 581, 582, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3270, 255, 257, 256, 258, 259, 260,
	261, 1251, 262, 263, 1252, 1253, 1254, 0, 1255, 583,
	1256, 1257, 1258, 1259, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 1260,
	588, 273, 274, 275, 276, 277, 278, 1261, 1262, 0,
	279, 589, 590, 591, 1263, 280, 281, 592, 1264, 1331,
	1265, 282, 283, 284, 285, 286, 287, 288, 0, 1266,
	290, 291, 292, 289, 293, 1267, 294, 0, 295, 296,
	297, 298, 299, 300, 1268, 301, 302, 303, 1116, 304,
	305, 1269, 1270, 1272, 1271, 1273, 1274, 1275, 306, 307,
	308, 309, 0, 310, 593, 594, 1276, 314, 311, 312,
	1277, 315, 313, 1278, 316, 317, 318, 1279, 1280, 319,
	320, 321, 1281, 322, 323, 1282, 324, 325, 326, 1283,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 1284, 252, 1285, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	1286, 344, 1287, 1288, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 1289, 355, 601,
	1290, 602, 356, 1291, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 1292, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1293,
	1118, 371, 606, 607, 1294, 608, 1295, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1296, 385, 387, 386,
	1297, 388, 610, 1123, 389, 390, 1124, 1298, 391, 0,
	0, 0, 392, 393, 1299, 1300, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1301, 254, 1127, 434, 435, 1302, 611, 436, 612, 438,
	439, 1303, 0, 440, 0, 1304, 1305, 442, 443, 444,
	1306, 1307, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1308, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 1309, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 1310, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 1311,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 1312, 515, 516, 514, 517, 518, 519, 1313,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 1314, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	1315, 542, 543, 0, 541, 1316, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 1317, 552, 624, 625, 626,
	627, 1318, 561, 1319, 553, 554, 555, 628, 556, 629,
	1320, 557, 558, 559, 560, 0, 562, 563, 1321, 1322,
	564, 565, 566, 568, 569, 567, 570, 1323, 571, 1324,
	0, 572, 573, 574, 630, 631, 632, 1325, 576, 575,
	577, 633, 1326, 1327, 1328, 1329, 578, 579, 634, 580,
	581, 582, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2393,
	255, 257, 256, 258, 259, 260, 261, 1251, 262, 263,
	1252, 1253, 1254, 0, 1255, 583, 1256, 1257, 1258, 1259,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 1260, 588, 273, 274, 275,
	276, 277, 278, 1261, 1262, 0, 279, 589, 590, 591,
	1263, 280, 281, 592, 1264, 1331, 1265, 282, 283, 284,
	285, 286, 287, 288, 0, 1266, 290, 291, 292, 289,
	293, 1267, 294, 0, 295, 296, 297, 298, 299, 300,
	1268, 301, 302, 303, 1116, 304, 305, 1269, 1270, 1272,
	1271, 1273, 1274, 1275, 306, 307, 308, 309, 0, 310,
	593, 594, 1276, 314, 311, 312, 1277, 315, 313, 1278,
	316, 317, 318, 1279, 1280, 319, 320, 321, 1281, 322,
	323, 1282, 324, 325, 326, 1283, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 1284, 252, 1285, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 1286, 344, 1287, 1288,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 1289, 355, 601, 1290, 602, 356, 1291,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 1119,
	362, 363, 1292, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 1293, 1118, 371, 606, 607,
	1294, 608, 1295, 373, 374, 1120, 609, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 1296, 385, 387, 386, 1297, 388, 610, 1123,
	389, 390, 1124, 1298, 391, 0, 0, 0, 392, 393,
	1299, 1300, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1301, 254, 1127, 434,
	435, 1302, 611, 436, 612, 438, 439, 1303, 0, 440,
	0, 1304, 1305, 442, 443, 444, 1306, 1307, 445, 446,
	613, 1128, 447, 1129, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 1308, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 1309, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 1310, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 1311, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 1312, 515,
	516, 514, 517, 518, 519, 1313, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 1314, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 1315, 542, 543, 0,
	541, 1316, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 1317, 552, 624, 625, 626, 627, 1318, 561, 1319,
	553, 554, 555, 628, 556, 629, 1320, 557, 558, 559,
	560, 0, 562, 563, 1321, 1322, 564, 565, 566, 568,
	569, 567, 570, 1323, 571, 1324, 0, 572, 573, 574,
	630, 631, 632, 1325, 576, 575, 577, 633, 1326, 1327,
	1328, 1329, 578, 579, 634, 580, 581, 582, 1343, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 255, 257, 256,
	258, 259, 260, 261, 1251, 262, 263, 1252, 1253, 1254,
	0, 1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 1260, 588, 273, 274, 275, 276, 277, 278,
	1261, 1262, 0, 279, 589, 590, 591, 1263, 280, 281,
	592, 1264, 1331, 1265, 282, 283, 284, 285, 286, 287,
	288, 0, 1266, 290, 291, 292, 289, 293, 1267, 294,
	0, 295, 296, 297, 298, 299, 300, 1268, 301, 302,
	303, 1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274,
	1275, 306, 307, 308, 309, 0, 310, 593, 594, 1276,
	314, 311, 312, 1277, 315, 313, 1278, 316, 317, 318,
	1279, 1280, 319, 320, 321, 1281, 322, 323, 1282, 324,
	325, 326, 1283, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 1284, 252,
	1285, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 1286, 344, 1287, 1288, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	1289, 355, 601, 1290, 602, 356, 1291, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 1119, 362, 363, 1292,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 1293, 1118, 371, 606, 607, 1294, 608, 1295,
	373, 374, 1120, 609, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 1296,
	385, 387, 386, 1297, 388, 610, 1123, 389, 390, 1124,
	1298, 391, 0, 0, 0, 392, 393, 1299, 1300, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 1301, 254, 1127, 434, 435, 1302, 611,
	436, 612, 438, 439, 1303, 0, 440, 0, 1304, 1305,
	442, 443, 444, 1306, 1307, 445, 446, 613, 1128, 447,
	1129, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 1308, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 1309,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 1310, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 1311, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 1312, 515, 516, 514, 517,
	518, 519, 1313, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 1314,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 1315, 542, 543, 0, 541, 1316, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 1317, 552,
	624, 625, 626, 627, 1318, 561, 1319, 553, 554, 555,
	628, 556, 629, 1320, 557, 558, 559, 560, 0, 562,
	563, 1321, 1322, 564, 565, 566, 568, 569, 567, 570,
	1323, 571, 1324, 0, 572, 573, 574, 630, 631, 632,
	1325, 576, 575, 577, 633, 1326, 1327, 1328, 1329, 578,
	579, 634, 580, 581, 582, 1242, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 1251, 262, 263, 1252, 1253, 1254, 0, 1255, 583,
	1256, 1257, 1258, 1259, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 1260,
	588, 273, 274, 275, 276, 277, 278, 1261, 1262, 0,
	279, 589, 590, 591, 1263, 280, 281, 592, 1264, 1331,
	1265, 282, 283, 284, 285, 286, 287, 288, 0, 1266,
	290, 291, 292, 289, 293, 1267, 294, 0, 295, 296,
	297, 298, 299, 300, 1268, 301, 302, 303, 1116, 304,
	305, 1269, 1270, 1272, 1271, 1273, 1274, 1275, 306, 307,
	308, 309, 0, 310, 593, 594, 1276, 314, 311, 312,
	1277, 315, 313, 1278, 316, 317, 318, 1279, 1280, 319,
	320, 321, 1281, 322, 323, 1282, 324, 325, 326, 1283,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 1284, 252, 1285, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	1286, 344, 1287, 1288, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 1289, 355, 601,
	1290, 602, 356, 1291, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 1292, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1293,
	1118, 371, 606, 607, 1294, 608, 1295, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1296, 385, 387, 386,
	1297, 388, 610, 1123, 389, 390, 1124, 1298, 391, 0,
	0, 0, 392, 393, 1299, 1300, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1301, 254, 1127, 434, 435, 1302, 611, 436, 612, 438,
	439, 1303, 0, 440, 0, 1304, 1305, 442, 443, 444,
	1306, 1307, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1308, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 1309, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 1310, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 1311,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 1312, 515, 516, 514, 517, 518, 519, 1313,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 1314, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	1315, 542, 543, 0, 541, 1316, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 1317, 552, 624, 625, 626,
	627, 1318, 561, 1319, 553, 554, 555, 628, 556, 629,
	1320, 557, 558, 559, 560, 0, 562, 563, 1321, 1322,
	564, 565, 566, 568, 569, 567, 570, 1323, 571, 1324,
	0, 572, 573, 574, 630, 631, 632, 1325, 576, 575,
	577, 633, 1326, 1327, 1328, 1329, 578, 579, 634, 580,
	581, 582, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 1251, 262, 263, 1252,
	1253, 1254, 0, 1255, 583, 1256, 1257, 1258, 1259, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 1260, 588, 273, 274, 275, 276,
	277, 278, 1261, 1262, 0, 279, 589, 590, 591, 1263,
	280, 281, 592, 1264, 1331, 1265, 282, 283, 284, 285,
	286, 287, 288, 0, 1266, 290, 291, 292, 289, 293,
	1267, 294, 0, 295, 296, 297, 298, 299, 300, 1268,
	301, 302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271,
	1273, 1274, 1275, 306, 307, 308, 309, 0, 310, 593,
	594, 1276, 314, 311, 312, 1277, 315, 313, 1278, 316,
	317, 318, 1279, 1280, 319, 320, 321, 1281, 322, 323,
	1282, 324, 325, 326, 1283, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	1284, 252, 1285, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 1286, 344, 1287, 1288, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 1289, 355, 601, 1290, 602, 356, 1291, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 1292, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1293, 1118, 371, 606, 607, 1294,
	608, 1295, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1296, 385, 387, 386, 1297, 388, 610, 1123, 389,
	390, 1124, 1298, 391, 0, 0, 0, 392, 393, 1299,
	1300, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 1301, 254, 1127, 434, 435,
	1302, 611, 436, 612, 438, 439, 1303, 0, 440, 0,
	1304, 1305, 442, 443, 444, 1306, 1307, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1308, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 1309, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 1310, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 1311, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 1312, 515, 516,
	514, 517, 518, 519, 1313, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 1314, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 1315, 542, 543, 0, 541,
	1316, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	1317, 552, 624, 625, 626, 627, 1318, 561, 1319, 553,
	554, 555, 628, 556, 629, 1320, 557, 558, 559, 560,
	0, 562, 563, 1321, 1322, 564, 565, 566, 568, 569,
	567, 570, 1323, 571, 1324, 0, 572, 573, 574, 630,
	631, 632, 1325, 576, 575, 577, 633, 1326, 1327, 1328,
	1329, 578, 579, 634, 580, 581, 582, 2368, 0, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 2365, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 2366,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 2364,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 2367, 0, 0, 0, 0, 0, 0, 1035, 2363,
	0, 997, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 215, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 217, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	1524, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 209, 578, 579, 634, 580, 581, 582, 1010, 0,
	210, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1761, 1759, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	215, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 217, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 1524, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 209, 578, 579, 634, 580, 581, 582,
	1010, 0, 210, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1761, 2944, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 215, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 217, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 1524, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 209, 578, 579, 634, 580,
	581, 582, 1010, 0, 210, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1761, 1759, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 2496, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 2501, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 2497, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 2498, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 2413, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 2411, 0, 2410, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 2408, 0, 2407,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 2405, 0, 2404, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 2402, 0, 1614, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 1613, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 1000, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 1014, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	4243, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 1014, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 2282, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 2281, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 1014, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 4025, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 1014,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 3673, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1829, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 0, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 3421, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1829, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 0, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 2501,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 1759, 0, 2506, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 2504, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 2492, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 2481,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 2479, 1033, 2470, 2477, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 2473, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 2474, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 2475, 405, 2472, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 2476,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 2471, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 2467, 1033, 2470,
	2477, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 2473, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 2474,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 2475,
	405, 2472, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 2476, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 2471, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 1767, 0,
	1035, 0, 0, 0, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 2261,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 1619, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 1554, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 1549, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 1540,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 1535, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 1517, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 1395, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1394, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 1389, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1388,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 1382,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 4283, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 4282, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 4281, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	4283, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 4282, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 3975, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 3976, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 3974,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 2911, 2912, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 2909, 2910, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 2269, 2270, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 0,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0,
	2489, 0, 0, 0, 0, 0, 0, 2487, 2488, 255,
	257, 256, 258, 259, 260, 261, 1035, 262, 263, 0,
	1033, 0, 0, 0, 1075, 1039, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 1088, 0,
	271, 1095, 272, 1094, 0, 1105, 273, 274, 275, 276,
	277, 278, 1041, 1074, 0, 279, 1135, 1136, 591, 0,
	280, 281, 1081, 0, 1062, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071,
	1067, 1066, 1070, 306, 307, 308, 309, 1098, 310, 1092,
	1091, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1083, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1018, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1106, 1107,
	1030, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1090, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 1103, 1104, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1113, 0, 1040, 356, 0, 357,
	358, 359, 360, 361, 1076, 1077, 1080, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1118, 371, 1085, 1086, 0,
	1046, 0, 373, 374, 1120, 1078, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1114, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 1069,
	1068, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 254, 1127, 434, 435,
	1031, 1079, 436, 1093, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 1108, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 1109, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 1089, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 2904, 2905, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 1072, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 1087, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 1134,
	536, 537, 538, 539, 1110, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 1099, 1100, 1101, 1102, 0, 561, 0, 553,
	554, 555, 1111, 556, 1112, 1029, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 1073, 571, 0, 0, 572, 573, 574, 630,
	1096, 1133, 0, 576, 575, 577, 633, 0, 0, 0,
	0, 578, 579, 634, 580, 581, 582, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 1973, 255, 257, 256, 258, 259, 260,
	261, 1035, 262, 263, 0, 1033, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 0, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	4283, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 0,
	1078, 0, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 0, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 4282, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 1173, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	1033, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1075, 0, 0, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 1074, 0, 279, 589, 590,
	591, 0, 280, 281, 1081, 0, 1062, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 1065, 1063,
	1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1106, 1107, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1113, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 1076, 1077, 1080, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1118, 371, 606,
	607, 0, 608, 0, 373, 374, 1120, 1078, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 1159, 385, 387, 386, 0, 388, 1114,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 1069, 1068, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 254, 1127,
	434, 435, 0, 1079, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 1165, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 1108, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 1109, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 1167, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 215,
	515, 516, 514, 517, 518, 519, 1072, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 1110, 0, 542, 543,
	0, 541, 217, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 1111, 556, 1112, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 1073, 571, 0, 0, 572, 573,
	574, 1524, 631, 632, 0, 576, 575, 577, 633, 0,
	1173, 0, 209, 578, 579, 634, 580, 581, 582, 0,
	0, 210, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 1163, 1075, 1853, 0, 0, 0, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 1074, 0, 279, 589, 590, 591, 0, 280, 281,
	1081, 0, 1062, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066,
	1070, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1106, 1107, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1113, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 1076, 1077, 1080, 437, 1119, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1118, 371, 606, 607, 0, 608, 0,
	373, 374, 1120, 1078, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 1159,
	385, 387, 386, 0, 388, 1114, 1123, 389, 390, 1124,
	0, 391, 0, 0, 0, 392, 393, 1069, 1068, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 0, 254, 1127, 434, 435, 0, 1079,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 1165,
	442, 443, 444, 0, 0, 445, 446, 613, 1128, 447,
	1129, 1108, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 1109, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 1167, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 215, 515, 516, 514, 517,
	518, 519, 1072, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 1110, 0, 542, 543, 0, 541, 217, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	1111, 556, 1112, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	1073, 571, 0, 0, 572, 573, 574, 1524, 631, 632,
	0, 576, 575, 577, 633, 0, 0, 0, 209, 578,
	579, 634, 580, 581, 582, 0, 0, 210, 0, 0,
	0, 3088, 0, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 1853,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 0, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 1074, 0, 279, 589, 590, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 606, 607,
	0, 608, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 1159, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 0, 254, 1127, 434,
	435, 0, 1079, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 1165, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 1167, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 1110, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 1155,
	0, 1173, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	1163, 0, 1161, 1075, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 1074, 0, 279, 589, 590, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 606, 607, 0, 608,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	1159, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 254, 1127, 434, 435, 0,
	1079, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	1165, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 1167, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 1110, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 0, 1173, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 1163, 1075,
	1161, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 1074, 0,
	279, 589, 590, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1159, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 254, 1127, 434, 435, 0, 1079, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 1165, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 1167,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 1110,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 0, 1173, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 1163, 1075, 1161, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 1074, 0, 279, 589, 590, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 606, 607,
	0, 608, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 0, 254, 1127, 434,
	435, 0, 1079, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 1110, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 1173, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1075, 0, 3569, 0, 0, 264, 265, 1115, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 1074,
	0, 279, 589, 590, 591, 0, 280, 281, 1081, 0,
	1062, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1116,
	304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1106, 1107, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 1117, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1113, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1076, 1077, 1080, 437, 1119, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 1118, 371, 606, 607, 0, 608, 0, 373, 374,
	1120, 1078, 1121, 375, 376, 377, 1122, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 1114, 1123, 389, 390, 1124, 0, 391,
	0, 0, 0, 392, 393, 1069, 1068, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1125, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1126,
	424, 0, 254, 1127, 434, 435, 0, 1079, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 1128, 447, 1129, 1108,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 1109, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 1130, 495, 496, 497, 498, 620,
	1167, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	1072, 520, 521, 504, 505, 522, 523, 1131, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	1110, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 1111, 556,
	1112, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 1073, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 0, 997, 0, 1365, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 1752, 583, 0,
	0, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 1331, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 609,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	0, 1127, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 215, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 217, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 1524, 631, 632, 0, 576, 575, 577,
	633, 0, 0, 0, 209, 578, 579, 634, 580, 581,
	582, 0, 0, 210, 0, 0, 0, 1521, 0, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 1331, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1118, 371, 606, 607, 0, 608, 0, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 0, 1127, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 215, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 217, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 1524, 631, 632, 0,
	576, 575, 577, 633, 0, 0, 0, 209, 578, 579,
	634, 580, 581, 582, 1365, 1364, 210, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 179, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 1331, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 1118, 371, 606,
	607, 0, 608, 0, 373, 374, 1120, 609, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 0, 1127,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 0,
	0, 0, 0, 578, 579, 634, 580, 581, 582, 1365,
	1364, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 1546, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 1331, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1118, 371, 606, 607, 0, 608, 0, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 0, 1127, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1365, 2057, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 3345, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 1331, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 1118, 371, 606,
	607, 0, 608, 0, 373, 374, 1120, 609, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 2056, 387, 386, 0, 388, 610,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 0, 1127,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 0,
	0, 0, 0, 578, 579, 634, 580, 581, 582, 1365,
	1364, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 1546, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 1331, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1118, 371, 606, 607, 0, 608, 0, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 0, 1127, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1173, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1075, 0, 1530, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 1074, 0, 279, 589, 590,
	591, 0, 280, 281, 1081, 0, 1062, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 1065, 1063,
	1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1106, 1107, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1113, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 1076, 1077, 1080, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1118, 371, 606,
	607, 0, 608, 0, 373, 374, 1120, 1078, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1114,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 1069, 1068, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 254, 1127,
	434, 435, 0, 1079, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 1108, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 1109, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 1072, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 1110, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 1111, 556, 1112, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 1073, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 997,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 215, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 217,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 1524, 631,
	632, 0, 576, 575, 577, 633, 249, 0, 0, 209,
	578, 579, 634, 580, 581, 582, 0, 0, 210, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	179, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 249, 2824, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 1867, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 249, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	4426, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 0, 249, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 3286, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 0, 249, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 1466, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 2794, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 3446, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 843,
	0, 722, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 2161, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 729, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 841, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 727,
	544, 545, 546, 547, 548, 728, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 0, 720, 0, 722,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 732, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 729, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 727, 544, 545,
	546, 547, 548, 728, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 1904,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 0, 1910, 0, 271, 1900, 272,
	1916, 0, 1923, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 1926, 1927, 0, 0, 280, 281, 0,
	0, 1331, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 1098, 310, 1914, 1913, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 1912, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1921,
	1922, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 0, 357, 358, 359, 360,
	361, 0, 0, 0, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1118, 371, 1907, 1908, 0, 1903, 0, 373,
	374, 1120, 0, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 0, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 0, 1127, 434, 435, 0, 0, 436,
	1915, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 0, 1128, 447, 1129,
	0, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 1897, 460, 461, 462, 1898,
	463, 464, 465, 0, 466, 0, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1911,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	0, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1909, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1925, 536, 537, 538,
	539, 0, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1917,
	1918, 1919, 1920, 0, 561, 0, 553, 554, 555, 0,
	556, 0, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 0, 1901, 1924, 0,
	576, 575, 577, 722, 0, 0, 0, 0, 578, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 1891, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 729, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 727, 544, 545, 546, 547, 548, 728, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 722, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 732, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 729, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 2201, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 2202, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 727, 544, 545, 546,
	547, 548, 728, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 2203, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 1934, 0, 1365, 1364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 1937, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1938, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 722, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 729, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 1930, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 727, 544, 545, 546, 547, 548, 728,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 1929, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	722, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 732, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 729, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	1883, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 727, 544,
	545, 546, 547, 548, 728, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 1882, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 1365, 1364, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 732, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 1937, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1938, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1365, 1364, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 1331, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1116, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 1119, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 1118, 371, 606, 607, 0, 608, 0,
	373, 374, 1120, 609, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 1123, 389, 390, 1124,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 0, 0, 1127, 434, 435, 3619, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 1128, 447,
	1129, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 1365, 1364, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 3258, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1574, 0, 1365, 1364, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 1331, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 1573, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1118, 371, 606, 607, 0,
	608, 0, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 0, 1127, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	1572, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 1571, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 0, 0, 0,
	0, 578, 579, 634, 580, 581, 582, 1514, 0, 1365,
	1364, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 1331, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1513, 604, 605, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1118, 371, 606, 607, 0, 608, 0, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 0, 1127, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1441, 0, 1365, 1364, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 1331, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1440, 604,
	605, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 609,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	0, 1127, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 1400, 0, 1365, 1364, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 1331, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 1118, 371, 606, 607,
	0, 608, 0, 373, 374, 1120, 609, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 0, 0, 1127, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1360, 0,
	1365, 1364, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 1331, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1116, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 1359, 604, 605, 437, 1119, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 1118, 371, 606, 607, 0, 608, 0,
	373, 374, 1120, 609, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 1123, 389, 390, 1124,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 0, 0, 1127, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 1128, 447,
	1129, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 1365, 1364, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1365, 1364, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 1331, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1116, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 1945,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 1119, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 1118, 371, 606, 607, 0, 608, 0,
	373, 374, 1120, 609, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 1123, 389, 390, 1124,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 0, 0, 1127, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 1128, 447,
	1129, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 1365, 1364, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 1365, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 2628, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 2625, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 2632, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 2837, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	2631, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 2834, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 2836, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 2833, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 2630, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 2835, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 2628, 280, 281, 592, 0, 0, 2622, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 2625, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 2632, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	2631, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 2621, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 2630, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 2629, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1641, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 1644, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	1642, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 1643, 575, 577, 633, 1335, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1337, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 1165, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1332, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1334, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 1165, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 1238, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1240, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 1165, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 666, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 665, 260, 261, 655, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 658, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	659, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 660, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 654, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 655, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 658, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 659, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 660, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 1165, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 3221, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 2765, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 2764, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 2174,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 249, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 2089,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 2095, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	2094, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 2082, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 2084, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 2053, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 1165, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1506, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 1505, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1497, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1496, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1494, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1493, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 1489, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1488, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 1444, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 1353, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1346, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 1348, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 636,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 240, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 658, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 659, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 660, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 2210, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 2208, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 2206, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	2139, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	2133, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	2101, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 830, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 829, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 828, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 2837, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 3881, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	689, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 1208, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 1206, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 690,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 686, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 1209, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 685, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 689, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 1208, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 1206, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 690, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 686,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 1209,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 685,
	625, 626, 627, 0, 561, 0, 553, 1207, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 645, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	644, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 643, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 249, 2824, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 249, 3891, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 3593, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	2540, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 249, 2824, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 2821, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 249, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 2184, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 2172, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 689, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 679, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 690, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 686, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 1529, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 685, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1510, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 1509, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1503, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1502, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1450, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1449, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 1433, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1431, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 1427, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 1404, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 1402,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1356, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 1340,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 249, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 1186, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 249, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 695, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 689, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 679, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 677, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 678, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 690, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 680,
	499, 0, 500, 501, 507, 508, 502, 503, 686, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 681, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 685, 625,
	626, 627, 0, 561, 0, 553, 683, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 671, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 672, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	668, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 662, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 640, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 3304, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 3252, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 3192, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 3190, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 3176, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 2774, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 672, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	2118, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 0,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1474, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 1138, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 249, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 0, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 0, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 0, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 0, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1717, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1717, 1688, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 1708, 0, 0, 0, 1735,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	0, 0, 0, 0, 0, 1688, 0, 0, 0, 0,
	0, 0, 1722, 1717, 0, 1708, 0, 0, 0, 0,
	1689, 0, 0, 0, 1705, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 1708, 1694, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1712, 1713, 1714, 0,
	1726, 0, 0, 1736, 0, 1694, 0, 0, 0, 1716,
	1718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 1733, 0,
	0, 0, 0, 0, 0, 1703, 1704, 0, 0, 0,
	1726, 0, 0, 1736, 1711, 1712, 1713, 1714, 0, 1716,
	1718, 0, 0, 1724, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 1709, 1733, 0,
	0, 0, 0, 0, 0, 1703, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1736, 1724, 0, 0, 0, 0, 1716, 1718,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 1734,
	0, 0, 0, 0, 0, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1710, 1719, 1720,
	1721, 1729, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 1717, 0,
	0, 0, 0, 1727, 0, 1689, 1715, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 1727, 0, 0, 0, 0, 0, 1705, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 4120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 4119, 0, 0, 0, 0, 1711,
	1712, 1713, 1714, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0,
	0, 0, 0, 4010, 1726, 0, 0, 1736, 0, 0,
	0, 0, 0, 1716, 1718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 1733, 0, 0, 0, 0, 0, 0, 1703,
	1704, 0, 0, 0, 0, 0, 1686, 1687, 0, 1719,
	1720, 1721, 1729, 1730, 1731, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 1717,
	0, 1709, 0, 0, 0, 0, 1689, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1688, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1712, 1713, 1714, 0, 0, 0, 0, 0, 0,
	1694, 1710, 0, 0, 0, 0, 0, 0, 0, 1686,
	1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 1722, 1717, 0, 0, 1726, 0, 0, 1736, 1689,
	0, 0, 0, 0, 1716, 1718, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 1733, 0, 0, 0, 0, 0, 0,
	1703, 1704, 0, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 1724, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 1700, 1701,
	1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691,
	1692, 1693, 1695, 1696, 1734, 0, 0, 0, 3959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 1711, 1712, 1713, 1714, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 1736, 0, 1722, 1717, 0, 0, 1716, 1718, 0,
	0, 1689, 1715, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 1732, 0, 1733, 0, 0, 0,
	0, 0, 1710, 1703, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1688, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 1708, 0, 0, 1727, 0,
	0, 0, 0, 0, 1705, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 1700,
	1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690,
	1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0, 3815,
	1726, 0, 0, 1736, 0, 1715, 0, 0, 0, 1716,
	1718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 1732, 0, 1733, 0,
	0, 0, 0, 0, 0, 1703, 1704, 0, 0, 0,
	0, 0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730,
	1731, 1727, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 1717, 0, 1709, 0, 0,
	0, 0, 1689, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1688, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0, 1699,
	1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 0,
	0, 0, 3758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1712, 1713, 1714,
	0, 0, 0, 0, 0, 0, 1694, 1710, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 0, 1719, 1720,
	1721, 1729, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 1722, 1717, 0,
	0, 1726, 0, 0, 1736, 1689, 0, 0, 0, 0,
	1716, 1718, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 1733,
	0, 0, 0, 0, 0, 0, 1703, 1704, 0, 1688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 1724, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	1734, 0, 0, 0, 3757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 1711,
	1712, 1713, 1714, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 1736, 0, 1722,
	1717, 0, 0, 1716, 1718, 0, 0, 1689, 1715, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	1732, 0, 1733, 0, 0, 0, 0, 0, 1710, 1703,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 1708, 0, 0, 1727, 0, 0, 0, 0, 0,
	1705, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1712, 1713, 1714, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706,
	1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695,
	1696, 0, 0, 0, 0, 3756, 1726, 0, 0, 1736,
	0, 1715, 0, 0, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1710, 1732, 0, 1733, 0, 0, 0, 0, 0,
	0, 1703, 1704, 0, 0, 0, 0, 0, 1686, 1687,
	0, 1719, 1720, 1721, 1729, 1730, 1731, 1727, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 1717, 0, 1709, 0, 0, 0, 0, 1689, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1688, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 1700, 1701,
	1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691,
	1692, 1693, 1695, 1696, 0, 0, 0, 0, 3451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1712, 1713, 1714, 0, 0, 0, 0,
	0, 0, 1694, 1710, 0, 0, 0, 0, 0, 0,
	0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 1722, 1717, 0, 0, 1726, 0, 0,
	1736, 1689, 0, 0, 0, 0, 1716, 1718, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 1733, 0, 0, 0, 0,
	0, 0, 1703, 1704, 0, 1688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	1724, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 1734, 0, 0, 0,
	2984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 1687, 0, 1719, 1720, 1721, 1729,
	1730, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 1736, 0, 1722, 1717, 0, 0, 1716,
	1718, 0, 0, 1689, 1715, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 1732, 0, 1733, 0,
	0, 0, 0, 0, 1710, 1703, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1688, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 1708, 0, 0,
	1727, 0, 0, 0, 0, 0, 1705, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1712, 1713,
	1714, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697,
	1698, 1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0,
	0, 2983, 1726, 0, 0, 1736, 0, 1715, 0, 0,
	0, 1716, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 1732, 0,
	1733, 0, 0, 0, 0, 0, 0, 1703, 1704, 0,
	0, 0, 0, 0, 1686, 1687, 0, 1719, 1720, 1721,
	1729, 1730, 1731, 1727, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1717, 0, 1709,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1688, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 2982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1712,
	1713, 1714, 0, 0, 0, 0, 0, 0, 1694, 1710,
	0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1717, 1727, 0, 0, 0, 0,
	0, 1689, 0, 1726, 0, 0, 1736, 0, 0, 1735,
	0, 0, 1716, 1718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 1733, 0, 0, 0, 1688, 0, 0, 1703, 1704,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 1700, 1701, 1707, 1728,
	1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692, 1693,
	1695, 1696, 1734, 0, 0, 0, 2981, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1712, 1713, 1714, 0,
	1723, 0, 0, 0, 0, 1694, 4349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731,
	1726, 0, 0, 1736, 0, 0, 0, 0, 0, 1716,
	1718, 0, 0, 1722, 1717, 0, 0, 0, 0, 0,
	1715, 1689, 0, 0, 0, 0, 1732, 0, 1733, 1735,
	0, 0, 0, 0, 0, 1703, 1704, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 1688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1727, 1709, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1712, 1713, 1714, 0,
	0, 0, 0, 0, 0, 1694, 0, 3068, 0, 4348,
	3067, 0, 1725, 0, 0, 0, 0, 1700, 1701, 1707,
	1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692,
	1693, 1695, 1696, 0, 0, 2948, 0, 1715, 0, 0,
	1726, 0, 0, 1736, 0, 0, 0, 0, 0, 1716,
	1718, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 1733, 0,
	0, 0, 0, 0, 0, 1703, 1704, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 1686, 1687, 0, 1719, 1720, 1721,
	1729, 1730, 1731, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1717, 0, 0,
	0, 0, 2919, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 1688, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	2514, 0, 0, 0, 0, 0, 0, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 1710, 1711, 1712,
	1713, 1714, 0, 0, 0, 0, 0, 0, 1694, 1722,
	1717, 0, 0, 0, 2513, 0, 0, 1689, 0, 0,
	0, 0, 0, 1727, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 1736, 0, 0, 0,
	0, 1688, 1716, 1718, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 1732,
	1705, 1733, 0, 0, 0, 0, 0, 0, 1703, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702,
	0, 1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
	0, 1711, 1712, 1713, 1714, 0, 0, 0, 0, 0,
	0, 1694, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 1736,
	0, 0, 0, 0, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 0, 0, 0, 0, 0,
	0, 1703, 1704, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	1710, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1717, 0, 0, 0, 0, 0, 0,
	1689, 0, 0, 0, 0, 0, 1727, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 1715, 0, 0, 0, 1700, 1701, 1707,
	1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692,
	1693, 1695, 1696, 1710, 1711, 1712, 1713, 1714, 0, 0,
	0, 0, 0, 0, 1694, 1686, 1687, 0, 1719, 1720,
	1721, 1729, 1730, 1731, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 1722, 1717, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 0, 1726,
	0, 0, 1736, 1735, 0, 0, 0, 0, 1716, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 1733, 0, 1688,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	1712, 1713, 1714, 0, 0, 0, 1723, 994, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 0, 1719, 1720,
	1721, 1729, 1730, 1731, 1726, 0, 0, 1736, 0, 0,
	0, 0, 0, 1716, 1718, 0, 0, 1722, 1717, 0,
	0, 0, 0, 0, 0, 1689, 1715, 0, 0, 0,
	1732, 0, 1733, 1735, 0, 0, 0, 0, 0, 1703,
	1704, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 1688,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 1708,
	0, 1709, 1727, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 1722, 1717, 0, 0, 0, 3069, 0, 0,
	1689, 0, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 1711,
	1712, 1713, 1714, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 3074, 0, 0, 0, 1725, 0,
	0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 0,
	0, 1715, 0, 0, 1726, 0, 0, 1736, 0, 0,
	0, 0, 0, 1716, 1718, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 1711, 1712, 1713, 1714, 0, 0,
	1732, 0, 1733, 0, 1694, 0, 0, 0, 0, 1703,
	1704, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 1709, 1736, 0, 0, 0, 0, 0, 1716, 1718,
	0, 0, 0, 0, 0, 0, 3432, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 1700, 1701,
	1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691,
	1692, 1693, 1695, 1696, 0, 0, 0, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1717, 1715, 0, 0, 0, 0, 1723, 1689, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1717, 0, 0, 0, 2985, 0, 0,
	1689, 1711, 1712, 1713, 1714, 0, 0, 0, 1735, 0,
	0, 1694, 0, 1725, 0, 0, 0, 0, 1700, 1701,
	1707, 1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691,
	1692, 1693, 1695, 1696, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 1726, 0, 0, 1736,
	0, 0, 0, 1705, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 0, 0, 0, 1725, 0,
	0, 1703, 1704, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1712, 1713, 1714, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 0, 1719, 1720, 1721,
	1729, 1730, 1731, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1717, 0, 1726,
	0, 0, 1736, 1723, 1689, 0, 0, 0, 1716, 1718,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3036, 0, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 1688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 1724, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 1715, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 0,
	1719, 1720, 1721, 1729, 1730, 1731, 0, 0, 1734, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1717, 0, 0, 0, 0, 0, 1723, 1689, 1711, 1712,
	1713, 1714, 0, 0, 0, 1735, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 1726, 0, 0, 1736, 0, 0, 0,
	1705, 0, 1716, 1718, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 1733, 0, 0, 0, 1725, 1710, 0, 1703, 1704,
	1700, 1701, 1707, 1728, 1706, 1702, 0, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 1724, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1712, 1713, 1714, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 1736,
	1723, 0, 0, 0, 0, 1716, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 0, 0, 0, 1725, 0,
	0, 1703, 1704, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	1686, 1687, 0, 1719, 1720, 1721, 1729, 1730, 1731, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	1689, 0, 0, 0, 0, 1734, 1727, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 1710, 0, 0, 0, 1700, 1701, 1707,
	1728, 1706, 1702, 0, 1699, 1697, 1698, 1690, 1691, 1692,
	1693, 1695, 1696, 0, 1711, 1712, 1713, 1714, 0, 1727,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1736, 0, 0, 0, 0, 0, 1716, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 1733, 0, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 1725, 0, 0, 0, 0,
	1700, 1701, 1707, 1728, 1706, 1702, 1709, 1699, 1697, 1698,
	1690, 1691, 1692, 1693, 1695, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 1700, 1701, 1707, 1728, 1706, 1702, 0,
	1699, 1697, 1698, 1690, 1691, 1692, 1693, 1695, 1696,
}
var sqlPact = [...]int{

	6940, -1000, -1000, -1000, -1000, 185, -1000, -1000, 184, 182,
	178, 174, 170, 169, 168, 165, 164, 160, -1000, -1000,
	-1000, -1000, -1000, -1000, 152, -1000, -1000, 151, -1000, 150,
	148, 147, -1000, -1000, 144, -1000, 143, -1000, -1000, -1000,
	-1000, 142, 140, 137, 84514, 83987, 85034, 2149, 103382, 91302,
	2062, 75583, 102855, 75056, 102328, 2024, 101801, 2570, 136, -1000,
	101274, 133, 131, 130, -1000, 100747, -1000, 1956, -1000, 129,
	1958, 61325, 128, 127, 126, 2221, 124, -1000, 123, 122,
	120, -1000, 9310, 1652, -1000, 117, 116, -1000, 7688, 463,
	89201, 114, 113, 2401, 112, 111, 60797, 108, 106, 2207,
	2650, -1000, -1000, 1927, -1000, -1000, 105, 104, 98, 97,
	95, 92, 91, 90, 89, 88, 87, -1000, 86, 85,
	84, 83, 82, 81, 78, 77, -1000, 75, 74, 71,
	70, 66, 65, 63, 61, 60, 58, 56, 53, 52,
	-1000, 12496, 51, 1838, 1634, 1632, 1622, 1616, 1615, 1008,
	50, 48, 44, 40, 36, 34, 33, 32, 24, -1000,
	22, 21, 19, 15, 14, 12, 11, 6, 141, 5,
	3, 2, 1, 0, -1, -8, 2697, -1000, 1515, 891,
	28569, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 109102,
	103902, -9, -99, -15, -1000, 3087, 895, 50767, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 507, 1984, 801,
	-1000, -1000, -1000, 100227, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2147, -52, -1000, 1882, -1000, -1000, -1000, -1000,
	-1000, 799, -1000, 2146, 271, 2096, -1000, -1000, -1000, 3147,
	-1000, -1000, 103902, -1000, 1041, -1000, -1000, 3533, 3532, 1946,
	798, 90775, -1000, 1679, -1000, 951, 30225, -1000, 1262, -1000,
	30225, 293, -1000, -1000, -1000, -1000, -1000, -1000, 3531, 3530,
	3529, 3527, 3526, -1000, -1000, 74529, 21893, 74002, 73475, 99707,
	21356, 83460, 82933, 99180, 69276, 1040, -1000, -1000, -1000, 1412,
	-1000, -1000, -1000, -1000, -1000, -1000, -37, 66591, 3306, 103902,
	-1000, 286, -1000, -1000, -1000, -1000, -1000, -1000, 43137, 696,
	42573, 640, 42009, 499, -1000, -1000, -1000, -1000, 68739, -1000,
	98653, 2277, 3524, 3520, 1121, 3518, 3023, 1715, 3517, 1792,
	1236, 3516, 3514, 3513, 3512, 3509, 3508, 3506, 1372, 98126,
	2754, 97599, 1633, 68202, 1039, 82406, 85034, 2427, 97072, 1381,
	1295, -1000, -1000, -1000, -1000, 2855, 2637, 2629, 1124, -1000,
	-1000, 2272, 3505, 3504, 3503, 3502, 3501, 108582, 1655, 3500,
	2353, 3499, 3498, 3497, 3496, 3495, 3490, 3488, -1000, 81879,
	1038, 81352, 80825, 3157, 96545, 80298, 96018, 67665, 41445, 852,
	-1000, -1000, -1000, 53415, 6646, 6410, 95491, 55555, 85034, 85034,
	-1000, -1000, -1000, -1000, -1000, 40881, 679, 40317, 828, -1000,
	-1000, 53950, 2720, -1000, -1000, -1000, -1000, 39753, 658, 39189,
	778, 103902, -1000, 2750, 1784, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2100,
	1597, 3308, 2561, 67128, 1924, 1406, 3100, 2854, 2851, 1505,
	3487, 3486, 2448, 2848, 2833, 2828, 2827, 2826, 1481, 2382,
	550, 28005, 2743, 1567, 38625, 1494, 1584, 2819, 2814, 3326,
	1873, 1889, 2046, 72948, 3484, 3482, 3065, 2804, 2802, 2718,
	-1000, -1000, -1000, -1000, 1451, -1000, -1000, -1000, -1000, -1000,
	76103, -1000, -1000, 1712, -1000, -1000, 1712, -1000, -1000, -1000,
	-1000, -1000, 1270, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1515, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2279, -1000, 1909, -1000, -1000,
	2299, 3053, 3053, 3053, 3146, 469, 461, -1000, 141, -1000,
	-1000, 114643, -1000, -1000, 43689, 43689, 43689, 43689, 43689, 43689,
	43689, 2039, -1000, 792, -1000, -1000, 833, -1000, 791, 611,
	-1000, -1000, -1000, -1000, -1000, -1000, 790, -1000, -1000, -1000,
	-1000, -1000, -1000, 3306, -1000, 24633, -1000, -1000, -1000, 440,
	789, 43689, -1000, -1000, 3352, 3351, 988, -1000, 284, 972,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2749, 787, 785, -1000, 783, 782, 781, 775,
	767, -1000, -1000, -1000, 766, 760, 759, 751, 749, 748,
	746, 745, -1000, 1921, -1000, -1000, -1000, -1000, -1000, -1000,
	688, 686, 686, 686, -1000, 1035, -1000, -1000, -1000, 333,
	675, 282, 672, 669, 668, -1000, 743, 741, 738, 735,
	730, 721, 719, 717, 713, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1030, -1000, -1000, -1000, -1000, -38, 103902, -1000,
	507, -38, -1000, -1000, 711, -1000, 32445, 32445, 32445, -1000,
	-1000, 2145, 43689, -1000, 2352, -1000, -29, -29, 896, 52344,
	-1000, 49696, 896, 290, 861, 57132, -1000, 2717, -1000, -1000,
	708, 276, -1000, -1000, -1000, -1000, 22428, 2715, 103902, 103902,
	85034, 85034, 85034, 2947, 43689, -1000, -1000, 64476, 103902, 85554,
	-1000, -1000, 3252, 61845, 63951, 103902, 2746, 63431, -1000, 3061,
	-1000, -1000, 103902, -1000, 43689, -1000, 3251, 1625, 70336, 3203,
	-46, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2326, 2305,
	1197, 2161, -1000, 2957, 1529, -1000, 30225, 3011, -1000, -1000,
	-1000, 272, 22428, -1000, -1000, -1000, -1000, -1000, -1000, 4454,
	2930, 1356, -1000, 2160, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1758, 2929, -1000, 1997, 2925, 1701, -1000,
	-1000, 2169, -1000, -1000, 3049, -1000, -1000, 1667, 2924, -28,
	-1000, -1000, 2381, -1000, -1000, 1897, -1000, -1000, 1000, 2923,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 79771,
	55020, 53950, 66591, -41, -1000, -1000, -1000, -1000, -64, -1000,
	20819, 114643, -1000, -1000, -1000, -1000, 1649, 114643, 886, -1000,
	-1000, 2922, -1000, 114643, 881, -1000, -1000, 2918, -1000, 2745,
	-1000, -1000, 2237, -1000, -1000, 3481, -1000, -1000, 3480, -1000,
	3479, 3478, 3477, -1000, 1614, 1879, 3475, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 79251, 2141, -1000, -1000, 78197,
	-1000, 2235, 3202, -1000, -1000, -1000, 78724, 1037, -1000, 1000,
	2234, -1000, 88674, 991, -1000, 3474, 3138, 2515, 1000, 2232,
	-1000, -1000, -1000, -1000, -1000, 1049, -1000, 58703, -1000, 58703,
	-1000, 1513, -1000, 108062, -29, 85034, 3306, -1000, 3473, -1000,
	-1000, -1000, -1000, -1000, 2916, 3472, 3471, 3470, -1000, 103902,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 192, 2915, -1000,
	-1000, 88154, 192, 2914, -1000, 192, 2889, -1000, 87634, -1000,
	-1000, 2164, 2883, -1000, 207, 2876, -1000, -1000, 205, 2875,
	-1000, -1000, -92, 2874, -1000, -1000, 114643, -1000, -1000, -1000,
	-57, -1000, -1000, -1000, 895, -1000, 52872, -1000, 52872, 90248,
	69811, 974, 742, 60269, 114643, -1000, -1000, -1000, -1000, 114643,
	-1000, -1000, -1000, -157, -1000, -1000, 69811, 53950, 114643, -1000,
	-1000, -1000, -1000, 114643, -1000, -1000, -1000, 69811, 78197, -1000,
	94964, 77677, -1000, -1000, 1352, 2372, -1000, -1000, -1000, 69811,
	1291, 69811, 69811, 69811, -1000, 94437, -1000, -1000, 1944, 1422,
	3051, 1935, 85034, -1000, 1746, -1000, -1000, -1000, 3089, -1000,
	-1000, 2744, -1000, 62894, 87114, -1000, 86594, -1000, 86074, -1000,
	85034, -1000, 85034, -1000, 3469, 3468, 3466, 3465, -1000, 3462,
	3076, -1000, 114643, 3072, -1000, 3458, 3197, 2743, 114643, -1000,
	2900, 1629, 1627, 103902, -1000, -1000, 103902, -1000, 103902, -1000,
	-1000, -1000, 1425, -1000, -1000, 2321, -1000, -1000, -1000, -1000,
	85034, -1000, -1000, -1000, -1000, -1000, -1000, 2742, -1000, 1724,
	-1000, 1742, -1000, 1337, -1000, -1000, 208, -1000, -1000, -46,
	-1000, 107542, -1000, 2299, -1000, 103902, -1000, 2300, 2736, 2740,
	1550, 2105, 2421, -1000, 38061, 2403, 47001, 2158, 141, -1000,
	-1000, 141, 141, 29673, -1000, -1000, 61845, 61845, 22428, 1283,
	43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689,
	43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689,
	43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689, 43689,
	43689, 43689, 43689, 43689, 43689, 2144, 43689, 1269, 43689, 43689,
	43689, 43689, 1912, -1000, -1000, 1849, 532, 1893, -1000, 3291,
	3291, 3291, 509, 509, 115039, 115039, 613, 3454, 833, -1000,
	43689, -1000, 62, 43689, 22965, -1000, 461, 7857, 2334, -1000,
	457, 23529, -1000, -1000, -1000, 24633, 611, 37497, 43689, 1011,
	114643, -1000, -1000, 1675, 3311, 20283, 2774, 2601, 707, 770,
	764, 27441, 26877, 26313, 25749, 752, 43689, 43689, 43689, 43689,
	43689, 43689, 43689, 43689, -1000, -1000, 3319, -1000, 3311, -1000,
	-1000, -1000, -1000, 3311, 1279, 1275, 3311, -1000, 3311, 3311,
	11854, 11854, 36945, 36381, 35817, 47553, 35253, 43689, 25185, 34689,
	34125, -1000, 103902, -38, 3250, 43689, 264, -1000, 113376, -1000,
	264, 264, 706, -68, 114643, 2468, 2468, 51293, 2132, 2052,
	2052, 2052, -1000, 896, 15966, 896, 93392, 2063, 896, 896,
	262, 288, 438, 49170, 2352, 93392, 818, 701, -17, -20,
	-21, -1000, -1000, -22, -25, -1000, -1000, 85034, 699, 22965,
	22428, 261, 1391, -75, 2404, 2400, 2399, -1000, 2398, 1678,
	-78, 1248, 85034, 103902, -58, -1000, 4696, -87, -1000, 1106,
	248, 3311, -1000, -1000, -1000, -1000, -1000, 3452, 3449, -1000,
	1029, 691, 690, 604, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 688, 686, 686, 686, -1000, 333, 675, 282,
	672, 669, 668, -1000, -1000, -1000, -1000, -1000, 2712, 85034,
	103902, -64, 85554, -83, -1000, -1000, -1000, -1000, -1000, 85034,
	930, -89, 1128, -46, -1000, -1000, -1000, 1712, -1000, 1548,
	-1000, -1000, -1000, -1000, -1000, -1000, 1397, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 988, -1000, -1000, -1000, -1000,
	-1000, -1000, 3304, 3297, -39, -1000, -1000, 22428, -1000, -51,
	1757, 1645, -1000, 72421, 2284, 3057, 3448, 2501, 3034, 1483,
	-1000, 1421, 1246, 3137, 76103, 3222, 3233, 734, -1000, 2706,
	-1000, -1000, 949, 1677, 1603, 1202, 76103, 1997, -1000, 61845,
	-1000, 2490, 3136, 1402, 1418, 1402, 1402, 1400, -1000, 76103,
	1593, 1185, 1184, -1000, 1183, 1182, -1000, -53, 3221, 3231,
	201, -1000, 2702, 1181, -1000, -1000, 85034, 22428, 1546, 1525,
	1588, 1180, -40, -1000, 3216, 3215, 1178, 1175, -1000, 4603,
	-1000, 69811, 1694, 2873, 2551, 910, 2544, -1000, -1000, 910,
	-41, 66591, 103902, 219, -1000, 62, 43689, 43689, 62, 43689,
	62, 3188, 2872, -1000, -1000, -1000, -1000, -1000, 3445, 1846,
	2341, -1000, -1000, 661, 2231, 2698, 103902, 2416, -42, 85034,
	-1000, 2871, 65001, 1997, 2230, -1000, -1000, 77150, -1000, 2870,
	507, 2226, -1000, 660, 3444, -1000, 107022, -1000, 3061, 1303,
	2869, 1089, 698, 3245, -1000, 698, 59229, -1000, 103902, -1000,
	-29, -1000, 103902, -1000, -1000, -1000, 3443, -1000, 85034, -1000,
	-1000, 85034, 192, 2862, -1000, 85034, -1000, 85034, 189, 2861,
	-1000, -1000, 103902, -1000, 85034, 85034, -1000, 103902, 103902, 69811,
	69811, 5993, 71381, -98, -100, 435, -1000, 93917, 103902, 1087,
	71901, 103902, 3000, 993, 53950, -1000, -108, -157, 2542, 974,
	974, 910, -1000, 910, -1000, 85034, 2739, -1000, -1000, 69811,
	974, 974, 974, -1000, -1000, -1000, -1000, 3442, 3440, 3438,
	-1000, -1000, -1000, 994, 85034, 103902, 85034, -1000, -1000, 103902,
	-1000, 103902, 103902, 85034, -1000, 994, 103902, 994, 103902, 994,
	103902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 62, 43689,
	-1000, -1000, 3437, 1552, -1000, 2738, -1000, 2737, -1000, 8,
	-1000, -1000, -1000, -1000, -1000, 1998, 85034, 85034, 85034, 85034,
	103902, 85034, -1000, 76103, -1000, 2300, 2736, -1000, -1000, -1000,
	-1000, -1000, -1000, 1359, 2104, -1000, 2369, -1000, 1444, -1000,
	-1000, -1000, 114643, 48088, -1000, -1000, 114643, 1782, -1000, 46449,
	45897, -1000, -1000, 1660, 85034, 2430, -1000, 2430, -233, -1000,
	113233, 2367, 85034, -1000, -1000, -1000, -1000, -1000, 948, 1366,
	1366, 1284, 1284, 1284, 1284, 3196, 328, 1585, 563, 7088,
	7088, 5680, 5680, 5680, 5680, 5680, 7088, 548, 509, 509,
	548, 548, 548, 548, 548, 509, 509, 509, 7088, 7088,
	7088, 115039, 114766, 5644, 43689, 43689, 1174, 1844, 532, 5427,
	43689, 5030, 5030, 5030, 5030, -1000, 1917, -1000, -1000, -1000,
	-1000, 2695, 659, 47553, 47553, -1000, -1000, -1000, -1000, 24081,
	43689, -1000, -1000, -1000, -1000, 33561, -1000, -1000, 112623, -320,
	426, -224, -59, -1000, 43689, 43689, 43689, 425, -1000, 206,
	43689, 103902, -1000, 14516, 817, -281, -1000, -111, 1410, -1000,
	43689, -1000, -1000, 1171, -1000, 1169, 1168, 1167, -1000, 655,
	423, -1000, 204, -1000, 2044, 652, 650, 43689, -1000, -1000,
	-1000, -1000, -1000, 112382, -1000, -1000, 112200, -1000, -1000, 112027,
	-1000, -1000, 111786, -1000, -1000, -1000, 114469, 13958, 13791, 13155,
	6041, 10872, 8679, -114, 422, -119, 421, 937, 935, 419,
	418, 417, -122, -1000, 3435, 3434, 3433, -1000, 3429, 3427,
	3426, -1000, 3425, 3423, 3422, -1000, 3421, 3418, 3417, -1000,
	3415, 3412, 3407, -1000, 3405, 3404, 3400, -1000, 3397, 3395,
	3394, -1000, 3393, 3392, 3390, -125, 410, -1000, 2694, -224,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 409, -1000,
	406, -1000, 114346, -224, 403, 6849, -1000, 47553, 47553, 47553,
	-1000, 402, -1000, 112980, -1000, 114049, 33009, 33009, 33009, 398,
	113984, 43689, -224, -127, -1000, -130, -1000, -1000, 498, -133,
	1015, 32445, 50239, 22428, -1000, 1015, 1015, 43689, -1000, 43689,
	2380, -1000, -1000, -1000, 2377, 1980, 2468, 51293, -1000, -1000,
	-1000, -1000, 93392, -1000, 3306, 2803, -1000, 93392, -1000, -1000,
	103902, 507, -1000, 93392, 93392, 22428, 896, -1000, 896, 93392,
	757, -1000, -1000, -1000, -1000, -1000, 396, 56080, -59, 198,
	22428, 1000, -1000, 2495, 2495, 2495, 2495, -1000, -1000, 103902,
	1163, -43, -135, 3269, -1000, 1969, -1000, 61845, -1000, 831,
	1103, 22428, -1000, -1000, -1000, 647, -1000, 3311, 3311, -1000,
	3311, 103902, 2692, 252, 246, 65001, 65001, 1012, 30225, -1000,
	1712, -1000, -1000, 1543, -1000, 1864, -1000, 1190, -1000, -1000,
	-1000, -1000, 30225, -1000, 2222, 103902, 103902, 85034, -1000, 103902,
	-1000, 2224, 106502, 2223, 61845, 103902, -1000, -1000, 641, 634,
	2364, 2362, 1084, 103902, 103902, 2361, 105982, 105462, -1000, 3389,
	103902, 1932, 43689, 65001, 2157, 4227, 62, 62, -1000, -1000,
	62, 630, 1287, 85034, 85034, 103902, 85034, 1566, -1000, -1000,
	-1000, -1000, -1000, 76623, -1000, -1000, 3317, 3313, -1000, 1402,
	-1000, -1000, -1000, 1402, 1997, 1564, 103902, 85034, 65001, 1587,
	103902, 1942, 62, 62, -1000, -1000, 62, 629, 22428, 1925,
	-1000, 2791, 103902, 3349, 103902, 103902, 103902, 65001, 3075, 104942,
	103902, 103902, 65001, 4603, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 66071, 1090, 1000, 1580, 1161,
	76103, 53950, 992, 53950, 2522, -1000, -1000, 19747, -1000, 114643,
	114643, -1000, 114643, -1000, 62369, 103902, -1000, 1027, 103902, 71901,
	969, 2860, 58177, -64, 974, 69811, 85034, -42, 103902, -1000,
	-1000, 1997, 2856, 507, 2217, -1000, 69811, 3244, 2852, 628,
	3388, 3387, -1000, 2136, 2215, -1000, -1000, 104422, 2863, 878,
	103902, 1015, 51293, 1798, -1000, 56607, 1050, 103902, 1739, 211,
	-1000, -1000, -1000, -3, 103902, -1000, 855, 3386, -1000, -1000,
	192, -1000, 85034, 192, 192, -1000, 85034, 85034, 2164, -1000,
	207, -1000, 205, -1000, -92, -1000, -1000, 5993, 5993, 974,
	-236, 620, -1000, 905, 904, 54485, 69811, -140, -1000, -1000,
	-1000, -1000, -1000, 85034, 103902, 731, 2506, 103902, -143, -1000,
	194, 615, -1000, 2461, -1000, -1000, 993, 53950, 2688, -1000,
	-1000, 1010, -1000, 1326, 974, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -30, -64, -64, -64, -43,
	-1000, 994, -1000, 994, -1000, 994, -1000, 114643, -1000, -1000,
	1545, 1532, 103902, -1000, 22428, 103902, 85034, 22428, 85034, 2735,
	2734, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1099,
	-1000, 1782, 2103, -1000, 611, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2303, -1000, -45, 29673, 919, -1000,
	-1000, 85034, -31, 43689, 43689, 5390, 4627, 43689, 47553, 47553,
	-1000, 43689, 501, -1000, -1000, -1000, -1000, -1000, 2686, 610,
	43689, 61845, 7188, 6401, -1000, 395, 8512, 548, -1000, 43689,
	-1000, 393, 31893, -1000, 113629, -66, -149, -1000, 16515, -224,
	-152, -1000, -1000, 829, -1000, 2835, -1000, 43689, 113794, 2238,
	1803, 1730, 1549, 3311, 3348, 19211, -1000, 59749, 1016, 2074,
	111604, -1000, -1000, -1000, -1000, 61845, 61845, 43689, 43689, -1000,
	43689, 43689, 43689, -1000, -1000, -1000, 3311, 940, -1000, -1000,
	-1000, 940, -1000, -1000, 1402, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1402, -1000, 43689, -1000, -1000, 2684, 43689, -1000, 61845, 61845,
	47553, 47553, 47553, 47553, 47553, 47553, 47553, 47553, 47553, 47553,
	47553, 47553, 47553, 47553, 47553, 47553, 47553, 47553, 47553, 2397,
	47553, 3288, 3288, 3288, -1000, 2724, 2684, 43689, 43689, 61845,
	374, 370, 369, -1000, 43689, -224, -1000, -1000, 5993, 608,
	-1000, 2283, -1000, 2598, -1000, 43689, -1000, -138, -1000, 2352,
	-1000, -1000, 2598, 2598, -162, 114643, 51293, 51293, -1000, 603,
	43689, 2375, -1000, -1000, 813, -306, -1000, 900, -1000, -1000,
	-1000, -1000, -1000, 507, -1000, -1000, -1000, 193, 93392, 93392,
	808, -1000, -167, -1000, -1000, -170, -1000, 3242, 368, 22428,
	-1000, 1015, 3030, -1000, -1000, -1000, -1000, -1000, -1000, -64,
	103902, 103902, 2094, 3347, -1000, 3312, 827, 805, 191, 3311,
	367, 365, 363, -64, 103902, 103902, 103902, -1000, -1000, -1000,
	2455, -1000, -46, -1000, -1000, -1000, 43689, -1000, -1000, 3052,
	1159, 1158, -1000, -1000, 2841, -1000, 2213, -1000, 1058, -1000,
	1682, -1000, 43689, 51819, 602, 601, 3385, 1791, 3384, 1085,
	2831, 2164, 2830, 2164, -1000, -1000, -1000, 963, -1000, 114643,
	-1000, 595, 594, -1000, -51, 1745, 1573, 1007, -1000, -1000,
	43689, 43689, 92872, -1000, 429, 3049, -35, -1000, -1000, 1571,
	1155, -1000, -1000, -1000, -1000, 1997, 1563, 1153, -1000, -1000,
	-1000, 1004, -1000, -1000, 1003, -1000, -1000, 43689, -1000, -53,
	1151, 3194, 2209, 85034, 1149, -1000, 1147, -1000, -1000, -1000,
	3206, 2164, 2825, 1186, -1000, -1000, -1000, -1000, -1000, 65536,
	-1000, 103902, 85034, 1516, 910, -1000, 2259, 910, 992, 2683,
	-1000, 2413, -1000, 85034, 3383, 362, -172, -54, 61845, 3240,
	-1000, 2113, 593, 85034, 946, -1000, 3306, -1000, -1000, -1000,
	-1000, 3201, 85034, 3239, 2824, 1000, 62, 85034, 3346, -1000,
	-1000, 85034, 2823, 2135, 2206, 2330, 878, 70861, -1000, 1000,
	2068, -85, -1000, 1739, 31329, 3045, -175, -1000, -1000, -1000,
	1015, 59229, 51293, 43689, 3381, -178, -1000, -1000, -1000, -1000,
	192, -1000, -1000, -1000, 189, -1000, -1000, -1000, -1000, -1000,
	-1000, 91827, 91827, 69811, 69811, 69811, 974, 103902, 103902, 71901,
	-1000, 592, 103902, 103902, 591, -1000, 103902, 103902, 3380, 69811,
	-62, 589, -1000, 894, 892, 890, -1000, -1000, -1000, -1000,
	-1000, -1000, -157, 62, -1000, 2091, 85034, -1000, 18675, -1000,
	-1000, -1000, -1000, -1000, 994, -1000, -1000, 1979, 2156, 1979,
	1775, 1751, -1000, 2101, -1000, -1000, -1000, -1000, 2453, 3046,
	22428, 3181, 5030, 43689, 43689, 388, 5615, 939, 5030, 43689,
	43689, 61845, 11529, -180, 43689, 43689, -1000, 43689, 804, 114643,
	3344, 43689, 355, 353, -1000, -1000, -1000, 3310, -1000, -1000,
	-1000, 114643, 43689, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	352, -1000, 188, -1000, -1000, -1000, 109622, -1000, 43689, 349,
	3131, -1000, 347, 346, 8426, 242, 111431, 111190, 111008, 345,
	-1000, -1000, 342, 340, 114643, 2724, 114643, -1000, -1000, 913,
	913, 1375, 1375, 1375, 1375, 3288, 957, 580, 460, 909,
	909, 909, 1026, 689, 689, 909, 909, 909, 2681, 2395,
	587, 7214, -1000, -1000, 114643, 114643, 339, -1000, -1000, -1000,
	-224, 338, 5993, -1000, 2591, 3130, 114643, -1000, 51293, 2591,
	2591, -1000, -1000, 1980, 103902, 114643, 51293, -1000, 2803, -1000,
	17062, -1000, 22428, -1000, -1000, -1000, -1000, 3306, -1000, 56080,
	-1000, 582, -1000, 187, -1000, 3030, -1000, 889, -1000, -64,
	-64, -1000, -1000, 803, 3379, 824, 22428, 335, -1000, -1000,
	-1000, -64, -64, -64, -1000, 2998, 114643, 103902, 103902, 103902,
	2818, -1000, 1835, -1000, 1084, 110835, -181, -1000, 103902, 43689,
	103902, 51819, 103902, -1000, -1000, 1842, 2394, 1113, -1000, 3088,
	103902, -1000, 103902, -1000, -1000, 103902, 103902, 85034, 103902, 2805,
	-187, 114643, -69, -1000, 888, -1000, 1393, -1000, 18139, 103902,
	85034, 103902, 85034, 2019, 2798, -188, 22428, -1000, 3343, 3336,
	2817, 3094, 3329, 103902, -1000, 103902, 85034, 2997, -1000, -1000,
	-1000, -1000, 1558, 1145, 992, -70, 581, -1000, 887, -1000,
	-1000, 885, 992, -1000, 69811, 53950, 507, -1000, 2477, -1000,
	89721, 2112, 62, -1000, 3376, 92352, 579, -1000, 2087, -1000,
	771, 65001, 1997, 62, 85034, -1000, -1000, 507, 331, -71,
	-1000, 1075, 22428, 85034, 2813, 2335, 878, 70861, -1000, 1303,
	2421, -1000, -84, -1000, 626, 62, 2068, -1000, -85, 114643,
	-1000, 884, -1000, -1000, -1000, -189, -1000, -1000, 327, -1000,
	2996, 2987, -1000, 2610, 51819, 577, 568, 103902, 2976, -1000,
	-1000, -190, 2457, 2457, 69811, 53950, 69811, 993, -1000, 2324,
	-1000, -1000, -1000, -1000, -1000, 22428, 1604, -1000, 566, 565,
	-1000, -1000, -1000, -1000, 3046, 5030, 5030, 43689, 43689, 43689,
	5030, 11529, -196, -1000, 5030, 5030, -224, -1000, -1000, 113629,
	-1000, -1000, -1000, 114643, -1000, 17603, 1981, -1000, 110594, -1000,
	29673, -1000, -1000, 43689, 43689, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47553, 2680, 561, 61845, -1000, -1000, 325,
	989, 43689, 45345, 2352, 989, 989, -1000, -197, -1000, -1000,
	-1000, 3306, 187, -1000, -1000, 3373, 22428, -1000, 69811, 511,
	-1000, 3371, -1000, -1000, -1000, -1000, -1000, -1000, 103902, -1000,
	103902, -1000, 22428, 103902, 2652, 2181, -1000, -1000, 2360, 560,
	47553, 85034, 876, -1000, 3263, 2555, 1950, 51819, -1000, 3046,
	-1000, 110239, -1000, -198, -203, 2173, -1000, -1000, 2170, 43689,
	-1000, 61845, 547, 2164, 2164, -204, -205, -1000, -1000, 43689,
	1144, 103902, 30777, -1000, 3370, 3049, -1000, -1000, -1000, -1000,
	103902, 43689, 1134, -1000, -1000, -1000, 3328, 2164, 22428, -1000,
	2164, 2164, 3094, 1112, 103902, 85034, -1000, 2310, 2310, 69811,
	53950, -1000, -92, 992, 3237, 2469, 3369, -1000, -1000, -1000,
	-1000, 2359, -1000, -1000, 103902, 2356, 976, -1000, -212, -1000,
	883, 882, 71901, 969, 938, -1000, -1000, -1000, -1000, 507,
	3230, -1000, 3327, 535, 103902, 2133, 533, 22428, 3031, 878,
	70861, -1000, 2863, 1739, -1000, 2187, 103902, 3029, -1000, 2421,
	532, -1000, 974, 530, 529, 2936, 2936, -213, 51819, 51819,
	-214, 527, 974, -1000, -219, -1000, -1000, -1000, -1000, -110,
	-1000, 851, 842, -1000, -1000, 85034, 85034, 43689, 43689, -1000,
	5030, 5030, 5030, -1000, 305, -1000, -1000, 2068, 3129, -1000,
	-145, 110190, 110150, 5987, 47553, 61845, -221, -1000, -1000, 103902,
	114643, -154, -1000, 114643, 526, 523, 437, -1000, -1000, -1000,
	765, -1000, -1000, 3366, -1000, -1000, 1709, -1000, -1000, -1000,
	103902, 2198, -1000, 1077, 43689, 7214, 520, 43689, -1000, 3229,
	-1000, 2440, 2660, 2469, 518, -1000, -1000, -1000, -1000, 919,
	103902, 1074, 1814, -1000, -1000, 114643, 3094, 51819, -1000, -1000,
	517, 515, 114643, 514, 879, 2679, -1000, -1000, -1000, -1000,
	114643, 513, 3194, -1000, -1000, -1000, -1000, 2164, 85034, -1000,
	-1000, -1000, -222, -1000, -1000, 1843, 62, 1942, 2537, -1000,
	2112, 512, -1000, -1000, 2120, 2441, -1000, 92352, 30225, 30225,
	283, 3228, 938, -1000, 3298, -1000, 3227, 62, -1000, 51819,
	-1000, 85034, 51819, 2128, -1000, 2313, 70861, -1000, 2330, -1000,
	-1000, -227, 103902, 1739, -1000, -1000, 69811, 69811, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1074,
	-230, -235, -1000, 69811, -1000, -1000, 2324, -1000, 103902, -1000,
	103902, -1000, -1000, -238, -240, -1000, 1992, 43689, 29673, -1000,
	-1000, 5987, -243, -1000, -155, -1000, 3226, 45345, 3364, 3362,
	3361, -1000, -1000, -1000, -1000, 2809, 2581, 15235, 2287, 103902,
	14639, -1000, 2658, -1000, -1000, 1942, 103902, -1000, -1000, 2469,
	2567, 85034, 1076, -245, 1979, 1979, 43689, 29121, 2013, 43689,
	-1000, -1000, 3094, -1000, 2622, 3299, -1000, 969, -1000, 1991,
	103902, -1000, 3081, -1000, 2974, -1000, -1000, -1000, 2477, 62,
	-1000, -1000, 62, -1000, -246, 1075, -248, 85034, 878, -1000,
	2335, 1015, -1000, -1000, -253, -254, 1950, 1074, 970, -255,
	-1000, -256, -261, -1000, -1000, 243, 44793, 44793, 44793, -224,
	-233, -1000, 103902, 510, -1000, -1000, -1000, -1000, 2784, 990,
	-1000, 2122, 2005, 64, 1086, -1000, -1000, 2555, -262, -1000,
	987, 507, -1000, 43689, 1074, -267, -1000, 1048, -268, -1000,
	1047, -269, -1000, 2672, -1000, -274, 2164, 986, 3185, -1000,
	-1000, -1000, 2120, 85034, -275, -1000, -1000, 2266, -1000, 2469,
	976, -1000, 1074, 488, 1950, 485, 1402, 3031, 2840, 974,
	974, 2469, 1950, 1015, 484, 974, -1000, -1000, -1000, 2816,
	-1000, 48623, 2111, 1722, 112790, 2816, 2816, -1000, -1000, 103902,
	3164, -1000, 2127, 2123, 1478, -1000, -1000, -1000, -1000, -1000,
	-1000, 1015, -1000, 3155, 2287, 114643, 2469, -1000, 1979, 2534,
	-1000, 1979, 2633, -1000, 1988, -1000, -1000, -1000, 1656, 3287,
	-1000, 483, -1000, 103902, 1664, 1661, 3359, 1942, 2120, 1950,
	51819, 2469, 51819, -1000, -1000, 1297, -1000, -1000, 1942, 2469,
	-1000, -1000, -1000, 1671, 3258, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 875, -1000, 2954, -1000, 1098, 2037, 2037,
	-1000, 843, 2122, -1000, -1000, 481, -1000, 480, -1000, 2077,
	-1000, -1000, 103902, -1000, -1000, 3356, -1000, 969, -1000, 2469,
	-276, 1942, -282, -1000, 1482, 970, 1942, 1717, -1000, -1000,
	2059, 44241, 43689, -1000, 3275, -1000, -1000, 2368, -1000, 43689,
	2555, 43689, 43689, 57657, -284, -1000, 2120, 1942, 1074, 970,
	1950, 59229, 1015, 970, -1000, -1000, -1000, 114643, -1000, -1000,
	-1000, 114643, -1000, -290, -291, -236, 91827, 2131, -1000, 970,
	1950, 1015, 2469, -264, -1000, 1015, 1942, 1133, -299, -1000,
	-1000, -1000, 1015, 2469, -1000, 1942, -1000, -1000, -1000, 476,
	-1000, -1000, 1942, 970, 43689, 970, 1015, -301, 1015, -1000,
	1942, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4156, 4155, 4154, 4151, 4150, 4148, 4145, 4144, 4142,
	4141, 4140, 4138, 4137, 4131, 4126, 4125, 4123, 4121, 4117,
	4115, 4114, 4113, 4112, 4111, 4106, 4103, 4102, 4100, 4099,
	4093, 4091, 4089, 4086, 4082, 4081, 4080, 4079, 4071, 4069,
	4068, 4065, 4062, 4057, 4056, 4055, 4054, 4051, 4050, 4048,
	4046, 4045, 4043, 4042, 39, 4041, 4040, 4039, 4038, 4037,
	4032, 4031, 4030, 4028, 4026, 4025, 4024, 4023, 4016, 4015,
	4014, 4013, 4010, 4009, 42, 4007, 240, 4005, 4003, 4001,
	4000, 3997, 3994, 3992, 3990, 3986, 3980, 3978, 3975, 238,
	3974, 152, 3972, 3967, 3963, 3962, 3961, 236, 3959, 3951,
	3950, 3933, 248, 3927, 3926, 3925, 3922, 3921, 3919, 3918,
	3916, 3915, 3912, 76, 135, 3910, 3905, 440, 3903, 3899,
	3898, 3894, 3893, 3892, 3890, 3888, 3887, 3886, 219, 3885,
	235, 3884, 3883, 3880, 3879, 3878, 3877, 3875, 3874, 3872,
	3869, 3868, 3867, 3866, 3865, 3863, 3862, 3861, 3860, 3858,
	3856, 3854, 3851, 3849, 3844, 3842, 3836, 3828, 3827, 3826,
	3825, 3824, 3823, 3822, 243, 187, 3821, 3819, 234, 233,
	3817, 3816, 3815, 3813, 3812, 106, 4, 79, 3808, 3806,
	86, 66, 63, 89, 81, 84, 3805, 95, 3804, 104,
	43, 3802, 6, 2, 151, 226, 10944, 213, 3800, 3796,
	3795, 217, 170, 3791, 206, 3790, 3786, 3783, 3781, 69,
	51, 163, 154, 150, 143, 812, 3780, 3779, 83, 58,
	41, 32, 21, 3778, 3777, 3776, 3775, 3125, 108, 3774,
	232, 221, 142, 3771, 3770, 3768, 809, 3766, 3765, 50,
	3763, 92, 62, 113, 16, 101, 3762, 122, 29, 3761,
	147, 46, 3760, 132, 77, 61, 8298, 9378, 3759, 91,
	57, 102, 3276, 148, 144, 182, 88, 137, 175, 186,
	180, 158, 155, 3758, 222, 3756, 3223, 80, 141, 3752,
	3747, 3745, 65, 174, 85, 3744, 3743, 52, 12, 30,
	7, 161, 20, 103, 36, 14, 3742, 24, 3741, 3739,
	3735, 3734, 3733, 28, 157, 3726, 239, 3724, 59, 40,
	54, 3723, 94, 190, 3722, 209, 107, 3721, 3720, 225,
	179, 136, 3717, 73, 207, 3715, 3714, 3713, 3710, 3708,
	119, 1, 110, 3704, 3701, 121, 3699, 37, 211, 172,
	3698, 55, 3697, 3696, 145, 87, 114, 247, 128, 202,
	100, 197, 169, 201, 3693, 3692, 3691, 178, 3689, 3687,
	192, 123, 3684, 3682, 183, 250, 34, 67, 205, 56,
	168, 125, 3679, 173, 3678, 3675, 249, 160, 188, 8,
	15, 74, 105, 3673, 5, 203, 126, 177, 93, 3671,
	5867, 2300, 2032, 3670, 3666, 118, 99, 60, 109, 129,
	231, 53, 3662, 3661, 1765, 3660, 3659, 3658, 3656, 165,
	3654, 3653, 3651, 120, 127, 184, 3650, 78, 64, 47,
	10, 130, 285, 246, 98, 195, 153, 223, 3649, 3648,
	3646, 162, 3645, 44, 112, 3644, 176, 210, 3643, 3642,
	159, 3640, 116, 215, 45, 134, 3638, 194, 3637, 3633,
	3624, 3622, 3615, 3610, 3608, 164, 204, 3606, 3605, 3604,
	31, 171, 3602, 230, 131, 167, 75, 38, 3601, 82,
	2319, 3600, 124, 199, 133, 96, 3598, 3596, 1307, 48,
	0, 11896, 6617, 9204, 11566, 3595, 4149, 3594, 3593, 3591,
	191, 115, 3590, 3589, 3588, 90, 3587, 68, 3586, 3585,
	49, 3584, 17, 9, 11, 19, 22, 712, 427, 3582,
	3580, 146, 111, 138, 3579, 237, 198, 3578, 3577, 3573,
	3571, 70, 3569, 33, 3568, 26, 3567, 3566, 27, 13,
	23, 3564, 3563, 208, 3562, 189, 214, 3561, 149, 3560,
	3219, 117, 3559, 3558, 227, 71, 3557, 229, 3556, 3143,
	3555, 3554, 18, 3553, 3551, 212, 156, 185, 3550, 3549,
	140, 3548, 3546, 3545, 224, 3544, 3543, 25, 3542, 3,
	3541, 3540, 193, 2960, 3539, 3538, 35, 3537, 166,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 544, 544, 21, 35,
	22, 36, 15, 545, 545, 545, 545, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	543, 543, 214, 214, 213, 208, 208, 546, 546, 215,
	215, 215, 217, 217, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 444, 444, 444, 476, 476, 475, 475,
	475, 559, 559, 560, 560, 560, 560, 560, 116, 116,
	343, 343, 343, 43, 43, 43, 43, 43, 538, 538,
	180, 180, 180, 182, 182, 181, 181, 181, 181, 65,
	65, 551, 551, 552, 552, 550, 553, 553, 553, 179,
	179, 179, 112, 112, 112, 112, 113, 113, 114, 114,
	183, 183, 183, 185, 185, 184, 184, 184, 184, 184,
	184, 184, 184, 189, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 93, 93, 478, 478, 479, 479, 174,
	174, 175, 175, 175, 175, 176, 176, 177, 177, 177,
	57, 186, 186, 188, 188, 187, 187, 45, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 47,
	47, 47, 47, 47, 47, 48, 48, 48, 48, 48,
	48, 55, 55, 55, 55, 165, 165, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 62, 62,
	62, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	562, 562, 563, 563, 564, 564, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 71, 71, 305, 305, 275, 275, 72,
	72, 72, 73, 73, 74, 74, 59, 59, 536, 536,
	320, 320, 435, 435, 76, 76, 342, 342, 77, 77,
	77, 77, 77, 77, 78, 78, 78, 78, 78, 78,
	78, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 86, 86, 86, 86, 86,
	87, 87, 87, 84, 84, 84, 81, 81, 81, 80,
	80, 80, 85, 85, 85, 535, 265, 265, 83, 83,
	83, 268, 268, 82, 82, 82, 321, 321, 88, 88,
	88, 88, 276, 89, 89, 89, 89, 89, 89, 89,
	89, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 437, 437, 90, 90, 90, 402,
	402, 94, 94, 94, 358, 358, 95, 95, 95, 95,
	95, 96, 96, 96, 96, 96, 96, 115, 115, 115,
	115, 115, 115, 540, 540, 313, 313, 230, 230, 230,
	230, 105, 105, 105, 105, 106, 106, 106, 107, 107,
	170, 170, 122, 122, 122, 122, 122, 121, 121, 121,
	121, 121, 121, 49, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 54, 54, 54, 54, 54, 124,
	124, 556, 556, 126, 123, 123, 123, 125, 125, 125,
	125, 127, 128, 128, 128, 128, 128, 128, 128, 128,
	129, 129, 469, 469, 329, 329, 467, 467, 487, 487,
	468, 468, 280, 280, 280, 280, 280, 281, 281, 281,
	477, 477, 477, 477, 477, 477, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	171, 171, 172, 173, 173, 173, 173, 173, 150, 150,
	150, 164, 164, 164, 164, 164, 164, 164, 153, 153,
	153, 140, 140, 131, 131, 131, 131, 131, 131, 131,
	135, 135, 135, 135, 135, 135, 135, 135, 132, 132,
	142, 142, 142, 142, 142, 136, 136, 137, 137, 160,
	160, 139, 139, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 133, 133, 133, 133, 144, 144, 144, 144,
	365, 365, 365, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 163, 163, 163, 163, 163, 163,
	554, 554, 555, 555, 157, 157, 157, 157, 157, 157,
	416, 416, 151, 151, 151, 151, 156, 156, 156, 156,
	159, 159, 159, 159, 348, 348, 148, 148, 148, 149,
	149, 149, 154, 154, 155, 152, 152, 158, 158, 158,
	158, 134, 134, 134, 566, 566, 566, 161, 161, 147,
	147, 162, 162, 162, 162, 162, 162, 162, 162, 146,
	146, 146, 145, 145, 145, 145, 138, 537, 537, 533,
	533, 533, 533, 533, 533, 533, 533, 534, 534, 534,
	534, 539, 539, 99, 99, 99, 99, 99, 108, 108,
	108, 108, 108, 100, 100, 100, 100, 100, 102, 102,
	101, 101, 101, 101, 66, 66, 66, 66, 66, 14,
	14, 14, 67, 67, 192, 192, 192, 294, 294, 193,
	193, 288, 288, 288, 288, 190, 190, 191, 191, 68,
	68, 567, 567, 567, 547, 547, 547, 548, 548, 548,
	548, 548, 548, 282, 282, 283, 283, 382, 382, 382,
	382, 382, 286, 286, 286, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 289, 289, 216, 216, 216, 292,
	293, 293, 290, 290, 291, 291, 291, 296, 296, 295,
	298, 298, 297, 381, 496, 496, 498, 498, 498, 498,
	498, 498, 498, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 568, 568, 494, 494, 494, 495,
	490, 490, 491, 491, 491, 491, 491, 284, 284, 285,
	285, 285, 285, 492, 493, 311, 311, 420, 497, 497,
	499, 499, 501, 569, 569, 569, 569, 569, 569, 570,
	570, 570, 380, 380, 379, 379, 303, 303, 502, 502,
	502, 502, 503, 503, 503, 503, 503, 506, 505, 504,
	504, 504, 504, 504, 70, 70, 70, 345, 345, 344,
	344, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 167, 167, 233, 233,
	64, 64, 64, 12, 12, 12, 549, 549, 549, 69,
	69, 69, 69, 69, 69, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 542, 542, 541, 541, 234,
	234, 572, 572, 75, 75, 75, 75, 75, 75, 75,
	438, 438, 439, 439, 63, 63, 63, 63, 63, 366,
	366, 364, 364, 363, 363, 310, 310, 418, 418, 418,
	419, 238, 238, 239, 239, 209, 209, 209, 27, 26,
	19, 19, 24, 24, 39, 39, 39, 39, 42, 42,
	38, 38, 38, 38, 40, 40, 34, 34, 557, 557,
	558, 558, 104, 104, 109, 109, 109, 109, 109, 110,
	110, 110, 110, 111, 111, 111, 111, 120, 120, 166,
	166, 166, 166, 166, 166, 166, 44, 44, 44, 44,
	56, 56, 56, 56, 118, 574, 574, 574, 119, 119,
	119, 573, 573, 231, 231, 376, 376, 377, 377, 575,
	575, 378, 378, 378, 378, 378, 224, 223, 225, 225,
	226, 226, 61, 61, 61, 218, 218, 219, 219, 220,
	220, 221, 221, 222, 222, 576, 576, 97, 97, 97,
	169, 169, 274, 274, 274, 373, 373, 373, 304, 304,
	245, 245, 375, 375, 375, 375, 341, 341, 341, 168,
	168, 318, 318, 331, 331, 332, 332, 432, 432, 333,
	103, 103, 117, 117, 196, 196, 194, 194, 194, 194,
	194, 194, 194, 194, 201, 201, 202, 202, 203, 203,
	204, 205, 205, 205, 205, 322, 322, 206, 206, 206,
	195, 195, 195, 197, 197, 197, 197, 197, 197, 197,
	200, 200, 200, 200, 207, 207, 207, 199, 199, 513,
	513, 513, 515, 515, 517, 517, 516, 516, 512, 512,
	514, 514, 571, 571, 347, 347, 347, 301, 302, 299,
	299, 300, 300, 308, 308, 306, 307, 307, 309, 309,
	417, 417, 417, 210, 210, 210, 338, 338, 338, 338,
	339, 339, 369, 369, 367, 367, 367, 367, 368, 368,
	370, 370, 370, 371, 371, 372, 372, 335, 335, 336,
	336, 337, 337, 337, 337, 398, 398, 198, 198, 198,
	315, 315, 315, 316, 316, 388, 388, 388, 388, 388,
	388, 389, 389, 387, 387, 387, 387, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 422, 423, 423, 317,
	317, 424, 374, 374, 531, 531, 531, 532, 532, 415,
	415, 425, 425, 425, 425, 425, 425, 413, 413, 414,
	414, 433, 434, 434, 351, 351, 351, 351, 349, 349,
	352, 352, 352, 352, 350, 350, 426, 426, 426, 426,
	340, 340, 427, 427, 427, 427, 428, 429, 429, 430,
	430, 383, 384, 384, 440, 440, 440, 440, 442, 314,
	314, 314, 314, 314, 489, 488, 488, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 457, 457,
	457, 457, 457, 457, 457, 443, 443, 443, 443, 443,
	447, 447, 447, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 448, 448, 453, 453, 454, 454,
	454, 449, 450, 455, 455, 455, 455, 577, 577, 459,
	459, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	445, 445, 445, 452, 452, 452, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 359,
	359, 361, 361, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	392, 392, 392, 392, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 507,
	507, 507, 507, 507, 507, 507, 507, 394, 394, 510,
	510, 511, 511, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 518, 518, 519, 519, 521, 521, 522, 522,
	523, 524, 524, 524, 525, 526, 526, 520, 520, 527,
	527, 527, 527, 528, 528, 529, 529, 529, 529, 529,
	530, 530, 530, 530, 530, 404, 404, 405, 405, 411,
	411, 411, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 235, 235,
	235, 235, 235, 327, 327, 325, 325, 325, 328, 328,
	326, 326, 324, 324, 323, 323, 401, 401, 399, 399,
	403, 403, 353, 353, 458, 458, 458, 458, 458, 458,
	458, 458, 354, 354, 354, 362, 355, 355, 356, 356,
	356, 356, 356, 395, 396, 357, 357, 357, 397, 397,
	406, 410, 410, 409, 408, 408, 407, 407, 385, 385,
	386, 386, 334, 334, 578, 578, 330, 330, 431, 431,
	431, 431, 278, 278, 319, 319, 277, 277, 269, 269,
	270, 270, 270, 270, 312, 312, 412, 412, 460, 460,
	461, 461, 462, 462, 463, 463, 464, 465, 466, 400,
	400, 255, 254, 242, 243, 253, 252, 251, 241, 244,
	248, 249, 250, 246, 247, 261, 260, 259, 266, 267,
	257, 258, 436, 240, 271, 271, 272, 272, 272, 273,
	273, 273, 273, 236, 236, 237, 237, 262, 262, 263,
	264, 264, 256, 256, 256, 227, 227, 227, 228, 228,
	229, 229, 474, 474, 471, 471, 471, 472, 472, 472,
	473, 473, 473, 473, 470, 470, 470, 470, 470, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 481,
	481, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 483,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	486, 486,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 3, 3, 0, 4,
	6, 0, 5, 6, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 2, 0, 1, 2, 3, 1, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 6, 3,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 1, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 7, 7, 2, 6, 4, 7,
	7, 7, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 2, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	1, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 1, 3, 11, 12, 8, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 9, 12, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 566, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 371, 409, 420, 385, 401, 390, -125, -126,
	437, -44, -56, -119, -118, 72, 126, 396, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -561, 101, -514, -79, -82, -111, -565, 138, 157,
	212, -100, -101, 354, -106, -107, 403, -109, -110, 405,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 442, -155, 498, 48, 456, 81, 142, 413, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -513, -80,
	-81, -84, -86, -87, -83, -85, 402, -197, -195, 563,
	513, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 532,
	541, -200, -198, -199, -207, 429, 521, 472, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, -276,
	2, -257, -262, -263, -264, -256, -227, -483, -486, 4,
	-480, -484, 163, 221, 318, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 480, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	224, 228, 225, 234, 235, 239, 240, 241, 243, 247,
	248, 249, 250, 251, 252, 254, 256, 255, 258, 261,
	262, 265, 269, 270, 273, 274, 275, 276, 278, 279,
	282, 280, 283, 284, 281, 285, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 298, 286, 301,
	299, 303, 304, 305, 316, 314, 309, 310, 306, 311,
	307, 308, 312, 313, 320, 321, 324, 209, 326, 327,
	330, 348, 334, 335, 336, 339, 340, 343, 346, 347,
	349, 350, 351, 352, 353, 354, 355, 356, 358, 359,
	361, 362, 363, 365, 366, 367, 369, 371, 372, 374,
	375, 377, 378, 379, 380, 381, 382, 383, 385, 387,
	386, 388, 390, 396, 401, 398, 399, 400, 402, 403,
	404, 405, 407, 408, 409, 411, 412, 413, 414, 416,
	418, 419, 422, 423, 439, 440, 458, 420, 421, 424,
	425, 426, 427, 428, 432, 430, 431, 433, 434, 435,
	437, 438, 441, 442, 444, 445, 446, 447, 448, 449,
	452, 454, 455, 456, 457, 459, 462, 463, 464, 465,
	460, 471, 468, 469, 473, 474, 475, 476, 477, 478,
	479, 481, 483, 491, 492, 493, 495, 498, 499, 500,
	501, 489, 503, 504, 507, 508, 509, 512, 510, 511,
	513, 515, 518, 519, 520, 526, 525, 527, 533, 534,
	536, 537, 538, 36, 49, 50, 53, 55, 57, 68,
	69, 70, 74, 121, 122, 149, 160, 161, 172, 184,
	185, 196, 198, 206, 207, 208, 229, 230, 232, 237,
	259, 323, 325, 341, 345, 360, 364, 368, 370, 384,
	415, 450, 461, 466, 484, 485, 486, 487, 494, 496,
	521, 522, 523, 528, 535, -276, 2, -257, 332, -250,
	2, -227, -227, 371, 28, 2, 28, 359, 431, 475,
	477, 2, -540, -313, 2, 28, -230, -227, 101, 194,
	429, -250, 2, -540, -313, 25, 2, -227, 2, 346,
	-231, 2, 420, -227, 279, 2, 566, 93, 270, 73,
	415, 434, -128, 492, -127, 484, 424, -129, -469, 2,
	301, -227, 566, 566, 566, 28, -240, -227, 472, 221,
	424, 117, 469, 566, 2, 472, 351, 525, 430, 117,
	381, 221, 500, 424, -549, 279, 411, 197, 514, -538,
	2, -533, 4, -484, -480, -270, -269, 472, 478, 117,
	-264, -256, 556, -263, 566, 566, 566, 2, 240, 241,
	380, 379, 434, 435, 566, 566, 566, 566, 422, 2,
	159, 22, 27, 65, 92, 97, 123, 179, 182, 337,
	-562, 348, 378, 433, 471, 474, 481, 495, -548, 457,
	67, 424, -547, -549, 279, 500, 136, -363, 117, 270,
	193, 508, 477, 475, 506, 129, 228, 511, 510, 566,
	566, 22, 27, 65, 76, 97, 136, 159, 179, 182,
	-564, 348, 378, 418, 433, 471, 481, 495, 2, 525,
	279, 430, 472, 221, 117, 500, 424, -549, 422, 423,
	376, -91, 2, 563, 32, 31, 437, -189, 472, 233,
	2, -227, 566, 566, 2, 240, 241, 422, 423, 566,
	566, 180, -533, 2, 566, 566, 2, 240, 241, 422,
	423, 233, 2, 67, 426, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 2, -164, 434,
	457, 203, 46, 45, 73, 28, 377, 78, 352, 118,
	144, 501, 195, 221, 222, 248, 92, 93, -365, 44,
	241, 240, 423, -554, 422, -416, 473, 425, 431, 468,
	252, 420, 492, 101, 515, 412, 538, 381, 382, 153,
	4, 117, 301, 436, 484, 270, 419, 355, 83, 566,
	-571, 2, 472, -573, 2, 492, 492, 2, -573, 2,
	-573, 2, -573, 2, -574, 492, 535, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, -195, -197, -196, 566, 566, 566,
	566, 566, 566, 566, -164, 434, 2, 73, 28, -306,
	-308, 505, 231, 146, 338, -194, -196, 2, -513, -467,
	2, -390, -487, -392, 554, 555, 547, 470, 66, 317,
	539, -404, 123, 506, 332, -486, -393, -406, 149, 415,
	-328, 8, 9, 5, 6, 7, -236, -394, -400, 497,
	162, 322, -273, 567, 10, 563, -510, -196, -405, 37,
	198, 64, -471, -272, -237, -443, 232, -271, -256, -507,
	-508, 4, -480, -481, -472, -446, -454, -450, -451, -457,
	-227, -483, 76, 109, 110, 108, 113, 112, 272, 271,
	114, 111, 436, 514, 65, 36, 206, 207, 237, 323,
	208, 74, -509, 137, -482, 229, 230, 450, 50, 384,
	172, 122, 121, 325, 55, 53, 522, -455, 119, 484,
	485, 486, 487, 184, 185, 57, 160, 161, 345, 368,
	466, 494, 496, 196, 259, 43, 105, 181, 227, 210,
	236, 238, 242, 260, 263, 302, 315, 319, 342, 344,
	410, 443, -577, 523, 461, 68, 69, -515, 386, -516,
	-250, -515, 566, 566, 568, 566, -299, -301, -302, 2,
	28, 134, 563, 2, -421, 2, -422, -426, -196, 253,
	-425, 563, -423, 561, -257, 333, -511, 416, -507, -508,
	-236, -256, -272, 4, -480, -482, 565, -303, 563, 117,
	472, 77, 221, -358, 563, -227, 28, 332, 488, 568,
	-300, 375, -402, 563, 332, 180, 335, 59, -227, 525,
	2, 2, 439, 2, 563, -128, 70, 492, 43, 434,
	-377, 2, -378, -223, -224, -225, -433, -226, 239, 374,
	383, 542, 127, 317, 538, -467, -556, 180, 546, 488,
	-467, -329, 565, 2, 2, 2, 2, 2, 2, -426,
	206, -257, 2, -254, -470, 4, -480, -484, -481, -485,
	-483, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	56, 64, 65, 71, 75, 77, 86, 92, 101, 108,
	109, 111, 110, 112, 113, 114, 123, 127, 130, 134,
	135, 139, 142, 146, 162, 164, 177, 179, 180, 194,
	197, 200, 213, 226, 231, 233, 253, 257, 264, 271,
	272, 317, 322, 328, 332, 333, 337, 338, 357, 373,
	389, 406, 429, 436, 453, 467, 472, 482, 488, 490,
	497, 505, 506, 514, 516, 524, 529, 530, 531, 532,
	-486, 76, 2, -426, 206, 2, -259, 206, -426, -262,
	2, -241, -227, 2, -253, -470, 2, -277, 206, -257,
	-258, -262, -260, 2, -262, -266, 2, -227, -478, 206,
	2, -474, 10, -473, 5, 4, -480, -484, -481, 525,
	233, 488, 568, -319, -269, -270, -466, 8, -312, -227,
	565, -390, 2, -117, -102, 2, 177, -390, 206, 2,
	-117, 206, 2, -390, 206, 2, -117, 206, 2, -551,
	2, -478, 206, -227, 2, 283, 2, 2, 495, 2,
	97, 472, 116, 2, 400, -563, 418, 499, 2, 2,
	2, 2, 2, 2, 2, 472, -246, 2, -227, 177,
	-266, 206, -267, 2, -227, -228, 430, -572, 386, -478,
	206, 2, 525, -260, 2, -260, 221, 235, -241, 206,
	2, 477, 475, 477, 475, 180, 2, 233, 2, 233,
	2, -427, 2, -428, -422, -429, 561, 333, 283, 2,
	2, 2, 2, 2, 206, -227, 472, 116, 2, 251,
	2, 2, 2, 2, 2, 2, 2, -321, 206, 2,
	-257, 525, -321, 206, 2, -321, 206, 2, -364, 2,
	86, -241, 206, 2, -265, 206, 2, -260, -268, 206,
	2, -266, -479, 206, 2, -478, -390, 2, -117, 2,
	-437, 2, -436, -473, 521, -91, 563, -91, 563, 434,
	563, -478, -257, -257, -390, 2, -117, -102, 2, -390,
	2, -117, 2, -114, -113, -478, 563, 180, -390, 2,
	-117, -102, 2, -390, 2, -117, 2, -189, 177, 2,
	117, 472, -164, 2, 177, 516, 2, 8, 2, 213,
	-478, 425, 382, 169, 2, 439, 2, 440, 73, -365,
	538, 73, 180, 2, 180, 2, -348, 2, 532, 2,
	2, -537, 2, 332, 180, 2, 180, 2, 180, 2,
	180, 2, 180, 2, 379, 435, 493, 241, 2, -117,
	529, -102, -390, 529, 2, -555, 177, 423, -390, 2,
	491, 250, 154, 180, -348, 2, 180, 2, 180, 2,
	5, 2, 380, 458, 2, 239, 374, 458, 2, -257,
	-566, 2, 472, 525, 430, 2, 2, 87, 88, 180,
	2, 180, 2, 180, 538, 2, -340, -426, -376, -377,
	-376, 488, -306, -308, -164, 439, 2, -201, -338, -203,
	177, -367, -368, -204, 264, 164, 328, -205, -347, 28,
	134, -347, -347, 59, 564, 564, 11, 12, 75, 41,
	554, 555, 556, 557, 175, 558, 559, 552, 553, 551,
	544, 545, 549, 245, 246, 94, 548, 546, 85, 277,
	417, 165, 166, 167, 168, 397, 219, 34, 220, 14,
	15, 16, 33, 337, 263, 539, 210, 443, 547, 17,
	18, 19, 236, 238, 319, 49, 213, -235, -279, -390,
	-390, -390, -390, -390, -390, -390, 344, 563, -334, -385,
	561, -196, 563, 563, 563, -466, -196, -390, -404, 564,
	-326, 563, -196, -404, -399, 563, 415, 561, 563, -407,
	-390, 5, 5, 5, 563, 565, -518, 533, 177, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 370, -448, 563, -447, 563, -447,
	-447, 526, -445, 563, 541, 534, 563, -445, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 526, 568, -515, -303, 563, -330, -431, -390, 556,
	-330, -330, 332, -323, -390, 105, -351, 242, 302, 181,
	260, 410, 227, -387, 567, -387, -415, 541, -196, -423,
	-256, -196, -425, 563, -421, -415, -92, -466, -76, -89,
	-97, -117, -130, -168, -169, 556, -257, 563, 180, 563,
	565, -470, 180, -312, -241, -257, -271, -272, -277, 133,
	-323, -533, 500, 424, -312, -230, 38, -401, -440, -441,
	-489, 567, -488, -443, -453, -449, -452, 360, 364, -472,
	53, 522, -455, 232, 4, -480, -482, 229, 230, 450,
	50, 384, 172, 122, 121, 325, 55, 484, 485, 486,
	487, 184, 185, 57, 523, 461, 68, 69, -533, 500,
	424, -312, 177, -476, 2, -475, -474, 114, 436, -364,
	-469, -323, 38, -377, 2, 123, -474, -575, 568, 262,
	-281, 276, 316, 202, 333, 536, 326, 127, -477, 5,
	4, -400, -412, 123, 270, 232, -460, -462, 8, -461,
	9, -463, 554, 555, -468, -467, 107, 565, -470, -212,
	398, 437, -211, 24, 29, 138, 223, 305, 519, 155,
	-291, 224, 347, 351, 149, 454, 509, -544, -545, 421,
	479, 480, 89, 326, 437, 398, 149, -344, -346, 38,
	115, 305, 346, 60, 216, 281, 282, 456, 528, 149,
	437, 398, 347, -545, 98, 398, -545, -214, 454, 509,
	-544, -545, 421, 398, -213, -291, 149, 567, 24, 398,
	437, 347, -559, -560, 138, 29, 398, 347, -541, -512,
	532, 149, -426, 206, -552, -113, 254, 5, 10, -113,
	-319, 568, 568, -470, 556, 423, 422, 149, 149, 149,
	149, 177, 317, 2, 2, 2, 2, 2, 182, -547,
	-564, 2, 2, -257, 206, -305, 332, -536, -320, 472,
	-257, 317, 43, -259, 206, 2, -262, 525, -541, 317,
	-261, 206, -257, 38, 563, 2, -364, 2, 221, -512,
	317, -427, -274, -257, -422, -274, 437, -250, 38, -387,
	-257, 2, 149, 2, 2, 2, -227, -215, 568, 63,
	404, 149, -321, 206, -215, 149, -215, 149, -278, 206,
	-277, -215, 149, -215, 568, 149, -215, 568, 149, 568,
	149, 564, 568, -437, -437, -478, -177, 532, 180, 101,
	563, 563, -189, -434, 568, -433, -479, -114, -478, -478,
	-536, -241, 2, -257, 2, 472, 243, -478, -177, 213,
	-478, -478, -478, -469, 28, 440, 2, 379, 435, 493,
	88, 440, 2, -257, 472, 117, 221, 79, -539, 177,
	-534, 411, 424, 500, -533, -257, 117, -257, 117, -257,
	117, -257, -257, 2, 2, 2, 2, 2, 84, 84,
	2, 45, -555, 177, 2, 491, 2, 491, 2, -227,
	-227, -227, 457, 262, -257, 177, 472, 221, 472, 221,
	117, 472, -215, 568, -231, -201, -338, -469, -339, -338,
	-202, -201, -204, 177, 383, 510, 305, 441, 247, -368,
	-367, 28, -390, -372, 171, 304, -390, -370, -392, 554,
	555, -461, -463, -322, 326, -195, -195, -195, -309, -417,
	-390, 373, 221, -442, -440, -440, -255, -470, 484, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, 263, 210, 443, 49, 213, -390,
	488, -390, -390, -390, -390, 299, 317, 322, 497, 162,
	507, 134, 326, -578, 467, 40, -397, -196, -327, 563,
	-411, 35, 453, 28, -404, 563, 2, -385, -390, -386,
	-324, -323, -323, 564, 524, 28, 134, 556, 2, 564,
	568, 38, 564, -390, -324, -403, -399, -323, -410, -409,
	529, -359, -360, 537, 286, 120, 204, 284, -361, 428,
	-464, 8, -470, 556, -519, 170, 197, 563, 564, 2,
	564, 2, 564, -390, 2, 564, -390, 2, 564, -390,
	2, 564, -390, 2, 564, 2, -390, -390, -390, -390,
	-390, -390, -390, -323, 8, -464, -464, 484, 484, -464,
	-464, -464, -456, 360, 361, 362, 363, 265, 266, 267,
	268, 364, 365, 366, 367, 291, 292, 293, 294, 287,
	288, 289, 290, 295, 296, 297, 298, 189, 190, 191,
	192, 185, 186, 187, 188, -456, -353, 2, -458, -323,
	4, 537, 286, 120, 204, 284, 428, 5, -353, 2,
	-354, 2, -390, -323, -355, -391, -392, 554, 555, 547,
	-404, -356, 2, -390, -324, -390, 56, 257, 490, -357,
	-390, 180, -323, -323, 2, -323, 2, -516, 38, -323,
	-315, 568, 180, 38, 4, -315, -315, 563, 564, 568,
	-352, 201, 280, 275, -352, -421, -351, 242, -349, 342,
	-349, -349, -415, -242, 561, 569, -470, -415, -414, -413,
	38, -250, 339, -415, -415, 565, 564, -414, 562, -531,
	563, 566, 566, 566, 566, 566, -257, 563, -323, -470,
	565, 459, 564, 236, 236, 236, 236, 416, 564, 488,
	-535, -265, -268, 532, -91, 334, 564, 568, -314, 37,
	561, 565, -464, 2, 2, -459, 526, 563, 563, -360,
	563, 180, -535, -268, -313, 568, 488, -261, -556, 564,
	492, -378, -280, 383, 452, 399, 432, 469, 8, 9,
	8, 9, 568, -470, 568, -557, 92, 488, 77, 424,
	-381, 206, 77, -490, -244, 92, -491, -227, 71, 506,
	373, 179, 147, -557, 92, 373, -557, 92, 2, 223,
	92, 437, 457, 488, 59, -426, 41, 41, 28, -117,
	258, 180, 538, 472, 221, 424, 488, -426, -346, -440,
	115, 281, 282, 59, -465, -460, 554, 555, -465, 59,
	-465, -465, -465, 532, -259, -426, 424, 488, 488, 488,
	488, 568, 41, 41, 28, -117, 258, 180, 488, -277,
	-242, 520, 42, 520, 488, 42, 424, 488, 568, 42,
	42, 488, 488, -542, -232, 104, 311, 274, 312, 96,
	308, 95, 307, 102, 309, 103, 310, 527, 320, 62,
	306, 285, 313, -233, -234, 353, 518, -478, 437, 398,
	149, 213, -434, 213, -434, -269, -227, 565, -117, -390,
	-390, -117, -390, -117, 45, 149, 2, -572, 251, 563,
	-284, 317, 180, -312, -435, 233, 568, -320, 149, -475,
	-345, -344, 317, -261, 206, 2, 149, -303, 317, 143,
	563, 381, 2, -243, 206, -228, -227, -364, -218, 476,
	149, -342, 516, -373, -117, 563, 123, 38, -373, -331,
	-332, -432, -333, -244, 563, -250, -387, -227, 2, -257,
	-321, -215, 149, -321, -321, -215, 568, 149, -241, -260,
	-265, -266, -268, -478, -479, -91, -436, 564, 564, 564,
	-176, 336, -175, -227, 5, -189, 516, -283, -382, -381,
	-494, -495, -490, 263, 221, 506, 235, 163, -304, -245,
	-244, 116, -183, 532, -113, 564, -434, 213, -177, -177,
	-434, -434, -257, 177, -478, -177, -177, -177, 2, 2,
	2, -348, -257, -241, -277, -257, -312, -312, -312, -265,
	-348, -241, -348, -241, -348, -241, -117, -390, 2, 434,
	177, 177, 565, -348, 381, 117, 472, 351, 221, -257,
	-277, -257, -277, -241, -257, -426, -339, -202, 333, 247,
	441, -370, -371, -392, 415, 416, -371, 415, 416, 8,
	9, 8, 9, -206, 445, 321, -321, 568, -209, 39,
	130, 247, -257, 538, 145, -390, -390, 488, -578, 467,
	-397, 145, -390, 299, 322, 497, 162, 507, 134, 326,
	180, 563, -391, -391, 564, -325, -390, -390, 562, 571,
	564, -308, 568, -306, -390, -323, -323, 564, 565, -323,
	-312, 562, 562, 568, 564, -408, -409, 139, -390, 488,
	488, 488, 488, 563, 564, 565, -524, 343, 563, 563,
	-390, 564, 564, 564, 564, 38, 568, 568, 568, 564,
	568, 568, 568, 564, 564, 564, 568, 564, 538, 538,
	564, 564, 564, 564, 568, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 564,
	568, 564, 180, 564, 564, -362, 357, 564, 11, 12,
	554, 555, 556, 557, 175, 558, 559, 552, 553, 551,
	544, 545, 546, 85, 277, 417, 14, 15, 16, 236,
	213, -391, -391, -391, 564, -395, -396, 180, 177, 38,
	-357, -357, -357, 564, 180, -323, 564, 564, 563, -517,
	279, 317, 564, -384, -383, 530, -431, -316, 2, -421,
	-252, -470, -384, -384, -323, -390, 242, 242, -350, 516,
	332, -352, -421, -414, -466, -389, -388, 178, 39, 130,
	314, 209, -414, -250, -303, -414, -414, -470, -415, -415,
	-413, 564, -532, -466, 564, -317, -424, -511, -308, 565,
	-470, -186, -512, -165, 5, 322, -165, -165, -165, -312,
	488, 488, 25, 358, -440, 561, 562, 8, -470, 563,
	-464, -464, -464, -312, 180, 180, 180, -475, -475, -343,
	532, -467, -377, 504, 82, 383, 484, -467, -211, 398,
	-244, -244, -257, -266, 317, -381, 206, -217, 317, -440,
	-251, -227, 563, 563, 247, 247, 516, -244, -251, 247,
	206, -244, 206, -251, 2, -251, -543, 383, 327, -390,
	-475, 269, 381, 318, -212, 398, 437, -117, -117, -117,
	563, -556, 516, 133, -257, -277, -257, -266, -261, 437,
	398, 315, -271, -465, -465, -344, 437, 398, -266, -259,
	-475, 424, -241, -213, -117, -117, -117, 563, -242, -214,
	398, 5, 206, -244, 5, -227, -244, -266, -475, -560,
	24, -244, 206, -244, -266, -475, -232, -478, 322, 512,
	-541, 424, 488, -426, -113, -180, 532, -113, -174, 217,
	556, -538, -227, 525, -227, -282, -285, -283, -244, -192,
	-193, 534, 532, 149, -275, -257, 561, -177, -478, -257,
	-266, -267, 149, -303, 317, -478, 38, 149, 563, 2,
	2, 332, 317, -243, 206, -219, 140, -576, 546, -241,
	-384, -316, -341, -375, 406, 332, -304, 521, -250, -341,
	-318, 568, 180, 546, 565, -304, -430, 556, 2, -215,
	-321, -215, -215, -277, -278, -215, -215, -215, -91, -91,
	-177, 568, 563, 546, 546, 563, -478, -478, 564, 568,
	-257, -243, 221, 221, -249, -228, 564, 568, 565, 563,
	-185, 336, -184, 141, 249, 234, 446, 447, 448, 449,
	132, -183, -114, 180, -52, 532, 472, -177, 567, -348,
	-348, -348, 434, 434, -227, -253, -241, -257, -254, -277,
	177, 177, 510, -371, 333, 273, -417, -210, 540, -257,
	567, -390, -390, 145, 145, -390, -391, -391, -390, 145,
	180, 563, -390, -401, 33, 33, 564, 568, -386, -390,
	564, 524, -308, -308, 564, 556, -470, 567, 564, -399,
	142, -390, 482, 286, 204, 284, -361, 284, -361, -361,
	-464, 5, -470, 556, -525, -247, 563, -227, 530, -307,
	338, 564, -442, -440, -390, -390, -390, -390, -390, -464,
	-445, -445, -460, -460, -390, -395, -390, -442, -440, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, 134, 317,
	326, -391, -396, -395, -390, -390, -440, 564, 564, 564,
	-323, -91, 563, 279, -335, 197, -390, -434, 568, -335,
	-335, 564, -421, -421, 563, -390, 242, 562, 568, 570,
	546, -303, 565, -413, -414, 562, 564, 568, 564, 568,
	-374, 38, 564, -470, -384, -188, -187, 131, 52, -312,
	-312, 335, 5, 8, 561, 562, 565, -464, 564, 564,
	564, -312, -312, -312, 116, 305, -390, 488, 488, 149,
	317, 518, -496, -491, 147, -390, -310, -418, -511, 563,
	-227, 563, 563, 2, -208, 138, 437, -558, 2, 516,
	149, -215, 149, -215, 536, 563, 563, 488, 424, 532,
	-323, -390, -178, 123, -469, -545, 567, -545, 567, 424,
	488, 424, 488, 532, 532, -323, 488, -444, 47, 26,
	317, -260, 488, 488, -215, 149, 500, 437, -478, 322,
	-266, -261, 437, 398, -434, -182, 336, -181, 141, 408,
	132, 249, -434, -180, 180, 233, -261, 2, 564, 564,
	568, -497, 38, 330, 330, 563, -257, -72, 532, -433,
	-466, 43, -259, 38, 149, -541, -117, -261, -438, -439,
	5, -257, 149, 332, 317, -220, 256, -576, -474, -512,
	-308, -341, -330, 318, 90, 564, -384, -332, -316, -390,
	2, 564, -215, -215, -175, -176, -478, -478, -478, -177,
	-189, -189, -382, -286, 563, -243, -228, 563, -189, -245,
	2, -479, 568, 563, 546, 546, 546, -434, -117, 336,
	-257, 556, -348, -293, -292, 351, 326, -293, 415, 415,
	333, 171, 252, -209, -242, -390, -390, 145, 33, 33,
	-390, -390, -401, 564, -390, -390, -323, 562, 5, -390,
	564, 564, 8, -390, 564, 565, -526, -227, -390, 564,
	59, 564, 564, 568, 568, 564, 564, 564, 564, 564,
	564, 564, -396, 180, 134, 326, 563, 564, 564, -91,
	-398, 200, 59, -421, -398, -398, -350, -312, -421, -388,
	-242, 561, -470, -466, -424, 563, 565, -187, 546, 562,
	2, 561, -470, 564, 116, -244, -244, -381, 149, -498,
	92, -500, 75, 163, 101, 317, 322, 506, 373, 71,
	123, 389, -568, 38, 543, 564, 564, 568, -419, -238,
	-227, -390, -419, -310, -312, 317, 464, 123, 317, 123,
	116, 500, 78, -244, -251, -312, -312, -257, -266, 156,
	564, 568, 546, 2, 556, 556, -266, -261, -266, -259,
	349, 156, 564, -242, 5, 5, 149, -239, 75, 5,
	-244, -244, -260, 116, 424, 488, -180, 568, 563, 546,
	546, -180, -479, -113, -303, -294, 223, -244, -495, -492,
	-493, 373, -499, -501, 163, 373, -117, 2, -191, -190,
	-227, 5, 563, -284, 336, 562, -475, -345, -117, -261,
	-303, 564, 568, -366, 516, -242, -257, 149, -221, 255,
	-576, -474, -218, -369, -367, 135, 563, 332, -117, -308,
	546, 564, 564, 116, 116, 215, 148, -310, 563, 563,
	-312, 116, 564, -184, -185, -478, -113, -478, -183, -53,
	-54, 221, 92, 356, -254, 472, 221, 563, 563, -209,
	-390, -390, -390, 564, -308, -470, 556, -520, 351, 564,
	-417, -390, -390, -391, 180, 563, -401, 564, -521, 531,
	-390, -336, -337, -390, 414, 106, 198, -521, -521, 564,
	-466, 2, -478, 561, 2, -381, -251, -255, -248, -227,
	163, 206, 322, 247, 563, -391, -257, 563, 2, 30,
	-569, 127, 226, -380, -570, 100, 465, 214, -418, -209,
	564, 564, 564, 322, 322, -390, -440, 563, -215, -215,
	564, 564, -390, 488, -469, 99, -467, 2, -545, -241,
	-390, 488, 5, -215, -255, -215, -215, -239, 500, -266,
	-261, -181, -182, -478, -113, -180, 38, -289, 225, 2,
	-497, 247, -248, 247, -567, 532, 564, 568, 546, 546,
	-282, -192, -73, -74, 489, -433, -303, 38, 5, 563,
	-227, 332, 563, -242, -222, 91, -576, -474, -219, -341,
	318, -312, 92, -369, -397, -177, 563, 563, -287, 80,
	93, 124, 205, 183, 222, 457, 462, 28, -287, 564,
	-310, -310, 564, 563, -177, 564, 568, 28, 563, 28,
	563, -257, -277, -323, -323, 564, -308, 59, 568, 564,
	564, -391, -401, 564, -522, -523, -247, 568, 563, 563,
	438, 562, 2, -500, -248, 317, 516, -390, -229, 563,
	-390, 38, 226, 128, 211, -289, 563, -210, -419, -379,
	516, 389, -239, -310, 563, 563, 563, 546, 180, 563,
	-444, -215, -260, 564, -550, 387, -117, -290, -291, 213,
	563, -288, 332, 116, 305, -190, -467, -467, 564, 38,
	-74, 9, 38, -117, -310, -257, -310, 332, 264, -474,
	-220, 564, -251, -341, -479, -479, -379, 564, 564, -479,
	-54, -312, -312, 564, 564, -527, 381, 416, 199, -323,
	-309, 564, 568, 38, -337, 2, 2, 2, 149, 201,
	564, -502, 278, -227, 564, 128, 211, -290, -312, -289,
	201, -257, -546, 516, 564, -296, -295, -292, -298, -297,
	-292, -323, -467, 99, 349, -323, -239, -553, 181, -552,
	5, 10, -192, 349, -311, -420, -244, 81, 116, -294,
	-117, -117, 564, -366, 564, -257, -576, -221, -384, 564,
	564, -380, -379, -193, 532, 564, 564, 564, 564, -528,
	-529, 49, 503, 107, -390, -528, -528, -523, -525, 163,
	532, -503, -506, -505, 332, 444, 181, 350, 564, 464,
	528, -569, 564, 532, -303, -390, -379, 564, 568, 521,
	564, 568, 521, 564, 180, 564, -215, -179, 532, 45,
	-288, -257, 564, 568, 372, 129, 138, -289, -567, -379,
	563, -380, 563, -460, -222, 135, -177, -177, -289, -380,
	-384, -177, -530, 147, -529, 369, 176, 415, 369, 176,
	-530, -530, -248, 54, -505, 332, -506, 332, 510, 129,
	-384, 54, -502, -289, -295, 213, -297, 180, 349, 422,
	-552, 30, 563, -420, 416, 416, 2, -290, -288, -380,
	-310, -289, -310, 318, 510, -290, -289, 107, 197, 483,
	305, 33, 546, -504, 305, 404, 63, 437, -504, 546,
	-503, 563, 563, 336, -312, 2, -192, -289, 564, -290,
	564, 437, -193, -290, 415, 340, -529, -390, 23, 322,
	123, -390, -569, -323, -323, -176, 563, 564, -288, -290,
	-379, -193, -380, -331, -384, -193, 564, 564, -176, -216,
	63, 404, -193, -380, -384, -289, -384, -384, -290, 488,
	564, -384, -289, -290, 563, -290, -193, -323, -193, -384,
	564, -384, -290,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 491, 492, 494, 495, 496, 498, 499,
	501, 503, 505, 506, 507, 509, 510, 512, 513, 514,
	515, 516, 518, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 584,
	0, 1219, 1221, 1223, 1225, 0, 722, 0, 34, 35,
	0, -2, 287, 289, 291, 0, 317, 319, 320, 322,
	324, 326, -2, 0, 424, 425, 427, 429, -2, -2,
	0, 893, 895, 0, 571, 573, 0, 898, 900, 0,
	0, 593, 594, 0, 1312, -2, 587, 589, 591, 656,
	658, 660, 662, 664, 666, 668, 670, 672, 673, 675,
	677, 679, 681, 683, 685, 687, 689, 690, 692, 694,
	696, 698, 700, 702, 704, 706, 708, 710, 712, 714,
	716, -2, 718, -2, -2, 0, -2, -2, -2, 1237,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 375,
	376, 378, 380, 382, 384, 387, 389, 391, 1370, 431,
	433, 435, 437, 439, 441, 443, 0, -2, 1384, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1343, 1345, 1347, 1349, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 493,
	497, 500, 502, 504, 508, 511, 517, 519, 521, 478,
	479, 482, 2040, 2057, 2058, 2059, 2062, 2063, 2064, 2065,
	2066, 2067, 2489, 2570, 2571, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 480, 481, 1057, 0, 545,
	543, 2032, 546, 2301, 548, 550, 418, 419, 420, 421,
	422, 423, 0, 564, 556, 1382, 565, 567, 568, 569,
	570, 540, 538, 0, 564, 2093, 562, 1217, 1218, 0,
	1202, 1203, 2341, 1244, 0, 199, 583, -2, -2, -2,
	2454, -2, 615, -2, 622, 2458, 2343, 627, 0, 629,
	-2, 632, 1220, 1222, 1224, 720, 721, 2043, 0, 0,
	0, 0, 0, 36, 37, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 1107, 1108, 0,
	207, 209, -2, -2, -2, -2, 0, 0, 2383, 2142,
	2000, 2059, 2003, 1998, 288, 290, 292, 293, 0, 0,
	0, 0, 0, 0, 318, 321, 323, 325, -2, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 952, 944, 945, 1163, 0, 0, 0, -2, 426,
	428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	354, 483, 484, 0, 1371, 1371, 0, 0, 0, 0,
	262, 253, 894, 896, 897, 0, 0, 0, 0, 572,
	574, 0, 0, 235, 899, 901, 902, 0, 0, 0,
	0, 0, 264, 0, 0, 588, 590, 592, 657, 659,
	661, 663, 665, 667, 669, 671, 674, 676, 678, 680,
	682, 684, 686, 688, 691, 693, 695, 697, 699, 701,
	703, 705, 707, 709, 711, 713, 715, 717, 728, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 812, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	731, 733, 734, 735, 0, 792, 810, 811, 820, 719,
	0, 1097, 1372, 1246, 1227, 1241, 1246, 1229, 1230, 1231,
	1232, 1233, 1238, 1240, 1234, 1235, 1236, 39, 41, 43,
	45, 47, 49, 51, 53, 55, 377, 379, 381, 383,
	385, 388, 390, 392, -2, 1341, 1342, 432, 434, 436,
	438, 440, 442, 444, 575, 0, 577, 0, 732, -2,
	0, 1376, 1376, 1376, 0, 0, 1342, 1340, 0, 580,
	581, 636, 637, 1643, 0, 0, 0, 0, 0, 0,
	0, 1897, 1729, 0, 638, -2, 1760, 1762, 2429, 2454,
	1896, 1764, 1765, 1766, 1767, 1768, 0, 1770, 1771, 1772,
	1773, 1774, 1775, 0, 1777, 0, 1782, 1783, 1784, 0,
	2436, 1977, 2053, -2, 0, 0, 2442, 2049, 0, 1863,
	1800, -2, -2, 2076, 2055, 1575, 1576, 1577, 1578, 1579,
	-2, -2, 2472, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 0, 2417, 2437, 2438, 2443, 2445,
	2439, 2426, 1825, 2154, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1602, 1611, -2,
	-2, -2, -2, -2, -2, -2, 2430, 2431, 2448, 2451,
	2457, 2462, 2463, 2435, 2444, 2471, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 1603, -2, -2, -2, -2, 1359, 2314, 1362,
	1057, 1360, 1344, 1346, 0, 1348, 0, 0, 0, 1353,
	1379, 1377, 0, 1428, 1357, 1358, 1446, 1446, 1470, 0,
	1451, 0, 1470, 1371, 1496, 0, 1457, 2333, 1801, 1802,
	0, 2059, 2054, -2, -2, 2469, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 547, 549, 0, 0, 0,
	563, 1381, 0, 0, 0, 0, 0, 0, 1243, 1162,
	585, 586, 0, 610, 0, 614, 2425, -2, 0, 2352,
	-2, 618, 1247, 1251, 1252, 1253, 1254, 1255, 0, 0,
	0, 0, 1260, 0, 0, 624, 0, 0, 611, 612,
	630, 633, 0, 723, 724, 725, 726, 727, 65, 0,
	2437, 1496, 67, 0, 2022, 2084, 2085, 2086, 2087, 2088,
	2470, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2472, 70, 0, 2437, 74, 0, 2437, 0, -2,
	81, 0, 2028, 84, 0, 2025, 93, 0, 2437, 0,
	1997, -2, 0, 182, 2036, 0, 921, 2038, -2, 2437,
	1105, 265, 266, 2072, 2073, 2080, 2081, 2082, 2083, 0,
	0, 0, 0, 884, 1994, 1999, 885, 2018, 886, 2004,
	0, 294, 295, 296, 297, 298, 0, 299, 2437, 301,
	302, 0, 304, 305, 2437, 307, 308, 0, 310, 0,
	220, 221, 2437, 329, 330, 0, 332, 333, 0, 335,
	0, 0, 0, 339, -2, 355, 0, 352, 342, 343,
	345, 346, 347, 348, 349, 0, 396, 394, 2033, 0,
	914, 2437, 0, 918, -2, 2039, 0, 0, 1142, -2,
	2437, 1102, 0, 1148, 1144, 0, -2, 0, 1369, 2437,
	1264, 948, 949, 950, 951, 1508, 415, 0, 1279, 0,
	1281, 0, 1300, 1502, 1446, 0, 0, 1507, 0, 357,
	358, 359, 360, 361, 2437, 0, 0, 0, 366, 0,
	368, 369, 370, 371, 372, 373, 374, 171, 2437, 449,
	476, 0, 171, 2437, 452, 171, 2437, 455, 0, 458,
	1161, 171, 2437, 461, 171, 2437, 464, 466, 171, 2437,
	470, 471, 473, 2437, 475, 267, 1213, 1214, 1215, 1216,
	0, -2, 534, 2042, -2, 486, 0, 487, 0, -2,
	0, 279, 0, 0, 903, 904, 905, 906, 907, 910,
	911, 912, 913, 1483, 238, 236, 0, 0, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 0, 0, 595,
	0, 0, 729, 730, 0, 0, 740, 741, 742, 0,
	279, 2344, 2310, 2174, 749, 0, 752, 755, -2, 0,
	0, 0, 0, 759, 0, 764, 765, 766, 0, 768,
	770, 892, 772, 0, 0, 774, 0, 778, 0, 781,
	0, 783, 0, 785, -2, -2, -2, -2, 796, -2,
	0, 799, 801, 0, 803, -2, 0, 812, 808, 809,
	0, 0, 0, 0, 828, 829, 0, 838, 0, 841,
	842, 843, 0, 845, 846, 0, 848, 849, 850, 851,
	0, 853, 854, -2, -2, 858, 860, 0, 867, 0,
	871, 0, 875, 0, 736, 737, 171, 1500, 1226, -2,
	1228, 0, -2, 0, 576, 0, 579, 1401, 1327, 1324,
	0, 1398, 1399, 1328, 0, 0, 0, 1335, 0, 1374,
	1375, 0, 0, 0, 1314, 1315, 0, 0, 0, 0,
	1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1908, 1909,
	1912, 1913, 0, 0, 0, 0, 0, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1915,
	1916, 1917, 0, 0, 1919, 0, 1921, 0, 0, 0,
	0, 0, 0, 1708, 1710, 1985, 0, 0, 1918, 1648,
	1649, 1650, 1651, 1652, 1687, 1688, 0, 0, 1761, 1982,
	1981, 1763, 0, 1933, 0, 1776, -2, 0, 1897, 1928,
	0, 0, 1785, 1786, 1787, 0, 0, 1933, 0, 0,
	1976, 1797, 1798, 1640, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 1588, 0, 1590, 0, 1591,
	1592, 1599, 1612, 0, 0, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 1957, -2, 0, 0, 0,
	0, 1604, 0, 1361, 0, 0, 1432, 1986, 1990, 1991,
	1432, 1432, 0, 0, 1934, 1493, 1493, 0, 0, 1489,
	1489, 1489, 1487, 1470, 0, 1470, 1480, 0, 1470, 1470,
	0, -2, 1451, 0, 0, 1480, 0, 1464, 522, 524,
	526, 528, 529, 530, 532, 1497, 1498, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 2393, 2343, 552, 566, 1371, 0, 1936, 1523,
	1527, 0, 1529, 1530, 1531, 1532, 1533, 0, 0, 1524,
	-2, 1600, 1602, 1623, 2077, 2078, 2079, 1583, 1584, 1585,
	1586, 1587, 1595, 1582, 1582, 1582, 1593, 1622, 1614, 1622,
	1618, 1568, 1569, 1570, 1605, 1606, 1607, 1608, 0, 2393,
	2343, 558, 0, 0, 1311, 186, 188, 189, 190, 0,
	0, 0, 0, -2, 620, 625, 626, 0, 1249, 0,
	1256, 647, 648, 649, 1258, 1259, 0, 1261, 623, 650,
	651, 652, 653, 654, 655, 0, 2006, 2007, 2008, 2009,
	2012, 2013, 0, 0, 621, 640, 628, 0, 634, 94,
	1199, 0, 133, 0, 1199, 1199, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 118, 129,
	106, 107, 0, 0, 0, 0, 0, 75, 1079, 0,
	1082, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 117, 0, 0, 112, 96, 0, 0,
	0, 119, 131, 0, 162, 164, 0, 0, 0, 0,
	0, 0, 181, 191, 0, 0, 0, 0, 1103, 0,
	1368, 0, 0, 2437, 0, 1483, 2219, -2, -2, 1483,
	883, 0, 0, 2060, 2002, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 334, 336, 337, 338, 0, 1141,
	0, 344, 386, 1028, 2437, 0, 0, 413, 408, 0,
	410, 0, 0, 1078, 2437, 1076, 2037, 0, 1100, 0,
	1057, 2437, 2035, 0, 0, 1149, 2069, 1158, 1162, 1266,
	0, 417, 0, 1282, 1284, 0, 0, 1503, 0, 1505,
	1446, 356, 0, 363, 364, 365, 0, 445, 0, 169,
	170, 0, 171, 2437, 450, 0, 453, 0, 171, 2437,
	1992, 459, 0, 462, 0, 0, 468, 0, 0, 0,
	0, 1371, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 242, 0, 1482, 0, 1483, 236, 279,
	279, 1483, 597, 1483, 599, 0, 0, 743, 744, 0,
	279, 279, 279, 750, 751, 753, 754, -2, -2, -2,
	868, 756, 757, 835, 0, 0, 0, 834, 771, 0,
	877, 2329, 2343, 2393, 890, 835, 2142, 835, 2142, 835,
	2142, 782, 784, 787, 823, 831, 795, 800, 0, 0,
	805, 813, -2, 0, 815, 0, 817, 0, 819, 835,
	836, 839, 844, 847, 852, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 1239, 1401, 1327, 578, 1318, 1400,
	1319, 1326, 1329, 0, 0, 1331, 0, 1333, 0, 1396,
	1397, 1404, 1405, 0, 1415, 1416, 1408, 0, -2, 0,
	0, 1411, 1412, 1337, 0, 1354, 1355, 1356, 1385, 1388,
	1177, 0, 2570, 1644, 1518, 1645, 1646, 2021, 0, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, -2,
	-2, -2, -2, -2, -2, -2, -2, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, -2, -2,
	-2, 1685, 1686, -2, 1920, 1922, 0, 1985, 0, -2,
	0, -2, -2, -2, -2, 1705, 0, 1707, 1712, 1714,
	1716, 0, 0, 0, 0, 1984, 1726, 1968, 1969, 0,
	0, 1899, 1900, 1901, 1711, 0, 1730, 1983, 1980, 0,
	0, 1932, 1384, 1789, 0, 0, 0, 0, 1796, 1781,
	1930, 0, 1929, 0, 0, 0, 1940, 0, 1975, 1971,
	0, 2019, 1639, 1626, 1627, 1628, 1629, 1630, 1631, 1641,
	0, 2016, 2046, 2052, 1873, 0, 0, 0, 1826, 1827,
	1828, 1829, 1830, 0, 1832, 1833, 0, 1835, 1836, 0,
	1838, 1839, 0, 1841, 1842, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1540, 0, 0,
	0, 1544, 0, 0, 0, 1548, 0, 0, 0, 1552,
	0, 0, 0, 1556, 0, 0, 0, 1560, 0, 0,
	0, 1564, 0, 0, 0, 0, 0, 1845, 0, 1943,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1847,
	0, 1849, 1934, 1954, 0, 0, 1731, 0, 0, 0,
	1897, 0, 1852, 1934, 1962, 0, 0, 0, 0, 0,
	1934, 0, 1967, 0, 1859, 0, 1861, 1363, 0, 0,
	1513, 0, 0, 0, 1989, 1513, 1513, 0, 1427, 0,
	0, 1490, 1491, 1492, 0, 0, 1493, 0, 1484, 1488,
	1485, 1486, 1480, 1443, 0, 0, 2023, 1480, 1449, 1479,
	0, 1057, 1469, 1480, 1480, 0, -2, 1453, 1470, 0,
	0, 523, 525, 527, 531, 533, 0, 0, 1384, -2,
	0, -2, 1056, 0, 0, 0, 0, 542, 544, 0,
	0, 465, 0, 0, 536, 0, 539, 0, 1514, 1517,
	0, 0, 1528, 1534, 1535, 0, -2, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 613,
	0, 1248, 1257, 0, 644, 0, 646, 0, 2010, 2014,
	2011, 2015, 0, 635, 0, 0, 0, 0, 1198, 0,
	137, 2437, 0, 173, 0, 0, 1021, 2029, 0, 0,
	0, 0, 2161, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 1081,
	1083, 1090, 1092, 0, 1086, 2017, 0, 0, 1087, 0,
	1089, 1091, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 109, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 1135, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 0, 0, -2, 0, 0,
	0, 0, 212, 0, 270, 1995, 2005, 0, 908, 909,
	300, 303, 306, 309, 208, 0, 340, 0, 0, 954,
	929, 0, 0, 395, 279, 0, 0, 409, 2069, 916,
	1074, 1077, 0, 1057, 2437, 1114, 0, 0, 0, 0,
	0, 0, 1147, 0, 2437, 2024, 2068, 2069, 1268, 1276,
	0, 1513, 0, 1298, 1285, 0, 0, 0, 1298, 1302,
	1303, 1305, 1306, 0, 0, 1504, 1510, 0, 367, 477,
	171, 447, 0, 171, 171, 456, 0, 0, 171, 467,
	171, 472, 171, 268, 474, 485, 535, 1371, 1371, 279,
	277, 2278, 275, 272, 274, 0, 0, 0, 955, 957,
	958, 959, 960, 0, 2069, 0, 2208, 2069, 0, 1288,
	1290, 0, 232, 0, 239, 237, 242, 0, 0, 407,
	596, 601, 738, 0, 279, 746, 747, 748, 789, 825,
	833, 758, 760, 761, 762, 0, 891, 887, 888, 889,
	773, 835, 776, 835, 779, 835, 798, 802, 807, 814,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 872, 873, 874, 876, 1501, 1322, 1323, 1325, 0,
	1334, 0, 0, 1410, -2, -2, 1409, 1413, 1414, -2,
	-2, -2, -2, 1330, 0, 1339, 1336, 0, 1395, 1175,
	1176, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1727, 0, -2, 1706, 1709, 1713, 1715, 1717, 0, 0,
	0, 0, 0, 0, 1923, 0, 1925, 1728, 1978, 1981,
	1895, 0, 0, 1383, 1384, 1384, 0, 1795, 0, 1931,
	0, 1938, 1939, 0, 1788, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 1831, 1834, 1837, 1840, 0, 0, 0, 0, 1820,
	0, 0, 0, 1824, 1594, 1580, 0, 1622, 1620, 1621,
	1615, 1622, 1619, 1572, 0, 1537, 1538, 1539, 1541, 1542,
	1543, 1545, 1546, 1547, 1549, 1550, 1551, 1553, 1554, 1555,
	1557, 1558, 1559, 1561, 1562, 1563, 1565, 1566, 1567, 1571,
	0, 1844, 0, 1846, 1848, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 1735, 1736, 1851, 1960, 1961, 0, 0, 0,
	0, 0, 0, 1857, 0, 1966, 1858, 1860, 1371, 0,
	1364, 0, 1429, 1418, 1512, 0, 1987, 1483, 1431, 1433,
	1988, 2026, 1418, 1418, 0, 1935, 0, 0, 1474, 0,
	0, 0, 1476, 1447, 0, 0, 1441, 0, 1437, 1438,
	1439, 1440, 1448, 1057, 1478, 1450, 1454, 2046, 0, 1480,
	0, 1465, 0, 1467, 1499, 0, 1459, 1462, 0, 0,
	2061, 1513, 0, 311, 315, 316, 312, 313, 314, 551,
	0, 0, 0, 0, 1937, 0, 1519, 0, 1525, 0,
	0, 0, 0, 557, 0, 0, 0, 187, 1310, 198,
	0, 609, -2, 642, 643, 645, 0, 641, 134, 1199,
	0, 0, 1180, 1182, 0, 139, 2437, 148, 0, 995,
	0, 2027, 0, 0, 0, 0, 0, 1201, 0, 0,
	2437, 171, 2437, 171, 151, 153, 156, 0, 161, 158,
	159, 0, 0, 986, 95, 1199, 0, 98, 102, 110,
	0, 0, 0, 116, 0, 0, 0, 1184, 1190, 0,
	0, 1084, 1085, 1088, 1094, 76, 0, 0, 1188, 1194,
	82, 0, 1179, 163, 100, 104, 111, 0, 1196, 97,
	0, 185, 0, 0, 0, 177, 0, 178, 179, 192,
	0, 171, 2437, 0, 919, 920, 1136, 1098, 1099, 0,
	1104, 0, 0, 0, 1483, 204, 0, 1483, 212, 0,
	2001, 0, 328, 0, 0, 0, 0, 953, 1039, 0,
	924, 0, 0, 0, 401, 397, 0, 406, 412, 411,
	915, 0, 0, 0, 0, -2, 0, 0, 1151, 1145,
	1146, 0, 0, 0, 2437, 1270, 1276, 0, 1275, 1369,
	1384, 416, 1277, 1298, 0, 0, 0, 1287, 1283, 1280,
	1513, 0, 0, 0, 0, 0, 1506, 1509, 362, 446,
	171, 451, 454, 1993, 171, 460, 463, 469, 488, 489,
	254, 0, 0, 0, 0, 0, 279, 0, 0, 0,
	964, 0, 2069, 2069, 0, 2031, 0, 0, 0, 0,
	240, 0, 243, 0, 0, 0, 248, 249, 250, 251,
	252, 233, 1483, 0, 598, 0, 0, 745, 0, 775,
	777, 780, 816, 818, 835, 861, 862, 981, 0, 981,
	0, 0, 1332, 0, 1407, 1338, 1389, 1390, 0, 1177,
	0, 1647, 1690, 0, 0, -2, 0, 0, 1694, 0,
	0, 0, -2, 0, 0, 0, 1924, 1926, 0, 1980,
	1790, 0, 0, 0, 1794, 1778, 1779, 0, 1898, 1941,
	1970, 1974, 0, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	0, 2020, 2047, 2051, 1871, 1872, 1876, 2034, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 1617, 0, 0, 1942, 1953, 1955, 1732, 1733, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, -2,
	-2, -2, 1750, 1751, 1752, -2, -2, -2, 0, 0,
	0, 1956, 1958, 1959, 1963, 1964, 0, 1854, 1855, 1856,
	1965, 0, 1371, 1365, 1426, 0, 1511, 1430, 0, 1426,
	1426, 1378, 1472, 0, 0, 1495, 0, 1444, 0, 1445,
	0, 1477, 0, 1452, 1455, 1456, 1466, 0, 1458, 0,
	1461, 0, 1790, -2, 280, 281, 283, 0, 286, 554,
	555, 553, 537, 0, 0, 1521, 0, 0, 1597, 1601,
	1625, 560, 561, 559, 200, 0, 1481, 0, 0, 0,
	0, 172, 993, 1020, 0, 0, 0, 1165, 1172, 0,
	-2, 0, 0, 1026, 141, 0, 0, 0, 149, 0,
	0, 146, 0, 155, 160, 0, 0, 0, 0, 0,
	0, 113, 114, 115, 0, 120, 0, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 1174, 0, 0, 194, 0, 0, 0, 1139, 1140,
	1185, 1191, 0, 0, 212, 210, 0, 213, 0, 216,
	217, 0, 212, 206, 0, 0, 1057, 341, 927, 1027,
	0, 1029, 0, 925, 0, 0, 1028, 393, 0, 400,
	0, 0, 1078, 0, 0, 1101, 1112, 1057, 0, 1150,
	1152, 1160, 0, 0, 0, 1272, 1276, 0, 1265, 1266,
	1403, 1278, 1296, -2, 0, 0, 1384, 1304, 1301, 1307,
	1308, 0, 448, 457, 276, 0, 271, 273, 0, 257,
	0, 0, 956, 961, 0, 0, 0, 0, 0, 1289,
	1291, 0, 0, 0, 0, 0, 0, 242, 263, 0,
	739, 763, 826, 863, 980, 0, 0, 865, 0, 0,
	1406, 1393, 1394, 1391, 1177, 1692, 1696, 0, 0, 0,
	1698, -2, 0, 1720, -2, -2, 1927, 1979, 1769, 1384,
	1791, 1793, 1780, 1973, 1642, 0, 1878, 1875, 0, 1862,
	0, 1815, 1816, 0, 0, 1819, 1821, 1822, 1823, 1581,
	1574, 1573, 1952, 0, 0, 0, 0, 1853, 1366, 0,
	1867, 0, 0, 1434, 1867, 1867, 1473, 0, 1475, 1442,
	1435, 0, 2047, 1468, 1460, 0, 0, 284, 0, 1515,
	1520, 0, 1526, 1596, 201, 135, 136, 138, 0, 994,
	0, 997, 0, 0, 0, 0, 1004, 1005, 0, 0,
	0, 0, 0, 1014, 0, 1043, 1053, 0, 1167, 1177,
	1171, 0, 1169, 0, 0, 0, 143, 166, 0, 0,
	1200, 0, 0, 171, 171, 0, 0, 1181, 1183, 0,
	0, 0, 0, 123, 0, 0, 1186, 1192, 1189, 1195,
	0, 0, 0, 1197, 183, 184, 0, 171, 0, 176,
	171, 171, 1174, 0, 0, 0, 203, 0, 0, 0,
	0, 205, 269, 212, 0, 975, 0, 1039, 1031, 1032,
	1033, 0, 1038, 1040, 0, 0, 941, 926, 0, 937,
	0, 0, 954, 929, 0, 398, 917, 1075, 1109, 1057,
	0, 1143, 0, 0, 0, 0, 0, 0, 1274, 1276,
	0, 1267, 1268, 1298, 1402, 0, 0, 0, 1286, 1403,
	0, 278, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 244, 0, 245, 246, 247, 234, 600,
	602, 0, 0, 608, 979, 0, 0, 0, 0, 1392,
	1700, -2, -2, 1721, 0, 2048, 2050, 1384, 0, 1864,
	1386, 0, 0, -2, 0, 0, 0, 1367, 1350, 0,
	1425, 1417, 1419, 1421, 2332, 2138, 2436, 1351, 1352, 1494,
	0, 1463, 285, 0, 1522, 140, 0, 998, 999, 2030,
	1001, 0, 1003, 1006, 0, 1009, 2071, 0, 1013, 0,
	1022, 1044, 0, 975, 0, 1049, 1050, 1051, 1166, 1395,
	1172, 1055, 0, 142, 144, 165, 1174, 0, 145, 154,
	0, 0, 99, 0, 0, 2133, 126, 124, 122, 1178,
	101, 0, 185, 193, 1173, 180, 195, 171, 0, 1187,
	1193, 214, 0, 215, 218, 0, 0, 983, 0, 928,
	1030, 0, 1041, 1042, 931, 0, 930, 0, 0, 0,
	0, 0, 399, 402, 0, 405, 0, 0, 1153, 0,
	1159, 0, 0, 0, 1262, 0, 0, 1269, 1270, 414,
	1292, 0, 0, 1298, 1309, 256, 0, 0, 962, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 963, 1055,
	0, 0, 1019, 0, 261, 241, 0, 604, 0, 606,
	0, 864, 866, 0, 0, 1792, 1882, 0, 0, 1817,
	1818, -2, 0, 1758, 1866, 1868, 0, 0, 0, 0,
	0, 1436, 1516, 996, 1000, 0, 0, 0, 1061, 0,
	0, 1015, 0, 1047, 1048, 983, 0, 1170, 1168, 975,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	175, 196, 1174, 211, 228, 0, 1110, 929, 982, 0,
	0, 939, 0, 942, 0, 938, 935, 936, 927, 0,
	403, 404, 0, 1113, 0, 1160, 0, 0, 1276, 1271,
	1272, 1513, 1295, 1299, 0, 0, 1053, 1055, 929, 0,
	603, 0, 0, 869, 870, 0, 0, 0, 0, 1877,
	1387, 1759, 0, 0, 1420, 1422, 1423, 1424, 0, 0,
	1008, 1066, 0, 0, 0, 1045, 1046, 1043, 0, 1024,
	0, 1057, 147, 0, 1055, 0, 987, 0, 0, 990,
	0, 0, 127, 2133, 125, 0, 171, 231, 0, 225,
	223, 224, 931, 0, 0, 1035, 1037, 0, 943, 975,
	941, 1111, 1055, 0, 1053, 0, 0, 1274, 0, 279,
	279, 975, 1053, 1513, 0, 279, 605, 607, 1874, 1894,
	1883, -2, 2396, 2139, 0, 1894, 1894, 1869, 1870, 0,
	0, 1010, 1062, 1063, 0, 1058, 1059, 1060, 2070, 1011,
	1012, 1513, 1052, 0, 1061, 167, 975, 984, 0, 0,
	985, 0, 0, 130, 0, 132, 197, 219, 0, 0,
	922, 0, 1034, 0, 0, 0, 0, 983, 931, 1053,
	0, 975, 0, 1273, 1263, 0, 258, 259, 983, 975,
	1018, 260, 1879, 0, 0, 1885, 1886, 1887, 1888, 1889,
	1880, 1881, 1002, 0, 1064, 0, 1065, 0, 0, 0,
	1023, 0, 1066, 152, 988, 0, 991, 0, 128, 0,
	226, 227, 0, 1036, 932, 0, 934, 929, 940, 975,
	0, 983, 0, 1293, 0, 929, 983, 0, 1891, 1892,
	0, 0, 0, 1067, 0, 1070, 1071, 0, 1068, 0,
	1043, 0, 0, 0, 0, 933, 931, 983, 1055, 929,
	1053, 0, 1513, 929, 1890, 1893, 1884, 1007, 1069, 1072,
	1073, 1054, 1025, 0, 0, 229, 0, 978, 923, 929,
	1053, 1513, 975, 1513, 1016, 1513, 983, 0, 0, 974,
	976, 977, 1513, 975, 1156, 983, 1294, 1017, 989, 0,
	230, 1154, 983, 929, 0, 929, 1513, 0, 1513, 1157,
	983, 1155, 992,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 552, 3, 558, 553, 3,
	563, 564, 556, 554, 568, 555, 565, 557, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 571, 3,
	544, 546, 545, 549, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 561, 3, 562, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 569, 551, 570, 547,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 548, 57887, 550, 57888, 560, 57889, 566,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1239
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1265
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1285
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1368
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1381
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1398
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1402
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1406
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1424
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1428
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1449
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1485
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1514
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1529
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1535
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1543
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1553
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1557
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1578
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1585
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1597
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1604
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1621
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1632
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1651
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1661
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1671
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1680
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1691
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1697
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1723
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1728
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1851
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1909
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = nil
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2011
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2070
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2074
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2077
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2137
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2220
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2240
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2255
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2383
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = nil
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2614
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2620
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2635
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2644
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2663
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2747
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2911
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2930
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CREATE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "create access method")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "create cast")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "create operator")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "create publication")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "create rule")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "create server")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2991
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2995
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2998
		{
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2999
		{
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3002
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3013
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplemented(sqllex, "drop server")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{

			sqlVAL.union.val = nil
		}
	case 414:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "DELETE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3229
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "DROP")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3439
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3504
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3536
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "DELETE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "INSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "DELETE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "INSERT")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3613
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "GRANT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "RESET")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "RESET")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3864
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4071
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			return unimplemented(sqllex, "set from current")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = tree.Low
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.Normal
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.High
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "SHOW")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4280
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4304
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.str = "client_encoding"
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.str = "timezone"
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4349
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4412
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4421
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = true
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = true
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = false
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4740
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = true
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = false
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = true
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4860
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4881
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4950
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4958
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4995
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5034
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "RESUME")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5458
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5473
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = nil
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.str = ""
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = nil
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5518
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5534
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 939:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5566
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5580
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5595
		{
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5686
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5693
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.str = ""
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5903
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5928
		{
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6027
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6055
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6065
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = true
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6427
		{

			sqlVAL.union.val = true
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = false
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6442
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6456
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6468
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6480
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6490
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6500
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = nil
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6631
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6633
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6675
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6693
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6712
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6729
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6746
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6750
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = false
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = true
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = false
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = true
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = false
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6810
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.str = ""
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.str = ""
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6883
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6889
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6959
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6965
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6977
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6983
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6997
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7003
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7021
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7025
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7036
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7063
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7190
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7191
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7240
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7255
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7340
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.str = ""
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.str = ""
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.str = ""
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7384
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7507
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7534
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7576
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7628
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = true
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = false
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = nil
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7997
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7998
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = true
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = false
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = false
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = true
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8027
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8094
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8099
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8220
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8256
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8326
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8378
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8417
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8473
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8503
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8536
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = nil
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = true
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = false
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.str = tree.AstFull
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.str = tree.AstRight
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = tree.AstInner
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.str = tree.AstHash
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.str = ""
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8763
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = false
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = true
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = false
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8812
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8825
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8833
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8852
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8882
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8973
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8976
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = types.Geography
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9001
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9035
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = nil
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = types.Int2
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = types.Int
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = types.Float4
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = types.Float
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = types.Bool
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = types.Float
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9127
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9155
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = types.String
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = true
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = false
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = types.Date
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9212
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9243
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9260
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = true
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = false
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = types.Interval
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9284
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = nil
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9413
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10012
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10062
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10092
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10103
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10104
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10194
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10390
		{
			return unimplemented(sqllex, "treat")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.str = ""
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10565
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10662
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.Any
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = tree.Some
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.All
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = tree.Div
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.LT
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = tree.GT
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.LE
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.GE
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.NE
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = tree.Like
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11024
		{
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11193
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11242
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11435
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11442
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.str = ""
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
