// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:866
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13460

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1547,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	513, 240,
	-2, 0,
	-1, 87,
	230, 1285,
	244, 1285,
	260, 398,
	389, 398,
	399, 1046,
	437, 398,
	450, 1046,
	497, 1046,
	524, 398,
	550, 1046,
	-2, 0,
	-1, 93,
	132, 1547,
	237, 1547,
	535, 1547,
	536, 1547,
	-2, 0,
	-1, 109,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	340, 1518,
	350, 1518,
	530, 1518,
	-2, 1489,
	-1, 149,
	158, 897,
	259, 897,
	392, 859,
	455, 859,
	496, 859,
	516, 897,
	518, 859,
	-2, 0,
	-1, 152,
	4, 1549,
	21, 1549,
	22, 1549,
	23, 1549,
	24, 1549,
	25, 1549,
	26, 1549,
	27, 1549,
	29, 1549,
	30, 1549,
	36, 1549,
	41, 1549,
	42, 1549,
	44, 1549,
	45, 1549,
	46, 1549,
	47, 1549,
	48, 1549,
	49, 1549,
	50, 1549,
	51, 1549,
	53, 1549,
	54, 1549,
	55, 1549,
	56, 1549,
	58, 1549,
	59, 1549,
	60, 1549,
	61, 1549,
	62, 1549,
	63, 1549,
	64, 1549,
	68, 1549,
	69, 1549,
	70, 1549,
	71, 1549,
	73, 1549,
	74, 1549,
	75, 1549,
	79, 1549,
	80, 1549,
	81, 1549,
	82, 1549,
	83, 1549,
	84, 1549,
	85, 1549,
	88, 1549,
	89, 1549,
	90, 1549,
	91, 1549,
	92, 1549,
	94, 1549,
	96, 1549,
	97, 1549,
	98, 1549,
	99, 1549,
	100, 1549,
	101, 1549,
	103, 1549,
	104, 1549,
	105, 1549,
	107, 1549,
	108, 1549,
	109, 1549,
	117, 1549,
	118, 1549,
	119, 1549,
	120, 1549,
	121, 1549,
	123, 1549,
	124, 1549,
	125, 1549,
	127, 1549,
	128, 1549,
	129, 1549,
	131, 1549,
	132, 1549,
	133, 1549,
	135, 1549,
	136, 1549,
	137, 1549,
	140, 1549,
	141, 1549,
	142, 1549,
	144, 1549,
	145, 1549,
	147, 1549,
	148, 1549,
	149, 1549,
	151, 1549,
	152, 1549,
	153, 1549,
	154, 1549,
	155, 1549,
	156, 1549,
	157, 1549,
	158, 1549,
	159, 1549,
	160, 1549,
	161, 1549,
	162, 1549,
	163, 1549,
	164, 1549,
	165, 1549,
	166, 1549,
	168, 1549,
	174, 1549,
	175, 1549,
	176, 1549,
	177, 1549,
	181, 1549,
	183, 1549,
	184, 1549,
	188, 1549,
	189, 1549,
	190, 1549,
	191, 1549,
	192, 1549,
	193, 1549,
	194, 1549,
	195, 1549,
	196, 1549,
	197, 1549,
	198, 1549,
	199, 1549,
	200, 1549,
	201, 1549,
	203, 1549,
	204, 1549,
	206, 1549,
	207, 1549,
	209, 1549,
	210, 1549,
	211, 1549,
	212, 1549,
	213, 1549,
	214, 1549,
	215, 1549,
	216, 1549,
	217, 1549,
	219, 1549,
	220, 1549,
	222, 1549,
	223, 1549,
	224, 1549,
	225, 1549,
	226, 1549,
	230, 1549,
	231, 1549,
	232, 1549,
	233, 1549,
	234, 1549,
	237, 1549,
	238, 1549,
	239, 1549,
	241, 1549,
	243, 1549,
	244, 1549,
	246, 1549,
	248, 1549,
	249, 1549,
	250, 1549,
	252, 1549,
	256, 1549,
	257, 1549,
	258, 1549,
	259, 1549,
	260, 1549,
	261, 1549,
	263, 1549,
	264, 1549,
	265, 1549,
	267, 1549,
	268, 1549,
	270, 1549,
	271, 1549,
	274, 1549,
	278, 1549,
	279, 1549,
	280, 1549,
	283, 1549,
	284, 1549,
	285, 1549,
	286, 1549,
	288, 1549,
	289, 1549,
	290, 1549,
	291, 1549,
	292, 1549,
	293, 1549,
	294, 1549,
	295, 1549,
	296, 1549,
	297, 1549,
	298, 1549,
	299, 1549,
	300, 1549,
	301, 1549,
	302, 1549,
	303, 1549,
	304, 1549,
	305, 1549,
	306, 1549,
	307, 1549,
	308, 1549,
	309, 1549,
	311, 1549,
	313, 1549,
	314, 1549,
	315, 1549,
	316, 1549,
	317, 1549,
	318, 1549,
	319, 1549,
	320, 1549,
	321, 1549,
	322, 1549,
	323, 1549,
	324, 1549,
	325, 1549,
	327, 1549,
	328, 1549,
	330, 1549,
	332, 1549,
	333, 1549,
	335, 1549,
	336, 1549,
	337, 1549,
	338, 1549,
	339, 1549,
	342, 1549,
	345, 1549,
	346, 1549,
	347, 1549,
	348, 1549,
	351, 1549,
	352, 1549,
	353, 1549,
	355, 1549,
	357, 1549,
	358, 1549,
	359, 1549,
	360, 1549,
	361, 1549,
	362, 1549,
	363, 1549,
	364, 1549,
	365, 1549,
	366, 1549,
	367, 1549,
	368, 1549,
	369, 1549,
	371, 1549,
	372, 1549,
	373, 1549,
	374, 1549,
	375, 1549,
	376, 1549,
	377, 1549,
	378, 1549,
	379, 1549,
	380, 1549,
	381, 1549,
	382, 1549,
	383, 1549,
	384, 1549,
	385, 1549,
	387, 1549,
	388, 1549,
	390, 1549,
	391, 1549,
	392, 1549,
	393, 1549,
	394, 1549,
	395, 1549,
	396, 1549,
	397, 1549,
	398, 1549,
	399, 1549,
	400, 1549,
	401, 1549,
	403, 1549,
	405, 1549,
	406, 1549,
	407, 1549,
	412, 1549,
	414, 1549,
	415, 1549,
	416, 1549,
	417, 1549,
	418, 1549,
	419, 1549,
	420, 1549,
	421, 1549,
	422, 1549,
	423, 1549,
	425, 1549,
	426, 1549,
	427, 1549,
	429, 1549,
	430, 1549,
	431, 1549,
	432, 1549,
	433, 1549,
	434, 1549,
	435, 1549,
	437, 1549,
	438, 1549,
	439, 1549,
	440, 1549,
	441, 1549,
	442, 1549,
	443, 1549,
	444, 1549,
	445, 1549,
	446, 1549,
	447, 1549,
	448, 1549,
	450, 1549,
	451, 1549,
	452, 1549,
	453, 1549,
	454, 1549,
	455, 1549,
	457, 1549,
	458, 1549,
	459, 1549,
	460, 1549,
	461, 1549,
	462, 1549,
	464, 1549,
	465, 1549,
	466, 1549,
	467, 1549,
	468, 1549,
	469, 1549,
	470, 1549,
	471, 1549,
	473, 1549,
	475, 1549,
	476, 1549,
	477, 1549,
	478, 1549,
	479, 1549,
	480, 1549,
	481, 1549,
	482, 1549,
	483, 1549,
	484, 1549,
	485, 1549,
	486, 1549,
	487, 1549,
	488, 1549,
	489, 1549,
	490, 1549,
	492, 1549,
	493, 1549,
	495, 1549,
	496, 1549,
	498, 1549,
	499, 1549,
	500, 1549,
	501, 1549,
	502, 1549,
	503, 1549,
	504, 1549,
	505, 1549,
	506, 1549,
	508, 1549,
	509, 1549,
	510, 1549,
	511, 1549,
	512, 1549,
	514, 1549,
	516, 1549,
	517, 1549,
	518, 1549,
	519, 1549,
	520, 1549,
	521, 1549,
	523, 1549,
	524, 1549,
	525, 1549,
	526, 1549,
	528, 1549,
	529, 1549,
	532, 1549,
	533, 1549,
	534, 1549,
	535, 1549,
	536, 1549,
	537, 1549,
	538, 1549,
	540, 1549,
	543, 1549,
	544, 1549,
	545, 1549,
	546, 1549,
	547, 1549,
	548, 1549,
	550, 1549,
	551, 1549,
	552, 1549,
	553, 1549,
	555, 1549,
	560, 1549,
	561, 1549,
	562, 1549,
	563, 1549,
	564, 1549,
	565, 1549,
	-2, 0,
	-1, 153,
	1, 1400,
	130, 1400,
	248, 1400,
	329, 1400,
	387, 1400,
	396, 1400,
	569, 1400,
	596, 1400,
	-2, 0,
	-1, 155,
	1, 1400,
	596, 1400,
	-2, 0,
	-1, 156,
	1, 1400,
	596, 1400,
	-2, 0,
	-1, 157,
	1, 1400,
	513, 1400,
	596, 1400,
	-2, 0,
	-1, 186,
	150, 1517,
	169, 1517,
	182, 1517,
	240, 1517,
	273, 1517,
	340, 1517,
	350, 1517,
	530, 1517,
	-2, 1492,
	-1, 233,
	4, 1556,
	5, 1556,
	6, 1556,
	7, 1556,
	8, 1556,
	9, 1556,
	10, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	29, 1556,
	30, 1556,
	36, 1556,
	37, 1556,
	41, 1556,
	42, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	46, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	56, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	61, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	70, 1556,
	71, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	77, 1556,
	79, 1556,
	80, 1556,
	81, 1556,
	82, 1556,
	83, 1556,
	84, 1556,
	85, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	92, 1556,
	94, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	99, 1556,
	100, 1556,
	101, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	109, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	113, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	117, 1556,
	118, 1556,
	119, 1556,
	120, 1556,
	121, 1556,
	122, 1556,
	123, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	129, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	147, 1556,
	148, 1556,
	149, 1556,
	151, 1556,
	152, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	156, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	160, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	181, 1556,
	183, 1556,
	184, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	190, 1556,
	191, 1556,
	192, 1556,
	193, 1556,
	194, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	198, 1556,
	199, 1556,
	200, 1556,
	201, 1556,
	203, 1556,
	204, 1556,
	206, 1556,
	207, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	217, 1556,
	218, 1556,
	219, 1556,
	220, 1556,
	222, 1556,
	223, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	239, 1556,
	241, 1556,
	243, 1556,
	244, 1556,
	245, 1556,
	246, 1556,
	247, 1556,
	248, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	252, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	260, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	268, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	272, 1556,
	274, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	283, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	291, 1556,
	292, 1556,
	293, 1556,
	294, 1556,
	295, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	303, 1556,
	304, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	309, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	333, 1556,
	334, 1556,
	335, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	339, 1556,
	342, 1556,
	346, 1556,
	347, 1556,
	348, 1556,
	351, 1556,
	352, 1556,
	353, 1556,
	354, 1556,
	355, 1556,
	356, 1556,
	357, 1556,
	358, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	363, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	369, 1556,
	371, 1556,
	372, 1556,
	373, 1556,
	374, 1556,
	375, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	379, 1556,
	380, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	384, 1556,
	385, 1556,
	387, 1556,
	388, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	401, 1556,
	403, 1556,
	405, 1556,
	406, 1556,
	407, 1556,
	412, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	417, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	421, 1556,
	422, 1556,
	423, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	435, 1556,
	437, 1556,
	438, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	442, 1556,
	443, 1556,
	444, 1556,
	445, 1556,
	446, 1556,
	447, 1556,
	448, 1556,
	450, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	462, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	468, 1556,
	469, 1556,
	470, 1556,
	471, 1556,
	473, 1556,
	475, 1556,
	476, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	490, 1556,
	492, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	496, 1556,
	498, 1556,
	499, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	506, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	512, 1556,
	514, 1556,
	516, 1556,
	517, 1556,
	518, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	526, 1556,
	528, 1556,
	529, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	540, 1556,
	543, 1556,
	544, 1556,
	545, 1556,
	546, 1556,
	547, 1556,
	548, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	553, 1556,
	555, 1556,
	560, 1556,
	561, 1556,
	562, 1556,
	563, 1556,
	564, 1556,
	565, 1556,
	566, 1556,
	577, 1556,
	584, 1556,
	585, 1556,
	586, 1556,
	593, 1556,
	597, 1556,
	-2, 0,
	-1, 737,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	168, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	230, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	325, 1283,
	327, 1283,
	328, 1283,
	330, 1283,
	332, 1283,
	333, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	339, 1283,
	342, 1283,
	346, 1283,
	347, 1283,
	348, 1283,
	351, 1283,
	352, 1283,
	353, 1283,
	355, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	369, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	385, 1283,
	387, 1283,
	388, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	401, 1283,
	403, 1283,
	405, 1283,
	406, 1283,
	407, 1283,
	412, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	423, 1283,
	425, 1283,
	426, 1283,
	427, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	435, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	448, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	455, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	462, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	471, 1283,
	473, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	490, 1283,
	492, 1283,
	493, 1283,
	495, 1283,
	496, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	506, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	512, 1283,
	514, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	521, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	526, 1283,
	528, 1283,
	529, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	538, 1283,
	540, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	548, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	553, 1283,
	555, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	565, 1283,
	-2, 0,
	-1, 756,
	186, 2342,
	513, 2342,
	576, 2342,
	595, 2342,
	-2, 0,
	-1, 757,
	186, 2449,
	513, 2449,
	576, 2449,
	595, 2449,
	-2, 0,
	-1, 758,
	186, 2329,
	513, 2329,
	576, 2329,
	595, 2329,
	-2, 0,
	-1, 760,
	186, 2585,
	513, 2585,
	576, 2585,
	595, 2585,
	-2, 0,
	-1, 762,
	186, 2626,
	513, 2626,
	576, 2626,
	595, 2626,
	-2, 0,
	-1, 770,
	186, 2476,
	513, 2476,
	576, 2476,
	595, 2476,
	-2, 691,
	-1, 805,
	595, 2278,
	598, 2278,
	-2, 977,
	-1, 806,
	595, 2280,
	598, 2280,
	-2, 978,
	-1, 807,
	595, 2279,
	598, 2279,
	-2, 979,
	-1, 808,
	598, 2204,
	-2, 980,
	-1, 831,
	182, 255,
	-2, 0,
	-1, 855,
	43, 2251,
	-2, 0,
	-1, 856,
	550, 1261,
	-2, 1047,
	-1, 872,
	4, 1686,
	21, 1686,
	22, 1686,
	23, 1686,
	24, 1686,
	25, 1686,
	26, 1686,
	27, 1686,
	29, 1686,
	30, 1686,
	36, 1686,
	41, 1686,
	42, 1686,
	44, 1686,
	45, 1686,
	46, 1686,
	47, 1686,
	48, 1686,
	49, 1686,
	50, 1686,
	51, 1686,
	53, 1686,
	54, 1686,
	55, 1686,
	56, 1686,
	58, 1686,
	59, 1686,
	60, 1686,
	61, 1686,
	62, 1686,
	63, 1686,
	64, 1686,
	68, 1686,
	69, 1686,
	70, 1686,
	71, 1686,
	73, 1686,
	74, 1686,
	75, 1686,
	79, 1686,
	80, 1686,
	81, 1686,
	82, 1686,
	83, 1686,
	84, 1686,
	85, 1686,
	88, 1686,
	89, 1686,
	90, 1686,
	91, 1686,
	92, 1686,
	94, 1686,
	96, 1686,
	97, 1686,
	98, 1686,
	99, 1686,
	100, 1686,
	101, 1686,
	103, 1686,
	104, 1686,
	105, 1686,
	107, 1686,
	108, 1686,
	109, 1686,
	117, 1686,
	118, 1686,
	119, 1686,
	120, 1686,
	121, 1686,
	123, 1686,
	124, 1686,
	125, 1686,
	127, 1686,
	128, 1686,
	129, 1686,
	131, 1686,
	132, 1686,
	133, 1686,
	135, 1686,
	136, 1686,
	137, 1686,
	140, 1686,
	141, 1686,
	142, 1686,
	144, 1686,
	145, 1686,
	147, 1686,
	148, 1686,
	149, 1686,
	151, 1686,
	152, 1686,
	153, 1686,
	154, 1686,
	155, 1686,
	156, 1686,
	157, 1686,
	158, 1686,
	159, 1686,
	160, 1686,
	161, 1686,
	162, 1686,
	163, 1686,
	164, 1686,
	165, 1686,
	166, 1686,
	168, 1686,
	174, 1686,
	175, 1686,
	176, 1686,
	177, 1686,
	181, 1686,
	183, 1686,
	184, 1686,
	188, 1686,
	189, 1686,
	190, 1686,
	191, 1686,
	192, 1686,
	193, 1686,
	194, 1686,
	195, 1686,
	196, 1686,
	197, 1686,
	198, 1686,
	199, 1686,
	200, 1686,
	201, 1686,
	203, 1686,
	204, 1686,
	206, 1686,
	207, 1686,
	209, 1686,
	210, 1686,
	211, 1686,
	212, 1686,
	213, 1686,
	214, 1686,
	215, 1686,
	216, 1686,
	217, 1686,
	219, 1686,
	220, 1686,
	222, 1686,
	223, 1686,
	224, 1686,
	225, 1686,
	226, 1686,
	230, 1686,
	231, 1686,
	232, 1686,
	233, 1686,
	234, 1686,
	237, 1686,
	238, 1686,
	239, 1686,
	241, 1686,
	243, 1686,
	244, 1686,
	246, 1686,
	248, 1686,
	249, 1686,
	250, 1686,
	252, 1686,
	256, 1686,
	257, 1686,
	258, 1686,
	259, 1686,
	260, 1686,
	261, 1686,
	263, 1686,
	264, 1686,
	265, 1686,
	267, 1686,
	268, 1686,
	270, 1686,
	271, 1686,
	274, 1686,
	278, 1686,
	279, 1686,
	280, 1686,
	283, 1686,
	284, 1686,
	285, 1686,
	286, 1686,
	288, 1686,
	289, 1686,
	290, 1686,
	291, 1686,
	292, 1686,
	293, 1686,
	294, 1686,
	295, 1686,
	296, 1686,
	297, 1686,
	298, 1686,
	299, 1686,
	300, 1686,
	301, 1686,
	302, 1686,
	303, 1686,
	304, 1686,
	305, 1686,
	306, 1686,
	307, 1686,
	308, 1686,
	309, 1686,
	311, 1686,
	313, 1686,
	314, 1686,
	315, 1686,
	316, 1686,
	317, 1686,
	318, 1686,
	319, 1686,
	320, 1686,
	321, 1686,
	322, 1686,
	323, 1686,
	324, 1686,
	325, 1686,
	327, 1686,
	328, 1686,
	330, 1686,
	332, 1686,
	333, 1686,
	335, 1686,
	336, 1686,
	337, 1686,
	338, 1686,
	339, 1686,
	342, 1686,
	346, 1686,
	347, 1686,
	348, 1686,
	351, 1686,
	352, 1686,
	353, 1686,
	355, 1686,
	357, 1686,
	358, 1686,
	359, 1686,
	360, 1686,
	361, 1686,
	362, 1686,
	363, 1686,
	364, 1686,
	365, 1686,
	366, 1686,
	367, 1686,
	368, 1686,
	369, 1686,
	371, 1686,
	372, 1686,
	373, 1686,
	374, 1686,
	375, 1686,
	376, 1686,
	377, 1686,
	378, 1686,
	379, 1686,
	380, 1686,
	381, 1686,
	382, 1686,
	383, 1686,
	384, 1686,
	385, 1686,
	387, 1686,
	388, 1686,
	390, 1686,
	391, 1686,
	392, 1686,
	393, 1686,
	394, 1686,
	395, 1686,
	396, 1686,
	397, 1686,
	398, 1686,
	399, 1686,
	400, 1686,
	401, 1686,
	403, 1686,
	405, 1686,
	406, 1686,
	407, 1686,
	412, 1686,
	414, 1686,
	415, 1686,
	416, 1686,
	417, 1686,
	418, 1686,
	419, 1686,
	420, 1686,
	421, 1686,
	422, 1686,
	423, 1686,
	425, 1686,
	426, 1686,
	427, 1686,
	429, 1686,
	430, 1686,
	431, 1686,
	432, 1686,
	433, 1686,
	434, 1686,
	435, 1686,
	437, 1686,
	438, 1686,
	439, 1686,
	440, 1686,
	441, 1686,
	442, 1686,
	443, 1686,
	444, 1686,
	445, 1686,
	446, 1686,
	447, 1686,
	448, 1686,
	450, 1686,
	451, 1686,
	452, 1686,
	453, 1686,
	454, 1686,
	455, 1686,
	457, 1686,
	458, 1686,
	459, 1686,
	460, 1686,
	461, 1686,
	462, 1686,
	464, 1686,
	465, 1686,
	466, 1686,
	467, 1686,
	468, 1686,
	469, 1686,
	470, 1686,
	471, 1686,
	473, 1686,
	475, 1686,
	476, 1686,
	477, 1686,
	478, 1686,
	479, 1686,
	480, 1686,
	481, 1686,
	482, 1686,
	483, 1686,
	484, 1686,
	485, 1686,
	486, 1686,
	487, 1686,
	488, 1686,
	489, 1686,
	490, 1686,
	492, 1686,
	493, 1686,
	495, 1686,
	496, 1686,
	498, 1686,
	499, 1686,
	500, 1686,
	501, 1686,
	502, 1686,
	503, 1686,
	504, 1686,
	505, 1686,
	506, 1686,
	508, 1686,
	509, 1686,
	510, 1686,
	511, 1686,
	512, 1686,
	514, 1686,
	516, 1686,
	517, 1686,
	518, 1686,
	519, 1686,
	520, 1686,
	521, 1686,
	523, 1686,
	524, 1686,
	525, 1686,
	526, 1686,
	528, 1686,
	529, 1686,
	532, 1686,
	533, 1686,
	534, 1686,
	535, 1686,
	536, 1686,
	537, 1686,
	538, 1686,
	540, 1686,
	543, 1686,
	544, 1686,
	545, 1686,
	546, 1686,
	547, 1686,
	548, 1686,
	550, 1686,
	551, 1686,
	552, 1686,
	553, 1686,
	555, 1686,
	560, 1686,
	561, 1686,
	562, 1686,
	563, 1686,
	564, 1686,
	565, 1686,
	-2, 0,
	-1, 882,
	260, 402,
	-2, 0,
	-1, 954,
	392, 860,
	455, 860,
	496, 860,
	518, 860,
	-2, 0,
	-1, 955,
	392, 859,
	455, 859,
	496, 859,
	518, 859,
	-2, 799,
	-1, 959,
	1, 911,
	592, 911,
	594, 911,
	596, 911,
	-2, 0,
	-1, 960,
	1, 834,
	592, 834,
	594, 834,
	596, 834,
	-2, 0,
	-1, 961,
	1, 838,
	592, 838,
	594, 838,
	596, 838,
	-2, 0,
	-1, 962,
	1, 976,
	182, 976,
	592, 976,
	594, 976,
	596, 976,
	-2, 0,
	-1, 970,
	1, 865,
	592, 865,
	594, 865,
	596, 865,
	-2, 0,
	-1, 977,
	1, 911,
	592, 911,
	594, 911,
	596, 911,
	-2, 0,
	-1, 978,
	1, 913,
	592, 913,
	594, 913,
	596, 913,
	-2, 0,
	-1, 979,
	1, 916,
	592, 916,
	594, 916,
	596, 916,
	-2, 0,
	-1, 985,
	1, 940,
	592, 940,
	594, 940,
	596, 940,
	-2, 0,
	-1, 986,
	1, 942,
	592, 942,
	594, 942,
	596, 942,
	-2, 0,
	-1, 991,
	1, 970,
	592, 970,
	594, 970,
	596, 970,
	-2, 0,
	-1, 1039,
	169, 1560,
	182, 1560,
	273, 1560,
	340, 1560,
	-2, 1496,
	-1, 1054,
	169, 1559,
	182, 1559,
	273, 1559,
	340, 1559,
	-2, 1493,
	-1, 1081,
	595, 2277,
	-2, 699,
	-1, 1110,
	5, 2269,
	593, 2267,
	-2, 2258,
	-1, 1118,
	5, 2290,
	593, 2287,
	-2, 2278,
	-1, 1119,
	5, 2291,
	593, 2288,
	-2, 2279,
	-1, 1127,
	595, 2275,
	-2, 2257,
	-1, 1128,
	593, 2709,
	-2, 2276,
	-1, 1151,
	593, 2708,
	-2, 2292,
	-1, 1152,
	5, 1761,
	-2, 2679,
	-1, 1153,
	5, 1762,
	-2, 2680,
	-1, 1154,
	5, 1763,
	-2, 2694,
	-1, 1155,
	5, 1764,
	-2, 2658,
	-1, 1156,
	5, 1765,
	-2, 2692,
	-1, 1157,
	5, 1773,
	-2, 2671,
	-1, 1158,
	5, 1760,
	-2, 2667,
	-1, 1159,
	5, 1760,
	-2, 2666,
	-1, 1160,
	5, 1760,
	-2, 2685,
	-1, 1161,
	5, 1771,
	-2, 2660,
	-1, 1162,
	5, 1776,
	-2, 2659,
	-1, 1163,
	5, 1778,
	-2, 2704,
	-1, 1166,
	5, 1800,
	-2, 2697,
	-1, 1167,
	5, 1792,
	-2, 2698,
	-1, 1168,
	5, 1800,
	-2, 2699,
	-1, 1169,
	5, 1796,
	-2, 2700,
	-1, 1170,
	5, 1746,
	-2, 2672,
	-1, 1171,
	5, 1747,
	-2, 2673,
	-1, 1172,
	5, 1748,
	-2, 2661,
	-1, 1200,
	5, 1783,
	-2, 2705,
	-1, 1201,
	5, 1784,
	-2, 2695,
	-1, 1202,
	5, 1785,
	551, 1785,
	-2, 2662,
	-1, 1203,
	5, 1786,
	551, 1786,
	-2, 2663,
	-1, 1240,
	593, 2287,
	-2, 2278,
	-1, 1241,
	593, 2288,
	-2, 2279,
	-1, 1341,
	186, 2626,
	513, 2626,
	576, 2626,
	595, 2626,
	-2, 0,
	-1, 1344,
	1, 676,
	596, 676,
	-2, 1408,
	-1, 1472,
	359, 2252,
	414, 2252,
	457, 2252,
	586, 2252,
	-2, 2242,
	-1, 1483,
	597, 2252,
	-2, 2254,
	-1, 1491,
	1, 1258,
	419, 1222,
	457, 1222,
	571, 1222,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1545,
	-1, 1497,
	202, 1353,
	221, 1353,
	427, 1353,
	-2, 0,
	-1, 1542,
	399, 1046,
	550, 1046,
	-2, 397,
	-1, 1559,
	43, 2250,
	-2, 1012,
	-1, 1566,
	1, 1258,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1545,
	-1, 1574,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	325, 1283,
	327, 1283,
	328, 1283,
	332, 1283,
	333, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	339, 1283,
	342, 1283,
	344, 1283,
	346, 1283,
	347, 1283,
	348, 1283,
	351, 1283,
	352, 1283,
	353, 1283,
	355, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	369, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	385, 1283,
	387, 1283,
	388, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	401, 1283,
	403, 1283,
	405, 1283,
	406, 1283,
	407, 1283,
	412, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	423, 1283,
	425, 1283,
	426, 1283,
	427, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	435, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	448, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	455, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	462, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	471, 1283,
	473, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	490, 1283,
	492, 1283,
	493, 1283,
	495, 1283,
	496, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	506, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	512, 1283,
	514, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	521, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	526, 1283,
	528, 1283,
	529, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	538, 1283,
	540, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	548, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	553, 1283,
	555, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	565, 1283,
	-2, 0,
	-1, 1597,
	1, 542,
	592, 542,
	594, 542,
	596, 542,
	-2, 1516,
	-1, 1600,
	4, 2703,
	11, 2703,
	12, 2703,
	14, 2703,
	15, 2703,
	16, 2703,
	17, 2703,
	18, 2703,
	19, 2703,
	21, 2703,
	22, 2703,
	23, 2703,
	24, 2703,
	25, 2703,
	26, 2703,
	27, 2703,
	29, 2703,
	30, 2703,
	33, 2703,
	34, 2703,
	36, 2703,
	38, 2703,
	41, 2703,
	42, 2703,
	44, 2703,
	45, 2703,
	46, 2703,
	47, 2703,
	48, 2703,
	49, 2703,
	50, 2703,
	51, 2703,
	53, 2703,
	54, 2703,
	55, 2703,
	56, 2703,
	58, 2703,
	59, 2703,
	60, 2703,
	61, 2703,
	62, 2703,
	63, 2703,
	64, 2703,
	67, 2703,
	68, 2703,
	69, 2703,
	70, 2703,
	71, 2703,
	73, 2703,
	74, 2703,
	75, 2703,
	76, 2703,
	79, 2703,
	80, 2703,
	81, 2703,
	82, 2703,
	83, 2703,
	84, 2703,
	85, 2703,
	86, 2703,
	88, 2703,
	89, 2703,
	90, 2703,
	91, 2703,
	92, 2703,
	94, 2703,
	95, 2703,
	96, 2703,
	97, 2703,
	98, 2703,
	99, 2703,
	100, 2703,
	101, 2703,
	103, 2703,
	104, 2703,
	105, 2703,
	106, 2703,
	107, 2703,
	108, 2703,
	109, 2703,
	117, 2703,
	118, 2703,
	119, 2703,
	120, 2703,
	121, 2703,
	123, 2703,
	124, 2703,
	125, 2703,
	127, 2703,
	128, 2703,
	129, 2703,
	131, 2703,
	132, 2703,
	133, 2703,
	135, 2703,
	136, 2703,
	137, 2703,
	140, 2703,
	141, 2703,
	142, 2703,
	144, 2703,
	145, 2703,
	147, 2703,
	148, 2703,
	149, 2703,
	151, 2703,
	152, 2703,
	153, 2703,
	154, 2703,
	155, 2703,
	156, 2703,
	157, 2703,
	158, 2703,
	159, 2703,
	160, 2703,
	161, 2703,
	162, 2703,
	163, 2703,
	164, 2703,
	165, 2703,
	166, 2703,
	170, 2703,
	171, 2703,
	172, 2703,
	173, 2703,
	174, 2703,
	175, 2703,
	176, 2703,
	177, 2703,
	180, 2703,
	181, 2703,
	183, 2703,
	184, 2703,
	187, 2703,
	188, 2703,
	189, 2703,
	190, 2703,
	191, 2703,
	192, 2703,
	193, 2703,
	194, 2703,
	195, 2703,
	196, 2703,
	197, 2703,
	198, 2703,
	199, 2703,
	200, 2703,
	201, 2703,
	203, 2703,
	204, 2703,
	206, 2703,
	207, 2703,
	209, 2703,
	210, 2703,
	211, 2703,
	212, 2703,
	213, 2703,
	214, 2703,
	215, 2703,
	216, 2703,
	217, 2703,
	218, 2703,
	219, 2703,
	220, 2703,
	221, 2703,
	222, 2703,
	223, 2703,
	224, 2703,
	225, 2703,
	226, 2703,
	228, 2703,
	229, 2703,
	231, 2703,
	232, 2703,
	233, 2703,
	234, 2703,
	236, 2703,
	237, 2703,
	238, 2703,
	239, 2703,
	241, 2703,
	243, 2703,
	244, 2703,
	245, 2703,
	246, 2703,
	247, 2703,
	248, 2703,
	249, 2703,
	250, 2703,
	251, 2703,
	252, 2703,
	254, 2703,
	255, 2703,
	256, 2703,
	257, 2703,
	258, 2703,
	259, 2703,
	260, 2703,
	261, 2703,
	263, 2703,
	264, 2703,
	265, 2703,
	267, 2703,
	268, 2703,
	269, 2703,
	270, 2703,
	271, 2703,
	272, 2703,
	274, 2703,
	278, 2703,
	279, 2703,
	280, 2703,
	283, 2703,
	284, 2703,
	285, 2703,
	286, 2703,
	287, 2703,
	288, 2703,
	289, 2703,
	290, 2703,
	291, 2703,
	292, 2703,
	293, 2703,
	294, 2703,
	295, 2703,
	296, 2703,
	297, 2703,
	298, 2703,
	299, 2703,
	300, 2703,
	301, 2703,
	302, 2703,
	303, 2703,
	304, 2703,
	305, 2703,
	306, 2703,
	307, 2703,
	308, 2703,
	309, 2703,
	311, 2703,
	312, 2703,
	313, 2703,
	314, 2703,
	315, 2703,
	316, 2703,
	317, 2703,
	318, 2703,
	319, 2703,
	320, 2703,
	321, 2703,
	322, 2703,
	323, 2703,
	324, 2703,
	325, 2703,
	327, 2703,
	328, 2703,
	331, 2703,
	332, 2703,
	333, 2703,
	335, 2703,
	336, 2703,
	337, 2703,
	338, 2703,
	339, 2703,
	342, 2703,
	346, 2703,
	347, 2703,
	348, 2703,
	349, 2703,
	351, 2703,
	352, 2703,
	353, 2703,
	355, 2703,
	357, 2703,
	358, 2703,
	359, 2703,
	360, 2703,
	361, 2703,
	362, 2703,
	363, 2703,
	364, 2703,
	365, 2703,
	366, 2703,
	367, 2703,
	368, 2703,
	369, 2703,
	371, 2703,
	372, 2703,
	373, 2703,
	374, 2703,
	375, 2703,
	376, 2703,
	377, 2703,
	378, 2703,
	379, 2703,
	380, 2703,
	381, 2703,
	382, 2703,
	383, 2703,
	384, 2703,
	385, 2703,
	387, 2703,
	388, 2703,
	390, 2703,
	391, 2703,
	392, 2703,
	393, 2703,
	394, 2703,
	395, 2703,
	396, 2703,
	397, 2703,
	398, 2703,
	399, 2703,
	400, 2703,
	401, 2703,
	403, 2703,
	405, 2703,
	406, 2703,
	407, 2703,
	412, 2703,
	413, 2703,
	414, 2703,
	415, 2703,
	416, 2703,
	417, 2703,
	418, 2703,
	419, 2703,
	420, 2703,
	421, 2703,
	422, 2703,
	423, 2703,
	425, 2703,
	426, 2703,
	427, 2703,
	428, 2703,
	429, 2703,
	430, 2703,
	431, 2703,
	432, 2703,
	433, 2703,
	434, 2703,
	435, 2703,
	436, 2703,
	437, 2703,
	438, 2703,
	439, 2703,
	440, 2703,
	441, 2703,
	442, 2703,
	443, 2703,
	444, 2703,
	445, 2703,
	446, 2703,
	447, 2703,
	448, 2703,
	450, 2703,
	451, 2703,
	452, 2703,
	453, 2703,
	454, 2703,
	455, 2703,
	457, 2703,
	458, 2703,
	459, 2703,
	460, 2703,
	461, 2703,
	462, 2703,
	463, 2703,
	464, 2703,
	465, 2703,
	466, 2703,
	467, 2703,
	468, 2703,
	469, 2703,
	470, 2703,
	471, 2703,
	473, 2703,
	475, 2703,
	476, 2703,
	477, 2703,
	478, 2703,
	479, 2703,
	480, 2703,
	481, 2703,
	482, 2703,
	483, 2703,
	484, 2703,
	485, 2703,
	486, 2703,
	487, 2703,
	488, 2703,
	489, 2703,
	490, 2703,
	492, 2703,
	493, 2703,
	494, 2703,
	495, 2703,
	496, 2703,
	498, 2703,
	499, 2703,
	500, 2703,
	501, 2703,
	502, 2703,
	503, 2703,
	504, 2703,
	505, 2703,
	506, 2703,
	508, 2703,
	509, 2703,
	510, 2703,
	511, 2703,
	512, 2703,
	514, 2703,
	516, 2703,
	517, 2703,
	518, 2703,
	519, 2703,
	520, 2703,
	521, 2703,
	523, 2703,
	524, 2703,
	525, 2703,
	526, 2703,
	528, 2703,
	529, 2703,
	532, 2703,
	533, 2703,
	534, 2703,
	535, 2703,
	536, 2703,
	537, 2703,
	538, 2703,
	540, 2703,
	543, 2703,
	544, 2703,
	545, 2703,
	546, 2703,
	547, 2703,
	548, 2703,
	550, 2703,
	551, 2703,
	552, 2703,
	553, 2703,
	555, 2703,
	560, 2703,
	561, 2703,
	562, 2703,
	563, 2703,
	564, 2703,
	565, 2703,
	566, 2703,
	568, 2703,
	574, 2703,
	575, 2703,
	576, 2703,
	577, 2703,
	578, 2703,
	579, 2703,
	581, 2703,
	582, 2703,
	583, 2703,
	584, 2703,
	585, 2703,
	586, 2703,
	587, 2703,
	588, 2703,
	589, 2703,
	591, 2703,
	594, 2703,
	595, 2703,
	597, 2703,
	598, 2703,
	-2, 0,
	-1, 1605,
	186, 2585,
	513, 2585,
	576, 2585,
	595, 2585,
	-2, 0,
	-1, 1654,
	392, 860,
	455, 860,
	496, 860,
	518, 860,
	-2, 0,
	-1, 1681,
	1, 855,
	592, 855,
	594, 855,
	596, 855,
	-2, 0,
	-1, 1682,
	1, 898,
	592, 898,
	594, 898,
	596, 898,
	-2, 0,
	-1, 1683,
	1, 906,
	592, 906,
	594, 906,
	596, 906,
	-2, 0,
	-1, 1686,
	1, 864,
	592, 864,
	594, 864,
	596, 864,
	-2, 0,
	-1, 1688,
	1, 870,
	592, 870,
	594, 870,
	596, 870,
	-2, 0,
	-1, 1691,
	1, 866,
	592, 866,
	594, 866,
	596, 866,
	-2, 0,
	-1, 1696,
	1, 880,
	592, 880,
	594, 880,
	596, 880,
	-2, 0,
	-1, 1727,
	1, 2568,
	592, 2568,
	594, 2568,
	595, 2568,
	596, 2568,
	-2, 0,
	-1, 1731,
	1, 951,
	592, 951,
	594, 951,
	596, 951,
	-2, 0,
	-1, 1746,
	1, 1403,
	596, 1403,
	-2, 1408,
	-1, 1749,
	169, 1559,
	182, 1559,
	273, 1559,
	340, 1559,
	-2, 1497,
	-1, 1849,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	340, 1518,
	350, 1518,
	530, 1518,
	-2, 1965,
	-1, 1909,
	594, 2138,
	-2, 0,
	-1, 1944,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	340, 1518,
	350, 1518,
	530, 1518,
	-2, 1647,
	-1, 1979,
	513, 2582,
	595, 2582,
	598, 2582,
	-2, 0,
	-1, 1996,
	593, 1788,
	-2, 1776,
	-1, 2028,
	186, 2582,
	595, 2582,
	598, 2582,
	-2, 0,
	-1, 2076,
	1, 678,
	596, 678,
	-2, 1408,
	-1, 2209,
	221, 256,
	-2, 2286,
	-1, 2210,
	221, 257,
	-2, 305,
	-1, 2314,
	1, 857,
	592, 857,
	594, 857,
	596, 857,
	-2, 0,
	-1, 2315,
	1, 900,
	592, 900,
	594, 900,
	596, 900,
	-2, 0,
	-1, 2316,
	1, 908,
	592, 908,
	594, 908,
	596, 908,
	-2, 0,
	-1, 2317,
	1, 953,
	592, 953,
	594, 953,
	596, 953,
	-2, 0,
	-1, 2354,
	1, 882,
	592, 882,
	594, 882,
	596, 882,
	-2, 0,
	-1, 2372,
	1, 936,
	592, 936,
	594, 936,
	596, 936,
	-2, 0,
	-1, 2417,
	434, 1586,
	435, 1586,
	-2, 1821,
	-1, 2448,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1841,
	-1, 2449,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1842,
	-1, 2450,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1843,
	-1, 2451,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1844,
	-1, 2452,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1845,
	-1, 2453,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1846,
	-1, 2454,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1847,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1848,
	-1, 2467,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1860,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1861,
	-1, 2469,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1862,
	-1, 2473,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1869,
	-1, 2479,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1873,
	-1, 2481,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1881,
	-1, 2482,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1882,
	-1, 2483,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1883,
	-1, 2484,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1884,
	-1, 2656,
	5, 2290,
	186, 2149,
	593, 2287,
	-2, 2278,
	-1, 2657,
	186, 2150,
	-2, 2654,
	-1, 2658,
	186, 2151,
	-2, 2475,
	-1, 2659,
	186, 2152,
	-2, 2360,
	-1, 2660,
	186, 2153,
	-2, 2415,
	-1, 2661,
	186, 2154,
	-2, 2460,
	-1, 2662,
	186, 2155,
	-2, 2580,
	-1, 2663,
	186, 2156,
	-2, 1948,
	-1, 2734,
	1, 1648,
	2, 1648,
	106, 1648,
	150, 1648,
	169, 1648,
	182, 1648,
	187, 1648,
	205, 1648,
	208, 1648,
	236, 1648,
	240, 1648,
	251, 1648,
	269, 1648,
	273, 1648,
	312, 1648,
	340, 1648,
	344, 1648,
	350, 1648,
	424, 1648,
	428, 1648,
	530, 1648,
	541, 1648,
	557, 1648,
	558, 1648,
	559, 1648,
	569, 1648,
	592, 1648,
	594, 1648,
	596, 1648,
	598, 1648,
	-2, 1647,
	-1, 2747,
	593, 2259,
	-2, 2273,
	-1, 2749,
	1, 322,
	557, 322,
	-2, 1545,
	-1, 2777,
	593, 1787,
	-2, 1777,
	-1, 2962,
	1, 1258,
	419, 1222,
	457, 1222,
	571, 1222,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1545,
	-1, 3139,
	345, 1589,
	-2, 2693,
	-1, 3140,
	345, 1590,
	-2, 2565,
	-1, 3144,
	434, 2215,
	435, 2215,
	-2, 1946,
	-1, 3145,
	434, 2219,
	435, 2219,
	-2, 1947,
	-1, 3146,
	434, 2216,
	435, 2216,
	-2, 1946,
	-1, 3147,
	434, 2220,
	435, 2220,
	-2, 1947,
	-1, 3160,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1871,
	-1, 3161,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1875,
	-1, 3167,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1877,
	-1, 3390,
	1, 675,
	592, 675,
	594, 675,
	596, 675,
	-2, 1408,
	-1, 3559,
	43, 2250,
	-2, 1013,
	-1, 3564,
	1, 1258,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1545,
	-1, 3671,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1879,
	-1, 3678,
	245, 0,
	247, 0,
	331, 0,
	-2, 1898,
	-1, 3746,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1927,
	-1, 3747,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1928,
	-1, 3748,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1929,
	-1, 3752,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1933,
	-1, 3753,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1934,
	-1, 3754,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1935,
	-1, 3801,
	593, 2260,
	-2, 2274,
	-1, 3973,
	595, 2811,
	-2, 1471,
	-1, 4031,
	245, 0,
	247, 0,
	331, 0,
	-2, 1899,
	-1, 4034,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1902,
	-1, 4035,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1904,
	-1, 4129,
	595, 2275,
	-2, 1293,
	-1, 4278,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1903,
	-1, 4279,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1905,
	-1, 4290,
	245, 0,
	-2, 1938,
	-1, 4471,
	245, 0,
	-2, 1939,
	-1, 4663,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 2657,
}

const sqlPrivate = 57344

const sqlLast = 129833

var sqlAct = [...]int{
	269, 4778, 3548, 4393, 4857, 3298, 3045, 4508, 3032, 4656,
	4655, 4719, 4765, 4500, 4335, 2840, 4662, 4644, 4535, 3547,
	4673, 4794, 2124, 4556, 4631, 1233, 4531, 4609, 4612, 4125,
	4675, 2206, 4732, 4592, 4674, 4424, 4400, 4321, 2884, 4378,
	3711, 2281, 2906, 4475, 4234, 4229, 4172, 1110, 4195, 3663,
	4299, 4661, 4340, 1313, 2427, 3412, 4267, 3957, 4014, 4209,
	3965, 4216, 4409, 3894, 4218, 3581, 3153, 1064, 3474, 697,
	4126, 1317, 1306, 2689, 4110, 807, 1244, 2058, 4438, 2496,
	3575, 1758, 4239, 3922, 2919, 1055, 2045, 768, 3938, 1621,
	2435, 2290, 3415, 2132, 3543, 3533, 3054, 3620, 2428, 3920,
	3067, 807, 1983, 3804, 1950, 3021, 3002, 3622, 3342, 2991,
	2211, 3056, 4295, 3313, 3321, 1662, 1121, 1377, 1469, 4070,
	4013, 3281, 3064, 3018, 708, 1063, 177, 3047, 3302, 1308,
	3033, 3016, 2254, 3053, 880, 4, 2193, 2143, 884, 1919,
	3304, 1984, 2933, 3434, 2842, 2195, 1895, 4766, 2727, 3772,
	3280, 2432, 4476, 1857, 1827, 3137, 3409, 2509, 875, 1476,
	802, 2194, 1117, 2574, 2938, 108, 3063, 948, 763, 1224,
	1311, 1561, 2170, 2177, 3003, 2995, 2189, 1114, 1359, 2112,
	263, 2726, 2883, 2116, 3401, 1285, 1746, 2056, 2707, 2576,
	1119, 2565, 1920, 3349, 2493, 2102, 2399, 262, 2416, 1939,
	2397, 3545, 1598, 2288, 2760, 2241, 1564, 1619, 3026, 808,
	4557, 809, 741, 2865, 4779, 1346, 2759, 804, 3057, 177,
	3915, 2828, 2568, 1227, 2716, 2697, 2652, 2618, 1929, 1936,
	1206, 2686, 1890, 1841, 1759, 749, 1241, 2546, 186, 1760,
	1696, 1681, 1589, 187, 2398, 2267, 1296, 2400, 1223, 1596,
	761, 1501, 2131, 2421, 2240, 813, 4720, 1095, 2729, 2034,
	2031, 701, 44, 43, 41, 32, 30, 28, 1204, 3190,
	1164, 856, 816, 698, 1229, 709, 1765, 1745, 1512, 724,
	968, 813, 3786, 1239, 3787, 3300, 797, 3184, 4870, 2047,
	4314, 2047, 2706, 1355, 2047, 1059, 4700, 2047, 816, 2047,
	857, 2047, 2047, 4860, 3591, 1059, 1526, 3600, 684, 1112,
	4844, 4843, 706, 876, 2706, 2706, 3374, 4833, 899, 4814,
	1687, 2215, 2289, 4339, 1505, 4812, 3590, 4751, 3372, 4339,
	4708, 2215, 1628, 4697, 4709, 2215, 2699, 2706, 4311, 1263,
	73, 4695, 879, 878, 4692, 2706, 4689, 4659, 4693, 3600,
	4690, 2215, 4658, 1049, 1060, 4657, 2215, 74, 4652, 2068,
	2215, 4651, 2068, 1773, 1774, 2068, 4642, 4640, 4637, 3152,
	4339, 4339, 4412, 78, 4607, 4581, 1221, 4574, 4339, 2768,
	4573, 2706, 2706, 4568, 2706, 4582, 1804, 4339, 4567, 1299,
	4561, 4527, 4339, 1776, 2215, 4186, 4473, 4455, 1236, 4452,
	2768, 4000, 4449, 2215, 4402, 4356, 4339, 4355, 4403, 2215,
	4346, 2215, 4091, 87, 2215, 4477, 1040, 3357, 4345, 1829,
	4338, 1039, 4339, 2065, 4339, 4306, 4280, 4258, 1775, 2215,
	2768, 2068, 4247, 1614, 4167, 4150, 3600, 1355, 2706, 2706,
	4033, 3251, 3252, 3981, 2768, 3975, 3936, 3617, 3796, 3617,
	3937, 2215, 3797, 882, 1773, 1774, 3794, 1054, 3779, 3695,
	3795, 4468, 2706, 2215, 3691, 49, 3776, 107, 2706, 2789,
	3616, 3607, 93, 104, 3617, 3608, 3297, 93, 1256, 3292,
	2706, 1773, 1774, 2706, 1776, 3291, 1207, 1207, 3242, 2706,
	3240, 3232, 3243, 233, 3241, 3233, 2764, 1208, 4456, 3230,
	1514, 3201, 2065, 2706, 1804, 2706, 3251, 3252, 3199, 3071,
	4412, 1776, 1514, 2068, 3200, 2571, 3043, 3042, 1525, 1775,
	2277, 2277, 2812, 2767, 2757, 2751, 2706, 2768, 2706, 2215,
	2705, 94, 1781, 2068, 2706, 2215, 2276, 1829, 3251, 3252,
	2277, 235, 1210, 2706, 1211, 3776, 1775, 2698, 4227, 4186,
	2065, 1257, 4151, 3189, 2788, 4000, 3608, 2909, 2136, 2827,
	2081, 2046, 2062, 1257, 2997, 2214, 2522, 2523, 2524, 2541,
	2542, 2543, 2929, 2825, 1915, 1500, 3877, 1773, 1774, 3666,
	1803, 1805, 3641, 1937, 2182, 1664, 2544, 3592, 2743, 2742,
	234, 2741, 2740, 2739, 1212, 1209, 1048, 233, 1047, 1046,
	1804, 1045, 1044, 227, 2572, 1043, 3593, 1776, 1042, 1038,
	3257, 1037, 228, 1514, 1036, 1035, 3251, 3252, 1034, 1829,
	1033, 3111, 4086, 1781, 1032, 1031, 1030, 1029, 1028, 1027,
	1026, 1025, 1024, 1829, 1023, 1773, 1774, 188, 2534, 1796,
	4241, 1022, 1775, 1021, 946, 235, 2048, 2530, 2048, 945,
	1781, 2048, 1795, 944, 2048, 943, 2048, 942, 2048, 2048,
	941, 1792, 940, 939, 938, 1776, 937, 936, 935, 934,
	933, 932, 931, 930, 929, 3257, 1116, 97, 928, 927,
	926, 925, 924, 923, 922, 921, 2573, 920, 2570, 919,
	918, 3266, 917, 916, 234, 915, 914, 913, 1803, 1805,
	1775, 912, 2065, 902, 901, 897, 896, 3257, 890, 889,
	874, 873, 1826, 1520, 1513, 4027, 3590, 3267, 830, 829,
	828, 827, 2535, 2536, 2537, 2538, 1505, 819, 1257, 2347,
	185, 100, 2529, 1632, 103, 818, 1798, 1799, 1800, 1801,
	2065, 188, 1322, 1119, 2601, 817, 1781, 783, 2698, 3011,
	774, 1257, 773, 233, 772, 755, 257, 1796, 256, 1506,
	233, 255, 254, 253, 252, 233, 251, 233, 883, 250,
	1119, 1119, 1618, 149, 3251, 3252, 249, 248, 149, 233,
	247, 246, 3267, 245, 244, 3257, 243, 1380, 1797, 242,
	1826, 1380, 241, 240, 1803, 1805, 1330, 3029, 1322, 239,
	238, 235, 237, 1826, 1781, 236, 2539, 2540, 235, 4045,
	3818, 3790, 3618, 235, 3267, 235, 3345, 3212, 3195, 3186,
	1790, 1791, 1119, 2215, 1119, 2799, 1119, 235, 2046, 3094,
	1826, 2065, 1322, 2062, 152, 2788, 2392, 1363, 1364, 2532,
	2575, 3251, 3252, 2978, 2772, 4243, 1828, 2748, 2733, 189,
	234, 1093, 1316, 1796, 1350, 1826, 1940, 234, 1322, 2587,
	3295, 2110, 234, 227, 234, 1484, 3268, 2585, 2284, 1479,
	227, 1062, 228, 2067, 1689, 227, 234, 227, 1322, 228,
	233, 1898, 1772, 1898, 228, 1322, 228, 1826, 1897, 227,
	1897, 1963, 3267, 1119, 1514, 1119, 1868, 188, 228, 1322,
	3296, 1508, 1366, 1243, 877, 1119, 1797, 1119, 1491, 188,
	1859, 188, 1235, 1901, 4480, 1896, 1504, 4680, 4660, 4639,
	4542, 1290, 1293, 188, 4333, 1519, 1826, 4465, 235, 3251,
	3252, 3268, 1570, 1573, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 1529, 3257, 1303, 4459, 3941, 4457, 4294, 1344,
	4248, 4226, 2283, 4097, 1322, 1373, 2569, 1466, 1471, 4068,
	4067, 4061, 4060, 3268, 1828, 1826, 4059, 1489, 1566, 4052,
	4051, 4049, 4044, 1119, 4041, 4040, 1119, 234, 3935, 1802,
	3822, 3821, 3820, 3800, 3767, 2781, 1866, 3766, 2533, 3765,
	227, 813, 3687, 3682, 3340, 1607, 3013, 3288, 3279, 228,
	3250, 3247, 1797, 3246, 177, 177, 3244, 3239, 816, 1620,
	3257, 1339, 3260, 3261, 3253, 3254, 3255, 3256, 3258, 3259,
	1503, 3238, 1502, 3237, 188, 2222, 1559, 1777, 1778, 1779,
	1780, 1782, 1783, 3234, 3231, 3211, 3194, 1601, 1603, 3187,
	3185, 3268, 3044, 1060, 2734, 2558, 1828, 1633, 1772, 1861,
	3267, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	1828, 1220, 1859, 1771, 1646, 3875, 4864, 1860, 4804, 1858,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 3261, 3253,
	3254, 3255, 3256, 3258, 3259, 4803, 2220, 1237, 2257, 3942,
	4767, 4718, 4716, 1705, 4242, 1245, 3713, 4599, 3257, 1350,
	4534, 4518, 1350, 1119, 4515, 4514, 4513, 4494, 4479, 1119,
	4478, 3253, 3254, 3255, 3256, 3258, 3259, 1638, 4453, 4437,
	233, 1592, 4436, 1826, 2499, 1750, 2519, 2520, 2521, 2545,
	2531, 2525, 4422, 2527, 2528, 2526, 2513, 2514, 2515, 2516,
	2517, 2518, 4419, 4418, 1793, 1789, 4413, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 4352, 4329, 4292, 3364,
	233, 233, 4275, 4274, 3293, 4255, 4254, 4212, 235, 4187,
	4085, 4066, 1613, 4001, 1744, 3995, 233, 3992, 3863, 1474,
	233, 3862, 3846, 3845, 1627, 3843, 3262, 3260, 3261, 3253,
	3254, 3255, 3256, 3258, 3259, 3012, 3782, 3942, 4481, 3268,
	3770, 3677, 1846, 3619, 3601, 1848, 3567, 2033, 235, 235,
	1779, 1780, 1782, 1783, 1119, 1119, 1119, 234, 1751, 233,
	1119, 2505, 3491, 3447, 235, 3414, 3366, 1241, 235, 1241,
	227, 3216, 3215, 3210, 3176, 2990, 1655, 1904, 1903, 228,
	1902, 1899, 1891, 233, 1380, 1889, 2779, 2778, 2745, 1690,
	2738, 2704, 1576, 1119, 2583, 1845, 807, 234, 234, 1962,
	1918, 1913, 2001, 807, 3028, 1912, 1322, 235, 1060, 1911,
	227, 227, 1910, 234, 1239, 1909, 1239, 234, 1826, 228,
	228, 1908, 1907, 1906, 1917, 1905, 227, 1886, 1747, 1885,
	227, 235, 1884, 1926, 1883, 228, 1970, 1882, 1881, 228,
	1755, 1880, 1040, 1754, 188, 188, 1879, 1039, 1878, 1749,
	1877, 1590, 3337, 1876, 1875, 1900, 234, 1874, 233, 1873,
	188, 1872, 1861, 1847, 188, 1844, 1974, 1971, 1839, 227,
	1338, 1261, 1322, 1252, 1768, 1769, 2600, 4215, 228, 1119,
	234, 4093, 4037, 1322, 3262, 3260, 3261, 3253, 3254, 3255,
	3256, 3258, 3259, 227, 1923, 1924, 177, 3817, 1595, 2285,
	1119, 3793, 228, 188, 3785, 3198, 235, 1380, 2770, 1947,
	1773, 1774, 2736, 4312, 4095, 3251, 3252, 2052, 1995, 3816,
	2054, 1860, 3362, 2126, 1842, 2101, 2059, 188, 3596, 1236,
	2061, 1236, 1892, 1893, 1060, 2064, 2101, 2099, 2101, 1958,
	1776, 4153, 4801, 1362, 4793, 2907, 2936, 4516, 4414, 4405,
	4404, 4246, 2074, 4189, 4188, 234, 3255, 3256, 3258, 3259,
	4152, 4088, 4004, 4003, 2073, 4002, 1969, 2108, 227, 1948,
	3788, 3603, 3602, 1350, 1360, 1775, 813, 228, 1898, 3945,
	3450, 3664, 1355, 813, 2934, 1897, 1940, 3889, 2888, 1355,
	3236, 2586, 1945, 816, 1938, 1654, 4410, 3235, 1742, 2584,
	816, 3158, 188, 2870, 1207, 1881, 1361, 1358, 3483, 3860,
	3416, 2087, 1019, 1975, 1916, 2050, 1870, 1706, 2093, 2092,
	2024, 4296, 2101, 2103, 3550, 1663, 3549, 2196, 1356, 2179,
	4730, 2306, 3300, 1957, 1956, 1955, 1953, 1952, 1951, 1322,
	1322, 1942, 3253, 3254, 3255, 3256, 3258, 3259, 73, 1380,
	4460, 1355, 4458, 2282, 2566, 4332, 4401, 1020, 4704, 1981,
	4685, 4672, 3612, 3534, 2571, 74, 1881, 3068, 2076, 1664,
	2197, 3949, 1998, 3932, 3891, 3886, 3868, 3638, 3388, 3715,
	2777, 78, 1914, 3204, 4681, 4348, 4325, 4138, 1894, 2915,
	2867, 3541, 2251, 1569, 4136, 1496, 1333, 1289, 2935, 4509,
	4694, 2926, 4691, 3586, 2923, 2921, 3838, 1642, 2164, 4230,
	2169, 1989, 4606, 2174, 1867, 4491, 3419, 3855, 3051, 3025,
	2072, 87, 3518, 4748, 3658, 3904, 869, 3392, 2207, 2212,
	4374, 4140, 2070, 1536, 4749, 1017, 1544, 2813, 1015, 1703,
	2096, 1685, 2079, 1322, 1594, 1322, 1352, 1322, 2360, 2914,
	2866, 4682, 2104, 2572, 1685, 2358, 2094, 2831, 39, 1013,
	4859, 882, 4522, 1322, 1322, 1011, 4367, 4358, 4181, 2844,
	4783, 4180, 2829, 49, 1322, 107, 1967, 1008, 3902, 3394,
	93, 104, 3901, 2258, 2142, 3893, 1322, 2831, 1322, 1322,
	1322, 3883, 1219, 3903, 1595, 1498, 2199, 2200, 3882, 3880,
	1000, 1704, 2829, 3879, 2315, 2407, 2201, 3867, 3833, 747,
	3832, 807, 2614, 3524, 3523, 3356, 2292, 1682, 3209, 3208,
	2136, 813, 2247, 1545, 3207, 2163, 3206, 1357, 2305, 2088,
	3162, 870, 2932, 1119, 2931, 2573, 2928, 2570, 816, 94,
	1702, 2917, 2905, 2252, 2904, 1684, 2898, 2897, 3841, 1639,
	1503, 995, 1502, 2896, 2875, 2098, 2874, 2280, 1684, 2835,
	2758, 2480, 2264, 1748, 2405, 2613, 2437, 2316, 1119, 3022,
	2785, 2162, 2173, 1316, 2294, 1053, 2231, 2762, 1540, 2310,
	1683, 1275, 2847, 3363, 2296, 1353, 2495, 1640, 2287, 1582,
	3639, 1581, 2213, 2097, 1354, 2389, 2304, 4135, 2307, 2308,
	2309, 1362, 1119, 4273, 1119, 4349, 4326, 1580, 1060, 1579,
	1060, 1119, 1005, 2872, 2001, 2001, 1380, 2302, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 2232, 1119, 1362, 1119, 1119, 1119,
	1119, 2261, 2274, 2233, 1361, 2197, 2266, 996, 3481, 2282,
	2391, 2293, 1592, 2270, 2269, 4784, 2269, 2868, 2868, 2077,
	2396, 2409, 2384, 1119, 3449, 97, 2372, 1119, 1119, 2575,
	2272, 813, 2278, 3416, 2279, 1119, 1339, 1740, 4383, 1119,
	1058, 1119, 1119, 1553, 2820, 2495, 3074, 4103, 816, 1380,
	2406, 2167, 4134, 4788, 1558, 1119, 1119, 1119, 1119, 1361,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 2332, 2297,
	1995, 1995, 1715, 746, 2381, 2858, 2364, 2314, 185, 100,
	1594, 2371, 103, 1235, 3135, 1235, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 2433, 2434, 2503, 2319, 1119,
	2547, 2548, 2771, 1345, 2501, 3852, 1499, 1355, 233, 2322,
	4102, 1241, 2313, 4816, 2547, 2563, 883, 1635, 1380, 2354,
	696, 149, 4502, 2846, 2404, 2750, 1656, 1241, 1783, 2892,
	1057, 3912, 2383, 3259, 2857, 2271, 2566, 1701, 3150, 2420,
	2609, 2885, 2886, 1119, 1380, 2569, 691, 1356, 3647, 4789,
	1652, 3646, 2885, 2886, 2885, 2886, 235, 1753, 1239, 2655,
	2655, 2669, 4137, 2547, 2393, 4154, 2690, 2692, 3482, 872,
	871, 781, 2696, 2408, 1239, 2395, 2401, 4748, 2394, 1337,
	2511, 3108, 152, 748, 1040, 1966, 3913, 1040, 1040, 2424,
	1060, 3704, 2425, 2426, 2562, 3117, 1980, 189, 997, 2575,
	1060, 1741, 2721, 2029, 1060, 234, 2298, 4122, 4797, 2834,
	4272, 2133, 2925, 3391, 1664, 4179, 2746, 4678, 227, 2323,
	2871, 2407, 1664, 3850, 1998, 1998, 3881, 228, 867, 3911,
	866, 1356, 3864, 1565, 1248, 1636, 3878, 2117, 2105, 2106,
	1059, 4118, 2118, 4504, 2924, 2129, 910, 2922, 2920, 1322,
	1322, 2713, 188, 995, 2507, 4132, 3825, 3812, 1237, 4791,
	1237, 2611, 2830, 1989, 1989, 1352, 2612, 1947, 2845, 2615,
	3149, 2616, 2617, 1236, 2134, 2135, 1246, 1053, 2560, 3173,
	2405, 779, 4384, 3530, 1563, 3522, 1641, 2761, 177, 1236,
	1009, 1380, 1060, 1009, 4382, 4119, 1539, 2765, 2712, 1274,
	4380, 3479, 2359, 2808, 2130, 3120, 1719, 2834, 3171, 2357,
	2735, 2136, 2651, 2664, 1009, 2802, 2720, 2794, 2725, 1250,
	1010, 2731, 2732, 2798, 1319, 2001, 2694, 2681, 2927, 2702,
	2703, 1698, 1009, 2895, 2816, 2873, 2784, 2809, 2718, 2719,
	2714, 2380, 1900, 998, 2390, 2575, 1357, 4379, 4762, 1352,
	1945, 3466, 1350, 2818, 1207, 2119, 1958, 2773, 3701, 2807,
	1316, 2403, 2491, 1380, 2219, 2218, 2477, 3142, 3143, 996,
	4770, 4769, 2123, 3865, 2756, 4381, 2805, 3164, 3583, 1322,
	4122, 4819, 4737, 4019, 3528, 2810, 1249, 4018, 2160, 1542,
	2819, 2489, 4679, 3584, 2836, 3114, 999, 903, 4588, 2382,
	1119, 1119, 2780, 1119, 1353, 4847, 3467, 3458, 1051, 2966,
	995, 2817, 4133, 1354, 4118, 2793, 2804, 2047, 4111, 2796,
	1056, 2797, 2783, 1892, 1893, 807, 2406, 1322, 2183, 4317,
	1357, 2787, 2811, 2190, 1053, 4109, 2908, 2156, 3119, 2918,
	3702, 1995, 2833, 2903, 4113, 2120, 2125, 1006, 2803, 3465,
	3168, 2902, 4790, 2893, 2136, 3473, 4510, 4529, 1322, 4795,
	2877, 4578, 3459, 2165, 2967, 1565, 2878, 3036, 4119, 3116,
	1322, 2832, 1322, 3583, 2180, 3169, 2814, 3403, 2861, 3174,
	1052, 2139, 3065, 3393, 2192, 1713, 2321, 1322, 1353, 2962,
	692, 2876, 2157, 745, 4677, 780, 2494, 1354, 4114, 4646,
	2404, 4647, 1928, 4115, 2894, 3457, 2161, 2965, 4503, 2831,
	4112, 3009, 2887, 2889, 2890, 2891, 2839, 1497, 3075, 3076,
	2849, 2852, 2963, 2964, 2850, 3494, 996, 1259, 2121, 3082,
	3083, 3084, 1119, 2485, 2475, 2155, 2140, 2478, 3851, 2191,
	2901, 1887, 1329, 2502, 782, 2168, 2184, 3360, 778, 1714,
	2900, 4711, 1716, 2486, 2899, 4117, 2318, 2168, 2487, 3069,
	997, 4712, 2492, 2724, 3005, 4796, 2144, 2913, 891, 693,
	2312, 4120, 3118, 2901, 4269, 813, 2127, 4204, 2180, 2138,
	3431, 3092, 177, 1932, 2180, 2117, 1355, 4759, 2474, 2148,
	2118, 2973, 816, 1119, 2575, 1998, 2975, 3081, 2971, 1119,
	1119, 4798, 3050, 2749, 1503, 813, 2976, 1651, 1653, 3529,
	4736, 2127, 1637, 4015, 1752, 3040, 3089, 4629, 694, 2988,
	695, 1511, 816, 1518, 911, 1524, 4285, 3397, 2998, 3099,
	2801, 3101, 1935, 3103, 1989, 2176, 1336, 3430, 714, 3122,
	3097, 3124, 2999, 3435, 904, 905, 2145, 1930, 4576, 3925,
	820, 4617, 4164, 1247, 2557, 1119, 1119, 3112, 3923, 3031,
	3041, 1119, 2175, 3170, 1838, 1933, 1932, 3052, 1928, 3214,
	1355, 4114, 2671, 3172, 1119, 1119, 4115, 3072, 3925, 3070,
	1119, 1119, 3077, 3404, 3078, 3039, 1119, 3923, 2717, 4577,
	3020, 1717, 1612, 1059, 1617, 3437, 2171, 4820, 2730, 4219,
	4116, 3630, 3717, 2119, 1626, 998, 1631, 4807, 1931, 4214,
	3623, 4268, 3038, 1068, 4009, 1935, 3098, 997, 4220, 4805,
	2123, 4184, 3813, 2158, 1264, 2134, 2135, 4020, 4117, 3660,
	2715, 1119, 1119, 1119, 3133, 4536, 3927, 1119, 3165, 4123,
	3315, 4676, 3130, 4447, 4120, 4747, 2488, 1119, 1933, 1932,
	2168, 3472, 3141, 2149, 4745, 2172, 2490, 2122, 999, 3436,
	4622, 4555, 4848, 2187, 1119, 3927, 4421, 4183, 4182, 1688,
	1669, 3926, 3132, 1762, 2048, 3131, 3963, 3571, 2166, 2476,
	2239, 1925, 1262, 1718, 1255, 683, 1757, 1235, 2420, 3151,
	3940, 3136, 1763, 2120, 2125, 4205, 4439, 3756, 1935, 4064,
	3926, 4016, 2423, 1235, 4710, 3192, 3193, 2137, 3625, 4440,
	3196, 4735, 1762, 1930, 3188, 892, 893, 2851, 2185, 2150,
	2151, 2159, 2089, 3624, 1934, 3350, 4347, 4430, 4490, 4825,
	3964, 1933, 3897, 3884, 2086, 3837, 1077, 906, 907, 3806,
	3410, 3630, 4441, 2146, 3572, 1060, 3563, 3406, 3010, 4270,
	3623, 3004, 3163, 2167, 1119, 1119, 1119, 1119, 2992, 2265,
	1050, 2186, 998, 2259, 1119, 1119, 1119, 2253, 2245, 1119,
	2225, 4537, 2413, 4116, 1931, 3700, 2121, 1761, 3829, 1119,
	1241, 1380, 1533, 1266, 3771, 1119, 2147, 1119, 3307, 3308,
	3921, 754, 3091, 3807, 4593, 3661, 1241, 821, 822, 2834,
	2708, 4558, 2365, 2082, 3100, 4443, 3102, 1934, 3104, 3966,
	2084, 1762, 4123, 3621, 1380, 999, 1761, 4235, 2989, 3808,
	3441, 3805, 1277, 4399, 2127, 4397, 1241, 1239, 4442, 1380,
	4217, 4328, 3422, 3418, 4021, 2711, 3203, 3314, 3417, 3924,
	3156, 3134, 3290, 1239, 1763, 2303, 4444, 1686, 3625, 2001,
	3784, 3343, 2085, 1380, 3125, 3312, 2755, 3127, 3309, 2879,
	3311, 3323, 1237, 3624, 2754, 1692, 1691, 2753, 3924, 1322,
	1322, 2752, 1838, 1239, 1588, 3439, 2710, 1574, 1237, 3931,
	1586, 2709, 909, 1763, 1057, 2996, 3330, 4394, 3757, 2117,
	1934, 1575, 1119, 3844, 2118, 4336, 4497, 3758, 4196, 4065,
	3613, 2855, 2263, 3537, 4252, 2152, 1119, 3319, 894, 895,
	2414, 4756, 3344, 261, 4533, 1761, 1322, 2126, 3440, 4022,
	3834, 2001, 4315, 3339, 3398, 3399, 3373, 3358, 3073, 1954,
	2974, 3631, 3626, 3627, 3628, 3629, 3317, 4824, 2972, 1119,
	824, 823, 1236, 2970, 2291, 3420, 2196, 1645, 3424, 4603,
	4596, 2126, 3495, 4590, 4498, 1322, 3324, 3382, 1236, 3389,
	3378, 4071, 3773, 3380, 3381, 1995, 3336, 4538, 3384, 2582,
	3385, 3301, 3386, 3395, 3830, 3348, 4251, 1322, 4760, 1322,
	1736, 2153, 3318, 3316, 4624, 1350, 3421, 3328, 1236, 3426,
	3361, 1738, 3428, 3331, 3332, 3285, 3286, 3287, 1380, 2179,
	4337, 4323, 825, 826, 1735, 2122, 3322, 2119, 2179, 1322,
	1970, 1733, 1670, 1322, 3334, 3407, 3335, 3497, 2376, 3499,
	3809, 1710, 3503, 1708, 2123, 1680, 3509, 3352, 3353, 3354,
	3452, 3484, 2880, 2881, 4761, 1678, 1676, 1995, 4597, 3327,
	1322, 1674, 4499, 1672, 4758, 1666, 4166, 4324, 3367, 3368,
	4696, 3369, 3477, 1322, 3351, 1322, 4525, 4517, 2356, 1380,
	4291, 3379, 3411, 4063, 4386, 3930, 807, 3329, 3383, 3282,
	3676, 3631, 3626, 3627, 3628, 3629, 1661, 1322, 753, 2994,
	3390, 3835, 3492, 1659, 3636, 1584, 3546, 3635, 3456, 1322,
	3371, 3396, 3245, 4445, 3175, 2993, 3470, 2120, 2125, 4446,
	2916, 2869, 1599, 2782, 2385, 1965, 1241, 1961, 1739, 1623,
	3579, 2204, 3283, 3656, 1587, 3655, 1757, 3555, 3110, 1998,
	1585, 3438, 908, 3109, 3065, 3080, 2402, 1697, 2327, 3448,
	2244, 1322, 1322, 3065, 2224, 2030, 1871, 1634, 3454, 1557,
	3461, 2581, 3532, 4671, 3535, 3577, 3325, 3326, 3464, 4165,
	3516, 3462, 3888, 1239, 1322, 3463, 3887, 4149, 1989, 4589,
	3468, 3496, 3562, 3485, 4233, 4171, 3599, 3095, 3570, 3096,
	4162, 3493, 3697, 4107, 4228, 1737, 4749, 3588, 3962, 3520,
	2121, 3953, 3515, 3512, 3514, 3900, 3506, 3556, 1734, 3885,
	3858, 1998, 3504, 3856, 3576, 1732, 3510, 1380, 2378, 3564,
	1380, 3836, 2377, 3640, 3521, 1709, 3566, 1707, 3561, 1679,
	1007, 3551, 3023, 3015, 3008, 3000, 2986, 2968, 3525, 1677,
	1675, 2877, 2800, 2795, 2115, 1673, 3539, 1671, 2127, 1665,
	1989, 2223, 3573, 1119, 3580, 2221, 4733, 2198, 2355, 1119,
	1119, 3605, 3606, 1119, 1119, 1119, 813, 1119, 177, 177,
	1378, 3559, 3560, 3633, 1477, 3558, 1119, 2001, 2181, 2154,
	1660, 2141, 4724, 816, 2128, 1119, 3615, 1658, 1236, 1583,
	1119, 3611, 2069, 2066, 1060, 3585, 1380, 2063, 3654, 2113,
	2060, 3597, 3598, 2055, 3594, 1119, 2053, 2049, 2040, 1216,
	3507, 2205, 1766, 1380, 3609, 2190, 3643, 4219, 3644, 1973,
	3645, 2090, 3128, 2001, 2001, 1119, 1119, 3126, 1119, 1119,
	1119, 3154, 2961, 4634, 4257, 1217, 4220, 3653, 4250, 4249,
	4178, 4099, 2114, 3066, 2109, 2388, 1119, 1538, 4432, 2856,
	1119, 3662, 2001, 2001, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 3632, 1119, 3650, 3689, 3690, 3679,
	3729, 3634, 3730, 1119, 1119, 2001, 1012, 1014, 1016, 3587,
	1119, 2386, 3659, 1995, 2831, 3480, 2831, 4425, 2317, 3974,
	2136, 1119, 1730, 1731, 2262, 1297, 1298, 2351, 2346, 2829,
	2348, 2853, 1241, 1241, 4633, 2324, 1119, 3197, 4141, 1773,
	1774, 4173, 1767, 1773, 1774, 1657, 3155, 4467, 3508, 2122,
	4072, 4050, 3433, 2860, 2859, 2882, 1770, 2387, 1331, 1995,
	1995, 3686, 3684, 1265, 4752, 1218, 1380, 4743, 3896, 1776,
	258, 3519, 4583, 3802, 3696, 4705, 2985, 2353, 3950, 1239,
	1239, 2246, 1342, 3768, 2433, 3720, 2860, 3712, 1995, 1995,
	3895, 3703, 3705, 3706, 3719, 2923, 1235, 2921, 2930, 2910,
	2862, 3727, 4549, 2912, 1775, 3728, 4543, 1127, 1775, 1298,
	1298, 2864, 1235, 2433, 3735, 1119, 2911, 680, 4496, 3732,
	3707, 1995, 3760, 3734, 2863, 4416, 3789, 4392, 4316, 3960,
	2037, 3952, 3939, 3578, 3799, 1119, 3565, 3030, 2695, 177,
	2075, 1982, 1235, 3726, 4792, 4334, 3764, 3513, 3769, 1495,
	1494, 4626, 3761, 265, 265, 265, 4627, 686, 687, 3359,
	702, 686, 702, 712, 4823, 4545, 752, 1998, 1119, 1119,
	771, 1505, 3780, 3781, 3001, 777, 4764, 3777, 3778, 3251,
	3252, 4042, 265, 1773, 1774, 1644, 3827, 4626, 2823, 2824,
	3828, 1643, 4627, 2577, 1236, 1236, 2037, 2821, 2822, 3815,
	2823, 2821, 888, 3791, 2610, 3959, 1989, 2037, 265, 4417,
	4368, 4175, 1119, 1998, 1998, 1712, 4170, 4169, 1711, 4038,
	3814, 3708, 3501, 3498, 1865, 1864, 3775, 3651, 4809, 4771,
	4587, 3857, 4586, 3859, 4585, 4524, 3657, 3792, 3355, 1322,
	4523, 3869, 1998, 1998, 1322, 4483, 4395, 4362, 4313, 4310,
	4308, 4207, 1989, 1989, 4193, 4139, 4094, 3873, 3998, 3980,
	3934, 3854, 3370, 3847, 3569, 3874, 3876, 2001, 3568, 3427,
	3377, 1237, 3115, 3890, 3107, 1998, 3819, 3840, 3088, 3087,
	3086, 1989, 1989, 3085, 3014, 3892, 2987, 1237, 2854, 2791,
	3898, 2786, 2775, 1307, 2774, 2763, 2506, 3861, 1322, 2379,
	2352, 2345, 2344, 2343, 1119, 2342, 3899, 2341, 3866, 2260,
	2234, 2230, 1241, 1119, 1989, 3976, 2229, 1237, 3914, 3916,
	2228, 2227, 2877, 1322, 1322, 1322, 3036, 2226, 3983, 2043,
	2042, 2041, 2039, 1972, 1729, 686, 686, 1728, 1667, 3967,
	1322, 1552, 1472, 265, 1551, 1483, 1307, 1964, 1550, 3905,
	1549, 1548, 3929, 3065, 1547, 1546, 1322, 1541, 1537, 1239,
	1535, 1534, 1380, 1488, 3946, 1487, 1486, 3987, 3971, 3968,
	1371, 1370, 1369, 1368, 1367, 1335, 1334, 3910, 1284, 3947,
	3918, 1283, 1282, 1995, 3907, 3970, 1281, 1380, 1280, 1279,
	1119, 1119, 1278, 3999, 3933, 1276, 1119, 1119, 2001, 1271,
	3951, 1119, 1119, 1270, 1119, 1269, 1268, 1267, 3411, 1119,
	881, 8, 1199, 1307, 1307, 2080, 1018, 1004, 4501, 3956,
	1119, 3954, 1235, 4121, 2375, 92, 1543, 3908, 843, 86,
	2188, 3853, 2969, 3984, 3985, 3986, 1119, 2203, 4699, 3527,
	3978, 3977, 3526, 3972, 3969, 4007, 974, 4623, 3982, 1527,
	1316, 3531, 4023, 4005, 4528, 851, 3919, 3994, 4605, 3928,
	3997, 3948, 3990, 3429, 3993, 3988, 3989, 1599, 2937, 1599,
	2111, 4024, 2326, 1668, 1236, 3996, 2328, 4036, 3338, 1851,
	2737, 4575, 4046, 1856, 4012, 3213, 4474, 4284, 2580, 1869,
	3294, 88, 1103, 1149, 4203, 4017, 4202, 1241, 4108, 3839,
	4032, 3055, 4200, 4199, 1986, 1241, 1988, 1067, 1383, 1380,
	4645, 1380, 2091, 1109, 1995, 2107, 2100, 2776, 1241, 2654,
	1126, 1123, 1990, 1992, 1125, 1124, 1991, 1888, 1122, 1322,
	1322, 1985, 3958, 3034, 3595, 1593, 1591, 1998, 976, 1380,
	2095, 2500, 2564, 3343, 1239, 3202, 1862, 1083, 1105, 2561,
	1260, 1094, 1239, 1082, 3320, 3299, 3582, 2979, 4006, 3798,
	2982, 2412, 2984, 861, 1241, 1239, 1241, 3248, 4100, 4101,
	2567, 1251, 2678, 2670, 4062, 2666, 1989, 3387, 3024, 1743,
	4298, 1840, 3035, 1365, 1087, 2498, 1853, 3180, 1322, 4127,
	2422, 4127, 4142, 4080, 3649, 4130, 3589, 1237, 1380, 3341,
	1322, 2769, 4630, 1322, 3716, 3113, 3027, 2238, 1215, 3027,
	1214, 1239, 2216, 1239, 1380, 4076, 177, 4074, 4075, 1258,
	4083, 4079, 1213, 4611, 4104, 4069, 4084, 4087, 4608, 2178,
	3991, 3544, 2083, 2815, 4143, 2510, 4174, 4073, 4176, 4089,
	4090, 3552, 1099, 1482, 2369, 4078, 3305, 3614, 1554, 776,
	4341, 1322, 1322, 4106, 1111, 1825, 2958, 2957, 4493, 1236,
	1351, 1349, 4092, 1348, 1347, 4780, 4846, 1236, 1998, 3849,
	3848, 1322, 232, 4197, 4163, 4098, 3148, 1764, 1756, 229,
	1236, 231, 230, 1380, 4208, 3105, 3803, 3347, 1322, 4703,
	3871, 3536, 23, 22, 21, 112, 4177, 42, 4168, 20,
	151, 129, 148, 147, 4191, 121, 146, 1989, 1235, 1235,
	145, 144, 143, 1241, 150, 142, 3375, 3376, 141, 136,
	140, 139, 4161, 1322, 1322, 1322, 1236, 138, 1236, 4236,
	4194, 137, 135, 4158, 133, 4185, 1380, 134, 4127, 128,
	132, 4192, 4253, 131, 4190, 130, 127, 126, 1119, 1119,
	1119, 125, 124, 4225, 123, 122, 120, 119, 118, 4237,
	1239, 1316, 117, 3405, 116, 115, 1380, 4231, 114, 4198,
	4147, 1119, 4240, 4213, 1119, 1119, 113, 764, 4222, 766,
	61, 60, 4245, 4156, 1119, 111, 4159, 2001, 110, 19,
	40, 14, 1119, 1119, 65, 4238, 1253, 66, 18, 13,
	35, 91, 3455, 1483, 102, 101, 4224, 1380, 36, 1322,
	99, 4276, 98, 4262, 34, 17, 16, 15, 96, 4260,
	95, 33, 31, 11, 3469, 9, 3471, 4264, 4259, 1273,
	37, 1949, 1380, 4261, 12, 4263, 3810, 3811, 5, 182,
	1119, 265, 181, 265, 265, 4281, 1302, 265, 1312, 1119,
	1483, 3823, 3824, 4271, 3826, 184, 3505, 1119, 180, 1332,
	3511, 2001, 183, 90, 179, 178, 89, 29, 771, 4287,
	1119, 10, 174, 1119, 4408, 1236, 3944, 81, 176, 2436,
	175, 173, 172, 1237, 1237, 4319, 171, 1119, 82, 4293,
	79, 170, 85, 265, 1380, 265, 265, 1302, 169, 265,
	265, 1322, 4344, 1995, 1312, 80, 4307, 4304, 4305, 1322,
	1322, 84, 83, 27, 6, 64, 7, 4266, 265, 4309,
	1507, 3637, 4320, 105, 4318, 106, 38, 77, 76, 4327,
	75, 4265, 26, 63, 25, 168, 215, 214, 213, 212,
	4361, 1531, 211, 4385, 4373, 210, 209, 208, 3546, 4353,
	4354, 4364, 203, 4407, 1380, 202, 207, 1322, 205, 4359,
	1556, 204, 4398, 1312, 206, 201, 224, 265, 265, 4363,
	1302, 218, 2578, 217, 223, 1241, 1241, 1995, 222, 4369,
	221, 4371, 220, 4372, 4370, 219, 216, 226, 1235, 200,
	4387, 771, 199, 265, 265, 1119, 1119, 198, 4426, 4390,
	4127, 4127, 4351, 196, 4450, 4451, 4396, 4388, 4391, 192,
	4435, 191, 1119, 2001, 195, 197, 888, 2417, 194, 4389,
	4454, 4415, 1239, 1239, 193, 4429, 4411, 4406, 4427, 190,
	225, 72, 166, 167, 4377, 71, 165, 164, 4423, 4428,
	163, 162, 161, 160, 159, 70, 4434, 4240, 4433, 24,
	1119, 4448, 2, 1119, 1, 0, 0, 1998, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 2747, 4463, 4464,
	0, 4462, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 4489, 0, 0, 4375, 4127, 0, 0, 0, 0,
	4466, 0, 265, 0, 0, 0, 1989, 0, 4127, 0,
	0, 0, 4512, 0, 4485, 0, 0, 1239, 0, 0,
	0, 2037, 265, 0, 4488, 4472, 0, 2250, 4511, 0,
	1239, 0, 0, 2126, 0, 1119, 1119, 0, 4506, 1995,
	4505, 1998, 0, 0, 0, 1119, 4532, 1236, 1236, 0,
	1241, 0, 1599, 1241, 0, 0, 0, 1322, 0, 0,
	0, 0, 4519, 0, 0, 0, 0, 1322, 1322, 0,
	0, 0, 2672, 1237, 0, 4127, 0, 4521, 4127, 4552,
	1989, 0, 4554, 1235, 1322, 0, 4526, 4566, 0, 0,
	4520, 1235, 0, 4539, 0, 0, 0, 1239, 1119, 1119,
	1239, 4544, 4540, 4541, 1235, 4547, 4551, 4546, 1119, 0,
	0, 3442, 3443, 0, 3444, 3445, 3446, 0, 4562, 4560,
	4564, 4565, 0, 0, 2826, 2504, 0, 0, 4559, 4563,
	4411, 0, 1236, 0, 4598, 0, 0, 4569, 0, 0,
	0, 1851, 4602, 4570, 0, 1236, 1119, 1119, 0, 1119,
	1235, 0, 1235, 4580, 0, 0, 0, 0, 4584, 3486,
	3487, 0, 3488, 3489, 3490, 0, 0, 0, 0, 0,
	0, 4579, 4077, 0, 0, 0, 0, 1316, 1316, 0,
	4632, 4628, 0, 0, 4365, 0, 4600, 0, 2370, 0,
	4601, 4625, 0, 1998, 1316, 2677, 0, 4650, 4619, 0,
	0, 0, 4610, 4613, 0, 4654, 0, 1119, 1119, 1119,
	4653, 0, 1236, 0, 4615, 1236, 0, 0, 0, 4614,
	0, 4635, 4618, 686, 0, 0, 0, 0, 0, 4641,
	0, 4648, 1989, 0, 0, 4649, 4131, 1119, 0, 4683,
	0, 0, 0, 0, 265, 4688, 265, 0, 0, 0,
	265, 0, 4144, 4145, 4670, 0, 4669, 0, 1237, 4667,
	4668, 0, 0, 1507, 1302, 265, 1237, 265, 0, 4713,
	0, 0, 0, 265, 1507, 702, 0, 4706, 4715, 1237,
	265, 1507, 0, 0, 0, 0, 4717, 4727, 4729, 0,
	0, 0, 4702, 0, 1119, 2044, 0, 0, 4728, 1235,
	0, 0, 0, 4714, 0, 0, 0, 265, 0, 0,
	4734, 4686, 0, 0, 265, 4723, 0, 4722, 4721, 0,
	0, 0, 4754, 4725, 4726, 1237, 0, 1237, 4750, 4731,
	4740, 4741, 0, 0, 0, 4744, 4698, 0, 4701, 4742,
	4746, 0, 0, 0, 0, 0, 0, 1241, 4755, 1241,
	4753, 4776, 4757, 2126, 771, 4632, 0, 0, 0, 4774,
	0, 3909, 4786, 4773, 4768, 4787, 4532, 4763, 4785, 0,
	4772, 0, 4127, 0, 4127, 0, 4775, 4782, 4777, 4610,
	0, 0, 4613, 0, 0, 4256, 4800, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 1239, 0, 0, 0,
	0, 4799, 0, 0, 4802, 0, 0, 0, 4811, 0,
	0, 0, 0, 0, 0, 0, 0, 4813, 4817, 0,
	0, 0, 4810, 1119, 1119, 0, 0, 4818, 0, 0,
	4815, 0, 1119, 0, 1119, 1119, 0, 0, 0, 4821,
	1307, 0, 0, 0, 4831, 0, 4837, 4827, 0, 0,
	4836, 4842, 4835, 4841, 0, 4840, 0, 4839, 4838, 4834,
	0, 0, 3036, 0, 0, 0, 0, 0, 4850, 4845,
	0, 4854, 4853, 4852, 1237, 0, 4855, 4849, 4856, 0,
	4851, 0, 0, 4858, 0, 4862, 4861, 0, 0, 1307,
	0, 0, 0, 0, 4863, 1119, 4866, 0, 4868, 0,
	0, 0, 4869, 4865, 4871, 4872, 0, 4828, 4829, 1236,
	4858, 1236, 0, 0, 265, 0, 0, 0, 265, 0,
	0, 0, 0, 4830, 0, 0, 1307, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 1235, 1235, 2037, 2037, 0, 0, 0, 4867, 0,
	0, 265, 0, 1804, 0, 265, 3138, 0, 0, 0,
	1776, 265, 0, 0, 0, 0, 0, 265, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 265, 1829, 0, 0, 686,
	2037, 265, 0, 0, 0, 1775, 3177, 3178, 1472, 0,
	0, 0, 0, 771, 0, 1795, 0, 888, 0, 0,
	0, 0, 4431, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 1235, 0, 0, 2037,
	0, 0, 265, 0, 1302, 265, 0, 2672, 2672, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 2037, 0, 2037, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 2325, 0, 0, 0, 0, 265, 265,
	0, 265, 0, 265, 0, 265, 0, 265, 0, 2677,
	0, 4482, 0, 2037, 4484, 4148, 0, 2037, 0, 1798,
	1799, 1800, 1801, 0, 3306, 0, 0, 4157, 0, 1781,
	4160, 0, 2361, 0, 0, 2362, 1235, 2363, 0, 1235,
	0, 0, 0, 0, 0, 0, 1237, 1237, 0, 265,
	265, 265, 265, 0, 0, 0, 0, 3333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 0,
	1824, 0, 3346, 0, 0, 0, 752, 1803, 1805, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2677, 2677, 0, 0, 0, 0, 3365, 1483, 4221, 0,
	0, 0, 0, 1790, 1791, 1307, 3275, 3276, 3277, 3278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 3955, 0, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 2672, 2672, 2672,
	2672, 0, 0, 0, 0, 1483, 0, 1483, 4571, 0,
	4572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4008, 0, 0, 0, 0,
	1773, 1774, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 1237, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 0, 4620, 1804, 0, 4621, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 3251, 3252, 0, 3269,
	3270, 3271, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 265, 0,
	0, 0, 1802, 0, 0, 1775, 0, 686, 0, 0,
	2677, 2677, 2677, 2677, 265, 1795, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4684,
	0, 0, 3346, 0, 265, 1312, 0, 0, 0, 0,
	0, 3266, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4376, 0,
	0, 0, 0, 1235, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 1312, 0, 0, 0, 702, 1798,
	1799, 1800, 1801, 0, 0, 0, 0, 0, 2790, 1781,
	0, 0, 0, 0, 265, 0, 0, 265, 0, 0,
	0, 265, 0, 265, 0, 0, 0, 0, 1302, 0,
	265, 265, 0, 1312, 1312, 2806, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 3257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 1803, 1805, 0,
	0, 4781, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	1477, 0, 0, 1378, 0, 2843, 3274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 4806, 0, 0, 0, 0, 0, 4808, 0, 265,
	3273, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 265, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4206, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 1237, 265,
	1237, 4223, 3267, 0, 0, 0, 0, 0, 78, 3693,
	0, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4244, 0, 3709, 0, 0, 0,
	0, 0, 265, 2977, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	265, 0, 265, 1483, 1483, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 3019,
	0, 0, 0, 0, 0, 0, 3672, 3673, 882, 2843,
	0, 686, 1802, 0, 0, 0, 0, 0, 2037, 0,
	3048, 888, 107, 2843, 2843, 0, 0, 93, 104, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 2672, 2672, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 265,
	1302, 265, 0, 0, 0, 1507, 0, 1507, 1312, 265,
	0, 3268, 1302, 0, 1302, 0, 1302, 0, 0, 3801,
	0, 2250, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 3736, 3737, 3738, 3739,
	3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749,
	3750, 3751, 3752, 3753, 3754, 3755, 0, 3759, 265, 265,
	265, 265, 1302, 0, 0, 1302, 0, 265, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 2672, 2672, 2672,
	2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
	2672, 2672, 2672, 2672, 2672, 2672, 2672, 0, 2672, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 265,
	2677, 2677, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3263,
	3264, 3265, 2766, 0, 0, 0, 3262, 3260, 3261, 3253,
	3254, 3255, 3256, 3258, 3259, 73, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677,
	2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677,
	0, 2677, 0, 0, 0, 185, 100, 0, 0, 103,
	0, 0, 0, 0, 0, 1507, 0, 0, 87, 0,
	0, 0, 0, 0, 1483, 0, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 1773, 1774, 0, 149, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 1773, 1774, 0, 0, 0, 0, 1804, 0,
	49, 0, 107, 0, 0, 1776, 0, 93, 104, 0,
	0, 4530, 2037, 235, 0, 1804, 73, 0, 2953, 0,
	0, 0, 1776, 0, 2037, 0, 0, 2037, 0, 0,
	0, 1829, 0, 74, 0, 4550, 0, 0, 0, 152,
	1775, 0, 0, 0, 0, 0, 0, 0, 1829, 78,
	0, 2945, 2943, 0, 189, 0, 0, 1775, 2947, 2949,
	2939, 0, 234, 0, 0, 0, 94, 1795, 0, 0,
	0, 0, 0, 0, 789, 227, 1792, 0, 0, 0,
	801, 0, 0, 0, 228, 0, 0, 265, 0, 87,
	0, 0, 0, 0, 794, 2037, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 686, 188,
	0, 0, 0, 686, 0, 0, 686, 0, 0, 686,
	686, 0, 0, 0, 0, 686, 0, 0, 0, 882,
	3675, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 49, 793, 107, 1781, 0, 1507, 0, 93, 104,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 747,
	0, 1781, 4636, 0, 0, 0, 0, 0, 4638, 0,
	1507, 0, 0, 0, 4082, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 791, 0, 0, 265, 265, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 4096, 0, 0, 0, 0, 94, 0, 1803,
	1805, 0, 97, 0, 0, 0, 2843, 2843, 265, 0,
	3402, 0, 0, 0, 0, 0, 2843, 0, 0, 3413,
	0, 0, 0, 0, 0, 1790, 1791, 2843, 3413, 2941,
	2843, 3413, 0, 800, 3413, 0, 0, 0, 0, 0,
	2955, 1796, 0, 0, 0, 0, 0, 0, 0, 265,
	265, 3402, 0, 265, 0, 185, 100, 0, 1796, 103,
	0, 2954, 2946, 2944, 2948, 2950, 2940, 2942, 2956, 0,
	0, 0, 0, 3402, 0, 265, 0, 2952, 0, 0,
	3476, 3476, 0, 1302, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 0, 0, 149, 2843,
	0, 2843, 0, 3502, 2843, 3402, 0, 786, 2843, 3402,
	2959, 0, 771, 0, 1826, 2037, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 235, 0, 0, 0, 0, 790, 1302,
	0, 0, 0, 97, 0, 0, 265, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 265, 3540, 0, 0, 3542, 2843, 0,
	0, 265, 0, 746, 189, 265, 0, 0, 1312, 0,
	0, 0, 234, 0, 1802, 2250, 0, 0, 796, 1378,
	1797, 0, 0, 265, 788, 227, 185, 100, 3019, 0,
	103, 1302, 0, 265, 228, 0, 2843, 1797, 686, 0,
	0, 0, 0, 0, 0, 2843, 0, 0, 0, 4282,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 1604,
	0, 0, 0, 0, 883, 0, 265, 3019, 0, 149,
	3019, 785, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	4282, 0, 0, 0, 0, 1828, 0, 0, 0, 792,
	0, 0, 3642, 0, 235, 74, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 2436, 0, 0, 2960, 3648,
	0, 78, 1507, 0, 787, 1302, 265, 2951, 265, 0,
	152, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 798, 799, 0, 0,
	0, 1927, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 265, 0, 227, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 228, 4290, 2436, 0, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 3251, 3252, 0, 3269, 3270, 3271, 0, 0,
	1602, 882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4029, 107, 0, 2672, 0, 0,
	93, 104, 3714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3266, 1809, 0,
	0, 0, 0, 2672, 0, 0, 0, 158, 0, 94,
	0, 0, 0, 0, 0, 73, 0, 46, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 265,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 67,
	0, 0, 0, 0, 0, 0, 48, 2250, 155, 0,
	2677, 1066, 686, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 1307, 87, 0,
	0, 3257, 0, 0, 1507, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1507, 0, 1507, 0, 50, 68, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 2677, 0, 57, 0,
	0, 0, 156, 0, 4471, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 0, 0, 0, 97, 3273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2672, 0, 0, 0, 0,
	3251, 3252, 0, 3269, 3270, 3271, 0, 771, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3267, 0,
	0, 0, 4028, 0, 0, 0, 94, 0, 185, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 883, 0, 0, 0,
	0, 149, 0, 0, 0, 3266, 0, 1773, 1774, 1809,
	3402, 0, 265, 0, 0, 0, 702, 702, 1312, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 265,
	1804, 0, 0, 0, 0, 0, 235, 1776, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 2677, 265,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 265,
	0, 0, 152, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 189, 2843, 265,
	0, 0, 0, 0, 0, 234, 0, 0, 3048, 3048,
	0, 0, 0, 0, 888, 888, 2843, 3268, 227, 3257,
	3019, 3019, 97, 0, 888, 2843, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 188, 0, 56, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 58, 185, 100, 0, 0, 103,
	0, 0, 0, 54, 3273, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 55, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 1809, 0, 62, 0, 0, 0, 1809, 149, 0,
	0, 4047, 0, 1809, 0, 0, 3267, 1483, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 1805, 0, 0, 0, 267,
	0, 0, 0, 235, 0, 3263, 3264, 3265, 0, 0,
	0, 0, 3262, 3260, 3261, 3253, 3254, 3255, 3256, 3258,
	3259, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	1507, 0, 265, 0, 189, 0, 0, 0, 0, 1826,
	0, 0, 234, 1796, 0, 265, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 227, 0, 1809, 0, 0,
	1312, 0, 0, 0, 228, 0, 1809, 0, 1307, 0,
	0, 1809, 0, 1312, 0, 0, 0, 0, 0, 0,
	2843, 2843, 0, 3476, 2843, 0, 0, 0, 0, 188,
	0, 4129, 3, 4129, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2843, 0, 3413, 0, 0, 0,
	1507, 1507, 265, 3402, 0, 3268, 1826, 0, 0, 0,
	3251, 3252, 0, 3269, 3270, 3271, 3402, 0, 265, 3402,
	0, 265, 0, 3476, 1327, 1809, 0, 0, 0, 0,
	0, 1809, 3681, 0, 0, 0, 0, 0, 2843, 0,
	2843, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 1066, 1773, 1774, 0, 0, 0, 0, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 2843, 1804, 0, 0, 0,
	4210, 0, 1797, 1776, 0, 3266, 0, 0, 0, 0,
	0, 265, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 1509, 0, 1515, 0, 1521, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	4129, 0, 0, 1507, 0, 0, 0, 1792, 0, 0,
	1828, 0, 0, 3263, 3264, 3265, 0, 0, 0, 0,
	3262, 3260, 3261, 3253, 3254, 3255, 3256, 3258, 3259, 0,
	0, 0, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	0, 0, 0, 0, 1610, 0, 1615, 0, 0, 3257,
	0, 0, 1809, 0, 0, 0, 1624, 0, 1629, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0,
	2676, 0, 0, 0, 3273, 2843, 0, 3413, 0, 0,
	4322, 0, 0, 1809, 1693, 0, 0, 1699, 265, 1809,
	1814, 0, 0, 1824, 0, 4342, 0, 4342, 0, 0,
	1803, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3267, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	3476, 0, 1302, 3251, 3252, 0, 3269, 3270, 3271, 0,
	0, 0, 0, 0, 1812, 0, 0, 3402, 0, 265,
	0, 0, 0, 0, 0, 3680, 0, 0, 0, 1796,
	0, 0, 2647, 2648, 2649, 2650, 2643, 2644, 2645, 2646,
	0, 0, 4322, 0, 0, 0, 0, 0, 0, 0,
	2843, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 4420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3266, 0,
	1507, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	1863, 0, 4129, 4129, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	265, 265, 0, 0, 2623, 2624, 2625, 2626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3714, 3268, 0, 2635, 2636, 2637,
	2638, 2631, 2632, 2633, 2634, 2639, 2640, 2641, 2642, 1507,
	0, 0, 1507, 3476, 4487, 1802, 0, 0, 0, 0,
	0, 4322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3257, 0, 0, 0, 0, 4129, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4129, 0, 0, 0, 0, 1921, 1921, 1921, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 265, 2619, 2620, 2621, 2622, 2627, 2628, 2629,
	2630, 0, 0, 1151, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 3273, 0, 0,
	0, 4210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4129, 0, 265,
	4129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3413, 0, 0, 3263, 3264, 3265, 0, 0, 0, 3267,
	3262, 3260, 3261, 3253, 3254, 3255, 3256, 3258, 3259, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 4594, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 0, 4342, 0, 0, 265, 1081,
	1081, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1507, 0, 0, 1464, 0, 0, 0,
	1464, 0, 2843, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3714, 0, 0, 0, 0, 0, 0, 0, 3268, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 1809, 0, 0, 0, 0, 0, 265, 0, 0,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 0, 0, 0, 4322,
	0, 1809, 0, 1809, 1809, 1809, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 2676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 2843, 0, 0,
	0, 0, 0, 0, 4129, 0, 4129, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 3263, 3264, 3265, 0,
	0, 0, 0, 3262, 3260, 3261, 3253, 3254, 3255, 3256,
	3258, 3259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 1809, 0, 0, 1809, 0, 0,
	1809, 0, 0, 0, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 0, 0, 0, 0, 3048, 0, 0, 0, 0,
	0, 0, 0, 0, 2843, 0, 0, 1773, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3048, 0, 0, 0, 2349, 0, 0, 0, 0, 0,
	1804, 3251, 3252, 0, 3269, 3270, 3271, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 3272, 0, 2676, 2676, 2676, 2676, 2373,
	0, 0, 1809, 1829, 1809, 0, 0, 0, 0, 1809,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 2411, 0, 2415, 0, 0, 0, 0,
	0, 0, 2429, 0, 0, 0, 3266, 0, 0, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 3670, 2479, 0, 2481, 2482,
	2483, 2484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 1464, 2508, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	2559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3257, 0, 0, 0, 0, 0, 2589, 2592, 2595, 2598,
	0, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 0, 0,
	0, 0, 0, 0, 1803, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2668,
	0, 2680, 2682, 2687, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3273, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 1464, 1804, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 3267, 0, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1826, 0, 1792, 0,
	1242, 0, 1809, 1809, 1242, 1809, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 1802,
	0, 0, 3669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 1797, 1798, 1799, 1800, 1801, 0, 1464, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 3268, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	1828, 1803, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1809, 0, 2676, 2676, 0, 0, 1809,
	1796, 2980, 2981, 0, 2983, 0, 0, 0, 0, 3272,
	3272, 0, 0, 1809, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 1809, 0, 0,
	0, 0, 0, 0, 3263, 3264, 3265, 0, 0, 1809,
	0, 3262, 3260, 3261, 3253, 3254, 3255, 3256, 3258, 3259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 2676, 0, 2676, 3272, 3272, 3272,
	3272, 0, 0, 0, 0, 3251, 3252, 0, 3269, 3270,
	3271, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 3106, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 1464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1804, 0,
	3266, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	1830, 1831, 0, 0, 1823, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 1464, 1792,
	1242, 0, 1242, 0, 0, 0, 3160, 3161, 0, 0,
	0, 0, 3167, 0, 1809, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3181, 3182, 0, 3257, 2002, 0, 2559, 0, 1242,
	0, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1464, 0, 0,
	0, 0, 0, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 3191, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 1464, 0, 0, 0, 0, 3205, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3217, 1242, 0, 0, 0,
	0, 0, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 0, 0,
	1242, 3267, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 2687, 2687, 2687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 0, 0, 0, 0, 1822, 0, 0, 3310, 0,
	1464, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	1809, 0, 0, 1809, 3272, 3272, 1809, 0, 0, 0,
	1809, 0, 0, 0, 1826, 0, 0, 1809, 0, 0,
	0, 0, 1242, 1242, 0, 0, 0, 0, 0, 0,
	1809, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	3268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 1809, 1809, 1809, 1809, 0, 0,
	0, 0, 1464, 1809, 0, 1809, 0, 1802, 3272, 3272,
	3272, 3272, 3272, 3272, 3272, 3272, 3272, 3272, 3272, 3272,
	3272, 3272, 3272, 3272, 3272, 3272, 3272, 3272, 0, 0,
	1797, 3272, 0, 1066, 1809, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 1066, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 1242, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3432, 0, 0, 0, 0, 0, 1242, 1242, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 1242,
	0, 1242, 1242, 1242, 1809, 0, 0, 0, 3263, 3264,
	3265, 0, 0, 0, 0, 3262, 3260, 3261, 3253, 3254,
	3255, 3256, 3258, 3259, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 832, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 0, 834, 0, 0,
	0, 0, 835, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 853, 0, 0, 0, 2002, 2002, 1242,
	1804, 264, 264, 264, 0, 0, 0, 1776, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 837, 0,
	0, 0, 0, 838, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 862, 0, 0, 0, 0,
	0, 839, 1795, 0, 0, 0, 814, 1809, 1809, 0,
	0, 1792, 1809, 1809, 0, 860, 1809, 1809, 0, 0,
	0, 1809, 0, 0, 0, 1809, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 1242, 0, 0, 2676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	840, 0, 0, 841, 0, 3166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	747, 0, 0, 0, 2429, 0, 1798, 1799, 1800, 1801,
	3667, 3668, 0, 0, 3671, 0, 1781, 0, 3674, 0,
	0, 2676, 0, 0, 1242, 0, 0, 3678, 0, 0,
	0, 1242, 0, 0, 0, 0, 3685, 0, 0, 0,
	1242, 3310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3698, 1242, 0, 0,
	0, 1238, 0, 0, 1803, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 863, 0, 3721, 3722, 0, 3723,
	3724, 3725, 0, 0, 858, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 0, 3731, 0, 0,
	0, 3733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3762, 3763, 0, 0, 0, 0,
	0, 0, 0, 0, 842, 0, 0, 0, 0, 0,
	1464, 0, 3774, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 1242, 1242, 0, 0, 0, 3783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	1809, 1809, 0, 1464, 0, 0, 845, 0, 0, 0,
	1809, 1809, 3272, 2676, 0, 0, 1826, 0, 1464, 1809,
	0, 0, 1809, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1464, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 3272, 0, 0, 0, 0, 831, 2002, 855,
	0, 0, 0, 0, 0, 1809, 3831, 0, 846, 1802,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 1809,
	0, 1081, 0, 0, 0, 0, 3842, 0, 1809, 0,
	0, 0, 1797, 852, 0, 1081, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 1242, 0, 848, 867, 0, 866, 0, 0,
	3870, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 0, 0, 0,
	859, 0, 0, 0, 0, 0, 868, 0, 865, 0,
	1828, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1464, 0, 0,
	0, 1242, 0, 3272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 1809, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 1464, 0,
	0, 0, 0, 0, 0, 1921, 0, 0, 0, 0,
	0, 0, 0, 0, 3979, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1804, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4025, 4026, 0, 0, 0, 1829, 4030, 4031, 0,
	0, 0, 4034, 4035, 0, 1775, 0, 0, 0, 0,
	4039, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 4043, 0, 0, 1792, 0, 0, 0, 0, 264,
	0, 264, 264, 0, 0, 264, 1464, 4048, 1809, 1464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 264, 1776, 264, 264, 0, 0, 264, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 1800, 1801, 0, 0, 0, 814, 0, 1829, 1781,
	0, 0, 0, 0, 0, 1464, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 1464, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 0,
	1824, 0, 0, 0, 0, 264, 264, 1803, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 1821, 0, 0, 0,
	0, 264, 264, 1790, 1791, 0, 0, 0, 0, 0,
	3159, 0, 0, 0, 1809, 0, 0, 0, 1809, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 1796, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 1242, 1242, 1464, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 0, 0, 0, 1811, 1242,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 1790, 1791, 1242, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 2002, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 4277,
	4278, 4279, 1242, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 2429, 0, 0, 4288, 4289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 4297, 4300, 0, 0, 0, 0, 1242,
	0, 1826, 0, 0, 2002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4343, 0, 0, 0, 1802, 0, 0, 0, 4350, 0,
	1242, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 4357, 0, 0, 1066, 0, 0, 1797, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 4366, 0,
	0, 0, 1242, 0, 0, 1813, 1242, 0, 0, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 1943, 1242, 1238, 0, 0, 4053, 264, 0,
	0, 0, 0, 0, 0, 1828, 1242, 0, 1242, 0,
	0, 0, 1242, 264, 1943, 264, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 0, 0, 0, 814, 0,
	1242, 1464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 1464, 0, 0, 1242,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 1242, 0, 0, 0, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4492, 0, 0, 4495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1464, 0,
	1464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 1066, 1104, 109,
	0, 0, 0, 0, 0, 0, 4548, 0, 1464, 0,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2002, 0, 0,
	2429, 0, 264, 0, 0, 0, 814, 1464, 0, 4300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1464, 0, 2002, 2002, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 264,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 1242, 0, 0, 0,
	0, 264, 1464, 264, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 4666, 4666,
	4666, 0, 0, 0, 0, 0, 1041, 0, 0, 1242,
	0, 0, 0, 0, 1773, 1774, 0, 1061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4687, 0,
	264, 0, 0, 264, 0, 1464, 0, 1804, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 1464, 814, 264, 0, 264,
	1829, 264, 0, 264, 0, 264, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 4666, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 264, 264,
	264, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 1464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1081, 1798, 1799, 1800, 1801, 0, 0, 0,
	0, 0, 1242, 1781, 0, 0, 0, 1242, 0, 717,
	0, 0, 0, 1464, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 266, 266, 266, 0, 0,
	2002, 0, 0, 0, 4666, 4822, 0, 0, 0, 0,
	0, 719, 0, 4826, 0, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 266, 0, 0, 0, 0, 0,
	0, 1242, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1464, 0, 1242, 0, 1790, 1791, 0,
	266, 0, 0, 720, 0, 0, 1242, 1242, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 721, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 1242, 0, 0, 722, 0,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 747, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 1802, 0, 0, 0,
	0, 264, 0, 0, 1081, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1242, 0, 264, 0, 0, 264, 0, 0, 1242, 264,
	0, 264, 1242, 0, 1242, 0, 0, 0, 264, 264,
	0, 1242, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 1242, 1242, 0, 0, 0, 0, 0, 0,
	0, 744, 1242, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 1242,
	0, 0, 745, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 1081, 264, 0, 0,
	0, 1242, 0, 1242, 0, 0, 1242, 0, 0, 0,
	264, 0, 746, 0, 0, 0, 0, 1242, 0, 0,
	727, 0, 0, 0, 0, 742, 743, 740, 0, 0,
	0, 0, 109, 735, 0, 0, 728, 264, 0, 0,
	0, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 1242, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 1242, 0, 0, 0, 729, 0,
	736, 0, 0, 0, 0, 0, 1242, 0, 0, 730,
	0, 1242, 0, 0, 0, 0, 0, 0, 264, 0,
	814, 0, 0, 731, 0, 0, 0, 264, 739, 0,
	0, 109, 0, 109, 0, 109, 1242, 0, 0, 0,
	0, 0, 748, 0, 0, 0, 1242, 1242, 1242, 0,
	0, 0, 0, 733, 0, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 1061, 109, 109, 1242,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 264,
	0, 0, 109, 0, 109, 0, 0, 264, 0, 0,
	2002, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 264, 264, 264, 264,
	0, 0, 0, 0, 0, 264, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 2002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 1242, 0, 0,
	716, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 1242, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 1041, 266, 0, 266, 266, 1242, 0, 266,
	1242, 1325, 1773, 1774, 0, 1806, 1807, 1808, 1817, 1818,
	1819, 719, 0, 1843, 0, 0, 0, 0, 1242, 1242,
	0, 0, 0, 0, 1810, 1804, 0, 0, 0, 0,
	0, 1849, 1776, 738, 0, 1855, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 266, 1325, 266, 266, 0,
	1325, 266, 266, 720, 0, 0, 2002, 1325, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	266, 0, 0, 0, 0, 0, 721, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 723, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 1325, 747, 266,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 0,
	0, 0, 0, 737, 1325, 266, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 1944, 1325, 109,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 1231,
	0, 0, 0, 1242, 0, 0, 1242, 0, 0, 0,
	1242, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	1242, 1242, 734, 0, 0, 0, 0, 0, 0, 1814,
	0, 1238, 1824, 1325, 0, 0, 0, 1242, 0, 1803,
	1805, 0, 0, 0, 0, 260, 260, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1821, 0,
	0, 1943, 0, 0, 266, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 264, 264, 0, 0, 0,
	0, 0, 745, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	727, 1826, 0, 0, 0, 742, 743, 740, 0, 0,
	0, 0, 0, 735, 0, 0, 728, 264, 264, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 729, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 814, 1242, 0, 0, 1828, 0, 0, 0, 264,
	0, 0, 266, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 266, 266, 266,
	0, 264, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 1238, 266, 0, 0, 1325, 0, 0, 0, 0,
	0, 1061, 0, 1061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 264, 0, 266, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 4055, 0, 0, 0, 4054,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 264, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1041, 0, 0, 1041, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 947,
	0, 995, 0, 2497, 0, 0, 266, 0, 1325, 1325,
	266, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 1061, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1849, 0, 0,
	0, 969, 0, 953, 952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 1238, 0,
	0, 0, 0, 266, 0, 971, 0, 266, 0, 0,
	0, 954, 0, 266, 0, 0, 957, 0, 0, 266,
	0, 1003, 0, 0, 0, 0, 0, 0, 0, 0,
	966, 967, 0, 0, 0, 266, 0, 266, 0, 984,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 1225,
	0, 0, 1325, 0, 1325, 0, 1325, 996, 959, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 0, 0,
	0, 0, 1325, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 266, 960, 0, 266, 0, 0,
	0, 0, 0, 0, 993, 1325, 0, 1325, 1325, 1325,
	0, 109, 0, 1288, 0, 1288, 1288, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 266, 0, 266, 994, 266, 0, 266, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 963, 964, 0,
	0, 266, 266, 266, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 972, 970, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 1000, 992, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 997, 0,
	0, 0, 264, 0, 0, 1608, 1609, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 264, 0, 956, 0, 0,
	0, 988, 989, 0, 0, 0, 0, 109, 0, 0,
	109, 0, 109, 0, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 0, 0, 1001, 982, 0, 0, 975,
	973, 0, 978, 0, 0, 0, 109, 1325, 979, 109,
	0, 949, 0, 998, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 1325, 0, 950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 990, 0, 980,
	0, 0, 0, 0, 0, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	0, 0, 0, 0, 983, 0, 0, 0, 0, 0,
	0, 0, 1238, 961, 0, 109, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 266, 0, 985, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 266,
	0, 0, 987, 266, 0, 266, 0, 0, 0, 0,
	0, 0, 266, 266, 0, 0, 0, 0, 1325, 1325,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 1943,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 264, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 266, 0, 0, 0, 0, 0, 2497, 0, 0,
	0, 0, 1959, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 1849, 1481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 1325, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 266, 0, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 266, 0, 1325, 0, 0, 1773,
	1774, 266, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 0, 0, 1325, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1325,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 1829, 1325, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 266, 0, 266, 1795, 0, 0, 0, 0, 0,
	0, 266, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 266, 266, 266, 1225, 0, 270, 0, 0, 266,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 264, 1781, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 806, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 0, 0, 2236, 0, 0, 0, 2243, 0, 0,
	0, 0, 0, 1820, 0, 1821, 0, 806, 0, 2256,
	1943, 1943, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2268, 0, 2268, 264, 264,
	1812, 0, 0, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 109, 109, 0, 109, 109, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2243, 0, 0, 2300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 1943, 0, 0, 2320, 109,
	109, 0, 109, 109, 109, 0, 0, 1811, 1943, 0,
	0, 2333, 0, 2335, 0, 2337, 0, 2339, 1826, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2366, 2367, 2368, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 1943, 0, 264, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 1061, 0, 0,
	1325, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 1325,
	0, 264, 0, 0, 0, 266, 0, 0, 0, 266,
	266, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	266, 0, 3226, 0, 0, 1325, 3227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 266, 266, 0, 1325, 266, 0, 0, 0, 0,
	2744, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 266, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 1943, 0, 0, 0, 0, 1325,
	0, 0, 109, 0, 0, 0, 2792, 0, 266, 1288,
	0, 0, 1325, 1288, 1325, 1288, 0, 0, 1325, 0,
	1225, 1225, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 2256, 266, 0, 0, 1325, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 1325, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 266, 1325,
	266, 0, 0, 0, 0, 0, 0, 0, 1323, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 0, 266, 0, 0, 1776,
	0, 0, 2243, 0, 0, 0, 0, 0, 1823, 0,
	0, 2256, 0, 1381, 0, 0, 0, 1381, 0, 0,
	0, 0, 0, 0, 1323, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 1325, 1792, 0, 0, 0, 0, 1323, 0,
	0, 0, 3079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 3090, 0, 3093, 1323, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 0,
	3121, 1481, 3123, 1481, 0, 109, 0, 0, 0, 3129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	1323, 0, 0, 1288, 0, 1325, 1803, 1805, 0, 0,
	0, 3157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 1225, 0, 0, 0, 1822,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 1325, 266, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 1325, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 1325, 1325, 0, 0, 0, 109, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1325,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 0, 0, 0, 1325, 0, 0, 0, 266,
	0, 1325, 806, 0, 109, 0, 0, 0, 0, 806,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 2555, 0, 0, 1288, 2556, 0, 1323, 1481,
	1481, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3400, 0, 0, 1381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	1325, 3451, 3453, 0, 0, 2256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 1325,
	266, 0, 1325, 266, 0, 1323, 1323, 0, 0, 0,
	0, 0, 0, 1325, 0, 1381, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3553, 0, 2497, 0, 3557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 266, 0, 0, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 1323, 0, 1323, 1324, 0, 0, 0, 0, 0,
	0, 0, 1325, 1325, 1325, 0, 0, 0, 0, 1323,
	1323, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1323, 1323, 1323, 0, 3652, 1382,
	1481, 0, 0, 1382, 0, 1325, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3665, 0, 0, 0,
	0, 0, 0, 0, 1324, 109, 1325, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	1325, 266, 0, 0, 0, 0, 0, 0, 1325, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 1773, 1774, 0, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 0, 0, 0, 0, 1810, 1804,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 1810, 1804, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1798, 1799, 1800, 1801, 1775,
	0, 266, 0, 0, 0, 1781, 1325, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1325, 1325, 1792, 0,
	0, 0, 0, 0, 2256, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 1323, 1323, 0, 0, 0,
	0, 2256, 0, 1814, 0, 0, 1824, 0, 0, 0,
	0, 3943, 0, 1803, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2256, 0, 0, 0,
	1820, 3961, 1821, 0, 0, 0, 1382, 1381, 0, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 1798, 1799, 1800, 1801, 1812, 1324, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 4010,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 1381,
	0, 1803, 1805, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 1324, 1323, 0, 0, 1820, 0,
	1821, 0, 0, 0, 1811, 1324, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	1796, 806, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 1323, 0, 1323, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 1324, 0, 0, 0, 1802, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 4146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2256, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 0, 0, 1828, 0, 0,
	0, 0, 0, 3683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 1324, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2256, 0, 1324, 1324, 0, 0, 0,
	0, 0, 0, 4232, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	1324, 1324, 1324, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 3229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	4331, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1804, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1381, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 2256, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	1381, 1382, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 4461, 1481, 0, 0, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 1821, 0, 0, 0, 0, 0,
	0, 1790, 1791, 1323, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 1323, 0, 0, 0, 1323,
	0, 1324, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4553, 0, 0, 0, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 1323,
	0, 1323, 0, 1382, 0, 1381, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4604, 0, 0, 0, 0, 1382, 0, 1323, 1323, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 1381, 1773, 1774, 1381, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 1810, 1804, 0, 0,
	1324, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 1324, 1823, 1324, 0, 0, 0, 0, 4707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 1381, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 1381,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 3228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 0, 0, 0, 0, 1820, 0,
	1821, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 1802, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 0, 0, 1382, 0, 0, 1815, 0, 0, 0,
	0, 0, 1810, 1804, 1323, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 1382, 1828, 0, 1323,
	1323, 1323, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 1382, 0, 0, 0, 1775, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 1323, 0, 1792, 1382, 0, 0, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1381, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 0, 1324, 0,
	0, 3225, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 1800, 1801, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 1324,
	1824, 1324, 0, 0, 0, 0, 0, 1803, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 1820, 1381, 1821, 1381, 0, 0,
	0, 1324, 0, 1790, 1791, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 1323, 0, 0, 0,
	0, 1812, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 1324, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	1822, 1324, 0, 0, 1381, 0, 1323, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	1381, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1323, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 1382,
	0, 0, 1382, 0, 0, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 1323,
	1323, 1323, 1815, 0, 0, 0, 0, 1810, 1804, 0,
	0, 0, 1381, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 1829, 1381, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 1382, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 1381, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 1381, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 3224, 0, 0,
	0, 0, 0, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 1323, 1323, 0, 0, 0,
	0, 0, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	1381, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1812, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 1810, 1804, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1822, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 1811, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 1324, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	1797, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 1323, 0, 0, 1815, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 1814, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 0, 1324, 1324, 1324, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1821, 0, 1324, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 1382, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 1822, 0, 0, 0, 0, 0,
	0, 0, 3223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 0, 1802, 0, 0, 1776,
	0, 1382, 0, 1382, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 1324, 1324, 0, 0, 1829, 0, 0, 0, 0,
	0, 1382, 1773, 1774, 1775, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 1795, 0, 1815, 0, 0, 0,
	0, 0, 0, 1792, 1810, 1804, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 1828, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1382, 0, 1324, 0, 0, 1324, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 1324, 1324, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 1324, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 1382, 1814, 0, 0, 1824,
	1324, 2556, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 1324, 1324, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 0, 0, 1796, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 1382,
	0, 1324, 0, 0, 0, 0, 0, 1811, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 1324, 1797, 0, 0, 0, 0, 0,
	0, 1324, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 1324,
	0, 0, 1828, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 4595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 4591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	1384, 281, 282, 1385, 1386, 1387, 1324, 1388, 628, 1389,
	1390, 1391, 1392, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 1393,
	633, 293, 294, 295, 296, 297, 298, 1394, 1395, 0,
	299, 634, 635, 636, 1396, 300, 301, 637, 1397, 1326,
	1398, 302, 303, 304, 305, 306, 307, 308, 0, 1399,
	310, 311, 312, 309, 313, 1400, 314, 0, 315, 316,
	317, 318, 319, 320, 1401, 321, 322, 323, 1183, 324,
	325, 326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 1409, 336,
	333, 334, 1410, 337, 335, 338, 1411, 339, 340, 341,
	1412, 1413, 342, 343, 344, 1414, 345, 346, 1415, 347,
	348, 349, 1416, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 1417,
	271, 1418, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 1419, 368, 369, 1420, 1421, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1422, 382, 646, 1423, 647, 383,
	1424, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	1186, 389, 390, 1425, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 1426, 1185, 399,
	651, 652, 1427, 653, 1428, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1429, 413, 415, 414, 1430, 416,
	655, 1190, 417, 418, 1191, 1431, 419, 0, 0, 0,
	420, 421, 424, 1432, 1433, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1434, 273, 1194, 465, 466, 1435, 656, 467, 657,
	469, 470, 1436, 0, 471, 0, 1437, 1438, 473, 474,
	475, 1439, 1440, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 1441, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 1442, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 1443, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 1444, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 1445, 554, 555, 553, 556, 557, 558, 1446, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 1447, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 1448, 586, 587, 0, 583, 574, 1449,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 1450,
	596, 669, 670, 671, 672, 1451, 605, 1452, 597, 598,
	599, 673, 600, 674, 1453, 601, 602, 603, 604, 0,
	606, 607, 1454, 1455, 608, 609, 610, 612, 613, 611,
	614, 1456, 615, 1457, 0, 616, 617, 618, 675, 676,
	677, 1458, 620, 619, 621, 678, 1459, 622, 1460, 1461,
	1462, 1463, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 2722, 0, 0, 0, 0, 0, 0,
	0, 2723, 274, 276, 275, 277, 278, 279, 280, 1384,
	281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390,
	1391, 1392, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 1393, 633,
	293, 294, 295, 296, 297, 298, 1394, 1395, 0, 299,
	634, 635, 636, 1396, 300, 301, 637, 1397, 1326, 1398,
	302, 303, 304, 305, 306, 307, 308, 0, 1399, 310,
	311, 312, 309, 313, 1400, 314, 0, 315, 316, 317,
	318, 319, 320, 1401, 321, 322, 323, 1183, 324, 325,
	326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 1409, 336, 333,
	334, 1410, 337, 335, 338, 1411, 339, 340, 341, 1412,
	1413, 342, 343, 344, 1414, 345, 346, 1415, 347, 348,
	349, 1416, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 1417, 271,
	1418, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 1419, 368, 369, 1420, 1421, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1422, 382, 646, 1423, 647, 383, 1424,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 1425, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 1426, 1185, 399, 651,
	652, 1427, 653, 1428, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1429, 413, 415, 414, 1430, 416, 655,
	1190, 417, 418, 1191, 1431, 419, 0, 0, 0, 420,
	421, 424, 1432, 1433, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1434, 273, 1194, 465, 466, 1435, 656, 467, 657, 469,
	470, 1436, 0, 471, 0, 1437, 1438, 473, 474, 475,
	1439, 1440, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 1441, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 1442, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 1443, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 1444, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	1445, 554, 555, 553, 556, 557, 558, 1446, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 1447, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 1448, 586, 587, 0, 583, 574, 1449, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 1450, 596,
	669, 670, 671, 672, 1451, 605, 1452, 597, 598, 599,
	673, 600, 674, 1453, 601, 602, 603, 604, 0, 606,
	607, 1454, 1455, 608, 609, 610, 612, 613, 611, 614,
	1456, 615, 1457, 0, 616, 617, 618, 675, 676, 677,
	1458, 620, 619, 621, 678, 1459, 622, 1460, 1461, 1462,
	1463, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 3692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3694, 274,
	276, 275, 277, 278, 279, 280, 1384, 281, 282, 1385,
	1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 1393, 633, 293, 294, 295,
	296, 297, 298, 1394, 1395, 0, 299, 634, 635, 636,
	1396, 300, 301, 637, 1397, 1326, 1398, 302, 303, 304,
	305, 306, 307, 308, 0, 1399, 310, 311, 312, 309,
	313, 1400, 314, 0, 315, 316, 317, 318, 319, 320,
	1401, 321, 322, 323, 1183, 324, 325, 326, 1402, 1403,
	1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 1409, 336, 333, 334, 1410, 337,
	335, 338, 1411, 339, 340, 341, 1412, 1413, 342, 343,
	344, 1414, 345, 346, 1415, 347, 348, 349, 1416, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 1417, 271, 1418, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	1419, 368, 369, 1420, 1421, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1422, 382, 646, 1423, 647, 383, 1424, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 1425,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1426, 1185, 399, 651, 652, 1427, 653,
	1428, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1429, 413, 415, 414, 1430, 416, 655, 1190, 417, 418,
	1191, 1431, 419, 0, 0, 0, 420, 421, 424, 1432,
	1433, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1434, 273, 1194,
	465, 466, 1435, 656, 467, 657, 469, 470, 1436, 0,
	471, 0, 1437, 1438, 473, 474, 475, 1439, 1440, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 1441, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 1442, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	1443, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 1444, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 1445, 554, 555,
	553, 556, 557, 558, 1446, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 1447, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 1448,
	586, 587, 0, 583, 574, 1449, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 1450, 596, 669, 670, 671,
	672, 1451, 605, 1452, 597, 598, 599, 673, 600, 674,
	1453, 601, 602, 603, 604, 0, 606, 607, 1454, 1455,
	608, 609, 610, 612, 613, 611, 614, 1456, 615, 1457,
	0, 616, 617, 618, 675, 676, 677, 1458, 620, 619,
	621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4081,
	274, 276, 275, 277, 278, 279, 280, 1384, 281, 282,
	1385, 1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 1393, 633, 293, 294,
	295, 296, 297, 298, 1394, 1395, 0, 299, 634, 635,
	636, 1396, 300, 301, 637, 1397, 1326, 1398, 302, 303,
	304, 305, 306, 307, 308, 0, 1399, 310, 311, 312,
	309, 313, 1400, 314, 0, 315, 316, 317, 318, 319,
	320, 1401, 321, 322, 323, 1183, 324, 325, 326, 1402,
	1403, 1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 1409, 336, 333, 334, 1410,
	337, 335, 338, 1411, 339, 340, 341, 1412, 1413, 342,
	343, 344, 1414, 345, 346, 1415, 347, 348, 349, 1416,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 1417, 271, 1418, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 1419, 368, 369, 1420, 1421, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 1422, 382, 646, 1423, 647, 383, 1424, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	1425, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 1426, 1185, 399, 651, 652, 1427,
	653, 1428, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 1429, 413, 415, 414, 1430, 416, 655, 1190, 417,
	418, 1191, 1431, 419, 0, 0, 0, 420, 421, 424,
	1432, 1433, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1434, 273,
	1194, 465, 466, 1435, 656, 467, 657, 469, 470, 1436,
	0, 471, 0, 1437, 1438, 473, 474, 475, 1439, 1440,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 1441,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 1442, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 1443, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 1444, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 1445, 554,
	555, 553, 556, 557, 558, 1446, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 1447, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	1448, 586, 587, 0, 583, 574, 1449, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 1450, 596, 669, 670,
	671, 672, 1451, 605, 1452, 597, 598, 599, 673, 600,
	674, 1453, 601, 602, 603, 604, 0, 606, 607, 1454,
	1455, 608, 609, 610, 612, 613, 611, 614, 1456, 615,
	1457, 0, 616, 617, 618, 675, 676, 677, 1458, 620,
	619, 621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4283, 274, 276, 275, 277,
	278, 279, 280, 1384, 281, 282, 1385, 1386, 1387, 0,
	1388, 628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 1393, 633, 293, 294, 295, 296, 297, 298,
	1394, 1395, 0, 299, 634, 635, 636, 1396, 300, 301,
	637, 1397, 1326, 1398, 302, 303, 304, 305, 306, 307,
	308, 0, 1399, 310, 311, 312, 309, 313, 1400, 314,
	0, 315, 316, 317, 318, 319, 320, 1401, 321, 322,
	323, 1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406,
	1407, 1408, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 1409, 336, 333, 334, 1410, 337, 335, 338, 1411,
	339, 340, 341, 1412, 1413, 342, 343, 344, 1414, 345,
	346, 1415, 347, 348, 349, 1416, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 1417, 271, 1418, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 1419, 368, 369,
	1420, 1421, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 1422, 382, 646,
	1423, 647, 383, 1424, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 1425, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	1426, 1185, 399, 651, 652, 1427, 653, 1428, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1429, 413, 415,
	414, 1430, 416, 655, 1190, 417, 418, 1191, 1431, 419,
	0, 0, 0, 420, 421, 424, 1432, 1433, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1434, 273, 1194, 465, 466, 1435,
	656, 467, 657, 469, 470, 1436, 0, 471, 0, 1437,
	1438, 473, 474, 475, 1439, 1440, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 1441, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 1442, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 1443, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 1444,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 1445, 554, 555, 553, 556, 557,
	558, 1446, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 1447,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 1448, 586, 587, 0,
	583, 574, 1449, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 1450, 596, 669, 670, 671, 672, 1451, 605,
	1452, 597, 598, 599, 673, 600, 674, 1453, 601, 602,
	603, 604, 0, 606, 607, 1454, 1455, 608, 609, 610,
	612, 613, 611, 614, 1456, 615, 1457, 0, 616, 617,
	618, 675, 676, 677, 1458, 620, 619, 621, 678, 1459,
	622, 1460, 1461, 1462, 1463, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4155, 274, 276, 275, 277, 278, 279, 280, 1384,
	281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390,
	1391, 1392, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 1393, 633,
	293, 294, 295, 296, 297, 298, 1394, 1395, 0, 299,
	634, 635, 636, 1396, 300, 301, 637, 1397, 1326, 1398,
	302, 303, 304, 305, 306, 307, 308, 0, 1399, 310,
	311, 312, 309, 313, 1400, 314, 0, 315, 316, 317,
	318, 319, 320, 1401, 321, 322, 323, 1183, 324, 325,
	326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 1409, 336, 333,
	334, 1410, 337, 335, 338, 1411, 339, 340, 341, 1412,
	1413, 342, 343, 344, 1414, 345, 346, 1415, 347, 348,
	349, 1416, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 1417, 271,
	1418, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 1419, 368, 369, 1420, 1421, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1422, 382, 646, 1423, 647, 383, 1424,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 1425, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 1426, 1185, 399, 651,
	652, 1427, 653, 1428, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1429, 413, 415, 414, 1430, 416, 655,
	1190, 417, 418, 1191, 1431, 419, 0, 0, 0, 420,
	421, 424, 1432, 1433, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1434, 273, 1194, 465, 466, 1435, 656, 467, 657, 469,
	470, 1436, 0, 471, 0, 1437, 1438, 473, 474, 475,
	1439, 1440, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 1441, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 1442, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 1443, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 1444, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	1445, 554, 555, 553, 556, 557, 558, 1446, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 1447, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 1448, 586, 587, 0, 583, 574, 1449, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 1450, 596,
	669, 670, 671, 672, 1451, 605, 1452, 597, 598, 599,
	673, 600, 674, 1453, 601, 602, 603, 604, 0, 606,
	607, 1454, 1455, 608, 609, 610, 612, 613, 611, 614,
	1456, 615, 1457, 0, 616, 617, 618, 675, 676, 677,
	1458, 620, 619, 621, 678, 1459, 622, 1460, 1461, 1462,
	1463, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4011, 274, 276,
	275, 277, 278, 279, 280, 1384, 281, 282, 1385, 1386,
	1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 1393, 633, 293, 294, 295, 296,
	297, 298, 1394, 1395, 0, 299, 634, 635, 636, 1396,
	300, 301, 637, 1397, 1326, 1398, 302, 303, 304, 305,
	306, 307, 308, 0, 1399, 310, 311, 312, 309, 313,
	1400, 314, 0, 315, 316, 317, 318, 319, 320, 1401,
	321, 322, 323, 1183, 324, 325, 326, 1402, 1403, 1405,
	1404, 1406, 1407, 1408, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 1409, 336, 333, 334, 1410, 337, 335,
	338, 1411, 339, 340, 341, 1412, 1413, 342, 343, 344,
	1414, 345, 346, 1415, 347, 348, 349, 1416, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 1417, 271, 1418, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 1419,
	368, 369, 1420, 1421, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 1422,
	382, 646, 1423, 647, 383, 1424, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 1425, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 1426, 1185, 399, 651, 652, 1427, 653, 1428,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 1429,
	413, 415, 414, 1430, 416, 655, 1190, 417, 418, 1191,
	1431, 419, 0, 0, 0, 420, 421, 424, 1432, 1433,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1434, 273, 1194, 465,
	466, 1435, 656, 467, 657, 469, 470, 1436, 0, 471,
	0, 1437, 1438, 473, 474, 475, 1439, 1440, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 1441, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 1442, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 1443,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 1444, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 1445, 554, 555, 553,
	556, 557, 558, 1446, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 1447, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 1448, 586,
	587, 0, 583, 574, 1449, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 1450, 596, 669, 670, 671, 672,
	1451, 605, 1452, 597, 598, 599, 673, 600, 674, 1453,
	601, 602, 603, 604, 0, 606, 607, 1454, 1455, 608,
	609, 610, 612, 613, 611, 614, 1456, 615, 1457, 0,
	616, 617, 618, 675, 676, 677, 1458, 620, 619, 621,
	678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3710, 274, 276, 275, 277, 278, 279,
	280, 1384, 281, 282, 1385, 1386, 1387, 0, 1388, 628,
	1389, 1390, 1391, 1392, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	1393, 633, 293, 294, 295, 296, 297, 298, 1394, 1395,
	0, 299, 634, 635, 636, 1396, 300, 301, 637, 1397,
	1326, 1398, 302, 303, 304, 305, 306, 307, 308, 0,
	1399, 310, 311, 312, 309, 313, 1400, 314, 0, 315,
	316, 317, 318, 319, 320, 1401, 321, 322, 323, 1183,
	324, 325, 326, 1402, 1403, 1405, 1404, 1406, 1407, 1408,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 1409,
	336, 333, 334, 1410, 337, 335, 338, 1411, 339, 340,
	341, 1412, 1413, 342, 343, 344, 1414, 345, 346, 1415,
	347, 348, 349, 1416, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	1417, 271, 1418, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 1419, 368, 369, 1420, 1421,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 1422, 382, 646, 1423, 647,
	383, 1424, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 1186, 389, 390, 1425, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 1426, 1185,
	399, 651, 652, 1427, 653, 1428, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1429, 413, 415, 414, 1430,
	416, 655, 1190, 417, 418, 1191, 1431, 419, 0, 0,
	0, 420, 421, 424, 1432, 1433, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1434, 273, 1194, 465, 466, 1435, 656, 467,
	657, 469, 470, 1436, 0, 471, 0, 1437, 1438, 473,
	474, 475, 1439, 1440, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 1441, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 1442,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 1443, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 1444, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 1445, 554, 555, 553, 556, 557, 558, 1446,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 1447, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 1448, 586, 587, 0, 583, 574,
	1449, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	1450, 596, 669, 670, 671, 672, 1451, 605, 1452, 597,
	598, 599, 673, 600, 674, 1453, 601, 602, 603, 604,
	0, 606, 607, 1454, 1455, 608, 609, 610, 612, 613,
	611, 614, 1456, 615, 1457, 0, 616, 617, 618, 675,
	676, 677, 1458, 620, 619, 621, 678, 1459, 622, 1460,
	1461, 1462, 1463, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3538,
	274, 276, 275, 277, 278, 279, 280, 1384, 281, 282,
	1385, 1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 1393, 633, 293, 294,
	295, 296, 297, 298, 1394, 1395, 0, 299, 634, 635,
	636, 1396, 300, 301, 637, 1397, 1326, 1398, 302, 303,
	304, 305, 306, 307, 308, 0, 1399, 310, 311, 312,
	309, 313, 1400, 314, 0, 315, 316, 317, 318, 319,
	320, 1401, 321, 322, 323, 1183, 324, 325, 326, 1402,
	1403, 1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 1409, 336, 333, 334, 1410,
	337, 335, 338, 1411, 339, 340, 341, 1412, 1413, 342,
	343, 344, 1414, 345, 346, 1415, 347, 348, 349, 1416,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 1417, 271, 1418, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 1419, 368, 369, 1420, 1421, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 1422, 382, 646, 1423, 647, 383, 1424, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	1425, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 1426, 1185, 399, 651, 652, 1427,
	653, 1428, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 1429, 413, 415, 414, 1430, 416, 655, 1190, 417,
	418, 1191, 1431, 419, 0, 0, 0, 420, 421, 424,
	1432, 1433, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1434, 273,
	1194, 465, 466, 1435, 656, 467, 657, 469, 470, 1436,
	0, 471, 0, 1437, 1438, 473, 474, 475, 1439, 1440,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 1441,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 1442, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 1443, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 1444, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 1445, 554,
	555, 553, 556, 557, 558, 1446, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 1447, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	1448, 586, 587, 0, 583, 574, 1449, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 1450, 596, 669, 670,
	671, 672, 1451, 605, 1452, 597, 598, 599, 673, 600,
	674, 1453, 601, 602, 603, 604, 0, 606, 607, 1454,
	1455, 608, 609, 610, 612, 613, 611, 614, 1456, 615,
	1457, 0, 616, 617, 618, 675, 676, 677, 1458, 620,
	619, 621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2579, 274, 276, 275, 277,
	278, 279, 280, 1384, 281, 282, 1385, 1386, 1387, 0,
	1388, 628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 1393, 633, 293, 294, 295, 296, 297, 298,
	1394, 1395, 0, 299, 634, 635, 636, 1396, 300, 301,
	637, 1397, 1326, 1398, 302, 303, 304, 305, 306, 307,
	308, 0, 1399, 310, 311, 312, 309, 313, 1400, 314,
	0, 315, 316, 317, 318, 319, 320, 1401, 321, 322,
	323, 1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406,
	1407, 1408, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 1409, 336, 333, 334, 1410, 337, 335, 338, 1411,
	339, 340, 341, 1412, 1413, 342, 343, 344, 1414, 345,
	346, 1415, 347, 348, 349, 1416, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 1417, 271, 1418, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 1419, 368, 369,
	1420, 1421, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 1422, 382, 646,
	1423, 647, 383, 1424, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 1425, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	1426, 1185, 399, 651, 652, 1427, 653, 1428, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1429, 413, 415,
	414, 1430, 416, 655, 1190, 417, 418, 1191, 1431, 419,
	0, 0, 0, 420, 421, 424, 1432, 1433, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1434, 273, 1194, 465, 466, 1435,
	656, 467, 657, 469, 470, 1436, 0, 471, 0, 1437,
	1438, 473, 474, 475, 1439, 1440, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 1441, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 1442, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 1443, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 1444,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 1445, 554, 555, 553, 556, 557,
	558, 1446, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 1447,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 1448, 586, 587, 0,
	583, 574, 1449, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 1450, 596, 669, 670, 671, 672, 1451, 605,
	1452, 597, 598, 599, 673, 600, 674, 1453, 601, 602,
	603, 604, 0, 606, 607, 1454, 1455, 608, 609, 610,
	612, 613, 611, 614, 1456, 615, 1457, 0, 616, 617,
	618, 675, 676, 677, 1458, 620, 619, 621, 678, 1459,
	622, 1460, 1461, 1462, 1463, 623, 624, 679, 625, 626,
	627, 0, 0, 1475, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 274, 276, 275, 277, 278, 279, 280, 1384,
	281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390,
	1391, 1392, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 1393, 633,
	293, 294, 295, 296, 297, 298, 1394, 1395, 0, 299,
	634, 635, 636, 1396, 300, 301, 637, 1397, 1326, 1398,
	302, 303, 304, 305, 306, 307, 308, 0, 1399, 310,
	311, 312, 309, 313, 1400, 314, 0, 315, 316, 317,
	318, 319, 320, 1401, 321, 322, 323, 1183, 324, 325,
	326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 1409, 336, 333,
	334, 1410, 337, 335, 338, 1411, 339, 340, 341, 1412,
	1413, 342, 343, 344, 1414, 345, 346, 1415, 347, 348,
	349, 1416, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 1417, 271,
	1418, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 1419, 368, 369, 1420, 1421, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1422, 382, 646, 1423, 647, 383, 1424,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 1425, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 1426, 1185, 399, 651,
	652, 1427, 653, 1428, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1429, 413, 415, 414, 1430, 416, 655,
	1190, 417, 418, 1191, 1431, 419, 0, 0, 0, 420,
	421, 424, 1432, 1433, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1434, 273, 1194, 465, 466, 1435, 656, 467, 657, 469,
	470, 1436, 0, 471, 0, 1437, 1438, 473, 474, 475,
	1439, 1440, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 1441, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 1442, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 1443, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 1444, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	1445, 554, 555, 553, 556, 557, 558, 1446, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 1447, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 1448, 586, 587, 0, 583, 574, 1449, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 1450, 596,
	669, 670, 671, 672, 1451, 605, 1452, 597, 598, 599,
	673, 600, 674, 1453, 601, 602, 603, 604, 0, 606,
	607, 1454, 1455, 608, 609, 610, 612, 613, 611, 614,
	1456, 615, 1457, 0, 616, 617, 618, 675, 676, 677,
	1458, 620, 619, 621, 678, 1459, 622, 1460, 1461, 1462,
	1463, 623, 624, 679, 625, 626, 627, 1376, 0, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 1384, 281, 282, 1385, 1386, 1387, 0,
	1388, 628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 1393, 633, 293, 294, 295, 296, 297, 298,
	1394, 1395, 0, 299, 634, 635, 636, 1396, 300, 301,
	637, 1397, 1326, 1398, 302, 303, 304, 305, 306, 307,
	308, 0, 1399, 310, 311, 312, 309, 313, 1400, 314,
	0, 315, 316, 317, 318, 319, 320, 1401, 321, 322,
	323, 1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406,
	1407, 1408, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 1409, 336, 333, 334, 1410, 337, 335, 338, 1411,
	339, 340, 341, 1412, 1413, 342, 343, 344, 1414, 345,
	346, 1415, 347, 348, 349, 1416, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 1417, 271, 1418, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 1419, 368, 369,
	1420, 1421, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 1422, 382, 646,
	1423, 647, 383, 1424, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 1425, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	1426, 1185, 399, 651, 652, 1427, 653, 1428, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1429, 413, 415,
	414, 1430, 416, 655, 1190, 417, 418, 1191, 1431, 419,
	0, 0, 0, 420, 421, 424, 1432, 1433, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1434, 273, 1194, 465, 466, 1435,
	656, 467, 657, 469, 470, 1436, 0, 471, 0, 1437,
	1438, 473, 474, 475, 1439, 1440, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 1441, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 1442, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 1443, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 1444,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 1445, 554, 555, 553, 556, 557,
	558, 1446, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 1447,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 1448, 586, 587, 0,
	583, 574, 1449, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 1450, 596, 669, 670, 671, 672, 1451, 605,
	1452, 597, 598, 599, 673, 600, 674, 1453, 601, 602,
	603, 604, 0, 606, 607, 1454, 1455, 608, 609, 610,
	612, 613, 611, 614, 1456, 615, 1457, 0, 616, 617,
	618, 675, 676, 677, 1458, 620, 619, 621, 678, 1459,
	622, 1460, 1461, 1462, 1463, 623, 624, 679, 625, 626,
	627, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 1384, 281, 282, 1385, 1386,
	1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 1393, 633, 293, 294, 295, 296,
	297, 298, 1394, 1395, 0, 299, 634, 635, 636, 1396,
	300, 301, 637, 1397, 1326, 1398, 302, 303, 304, 305,
	306, 307, 308, 0, 1399, 310, 311, 312, 309, 313,
	1400, 314, 0, 315, 316, 317, 318, 319, 320, 1401,
	321, 322, 323, 1183, 324, 325, 326, 1402, 1403, 1405,
	1404, 1406, 1407, 1408, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 1409, 336, 333, 334, 1410, 337, 335,
	338, 1411, 339, 340, 341, 1412, 1413, 342, 343, 344,
	1414, 345, 346, 1415, 347, 348, 349, 1416, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 1417, 271, 1418, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 1419,
	368, 369, 1420, 1421, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 1422,
	382, 646, 1423, 647, 383, 1424, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 1425, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 1426, 1185, 399, 651, 652, 1427, 653, 1428,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 1429,
	413, 415, 414, 1430, 416, 655, 1190, 417, 418, 1191,
	1431, 419, 0, 0, 0, 420, 421, 424, 1432, 1433,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1434, 273, 1194, 465,
	466, 1435, 656, 467, 657, 469, 470, 1436, 0, 471,
	0, 1437, 1438, 473, 474, 475, 1439, 1440, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 1441, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 1442, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 1443,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 1444, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 1445, 554, 555, 553,
	556, 557, 558, 1446, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 1447, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 1448, 586,
	587, 0, 583, 574, 1449, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 1450, 596, 669, 670, 671, 672,
	1451, 605, 1452, 597, 598, 599, 673, 600, 674, 1453,
	601, 602, 603, 604, 0, 606, 607, 1454, 1455, 608,
	609, 610, 612, 613, 611, 614, 1456, 615, 1457, 0,
	616, 617, 618, 675, 676, 677, 1458, 620, 619, 621,
	678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624, 679,
	625, 626, 627, 2554, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 2551,
	281, 282, 0, 0, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 2552,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	2550, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 2553, 0, 0,
	0, 0, 0, 0, 1102, 2549, 0, 1062, 1100, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 273, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 233, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 235, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 1600, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 227, 623, 624, 679, 625, 626,
	627, 1076, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 1854, 1852,
	0, 0, 1100, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 233, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 235, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 1600, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 227, 623, 624, 679,
	625, 626, 627, 1076, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 1118, 1090, 1091, 1092, 1088, 1089, 1101,
	1854, 3179, 0, 0, 1100, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 332, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 233, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 235, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 1600, 1163, 1200, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 227, 623,
	624, 679, 625, 626, 627, 1076, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 1854, 1852, 0, 0, 1100, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 2683, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 2688, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 2684, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 2685, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 2599, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 0, 0, 0, 0, 0, 0, 0, 1102,
	2597, 0, 2596, 1100, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 675, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 0, 0, 0, 0,
	0, 0, 0, 1102, 2594, 0, 2593, 1100, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	0, 0, 0, 0, 0, 0, 0, 1102, 2591, 0,
	2590, 1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 0, 0, 0, 0, 0, 0,
	0, 1102, 2588, 0, 1695, 1100, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 1694, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 1065,
	0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 1080, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 4616, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 1080, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 0,
	0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 2431, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 2430, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 1080, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 0,
	0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 4360, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 1080, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 3973, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 1922, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 1100,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 3688, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 1922, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 1100, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 2688, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 273, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 274, 276, 275, 277, 278, 279, 280, 1102, 281,
	282, 0, 1100, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 675, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 0, 0, 0, 0,
	0, 0, 0, 1102, 1852, 0, 2693, 1100, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 2691, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	274, 276, 275, 277, 278, 279, 280, 1102, 281, 282,
	0, 1100, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 332, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 1163, 1200, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1076, 2679, 0, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 274, 276, 275, 277, 278,
	279, 280, 1102, 281, 282, 0, 1100, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 2667, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	274, 276, 275, 277, 278, 279, 280, 1102, 281, 282,
	0, 1100, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 332, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 1163, 1200, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1076, 2665, 0, 2656, 2663,
	1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 274, 276, 275, 277, 278,
	279, 280, 1102, 281, 282, 0, 1100, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 2659, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 2660, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 2661, 434,
	2658, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 2662, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 2657, 627,
	1076, 2653, 0, 2656, 2663, 1091, 1092, 1088, 1089, 1101,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	274, 276, 275, 277, 278, 279, 280, 1102, 281, 282,
	0, 1100, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 2659, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 2660, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 2661, 434, 2658, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 2662, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 1163, 1200, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 2657, 627, 1076, 0, 0, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 274, 276, 275, 277, 278,
	279, 280, 1102, 281, 282, 0, 1100, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	0, 0, 0, 0, 0, 1860, 0, 1102, 0, 0,
	0, 1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 2410, 281, 282, 0,
	0, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 2374, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	2350, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 1700, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	1630, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 1625, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	1616, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 1611, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	1523, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1522, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 1517, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1516, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	1510, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 1328, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 4665, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 4664, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 4663, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 4665, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 4664, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 4302, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 4303,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 4301, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 1118, 1090, 1091, 1092, 3146, 3147, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 1118, 1090, 1091,
	1092, 3144, 3145, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 2418, 2419, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	0, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	2675, 0, 0, 0, 0, 0, 0, 2673, 2674, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 0, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 3139, 3140, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 2106, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 0, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 4665, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 0, 1145,
	0, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 0, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 4664, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	1062, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1069, 1070, 274,
	276, 275, 277, 278, 279, 280, 1102, 281, 282, 0,
	1100, 0, 0, 0, 1142, 0, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 1141, 0, 299, 634, 635, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1226, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 273, 1194,
	465, 466, 0, 1146, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 1232, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 1234, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 233, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 0, 583, 574, 235, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 1600, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 1240, 0, 227, 623, 624,
	679, 625, 626, 627, 0, 0, 228, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 1142, 0, 1230,
	0, 1946, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 1141, 0, 299,
	634, 635, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1226, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 273, 1194, 465, 466, 0, 1146, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 1232, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 1234, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	233, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 0, 583, 574, 235, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 1600, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 3303, 0, 1240,
	227, 623, 624, 679, 625, 626, 627, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 1230, 0, 1946, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 1141, 0, 299, 634, 635, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1226, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 273, 1194, 465, 466, 0,
	1146, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	1232, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	1234, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 1222, 0, 1240, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 1142, 1230, 0, 1228, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 1141, 0, 299, 634, 635,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 651, 652, 0,
	653, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 1226, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 0, 273,
	1194, 465, 466, 0, 1146, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 1232, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 1234, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 0, 1240, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1142, 0,
	1230, 0, 1228, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 1141, 0,
	299, 634, 635, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	651, 652, 0, 653, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1226, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 0, 273, 1194, 465, 466, 0, 1146, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 1232, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 1234, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 0, 1240,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 0, 1230, 0, 1228, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 1141, 0, 299, 634, 635, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 273, 1194, 465, 466, 0,
	1146, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 0, 1240, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 0, 0, 0, 4128, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 1141, 0, 299, 634, 635, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 273, 1194,
	465, 466, 0, 1146, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 1234, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 268, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 2522, 2523, 2524, 2541, 2542,
	2543, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 2544, 0, 628, 0, 0,
	0, 1844, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 1829, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 2534, 0, 310,
	311, 312, 309, 313, 0, 314, 2530, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 2535, 2536, 2537, 2538, 364, 365, 366, 643, 0,
	0, 2529, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 2539, 2540, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 2532, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 2533, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 1828, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 1062, 0, 1321, 2519, 2520, 2521, 2545, 2531,
	2525, 0, 2527, 2528, 2526, 2513, 2514, 2515, 2516, 2517,
	2518, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 1326, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 1185, 399, 651, 652,
	0, 653, 0, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 0,
	0, 1194, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 233,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 235, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 1600, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 1597, 0, 1321, 227,
	623, 624, 679, 625, 626, 627, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 188, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 1326, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 0, 1194, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 233, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 235, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	1600, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 227, 623, 624, 679, 625, 626, 627,
	1321, 1320, 228, 0, 0, 0, 1318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 188, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 651, 652, 0, 653, 0, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1321, 1320, 0, 0, 0, 0, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 1622,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 1326, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 0, 1194,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1321, 1320, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 3604, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 1326, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 1185, 399, 651, 652,
	0, 653, 0, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 0,
	0, 1194, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 2295, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1321, 2209, 0, 0,
	0, 0, 2210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 1622, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 1326,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1185, 399,
	651, 652, 0, 653, 0, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 2208, 415, 414, 0, 416,
	655, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 0, 0, 1194, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1321, 1320,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 1622, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 1326, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 0, 1194, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	1062, 0, 268, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 1606, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 233, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 235, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 1600, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 1240, 0, 227, 623, 624,
	679, 625, 626, 627, 0, 0, 228, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 1142, 0, 0,
	0, 188, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 1141, 0, 299,
	634, 635, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 273, 1194, 465, 466, 0, 1146, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 0, 268, 3049, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 1960,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 0,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 268, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 4832, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	3554, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 1594, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 268, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 3037, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 268, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 3713, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 900,
	0, 805, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 2286, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 812, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 898, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 810, 588, 589, 590, 591, 592,
	811, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 805, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 2027, 281, 282,
	0, 0, 0, 815, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 812,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 2026, 549, 550, 551, 552, 0, 2028,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 810, 588, 589, 590,
	591, 592, 811, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 2025, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 805, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 1978,
	281, 282, 0, 0, 0, 815, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 812, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 1977, 549, 550, 551, 552,
	0, 1979, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 810, 588,
	589, 590, 591, 592, 811, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 1976, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 803, 622, 805, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 815, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 812, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 273, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	810, 588, 589, 590, 591, 592, 811, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 2000, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 815,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 0, 2006, 0, 291, 1996, 292, 2012,
	0, 2019, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 2022, 2023, 0, 0, 300, 301, 0, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 1165, 332, 2010, 2009, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 0, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	2008, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 2017, 2018, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 0, 0, 0,
	383, 0, 384, 385, 386, 387, 388, 0, 0, 0,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 2003, 2004, 0, 1999, 0, 401, 402, 1187, 0,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 0, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 0, 0, 467,
	2011, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 0, 1195, 478, 1196,
	0, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 1993, 492, 493, 494,
	1994, 495, 496, 497, 0, 498, 0, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	2007, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 0, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 2005, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 2021, 577, 578, 579,
	580, 0, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 2013, 2014, 2015, 2016, 0, 605, 0, 597,
	598, 599, 0, 600, 0, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 0,
	1997, 2020, 805, 620, 619, 621, 0, 0, 622, 0,
	0, 0, 0, 623, 624, 0, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	1987, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 812, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 810, 588, 589, 590, 591,
	592, 811, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 805, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 815, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	812, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 2329,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 2330, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 810, 588, 589,
	590, 591, 592, 811, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 2331, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 815, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 2071, 622, 1321, 2038,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 815, 0,
	628, 0, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 1326, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	2035, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 0, 1194, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	2036, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 2032, 622,
	1321, 2038, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 2035, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 651, 652, 0, 653, 0, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 2036, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 1321, 2038, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 1326, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 2035, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 0, 1194,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 2036, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1321, 1320, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 1326, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 1185, 399, 651, 652,
	0, 653, 0, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 0,
	0, 1194, 465, 466, 3906, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1321, 1320, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 1326,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1185, 399,
	651, 652, 0, 653, 0, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 0, 0, 1194, 465, 466, 3517, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1650, 0,
	1321, 1320, 0, 0, 0, 0, 1318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	1649, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 651, 652, 0, 653, 0, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 1648, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 1647, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1568, 0, 1321, 1320, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 1326, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 1567, 649, 650, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 1185, 399, 651, 652,
	0, 653, 0, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 0,
	0, 1194, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1528, 0, 1321, 1320,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 1326, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 0, 1194, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1493, 0, 1321, 1320, 0, 0, 0, 0, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 1326, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1492, 649, 650, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 0, 1194,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1315, 0, 1321, 1320, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 1326,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 1314, 649, 650, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1185, 399,
	651, 652, 0, 653, 0, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 0, 0, 1194, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1321, 1320,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 1326, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 0, 1194, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	1321, 2038, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 2078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 651, 652, 0, 653, 0, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 1321, 1320, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 1326, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 0, 1194,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 1321, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 651, 652, 0, 653, 0, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	2844, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 2841, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 2848,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 3062, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 2847, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 3059, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 3061, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	3058, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 2846, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 3060,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 2844, 300, 301, 637, 0,
	0, 2838, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 2841, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 2848, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 2847, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 2837, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 2846,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 2845, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 1726, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 1725, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 1724, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 273, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 1727, 541, 548,
	549, 550, 551, 552, 0, 1723, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 1721, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 1722, 619, 621, 678, 1468,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 1470, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 1232, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 1465, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 1467, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 1232, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 1372, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1374, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 1232, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 711, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 710, 279,
	280, 700, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 703, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 704, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 705, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 699, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 700, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 703, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 704, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 705, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 700, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 703, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 704, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 705,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 700, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 703, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 3917, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 705, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 1232, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 3460, 464, 453, 0, 273, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 3007,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 3006, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 2301, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 268, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 2242, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 2249, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	2248, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	2235, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 2237, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 2202, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 273, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 1232, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 1572, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1571,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 273, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 1485,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 1478, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 1480, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 1305, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1304, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 1295, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 1294, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 273, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 1292, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1291,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 273, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 1287,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 1286, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 681, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 259, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 703, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 704, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	705, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 2338, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 2336, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 2334, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 2255, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	2057, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 2051, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 887, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 886, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	885, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 3062, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 4201, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 765, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 1342, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 1340, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 770, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 769, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 1343, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 767,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 765, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 1342, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 1340, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 770, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 0, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 769, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 1343, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 767, 670, 671, 672, 0, 605, 0, 597, 1341,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 690, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 689, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 688, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	268, 3049, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 268, 4211, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 4486,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 4105, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 3872,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 2728, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 268, 3049, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 3046, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 2311, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 2299,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 0, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 765, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 758, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	770, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 0,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 769, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 1605, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 767, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 1578, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1577, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 1562, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 1560, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 1555, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 1532,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 1530, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 0, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 1490, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 0,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 1473, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 1310, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 1309, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 1301, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1300,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 1254, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 775, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 765,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 758, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 756, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 757, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 770, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 0, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 759, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 769, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 760, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 767, 670, 671, 672,
	0, 605, 0, 597, 762, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 750, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 0,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 751, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 713, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 707, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 685, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 3574,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 769, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 767,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 3500,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 3478, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 3475,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 3425, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 3423,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 3408, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 3017,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 751,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 2273, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 0, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 1272, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 268,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 1205, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 268, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 0, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 0, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 0, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 0, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1773, 1774, 0, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1804,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1810, 1804, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 1800, 1801, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 1803, 1805, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 0,
	1820, 0, 1821, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 1796, 0, 0, 0, 1803, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 1810, 1804, 0, 0, 0,
	0, 1802, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 1815, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0, 4507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	1814, 0, 4470, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1821,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1812, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 1810, 1804, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 1822, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 1811, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 1797, 1773,
	1774, 1781, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 1815, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1814,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 1829, 1828, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 1795, 1790, 1791, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 1822, 0, 0, 0, 4469, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1802, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1773, 1774,
	1812, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	1810, 1804, 0, 0, 1815, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1828, 0, 0, 0, 1822,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 1811, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 1802, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 4286, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 1797, 1773, 1774, 1781, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1804, 0,
	0, 1815, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 1829, 1828, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 1820, 0, 1821, 0, 0, 0, 0, 0,
	1795, 1790, 1791, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 1822, 0,
	0, 0, 4124, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 0, 0, 1781, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1802, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1773, 1774, 1812, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 1810, 1804, 0, 0,
	1815, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1828, 0, 0, 0, 1822, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 1811, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 1802, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	0, 4058, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	1797, 1773, 1774, 1781, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1804, 0, 0, 1815, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 1814, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 0, 0, 0, 1829, 1828, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 1820, 0,
	1821, 0, 0, 0, 0, 0, 1795, 1790, 1791, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 1822, 0, 0, 0, 4057, 0,
	1798, 1799, 1800, 1801, 0, 0, 0, 0, 0, 0,
	1781, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 1803, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1802, 1821, 0, 0,
	0, 0, 0, 0, 1790, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1773, 1774, 1812, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 1810, 1804, 0, 0, 1815, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1828, 0, 0,
	0, 1822, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 1811,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 1802, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 4056, 0, 1798,
	1799, 1800, 1801, 0, 0, 0, 1797, 1773, 1774, 1781,
	1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1804, 0, 0, 1815, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 1814, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 1803, 1805, 0,
	0, 0, 0, 1829, 1828, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 1820, 0, 1821, 0, 0, 0,
	0, 0, 1795, 1790, 1791, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	1822, 0, 0, 0, 3718, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 0, 0, 0, 1781, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 1803, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 1802, 1821, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1773, 1774, 1812, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 1810, 1804,
	0, 0, 1815, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1828, 0, 0, 0, 1822, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 1811, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 1802,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 0, 3221, 0, 1798, 1799, 1800, 1801, 0,
	0, 0, 1797, 1773, 1774, 1781, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1804, 0, 0, 1815,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 1814, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 1803, 1805, 0, 0, 0, 0, 1829,
	1828, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	1820, 0, 1821, 0, 0, 0, 0, 0, 1795, 1790,
	1791, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 1822, 0, 0, 0,
	3220, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1802, 1821,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1773, 1774, 1812, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 1810, 1804, 0, 0, 1815, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1828,
	0, 0, 0, 1822, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 1811, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 1802, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0, 3219,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 1797, 1773,
	1774, 1781, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 1815, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1814,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 1829, 1828, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 1795, 1790, 1791, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 1822, 0, 0, 0, 3218, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 4739,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1802, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1773, 1774,
	1812, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	1810, 1804, 0, 0, 1815, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1828, 0, 0, 0, 1822,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 1811, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 1802, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 3183, 0, 0, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 1797, 0, 0, 1781, 0, 3283,
	0, 0, 0, 3282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 1773, 1774, 0, 1806,
	1807, 1808, 1817, 1818, 1819, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 1810, 1804,
	0, 0, 1828, 0, 3154, 0, 1776, 0, 0, 0,
	0, 0, 1820, 0, 1821, 1823, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 1812,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 1796, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 1822, 3155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 1800, 1801, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2701, 0, 0, 0, 0, 0, 0, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	1802, 0, 0, 1814, 0, 0, 1824, 0, 0, 0,
	0, 1810, 1804, 1803, 1805, 0, 2700, 0, 0, 1776,
	0, 0, 0, 1797, 0, 0, 0, 0, 1823, 0,
	1820, 0, 1821, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	1815, 0, 0, 0, 1775, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 1796, 1792, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 1798, 1799,
	1800, 1801, 0, 1813, 0, 0, 0, 0, 1781, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1774, 0,
	1806, 1807, 1808, 1817, 1818, 1819, 1814, 0, 1802, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 1810,
	1804, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1797, 0, 1820, 0, 1821, 1823, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 1815, 0,
	1812, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 1796, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 1800, 1801,
	0, 1813, 0, 0, 0, 0, 1781, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 1802, 0, 0, 1814, 0, 0, 1824, 0, 0,
	0, 0, 1810, 1804, 1803, 1805, 0, 0, 0, 0,
	1776, 0, 0, 0, 1797, 0, 0, 0, 0, 1823,
	0, 1820, 0, 1821, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 1815, 0, 0, 0, 1775, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 1796, 1792, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 1798,
	1799, 1800, 1801, 0, 1813, 0, 0, 0, 0, 1781,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 1802,
	1824, 0, 0, 0, 0, 0, 0, 1803, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 1820, 0, 1821, 0, 0, 0,
	0, 0, 0, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1804, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1811, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 1813, 0, 1792, 0, 0, 0, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 1773, 1774,
	0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	1810, 1804, 0, 0, 0, 3284, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 1797, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 1800, 1801, 0, 1829, 0, 0, 0, 0, 1781,
	0, 0, 1815, 1775, 0, 3289, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 1814, 0, 0,
	1824, 0, 0, 0, 0, 0, 3699, 1803, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 1821, 0, 0, 0,
	0, 0, 0, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 1813, 1796, 1781, 0, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 1824, 0,
	1822, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 1820, 0, 1821, 0, 0, 0, 0, 1826,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1804, 0,
	0, 0, 1802, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 1822, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	1795, 0, 1815, 0, 0, 0, 0, 1826, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	1815, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 1828, 1803, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1804, 0, 0, 0, 3222, 0, 1802, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 1773, 1774, 1775, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 1795, 0, 0, 0, 1815, 0, 0,
	0, 0, 1792, 1810, 1804, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	1798, 1799, 1800, 1801, 0, 0, 0, 0, 0, 0,
	1781, 0, 1820, 0, 1821, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 1824, 0, 0, 1796, 0, 0, 0, 1803, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1821, 0, 0,
	0, 0, 0, 0, 1790, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 1802, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 1797, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 1815, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1821, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783,
}

var sqlPact = [...]int{
	6636, -1000, -1000, -1000, -1000, 209, -1000, -1000, 206, 204,
	203, 197, 196, 193, 190, 188, 187, 185, 184, -1000,
	-1000, -1000, -1000, -1000, -1000, 181, -1000, -1000, 180, -1000,
	173, 170, 168, -1000, -1000, 167, -1000, 166, -1000, -1000,
	-1000, -1000, 165, 162, 160, 94151, 93599, 94696, 2261, 115015,
	101264, 1938, 83705, 114463, 83153, 113911, 2100, 11233, 113359, 2709,
	159, -1000, 112807, 158, 156, 154, -1000, 112255, -1000, 1871,
	-1000, 151, -1000, 5954, 69293, 149, 139, 131, 2468, 125,
	-1000, 124, 123, -1000, -1000, 122, -1000, 9475, 1454, -1000,
	115, 114, -1000, 311, 99063, 113, 112, 2386, 110, 109,
	67637, 108, 107, 2215, 2800, -1000, -1000, 1998, -1000, -1000,
	105, 101, 100, 99, 97, 96, 94, 93, 91, 89,
	88, 87, -1000, 86, 85, 84, 83, 82, -1000, 78,
	77, 76, -1000, 75, -1000, 74, 73, 72, 71, 70,
	68, 67, 66, 64, 61, 59, 57, 53, 48, 12757,
	-1000, -1000, 1770, 1635, 1623, 1617, 1596, 1593, 955, 47,
	45, 38, 36, 35, 34, 33, 32, 31, 30, 29,
	28, 24, 22, 19, 18, 15, 13, 148, 12, 9,
	6, 5, 3, 2, 0, 2226, -1000, 1710, 869, 32167,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 122645, 115560, -1,
	-54, -2, -1000, 3207, 1059, 55979, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 308, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 502, 1976, 740, -1000, -1000, -1000, 111710, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2260, -35, -1000,
	1959, -1000, -1000, -1000, -1000, -1000, 738, -1000, 2258, 153,
	2197, -1000, -1000, -1000, 3283, 2410, 3685, 3684, 3683, 3681,
	3677, 122100, 1622, 3673, 2482, 3670, 3667, 3666, 3664, 3660,
	3659, 3656, -1000, 93047, 1007, 92495, 91943, 3303, 111165, 91391,
	110613, 77092, 48103, 794, 3278, -1000, -1000, -1000, -1000, -1000,
	-1000, 115560, -1000, 1006, -1000, -1000, 3654, 3653, 1997, 737,
	100712, -1000, 1921, -1000, -1000, -1000, -1000, 902, 1248, 33862,
	33862, 307, -1000, -1000, -1000, -1000, -1000, -1000, 3652, 3651,
	3650, 3649, 3648, -1000, -1000, 82601, 25195, 82049, 81497, 110061,
	24631, 90839, 90287, 3644, 3643, 3641, 109509, 76528, 3402, 3401,
	1005, 1949, 1413, -1000, -1000, -1000, -1000, -1000, -1000, -23,
	71492, 3443, 115560, -1000, 306, -1000, -1000, -1000, -1000, -1000,
	-1000, 47538, 712, 46973, 711, 46408, 304, -1000, -1000, -1000,
	-1000, 75964, -1000, 108957, 2409, 3639, 3638, 1073, 3636, 3149,
	1619, 3635, 1793, 1159, 3633, 3632, 3629, 3628, 3626, 3622,
	3619, 1366, 108405, 2877, 1393, 107853, 1654, 75400, 1003, 89735,
	94696, 2567, 107301, 1267, 1249, -1000, -1000, -1000, -1000, 3003,
	2798, 2792, 1309, -1000, -1000, -1000, -1000, 59314, 5987, 5846,
	-1000, -1000, 11923, 106749, 62124, 94696, 94696, -1000, -1000, -1000,
	-1000, -1000, 45843, 431, 45278, 770, -1000, -1000, 59876, 2843,
	-1000, -1000, -1000, -1000, 44713, 330, 44148, 731, 115560, -1000,
	2875, 1935, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1707,
	1565, 3463, 2646, 74836, 1968, 1381, 3251, 3001, 2994, 1483,
	2963, 3616, 2588, 2961, 2959, 2954, 2953, 2943, 1222, 2517,
	318, 2536, 31602, 2865, 1708, 43583, 1441, 1475, 2941, 2939,
	3493, 1912, 1890, 2124, 80945, 3615, 3612, 3214, 2929, 2922,
	2699, 2909, -1000, 2842, 1360, -1000, -1000, -1000, -1000, 1456,
	-1000, -1000, -1000, -1000, 85340, -1000, -1000, 1358, -1000, -1000,
	1358, -1000, -1000, -1000, -1000, -1000, 1210, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1710,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2069, -1000, 1975, -1000, -1000, 2424, 3184, 3184, 3184, 3276,
	469, 454, -1000, 148, -1000, -1000, 128870, -1000, -1000, 48668,
	48668, 48668, 48668, 48668, 48668, 48668, 48668, 2128, -1000, 735,
	-1000, -1000, 793, -1000, 732, 662, 609, -1000, -1000, -1000,
	-1000, -1000, -1000, 730, -1000, -1000, -1000, -1000, -1000, -1000,
	3443, -1000, 28079, -1000, -1000, -1000, 476, 729, 48668, -1000,
	-1000, 3500, 3499, 981, -1000, 301, 916, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2874,
	728, 726, -1000, 724, 721, 720, 717, 715, -1000, -1000,
	-1000, 713, 708, 705, 704, 701, 699, 696, 694, -1000,
	1978, -1000, -1000, -1000, -1000, -1000, -1000, 652, 649, 649,
	649, -1000, 997, -1000, -1000, -1000, 322, 648, 320, 647,
	645, 644, -1000, 692, 690, 689, 688, 682, 679, 676,
	672, 668, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 991,
	-1000, -1000, -1000, -1000, -24, 115560, -1000, 502, -24, -1000,
	-1000, 667, -1000, 36151, 36151, 36151, -1000, -1000, 2257, 48668,
	-1000, 2382, -1000, -14, -14, 878, 57638, -1000, 54871, 878,
	316, 813, 63776, -1000, 2841, -1000, -1000, 666, 296, -1000,
	-1000, -1000, -1000, 25757, 2839, 115560, 115560, 94696, 94696, 94696,
	3611, 3082, 48668, -1000, -1000, 68741, 115560, 95241, -1000, -1000,
	3383, 69843, 68189, 115560, 2873, 72596, 3610, -1000, -1000, -1000,
	-1000, -1000, 3055, 3609, 3608, 3607, -1000, 115560, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 230, 3054, -1000, -1000, 98511,
	230, 3053, -1000, 230, 3050, -1000, 97966, -1000, -1000, 2173,
	3047, -1000, -1000, 235, 3044, -1000, -1000, -1000, 233, 3040,
	-1000, -1000, 278, -65, 3039, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 128870, -1000, -1000,
	-1000, 72044, -1000, 3219, -1000, -1000, 115560, -1000, 48668, -1000,
	3382, 1837, 78206, 3319, -38, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2452, 2444, 1126, 2304, -1000, 3091, 1474, 33862,
	3135, -1000, -1000, -1000, -1000, 266, 25757, -1000, -1000, -1000,
	-1000, -1000, -1000, 2785, 3031, 1590, -1000, 2289, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1942, 3028, -1000, 2348,
	3026, 1898, -1000, -1000, 2184, -1000, 3210, -1000, -1000, 2041,
	3025, -13, -1000, -1000, 2224, -1000, -1000, -1000, -1000, 1945,
	-1000, 1266, 3004, -1000, 2645, 2645, 89183, 3029, 61562, 59876,
	71492, -33, -1000, -1000, -1000, -1000, -238, -1000, 24065, 128870,
	-1000, -1000, -1000, -1000, 1742, 128870, 933, -1000, -1000, 3002,
	-1000, 128870, 872, -1000, -1000, 2998, -1000, 2872, -1000, -1000,
	2361, -1000, -1000, 3605, -1000, -1000, 3599, -1000, 3598, 3594,
	3589, -1000, 1548, 1924, 3588, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 88638, 2256, -1000, -1000, 87534, 2868, -1000,
	2359, 3318, -1000, 88086, 1002, -1000, 971, 2358, -1000, 97421,
	1050, 2354, -1000, 3587, 3302, 2592, 971, 2350, -1000, -1000,
	-1000, -1000, -1000, 1013, -1000, 65431, -1000, 65431, -1000, 1498,
	-1000, 121555, -14, 94696, 3443, -1000, -58, -1000, -1000, -1000,
	1059, -1000, 58760, -1000, 58760, 100160, 77654, 954, 766, 67083,
	128870, -1000, -1000, -1000, -1000, 128870, -1000, -1000, -1000, -276,
	2643, -1000, 77654, 61000, 128870, -1000, -1000, -1000, -1000, 128870,
	-1000, -1000, -1000, 77654, 87534, -1000, 106197, 86989, -1000, -1000,
	1280, 2513, -1000, -1000, -1000, 77654, 1270, 77654, 77654, 77654,
	-1000, 105645, -1000, -1000, 1930, 1209, 3209, 1916, 94696, -1000,
	1809, -1000, -1000, -1000, 3235, 115560, -1000, -1000, 2866, -1000,
	70940, 96876, -1000, 96331, -1000, 95786, -1000, 94696, -1000, 94696,
	-1000, 3585, 3583, 3581, -1000, -1000, 3580, -1000, 3579, 3223,
	-1000, 727, 43018, 128870, 3222, -1000, 3578, 3311, 2865, 128870,
	-1000, 2976, 1613, 1606, 115560, -1000, -1000, 115560, -1000, 115560,
	-1000, -1000, -1000, 1418, -1000, -1000, 2451, -1000, -1000, -1000,
	-1000, 94696, 94696, 94696, 94696, 1403, -1000, 42453, -1000, -1000,
	2936, 3577, 1664, -1000, 1722, -1000, 2838, 3217, -1000, 1258,
	1724, -1000, -1000, 238, -1000, -1000, -38, -1000, 121010, -1000,
	2424, -1000, 115560, -1000, 2463, 2854, 2864, 1785, 2272, 2562,
	-1000, 41888, 2516, 52058, 2284, 148, -1000, -1000, 148, 148,
	33297, -1000, -1000, 69843, 69843, 25757, 1217, 48668, 48668, 48668,
	48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668,
	48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668,
	48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668, 48668,
	48668, 48668, 48668, 2136, 48668, 1208, 48668, 48668, 48668, 48668,
	2044, -1000, -1000, 1825, 531, 1889, 662, -1000, -1000, -1000,
	3452, 3452, 3452, 443, 443, 443, 129243, 129243, 628, 3574,
	793, -1000, 48668, -1000, 44, 58191, 48668, 26321, -1000, 454,
	14388, 2436, -1000, 451, 26915, -1000, -1000, -1000, 28079, 609,
	41294, 48668, 958, 128870, -1000, -1000, 1401, 3465, 23499, 2886,
	2684, 661, 865, 857, 31008, 30414, 29820, 29226, 742, 48668,
	48668, 48668, 48668, 48668, 48668, 48668, 48668, -1000, -1000, 3476,
	-1000, 3465, -1000, -1000, -1000, -1000, 3465, 1216, 1163, 3465,
	-1000, 3465, 3465, 7390, 7390, 40729, 40164, 39599, 52623, 39034,
	48668, 28661, 38469, 37904, -1000, 115560, -24, 3380, 48668, 150,
	-1000, 127388, -1000, 150, 150, 658, -64, 128870, 2511, 2511,
	56532, 2299, 2154, 2154, 2154, -1000, 878, 18942, 878, 104548,
	2167, 878, 878, 253, 288, 450, 54318, 2382, 104548, 780,
	657, -3, -4, -5, -1000, -1000, -7, -8, -1000, -1000,
	94696, 655, 26321, 25757, 252, 1943, -69, 2546, 2542, 2539,
	-1000, 2531, -1000, 1759, -70, 1207, 94696, 115560, 1239, 3573,
	-63, -1000, 5516, -71, -1000, 1331, 249, 3465, -1000, -1000,
	-1000, -1000, -1000, 3572, 3570, -1000, 989, 654, 653, 392,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 652, 649,
	649, 649, -1000, 322, 648, 320, 647, 645, 644, -1000,
	-1000, -1000, -1000, -1000, 2837, 94696, 115560, 1232, 3569, -238,
	95241, -44, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	115560, -1000, -1000, -1000, 3567, -1000, 94696, -1000, -1000, 94696,
	230, 2990, -1000, 94696, -1000, 94696, 227, 2989, -1000, -1000,
	115560, -1000, 94696, 94696, -1000, 115560, 115560, 115560, 77654, 77654,
	237, -1000, 94696, 890, -72, 1080, -38, -1000, -1000, -1000,
	1358, -1000, 1758, -1000, -1000, -1000, -1000, -1000, -1000, 1371,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 981, -1000,
	-1000, -1000, -1000, -1000, -1000, 3469, 3460, -25, -1000, -1000,
	25757, -1000, -39, 1569, 1847, 1206, -1000, 80393, 2251, 3218,
	3566, 2589, 3156, 1497, -1000, 1417, -1000, 3306, 85340, 3339,
	3363, 1283, -1000, 2835, -1000, -1000, 898, 1543, 1711, 1203,
	1201, 85340, 2348, -1000, 69843, -1000, 2661, 3275, 1377, 1388,
	1377, 1377, 1390, -1000, 85340, 1709, 1200, 1194, 1193, 1991,
	1866, 1858, -1000, -1000, -1000, 1191, 1189, 829, 1851, -1000,
	-41, 3338, 3355, 1282, -1000, 2834, 1188, -1000, -1000, -1000,
	3273, 94696, 25757, 1523, 1522, 1519, 1704, 1183, -26, -1000,
	3336, 1181, 1179, -1000, 987, 5955, 3112, -1000, 77654, 987,
	987, 1870, 2984, 2642, -1000, 1464, 2637, 873, 2629, -1000,
	-1000, -1000, 873, -33, 71492, 115560, 248, -1000, 44, 48668,
	48668, 44, 48668, 44, 3310, 2983, -1000, -1000, -1000, -1000,
	-1000, 3564, 1886, 2478, -1000, -1000, 642, 2349, 2829, 115560,
	2563, -34, 94696, -1000, 70388, 2982, 73148, 2348, 2342, -1000,
	-1000, 86437, -1000, 2981, 502, 2339, -1000, 602, 3562, 2980,
	-1000, 120465, -1000, 3219, 1228, 2979, 1038, 671, 3379, -1000,
	671, 65983, -1000, 115560, -1000, -14, 1479, 79303, -77, -78,
	448, -1000, 105100, 115560, 1037, 79848, 115560, 3124, 968, 59876,
	-1000, 59876, -85, -276, 2627, 1385, 954, 954, 873, -1000,
	873, -1000, 94696, 2863, -1000, -1000, 77654, 954, 954, 954,
	-1000, -1000, -1000, -1000, 3561, 3558, 3557, 3556, -1000, -1000,
	970, 94696, 115560, 94696, -1000, 234, -1000, 115560, -1000, 115560,
	115560, 94696, -1000, 970, 115560, 970, 115560, 970, 115560, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 44, -1000, -1000, 128870,
	-1000, 48668, -1000, -1000, 3552, 1547, -1000, 2861, -1000, 2856,
	-1000, 26, -1000, -1000, 1791, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3550, 128870, -1000, 1895, -1000, -1000, -1000, -1000,
	94696, 94696, 94696, 94696, 115560, 3107, -1000, 115560, 3101, 94696,
	-1000, -1000, 85340, -1000, 2463, 2854, -1000, -1000, -1000, -1000,
	-1000, -1000, 1409, 2209, -1000, 2505, -1000, 1443, -1000, -1000,
	-1000, 128870, 53188, -1000, -1000, 128870, 1753, -1000, 51493, 50928,
	-1000, -1000, 1625, 94696, 2564, -1000, 2564, -229, -1000, 127195,
	2504, 94696, -1000, -1000, -1000, -1000, -1000, 896, 624, 624,
	1359, 1359, 1359, 1359, 3308, 5964, 6896, 352, 7292, 7292,
	5249, 5249, 5249, 5249, 5249, 7292, 470, 443, 443, 470,
	470, 470, 470, 470, 443, 443, 443, 7292, 7292, 7292,
	443, 129243, 8904, 10251, 48668, 48668, 1177, 1706, 531, 9516,
	48668, 11113, 11113, 11113, 11113, -1000, 1961, -1000, -1000, -1000,
	-1000, 2828, 641, 52623, 52623, -1000, -1000, -1000, -1000, 27497,
	48668, -1000, -1000, -1000, -1000, 37310, -1000, -1000, 126571, -314,
	446, -1000, 224, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 445, -216, -45, -1000,
	48668, 48668, 48668, 442, -1000, 223, 48668, 115560, -1000, 17893,
	773, -84, -1000, -93, 1400, -1000, 48668, -1000, -1000, 1173,
	-1000, 1171, 1166, 1165, -1000, 640, 441, -1000, 222, -1000,
	2134, 639, 638, 48668, -1000, -1000, -1000, -1000, -1000, 126312,
	-1000, -1000, 126145, -1000, -1000, 125886, -1000, -1000, 125719, -1000,
	-1000, -1000, 128807, 17634, 17199, 16763, 13508, 16297, 15613, -95,
	440, -103, 439, 892, 885, 429, 427, 413, -104, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -106, 412, -1000, 2826, -216, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 409, -1000, 407, -1000, 128434, -216,
	406, 5285, -1000, 52623, 52623, 52623, 52623, -1000, 404, -1000,
	126997, -1000, 128167, 36745, 36745, 36745, 403, 128059, 48668, -216,
	-109, -1000, -115, -1000, -1000, 571, -118, 935, 36151, 55425,
	25757, -1000, 935, 935, 48668, -1000, 48668, 2529, -1000, -1000,
	-1000, -1000, 2524, 2216, 2511, 56532, -1000, -1000, -1000, -1000,
	104548, -1000, 3443, 2742, -1000, 104548, -1000, -1000, 115560, 502,
	-1000, 104548, 104548, 25757, 878, -1000, 878, 104548, 718, -1000,
	-1000, -1000, -1000, -1000, 400, 63231, -45, 221, 25757, 971,
	-1000, -1000, 2640, 2640, 2640, 2640, -1000, -1000, 115560, 1162,
	-36, -96, 2626, -1000, 3414, -1000, 1996, -1000, 69843, -1000,
	791, 1151, 25757, -1000, -1000, -1000, 633, -1000, 3465, 3465,
	-1000, 3465, 115560, 2824, 142, 2625, -1000, 130, 73148, 73148,
	3548, -1000, -1000, 230, -1000, 94696, 230, 230, -1000, 94696,
	94696, 2173, -1000, 235, -1000, 233, -1000, -1000, -65, -1000,
	979, 33862, -1000, 1358, -1000, -1000, 1504, -1000, 1907, -1000,
	1130, -1000, -1000, -1000, -1000, 33862, -1000, 2033, 115560, 115560,
	94696, -1000, 115560, -1000, 2097, 73148, -1000, 2338, 119920, 2331,
	69843, 115560, -1000, -1000, 632, 909, 2502, 2497, 1035, 115560,
	115560, 2496, 119375, 118830, -1000, 3547, 115560, 2061, 48668, 3272,
	2185, 2381, 44, 44, -1000, 44, 44, 44, -1000, 630,
	1303, 94696, 94696, 115560, 73148, 94696, 1868, -1000, -1000, -1000,
	-1000, -1000, 85885, -1000, -1000, 3473, 3472, -1000, 1377, -1000,
	-1000, -1000, 1377, 2348, 1812, 115560, 73148, 94696, 73148, -1000,
	-1000, 2149, 118285, 117740, 1677, 115560, 1423, -1000, 829, 2035,
	44, 44, -1000, 44, 44, 44, 629, 25757, 1931, -1000,
	2867, 115560, 3498, 117195, 3497, 115560, 115560, 115560, 73148, 3186,
	115560, 115560, 73148, -1000, 116650, 3399, 2069, 5955, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74272,
	1045, 115560, 1266, -1000, -1000, 1661, 1161, 1160, 85340, 2002,
	1659, 115560, 59876, 964, 59876, 2597, -1000, -1000, 22933, -1000,
	128870, 128870, -1000, 128870, -1000, 70388, 115560, -1000, 1001, 115560,
	79848, 925, 2978, 64879, -238, 954, 77654, 94696, -34, 2563,
	115560, -1000, -1000, 2348, 2975, 502, 2337, -1000, 77654, 3378,
	2973, 613, 3546, 3542, -1000, 94696, 2253, 2335, -1000, -1000,
	116105, 2970, 829, 115560, 935, 56532, 1869, -1000, 62678, 1017,
	115560, 1774, 118, -1000, -1000, -1000, 11, 115560, -1000, 802,
	-1000, -1000, 1479, 1479, 954, -249, 611, -1000, 856, 855,
	60438, 77654, -123, -1000, -1000, -1000, -1000, 2331, 94696, 115560,
	1292, 2590, 115560, -124, -1000, 217, 610, -1000, 2385, -1000,
	-276, -1000, 968, 59876, 2821, 2818, -1000, -1000, 978, -1000,
	1253, 954, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -15, 115560, -238, -238, -48, -36, -1000,
	970, -1000, 970, -1000, 970, -1000, 128870, -1000, -1000, 1517,
	1514, 115560, -1000, -1000, 115560, -1000, 25757, 115560, 94696, 25757,
	94696, 2853, 2851, -1000, -1000, -1000, 115560, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1049, -1000, 1753, 2204, -1000, 609,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2432,
	-1000, -37, 33297, 874, -1000, -1000, 94696, -18, 48668, 48668,
	8463, 8196, 48668, 52623, 52623, -1000, 48668, 5981, -1000, -1000,
	-1000, -1000, -1000, 2804, 608, 48668, 69843, 7542, 7249, -1000,
	399, 15515, 470, -1000, 48668, -1000, 552, -1000, 398, 35586,
	-1000, 127586, -55, -130, -1000, 19521, -216, -135, -1000, -1000,
	790, -1000, 2946, -1000, 48668, 127779, 2399, 1966, 1717, 1571,
	3465, 3496, 22367, -1000, 66533, 982, 2172, 125460, -1000, -1000,
	-1000, -1000, 69843, 69843, 48668, 48668, -1000, 48668, 48668, 48668,
	-1000, -1000, -1000, 3465, 877, -1000, -1000, -1000, 877, -1000,
	-1000, 1377, -1000, 1377, -1000, 48668, -1000, -1000, 2803, 48668,
	-1000, 69843, 69843, 52623, 52623, 52623, 52623, 52623, 52623, 52623,
	52623, 52623, 52623, 52623, 52623, 52623, 52623, 52623, 52623, 52623,
	52623, 52623, 52623, 2479, 52623, 3448, 3448, 3448, 918, -1000,
	2850, 2803, 48668, 48668, 69843, 395, 393, 390, -1000, 48668,
	-216, -1000, -1000, 6439, 607, -1000, 2415, -1000, 2677, -1000,
	48668, -1000, -132, -1000, 2382, -1000, -1000, 2677, 2677, -136,
	128870, 56532, 56532, -1000, 603, 48668, 2519, -1000, -1000, 772,
	-316, -1000, 854, -1000, -1000, -1000, -1000, -1000, -1000, 502,
	-1000, -1000, -1000, 216, 104548, 104548, 769, -1000, -138, -1000,
	-1000, -146, -1000, 3376, 389, 25757, -1000, 935, 2606, -1000,
	-1000, -1000, -1000, -1000, -1000, -238, 115560, 115560, 1633, 2195,
	3495, -1000, 3471, 788, 765, 215, 3465, 388, 387, 386,
	-238, 115560, 115560, 1632, 115560, -1000, -1000, -1000, -1000, 230,
	-1000, -1000, -1000, 227, -1000, -1000, -1000, -1000, 2579, -1000,
	-38, -1000, -1000, -1000, 48668, -1000, -1000, 3216, 1157, 1155,
	-1000, -1000, -1000, -1000, 2780, -1000, 2968, -1000, 2326, -1000,
	1023, -1000, 1557, -1000, 48668, 592, 2583, 590, 589, 3541,
	1901, 3539, 1036, 2960, 2173, 2957, 2173, -1000, -1000, -1000,
	906, -1000, 128870, 2185, -1000, 588, 585, -1000, -39, 1539,
	1749, 1154, 977, -1000, -1000, -1000, -1000, 48668, 48668, 104003,
	-1000, 468, 3210, -21, -1000, -1000, -1000, 1612, 1150, 1146,
	-1000, -1000, -1000, -1000, 2348, 1602, 1145, 1138, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2324, -1000, -1000, 2956, 976,
	-1000, 2910, 2906, 882, 115560, -1000, 975, -1000, -1000, -1000,
	-1000, 48668, -1000, -41, 1132, 3322, 2323, 94696, -1000, 2173,
	2952, 1129, -1000, 1125, -1000, -1000, -1000, 3335, 3333, 1128,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73710, -1000,
	-1000, 987, 115560, 73148, 94696, 1592, -1000, -1000, 84250, 84795,
	115560, -238, 873, -1000, 2362, 873, 964, 2799, -1000, 2557,
	974, 94696, 3538, 384, -148, -42, 69843, 3374, -1000, 2268,
	604, 94696, 880, -1000, 3443, -1000, -1000, -1000, 972, -1000,
	3315, 94696, 3373, 2948, 971, 44, 94696, 3480, -1000, -1000,
	3371, 94696, 2945, 2252, 2321, 2464, 829, 78758, 971, 2163,
	-53, -1000, 1774, 34992, 3208, -149, -1000, -1000, -1000, 935,
	65983, 56532, 48668, 3537, -151, -1000, -1000, -1000, -1000, -1000,
	101816, 101816, 77654, 77654, 77654, 954, 115560, 115560, 79848, -1000,
	-1000, 584, 115560, 115560, 582, -1000, 115560, 115560, 3536, 77654,
	-43, 580, -1000, 849, 847, 846, -1000, -1000, -1000, -1000,
	-1000, -1000, 968, -1000, -276, 59876, 44, -1000, 2186, 94696,
	-1000, 21801, -1000, -1000, -1000, -1000, -1000, -1000, 970, -238,
	-1000, -1000, 2070, 2283, 2070, 1773, 1769, -1000, -1000, 2202,
	-1000, -1000, -1000, -1000, 2578, 3192, 25757, 3312, 11113, 48668,
	48668, 566, 6819, 6561, 11113, 48668, 48668, 69843, 4909, -154,
	48668, 48668, -1000, 48668, 750, 128870, -1000, 3494, 48668, 381,
	380, -1000, -1000, -1000, 3453, -1000, -1000, -1000, 128870, 48668,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 378, -1000, 214,
	-1000, -1000, -1000, 123190, -1000, 48668, 377, 3271, -1000, 376,
	375, 10139, 12001, 125293, 125034, 124867, 372, -1000, -1000, 368,
	367, 128870, 2850, 128870, -1000, -1000, 830, 830, 1364, 1364,
	1364, 1364, 3448, 495, 527, 430, 605, 605, 605, 763,
	918, 918, 605, 605, 605, 918, 2797, 2481, 578, 8220,
	-1000, -1000, 128870, 128870, 366, -1000, -1000, -1000, -216, 365,
	6439, -1000, 2673, 3270, 128870, -1000, 56532, 2673, 2673, -1000,
	-1000, 2216, 115560, 128870, 56532, -1000, 2742, -1000, 20098, -1000,
	25757, -1000, -1000, -1000, -1000, 3443, -1000, 63231, -1000, 577,
	-1000, 27, -1000, 2606, -1000, 845, -1000, -1000, 77654, 77654,
	-238, -147, 115560, -1000, -1000, 749, 3534, 783, 25757, 359,
	-1000, -1000, -1000, -238, -238, 115560, -238, -1000, -1000, -1000,
	3122, 128870, 115560, 115560, 1433, 103458, 115560, 2940, -1000, 2162,
	-1000, 1035, 124608, 57085, -1000, 57085, 115560, -1000, -1000, -1000,
	1746, 1428, 3533, 1066, -1000, 3239, 115560, -1000, 115560, -1000,
	-1000, -1000, 115560, 115560, 94696, 115560, -1000, 73148, 2917, -159,
	128870, -46, -1000, 844, -1000, 1399, -1000, 21235, 115560, 73148,
	94696, 115560, 73148, 94696, 2937, 115560, 2111, -1000, -1000, 2903,
	-1000, 2806, -160, 25757, -1000, 3492, 3491, 2932, 3245, -1000,
	115560, 3486, 115560, 94696, 3121, -1000, -1000, -1000, -1000, -1000,
	-1000, 1591, 1118, 1115, 2244, -47, 2243, 2194, -48, 964,
	-49, 576, -1000, 838, -1000, -1000, 837, -1000, 964, -1000,
	77654, 59876, 3532, 502, -1000, 2586, -1000, 99608, 2229, 44,
	-1000, 3529, 102368, 574, -1000, 2181, -1000, 745, -1000, 2402,
	73148, 2348, 44, 94696, -1000, -1000, 502, 357, -50, -1000,
	2947, 1028, 25757, 94696, 2931, 2473, 829, 78758, -1000, 1228,
	2562, -1000, -51, -1000, 501, 44, 2163, -1000, -53, 128870,
	-1000, 835, -1000, -162, -1000, -1000, 356, -1000, 3120, 3119,
	-1000, 2672, 57085, 573, 572, 115560, 3115, -1000, -1000, -167,
	2525, 2525, 77654, 59876, 77654, -1000, 968, 873, -1000, 2301,
	-1000, -1000, -1000, -1000, -1000, 25757, 1533, -1000, 570, 569,
	-1000, -1000, -1000, -1000, 3192, 11113, 11113, 48668, 48668, 48668,
	11113, 4909, -168, -1000, 11113, 11113, -216, -1000, -1000, 127586,
	-1000, -1000, -1000, 128870, -1000, 20669, 2083, -1000, 124441, -1000,
	33297, -1000, -1000, 48668, 48668, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 52623, 2794, 565, 69843, -1000, -1000, 354,
	923, 48668, 50363, 2382, 923, 923, -1000, -169, -1000, -1000,
	-1000, 3443, 27, -1000, -1000, 3528, 25757, -1000, 77654, -1000,
	-1000, 3527, -175, 782, -1000, 3526, -1000, -1000, 104, -1000,
	-1000, -1000, 2621, 3370, -1000, 1844, -1000, 115560, -1000, 115560,
	-1000, 25757, 115560, 2753, 1212, -1000, 909, 2495, 564, 52623,
	94696, 922, -1000, 3395, 2685, -174, -1000, 115560, 48668, 115560,
	-176, -184, 2312, -1000, -1000, 1211, 48668, -1000, -1000, -1000,
	69843, 563, 2173, 2173, -187, -189, -1000, -1000, -1000, 48668,
	1114, 115560, 34427, -1000, 3525, 3210, -1000, -1000, -1000, -1000,
	-1000, -1000, 115560, -1000, 115560, -1000, 48668, 1113, -1000, -1000,
	-1000, 3485, 2173, 25757, 2173, -1000, 2173, 3245, 1065, 115560,
	73148, 94696, 1669, 1669, 2802, -1000, 2333, 2333, 77654, 59876,
	-1000, -65, 964, -1000, 3369, 2573, 3524, -1000, -1000, -1000,
	-1000, 2489, -1000, -1000, 115560, 2487, 957, -1000, -190, -1000,
	834, 833, 79848, 925, 942, -1000, -88, 553, -1000, 832,
	-1000, -1000, -1000, -1000, 502, 3367, -1000, 3484, 550, 549,
	115560, 2242, 539, 25757, 3205, 829, 78758, -1000, 2970, 1774,
	-1000, 2317, 115560, 3155, -1000, 2562, 531, -1000, 954, 529,
	526, 2535, 2535, -192, 57085, 57085, -195, 525, 954, -1000,
	-197, -1000, -1000, -1000, -1000, -1000, -100, -1000, 919, 917,
	-1000, -1000, 94696, 94696, 48668, 48668, -1000, 11113, 11113, 11113,
	-1000, 333, -1000, -1000, 2163, 3267, -1000, -137, 124182, 123808,
	8854, 52623, 69843, -198, -1000, -1000, 115560, 128870, -183, -1000,
	128870, 517, 515, 456, -1000, -1000, -1000, 606, -1000, -1000,
	-1000, 115560, 3523, -1000, 115560, 102913, 115560, -1000, -1000, 1989,
	-1000, -1000, -1000, 115560, 2319, -1000, -1000, -1000, 1034, 48668,
	8220, 514, 48668, -1000, 3360, -1000, 2581, 2743, 1841, 57085,
	-1000, 3192, -1000, 123745, -1000, 1018, 1874, -1000, -1000, -1000,
	128870, 3245, 57085, -1000, -1000, 513, 512, 128870, 511, 831,
	2791, -1000, -1000, -1000, -1000, -1000, 128870, 508, 3322, -1000,
	-1000, -1000, -1000, 2173, 94696, -1000, -1000, -1000, 1109, -1000,
	-1000, -1000, -1000, 3518, 3513, 2790, 84250, -1000, -203, -1000,
	-1000, 1877, 44, 2068, 2613, -1000, 2229, 507, -1000, -1000,
	2211, 2572, -1000, 102368, 33862, 33862, 326, 3348, 942, -1000,
	3436, -1000, 3100, 3100, 48668, 3344, 44, -1000, 3480, 57085,
	-1000, 94696, 57085, 2237, 1979, 2448, 78758, -1000, 2464, -1000,
	-1000, -204, 115560, 1774, -1000, -1000, 77654, 77654, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1018,
	-206, -211, -1000, 77654, -1000, -1000, 2301, -1000, 115560, -1000,
	115560, -1000, -1000, -214, -217, -1000, 2074, 48668, 33297, -1000,
	-1000, 8854, -219, -1000, -213, -1000, 3314, 50363, 3512, 3510,
	3508, -1000, -238, -1000, -238, -1000, 1813, -1000, -1000, -1000,
	2926, 2664, 18331, 2426, 115560, 18268, -1000, 2739, -1000, -1000,
	2573, 504, -1000, -1000, -1000, -1000, 874, 115560, 2573, 2660,
	94696, 1031, -220, 2070, 2070, 48668, 32732, 2110, 48668, -1000,
	-1000, 3245, 115560, -1000, -1000, 115560, 2236, -1000, 2717, 3462,
	-1000, 925, -1000, 2076, 115560, -1000, 3232, -1000, 3114, -1000,
	-1000, -1000, 2586, 44, -1000, -1000, -1000, -226, 128870, 44,
	-1000, 325, -227, 1028, -228, 94696, 1914, -1000, 829, -1000,
	2473, 935, -1000, -1000, -233, -236, 1841, 1018, 2035, -239,
	-1000, -242, -247, -1000, -1000, 324, 49798, 49798, 49798, -216,
	-229, -1000, 115560, 503, -1000, -1000, -1000, -1000, -1000, 2895,
	962, -1000, 2217, 1850, 323, 1058, -1000, -1000, 2035, 115560,
	-1000, -1000, -1000, 961, 502, -1000, 48668, 1018, -248, -1000,
	1016, -250, -1000, 1014, -253, -1000, 2784, -1000, -261, 2173,
	-263, 225, 1669, 959, 3309, -1000, -1000, -1000, 2211, 94696,
	-264, -1000, -1000, 2239, -1000, 2573, 957, -1000, -1000, -1000,
	1018, 499, 1841, 498, 1382, 829, -1000, -1000, 1377, 3205,
	3043, 954, 954, 2573, 1841, 931, -1000, 954, -1000, -1000,
	-1000, 3005, -1000, 53753, 2249, 1768, 126738, 3005, 3005, -1000,
	-1000, 115560, 3292, -1000, 2230, 2221, 1462, -1000, -1000, -1000,
	-1000, -1000, -1000, 2685, -267, 3289, 2426, 128870, 2573, -1000,
	2070, 2610, -1000, 2070, 2778, -1000, 2046, -1000, -1000, -1000,
	2696, -1000, 2768, -1000, 1726, 3426, 2439, 497, -1000, 115560,
	1756, 1755, 3507, 2068, 2211, 1841, 57085, 2573, 57085, 2024,
	-1000, 115560, -1000, 1979, 1300, -1000, -1000, 2035, 2573, 935,
	496, -1000, -1000, 1764, 3391, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 828, -1000, 2964, -1000, 1048, 1964, 1964,
	935, -1000, 826, 2217, -1000, -1000, 492, -1000, 475, -1000,
	2192, 115560, 2179, -1000, -1000, -1000, -1000, 115560, -1000, -1000,
	3506, -1000, 925, -1000, 2573, -269, 2035, -275, -1000, -1000,
	-1000, -238, 1914, -1000, 1476, 931, 2035, -1000, 1767, -1000,
	-1000, 2165, 49233, 48668, -1000, 3421, -1000, -1000, 2523, -1000,
	-1000, 48668, 2685, 48668, 48668, -1000, 225, 64329, -277, -1000,
	2211, 2035, 1018, 931, 1841, 1382, 65983, 935, 931, -1000,
	-1000, -1000, 128870, -1000, -1000, -1000, 128870, -1000, -283, -284,
	-1000, -249, 101816, 2161, 2439, 931, 1841, 935, 2573, 2024,
	-272, -1000, 935, 2035, 1107, -291, -1000, -1000, -1000, -1000,
	935, 2573, -1000, 2035, -1000, -1000, -1000, -1000, -1000, 473,
	-1000, -1000, 2035, 931, 48668, 931, 935, -306, 935, -1000,
	2035, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4334, 4332, 4329, 4325, 4324, 4323, 4322, 4321, 4320,
	4317, 4316, 4315, 142, 4313, 4312, 4311, 4310, 4309, 4304,
	4298, 4295, 4294, 4291, 4289, 4283, 4277, 4272, 4269, 4267,
	4266, 4265, 4262, 4260, 4258, 4254, 4253, 4251, 4246, 4245,
	4244, 4241, 4238, 4236, 4235, 4232, 4227, 4226, 4225, 4222,
	4219, 4218, 4217, 4216, 4215, 4214, 4213, 4212, 4210, 4208,
	4207, 4206, 4205, 4203, 4201, 4197, 56, 4196, 4195, 4194,
	4193, 4192, 4191, 4185, 4178, 4172, 4171, 4170, 4168, 4166,
	4162, 4161, 4160, 4158, 4157, 4156, 4154, 62, 4152, 267,
	4151, 4147, 4146, 4145, 4144, 4143, 4142, 4138, 4135, 4122,
	4119, 4118, 266, 4114, 134, 158, 4111, 4110, 3690, 4105,
	4103, 265, 4102, 4101, 4100, 4098, 278, 4097, 4096, 4095,
	4094, 4092, 4090, 4088, 4085, 4084, 4081, 4080, 89, 207,
	4079, 4078, 1618, 4077, 4074, 4071, 4070, 4069, 4068, 4065,
	4061, 4060, 4059, 250, 168, 4057, 264, 4056, 4048, 4045,
	4044, 4042, 4038, 4037, 4036, 4035, 4034, 4032, 4031, 4027,
	4026, 4025, 4023, 4020, 4019, 4017, 4014, 4012, 4011, 4007,
	4001, 4000, 3999, 3998, 3995, 3994, 3992, 3991, 3990, 3986,
	3985, 3983, 3982, 3981, 3980, 241, 167, 193, 3979, 3977,
	263, 262, 3975, 3974, 3973, 3972, 3971, 127, 6, 41,
	3970, 3969, 95, 83, 99, 100, 107, 97, 3967, 103,
	3966, 138, 59, 3964, 19, 2, 165, 243, 10938, 238,
	3962, 3961, 3959, 247, 196, 3958, 239, 3957, 3956, 3952,
	3950, 3949, 66, 49, 183, 179, 173, 172, 86, 3946,
	156, 105, 80, 60, 44, 17, 68, 210, 23, 1,
	214, 3945, 256, 11, 147, 12, 35, 3944, 3943, 3941,
	3940, 3387, 123, 3938, 261, 235, 164, 3937, 3936, 3935,
	851, 3934, 3930, 46, 3929, 389, 84, 131, 15, 122,
	3928, 152, 161, 37, 3927, 258, 55, 3926, 159, 117,
	90, 9505, 12189, 3924, 3923, 118, 72, 132, 2833, 197,
	180, 204, 184, 170, 171, 129, 211, 209, 177, 47,
	3922, 245, 3921, 3350, 77, 187, 154, 5581, 3915, 3913,
	3912, 94, 201, 109, 3911, 3910, 78, 18, 3, 4,
	9, 143, 26, 22, 10, 3909, 58, 120, 48, 27,
	3908, 28, 3903, 3902, 3899, 3890, 3888, 76, 166, 3887,
	3885, 269, 3884, 85, 54, 29, 3882, 759, 220, 3881,
	225, 128, 3879, 3876, 251, 205, 185, 3870, 73, 237,
	3867, 3866, 3865, 3864, 3863, 139, 8, 130, 3862, 3861,
	149, 3860, 50, 244, 200, 3859, 65, 3858, 3857, 174,
	106, 137, 276, 115, 224, 113, 228, 188, 226, 3855,
	3853, 3852, 231, 3851, 3850, 222, 163, 3847, 3843, 246,
	280, 92, 45, 81, 234, 82, 198, 155, 3841, 208,
	3839, 3836, 277, 186, 215, 7, 13, 96, 133, 3835,
	5, 233, 157, 229, 114, 3834, 6531, 2492, 2533, 3833,
	3831, 150, 121, 79, 119, 153, 257, 102, 3830, 3829,
	2656, 3828, 3827, 3826, 3825, 191, 3822, 3821, 3820, 148,
	181, 199, 3818, 98, 70, 52, 24, 140, 248, 274,
	108, 223, 169, 242, 3816, 3815, 3814, 192, 3813, 91,
	203, 175, 202, 249, 57, 3812, 141, 3811, 151, 309,
	63, 146, 3808, 232, 3807, 3806, 3805, 3804, 3803, 3802,
	3801, 270, 227, 3800, 3799, 3797, 38, 195, 3796, 253,
	189, 182, 104, 67, 3795, 87, 2383, 3793, 116, 2144,
	71, 259, 1207, 260, 3792, 110, 53, 3790, 0, 14522,
	7773, 11269, 13656, 3788, 7129, 3787, 3786, 3784, 218, 144,
	3783, 3782, 3781, 111, 3779, 88, 3778, 3776, 74, 3774,
	33, 20, 21, 30, 34, 676, 162, 3773, 3772, 25,
	145, 125, 3771, 268, 230, 3770, 3769, 3768, 3767, 112,
	3766, 43, 3765, 40, 3762, 3761, 51, 16, 32, 3760,
	3758, 217, 3756, 216, 254, 3753, 160, 3752, 69, 136,
	3748, 3743, 3741, 64, 61, 252, 93, 3738, 271, 3735,
	212, 3734, 3729, 31, 3727, 3726, 240, 3722, 3719, 3718,
	3717, 3712, 39, 213, 178, 221, 3711, 3710, 176, 3709,
	3708, 3706, 279, 3705, 3704, 36, 3703, 14, 3698, 3697,
	206, 3130, 3696, 3695, 42, 3692, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 595, 595,
	613, 613, 23, 23, 44, 44, 24, 45, 17, 596,
	596, 596, 596, 36, 25, 46, 29, 29, 29, 29,
	29, 200, 200, 200, 200, 22, 22, 40, 40, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 591, 591, 237,
	237, 236, 230, 230, 231, 231, 597, 597, 238, 238,
	238, 240, 240, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 490, 490, 490, 523, 523, 522, 522,
	522, 521, 521, 617, 617, 618, 618, 618, 618, 618,
	131, 131, 388, 388, 388, 55, 55, 55, 55, 55,
	586, 586, 202, 202, 202, 204, 204, 203, 203, 203,
	203, 203, 78, 78, 602, 602, 603, 603, 601, 604,
	604, 604, 201, 201, 201, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 211,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 525, 525, 526, 526, 196, 196,
	197, 197, 197, 197, 198, 198, 199, 199, 199, 69,
	69, 208, 208, 210, 210, 209, 209, 209, 209, 209,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 187,
	187, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 620, 620, 621,
	621, 622, 622, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 349, 349, 312, 312, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 584, 584, 365, 365, 481, 481,
	72, 592, 592, 592, 594, 594, 593, 593, 89, 89,
	387, 387, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 583,
	301, 301, 96, 96, 96, 95, 95, 95, 366, 366,
	101, 101, 101, 101, 313, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 483, 483,
	103, 103, 103, 448, 448, 108, 108, 108, 403, 403,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 588, 588, 358, 358, 264, 264, 264, 264,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 192,
	192, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	614, 614, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 515, 515, 374, 374, 513, 513, 535, 535,
	514, 514, 319, 319, 319, 319, 319, 320, 320, 320,
	524, 524, 524, 524, 524, 524, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 193, 193, 194,
	195, 195, 195, 195, 195, 170, 170, 170, 186, 186,
	186, 186, 186, 186, 186, 173, 173, 173, 157, 157,
	147, 147, 147, 147, 147, 147, 147, 152, 152, 152,
	152, 152, 152, 152, 152, 148, 148, 159, 159, 159,
	159, 159, 153, 153, 154, 154, 154, 154, 180, 180,
	156, 156, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 149, 149, 149, 149, 161, 161, 161, 161, 410,
	410, 410, 185, 185, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	183, 183, 183, 183, 183, 183, 605, 605, 606, 606,
	177, 177, 177, 177, 177, 177, 462, 462, 171, 171,
	171, 171, 176, 176, 176, 176, 179, 179, 179, 179,
	393, 393, 168, 168, 168, 169, 169, 169, 174, 174,
	175, 350, 350, 172, 172, 178, 178, 178, 178, 150,
	150, 150, 150, 150, 150, 150, 151, 151, 151, 151,
	181, 181, 167, 167, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 624, 624, 163, 163, 163,
	162, 162, 162, 162, 165, 165, 166, 166, 166, 166,
	166, 166, 164, 155, 184, 585, 585, 581, 581, 581,
	581, 581, 581, 581, 581, 582, 582, 582, 582, 587,
	587, 113, 113, 113, 113, 113, 123, 123, 123, 123,
	123, 114, 114, 114, 114, 114, 116, 116, 115, 115,
	115, 115, 79, 79, 79, 79, 79, 15, 15, 15,
	80, 80, 255, 255, 214, 214, 214, 338, 338, 215,
	215, 327, 327, 327, 327, 212, 212, 213, 213, 81,
	81, 625, 625, 625, 598, 598, 598, 599, 599, 599,
	599, 599, 599, 321, 321, 322, 322, 428, 428, 428,
	428, 428, 325, 325, 325, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 328, 328, 239, 239, 239, 336,
	337, 337, 329, 329, 335, 334, 334, 333, 333, 332,
	332, 330, 331, 331, 331, 340, 340, 339, 342, 342,
	341, 427, 544, 544, 546, 546, 546, 546, 546, 546,
	546, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 411, 411, 626, 626, 542, 542, 542,
	543, 538, 538, 539, 539, 539, 539, 539, 323, 323,
	324, 324, 324, 324, 540, 541, 356, 356, 466, 545,
	545, 547, 547, 549, 627, 627, 627, 627, 627, 627,
	628, 628, 628, 426, 426, 425, 425, 347, 347, 550,
	550, 550, 550, 551, 551, 551, 551, 551, 554, 553,
	552, 552, 552, 552, 552, 83, 83, 83, 390, 390,
	389, 389, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 189, 189, 267,
	267, 77, 77, 77, 12, 12, 12, 12, 12, 12,
	12, 282, 282, 13, 13, 13, 600, 600, 600, 82,
	82, 82, 82, 82, 82, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 590, 590, 589, 589, 268,
	268, 630, 630, 88, 88, 88, 88, 88, 88, 88,
	88, 484, 484, 485, 485, 76, 76, 76, 76, 76,
	412, 412, 409, 409, 408, 408, 355, 355, 464, 464,
	464, 465, 272, 272, 273, 273, 232, 232, 232, 31,
	30, 21, 21, 26, 26, 27, 27, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 28, 28, 48, 48,
	48, 48, 49, 49, 49, 49, 52, 52, 53, 53,
	47, 47, 47, 47, 50, 50, 43, 43, 54, 54,
	54, 607, 609, 609, 608, 608, 612, 612, 612, 612,
	612, 612, 610, 610, 611, 611, 615, 615, 616, 616,
	119, 119, 124, 124, 124, 124, 124, 125, 125, 125,
	125, 126, 126, 126, 126, 135, 135, 188, 188, 188,
	188, 188, 188, 188, 56, 56, 56, 56, 68, 68,
	68, 68, 133, 632, 632, 632, 134, 134, 134, 631,
	631, 265, 265, 422, 422, 423, 423, 633, 633, 424,
	424, 424, 424, 424, 258, 257, 259, 259, 260, 260,
	74, 74, 74, 248, 248, 247, 249, 249, 250, 250,
	245, 245, 527, 527, 252, 252, 252, 253, 253, 241,
	241, 242, 242, 243, 243, 244, 244, 256, 256, 634,
	634, 111, 111, 111, 191, 191, 311, 311, 311, 419,
	419, 419, 348, 348, 279, 279, 421, 421, 421, 421,
	386, 386, 386, 190, 190, 363, 363, 376, 376, 377,
	377, 478, 478, 378, 117, 117, 118, 118, 132, 132,
	218, 218, 216, 216, 216, 216, 216, 216, 216, 216,
	223, 223, 224, 224, 225, 225, 226, 227, 227, 227,
	227, 367, 367, 228, 228, 228, 217, 217, 217, 219,
	219, 219, 219, 219, 219, 219, 222, 222, 222, 222,
	229, 229, 229, 221, 221, 561, 561, 561, 563, 563,
	565, 565, 564, 564, 560, 560, 562, 562, 629, 629,
	392, 392, 392, 345, 346, 343, 343, 344, 344, 353,
	353, 351, 352, 352, 354, 354, 463, 463, 463, 233,
	233, 233, 383, 383, 383, 383, 384, 384, 415, 415,
	413, 413, 413, 413, 414, 414, 416, 416, 416, 417,
	417, 418, 418, 380, 380, 381, 381, 382, 382, 382,
	382, 444, 444, 220, 220, 220, 360, 360, 360, 361,
	361, 434, 434, 434, 434, 434, 434, 434, 435, 435,
	433, 433, 433, 433, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 468, 469, 469, 362, 362, 470, 420,
	420, 579, 579, 579, 580, 580, 461, 461, 471, 471,
	471, 471, 471, 471, 459, 459, 460, 460, 479, 480,
	480, 396, 396, 396, 396, 394, 394, 397, 397, 397,
	397, 397, 395, 395, 472, 472, 472, 472, 385, 385,
	473, 473, 473, 473, 474, 475, 475, 476, 476, 429,
	430, 430, 486, 486, 486, 486, 488, 359, 359, 359,
	359, 359, 537, 536, 536, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 503, 503, 503, 503,
	503, 503, 503, 489, 489, 489, 489, 489, 493, 493,
	493, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 494, 494, 499, 499, 500, 500, 500, 495,
	496, 501, 501, 501, 501, 635, 635, 505, 505, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 491, 491,
	491, 498, 498, 498, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 404, 404, 406,
	406, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 438, 438, 438, 438, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 555, 555, 555, 555, 555, 555, 555, 555, 440,
	440, 558, 558, 559, 559, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 566, 566, 567, 567, 569, 569,
	570, 570, 571, 572, 572, 572, 573, 574, 574, 568,
	568, 575, 575, 575, 575, 576, 576, 577, 577, 577,
	577, 577, 578, 578, 578, 578, 578, 450, 450, 451,
	451, 457, 457, 457, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 318,
	318, 317, 269, 269, 269, 269, 269, 269, 372, 372,
	370, 370, 370, 373, 373, 371, 371, 369, 369, 368,
	368, 447, 447, 445, 445, 449, 449, 398, 398, 504,
	504, 504, 504, 504, 504, 504, 504, 399, 399, 399,
	407, 400, 400, 401, 401, 401, 401, 401, 441, 442,
	402, 402, 402, 443, 443, 452, 456, 456, 455, 454,
	454, 453, 453, 431, 431, 432, 432, 379, 379, 636,
	636, 375, 375, 477, 477, 477, 477, 315, 315, 364,
	364, 314, 314, 306, 306, 307, 307, 307, 307, 357,
	357, 458, 458, 506, 506, 507, 507, 508, 508, 509,
	509, 510, 511, 512, 446, 446, 290, 289, 276, 277,
	288, 287, 286, 275, 278, 283, 284, 285, 280, 281,
	297, 296, 295, 246, 251, 302, 303, 303, 305, 305,
	304, 304, 292, 293, 294, 482, 274, 308, 308, 309,
	309, 309, 310, 310, 310, 310, 270, 270, 271, 271,
	298, 298, 299, 300, 300, 291, 291, 291, 261, 261,
	261, 262, 262, 263, 263, 520, 520, 517, 517, 517,
	518, 518, 518, 519, 519, 519, 519, 516, 516, 516,
	516, 516, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 529, 529,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 531, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	534, 534,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 596, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-188, -193, -194, -195, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -189, -190, -191, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -619, 102, -562, -92,
	-95, -126, -623, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -216, -218,
	-138, -139, -192, -147, -148, -149, -150, -151, -152, -153,
	-154, -180, -155, -156, -157, -158, -159, -160, -164, -183,
	-161, -162, -163, -166, -165, -167, -172, -168, -169, -170,
	-171, -173, -174, -176, -177, -178, -179, -181, -182, 462,
	-175, -184, 523, 49, 477, 82, 146, 431, 21, -5,
	-6, -7, -8, -9, -10, -11, -15, -14, -54, -74,
	-76, -79, -80, -81, -88, -82, -83, -561, -93, -94,
	-97, -99, -100, -96, -98, 419, -219, -217, 593, 538,
	-18, -23, -24, -19, -20, -22, -25, -21, -26, -27,
	-28, -39, -44, -45, -41, -42, -40, -43, -46, -47,
	-48, -49, -50, -51, -52, -53, -30, -36, -37, -31,
	-32, -33, -34, -35, -38, -17, -29, 559, 568, -222,
	-220, -221, -229, 449, 546, 497, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, -313, 2,
	-292, -298, -299, -300, -291, -261, -531, -534, 4, -528,
	-532, 168, 230, 330, 21, 23, 22, 24, 25, 26,
	27, 29, 30, 41, 42, 44, 45, 46, 47, 48,
	49, 53, 55, 59, 60, 61, 62, 63, 64, 68,
	73, 74, 79, 80, 81, 82, 83, 84, 85, 91,
	88, 89, 90, 92, 94, 96, 97, 98, 99, 100,
	101, 103, 104, 105, 107, 108, 109, 117, 118, 119,
	120, 121, 123, 128, 129, 132, 127, 131, 133, 135,
	136, 137, 140, 141, 142, 144, 145, 147, 148, 149,
	151, 152, 154, 155, 156, 159, 157, 505, 158, 160,
	161, 162, 163, 166, 174, 175, 176, 181, 183, 184,
	188, 189, 190, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 203, 207, 209, 210, 211, 212, 213, 219,
	220, 222, 223, 224, 225, 226, 231, 232, 233, 237,
	234, 243, 244, 248, 249, 250, 252, 256, 257, 258,
	259, 260, 261, 263, 265, 264, 267, 270, 271, 274,
	278, 279, 283, 284, 280, 285, 286, 288, 289, 292,
	290, 293, 294, 291, 295, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 296, 311, 309,
	313, 314, 315, 328, 324, 325, 319, 320, 316, 321,
	317, 318, 322, 323, 327, 332, 333, 336, 217, 338,
	339, 342, 360, 346, 347, 348, 351, 352, 355, 358,
	359, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	371, 372, 374, 375, 376, 378, 379, 380, 382, 384,
	385, 387, 388, 390, 391, 392, 393, 394, 395, 396,
	398, 400, 399, 401, 403, 405, 406, 407, 412, 418,
	414, 415, 416, 417, 419, 420, 421, 422, 423, 425,
	426, 427, 429, 430, 431, 432, 433, 435, 437, 438,
	442, 443, 459, 460, 479, 439, 440, 441, 444, 445,
	446, 447, 448, 452, 450, 451, 453, 454, 455, 457,
	458, 461, 462, 464, 465, 466, 467, 468, 469, 470,
	473, 475, 476, 477, 496, 478, 480, 484, 485, 486,
	487, 481, 482, 495, 489, 490, 492, 493, 498, 499,
	500, 501, 502, 503, 504, 506, 508, 516, 517, 518,
	520, 523, 524, 525, 526, 514, 528, 529, 532, 533,
	534, 537, 535, 536, 538, 540, 543, 544, 545, 551,
	550, 552, 555, 560, 561, 563, 564, 565, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 124, 125,
	153, 164, 165, 177, 191, 192, 204, 206, 214, 215,
	216, 238, 239, 241, 246, 268, 335, 337, 353, 357,
	373, 377, 381, 383, 397, 434, 471, 483, 488, 509,
	510, 511, 512, 519, 521, 546, 547, 548, 553, 562,
	-313, 2, -292, 344, -285, 2, -261, -261, 384, 28,
	2, 28, 372, 451, 500, 502, 2, -588, -358, 2,
	28, -264, -261, 102, 202, 449, -285, 2, -588, -358,
	25, 2, -261, 2, 358, 22, 27, 66, 77, 98,
	140, 163, 185, 188, -622, 360, 391, 437, 453, 495,
	506, 520, 2, 550, 289, 450, 497, 230, 120, 525,
	444, -600, 442, 443, 358, 389, 429, 205, 539, -265,
	2, 439, -261, 289, 2, 596, 94, 279, 74, 434,
	454, -143, 517, -144, -145, 2, -142, 509, -515, 444,
	311, -261, 596, 596, 596, 28, -274, -261, 497, 230,
	444, 120, 493, 596, 2, 497, 363, 550, 450, 120,
	394, 230, 525, 188, 140, 27, 444, -600, 572, 573,
	289, 126, -586, 2, -581, 4, -532, -528, -307, -306,
	497, 503, 120, -300, -291, 586, -299, 596, 596, 596,
	2, 249, 250, 393, 392, 454, 455, 596, 596, 596,
	596, 442, 2, 163, 22, 27, 66, 93, 98, 126,
	185, 188, 349, -620, 360, 391, 453, 495, 499, 506,
	520, -599, 478, 68, 417, 444, -598, -600, 289, 525,
	140, -408, 120, 279, 200, 533, 502, 500, 531, 132,
	237, 536, 535, 596, 596, -105, 2, 593, 32, 31,
	-104, -108, 142, 457, -211, 497, 242, 2, -261, 596,
	596, 2, 249, 250, 442, 443, 596, 596, 186, -581,
	2, 596, 596, 2, 249, 250, 442, 443, 242, 2,
	68, 446, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 2, -186, 454,
	478, 211, 47, 46, 74, 28, 390, 79, 364, 121,
	148, 526, 203, 230, 231, 257, 93, 94, -410, 44,
	250, 68, 249, 443, -605, 442, -462, 498, 445, 451,
	492, 261, 439, 517, 102, 540, 430, 565, 394, 395,
	490, 407, 280, 157, 187, 4, 120, 311, 456, 509,
	279, 438, 367, 84, -629, 2, 497, -631, 2, 517,
	517, 2, -631, 2, -631, 2, -631, 2, -632, 517,
	562, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, -217,
	-219, -218, 596, 596, 596, 596, 596, 596, 596, -186,
	454, 2, 74, 28, -351, -353, 530, 240, 150, 350,
	-216, -218, 2, -561, -513, 2, -436, -535, -438, 584,
	585, 577, 494, 67, -317, 329, 566, -450, 126, 531,
	344, -534, -439, -452, 153, 360, 434, -373, 8, 9,
	5, 6, 7, -270, -440, -446, 522, 167, 334, -310,
	597, 10, 593, -558, -218, -451, 37, 206, 65, -517,
	-309, -271, -489, 241, -308, -291, -555, -556, 4, -528,
	-529, -518, -492, -500, -496, -497, -503, -261, -531, 77,
	111, 112, 110, 115, 114, 282, 281, 116, 113, 456,
	539, 66, 36, 214, 215, 246, 335, 216, 75, -557,
	141, -530, 238, 239, 471, 51, 397, 177, 125, 124,
	337, 56, 54, 547, -501, 122, 509, 510, 511, 512,
	191, 192, 58, 164, 165, 357, 381, 488, 519, 521,
	204, 268, 43, 106, 187, 236, 218, 245, 247, 251,
	269, 272, 312, 326, 331, 354, 356, 428, 463, -635,
	548, 483, 69, 70, -563, 399, -564, -285, -563, 596,
	596, 598, 596, -343, -345, -346, 2, 28, 138, 593,
	2, -467, 2, -468, -472, -218, 262, -471, 593, -469,
	591, -292, 345, -559, 435, -555, -556, -270, -291, -309,
	4, -528, -530, 595, -347, 593, 120, 497, 78, 230,
	163, -403, 593, -261, 28, 344, 513, 598, -344, 388,
	-448, 593, 344, 186, 347, 60, 293, 2, 2, 2,
	2, 2, 214, -261, 497, 119, 2, 260, 2, 2,
	2, 2, 2, 2, 2, -366, 214, 2, -292, 550,
	-366, 214, 2, -366, 214, 2, -409, 2, 87, -275,
	214, 2, -261, -301, 214, 2, -296, -298, -305, 214,
	2, -303, -261, -526, 214, 2, -525, -520, 10, -519,
	5, 4, -528, -532, -529, -531, 77, -436, 2, -132,
	2, 60, -261, 550, 2, 2, 459, 2, 593, -143,
	71, 517, 43, 454, -423, 2, -424, -257, -258, -259,
	-479, -260, 248, 387, 396, 569, 130, 329, 565, -614,
	186, 576, 513, -513, -513, -374, 595, 2, 2, 2,
	2, 2, 2, -472, 214, -292, 2, -289, -516, 4,
	-528, -532, -529, -533, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 126,
	130, 134, 138, 139, 143, 146, 150, 167, 169, 182,
	185, 186, 202, 205, 208, 221, 235, 240, 242, 262,
	266, 273, 281, 282, 329, 334, 340, 344, 345, 349,
	350, 370, 386, 402, 424, 449, 456, 474, 491, 497,
	507, 513, 515, 522, 530, 531, 539, 541, 549, 554,
	556, 557, 558, 559, -534, 2, -472, 214, 2, -295,
	214, -472, -298, 2, -275, 2, -288, -516, 2, -314,
	214, -292, -294, -298, -296, 2, 2, 2, 2, -303,
	2, -525, 214, 2, 28, 28, 550, 388, 242, 513,
	598, -364, -306, -307, -512, 8, -357, -261, 595, -436,
	2, -132, -116, 2, 182, -436, 214, 2, -132, 214,
	2, -436, 214, 2, -132, 214, 2, -602, 2, -525,
	214, -261, 2, 293, 2, 2, 520, 2, 98, 497,
	119, 2, 416, -621, 437, 524, 2, 2, 2, 2,
	2, 2, 2, 497, -280, 2, -261, 182, 481, -303,
	214, -304, 2, 450, -630, 399, -525, 214, 2, 550,
	-296, 214, 2, -296, 230, 244, -275, 214, 2, 502,
	500, 502, 500, 186, 2, 242, 2, 242, 2, -473,
	2, -474, -468, -475, 591, 345, -483, 2, -482, -519,
	546, -105, 593, -105, 593, 454, 593, -525, -292, -292,
	-436, 2, -132, -116, 2, -436, 2, -132, 2, -129,
	-525, -128, 593, 186, -436, 2, -132, -116, 2, -436,
	2, -132, 2, -211, 182, 2, 120, 497, -186, 2,
	182, 541, 2, 8, 2, 221, -525, 445, 395, 174,
	2, 459, 2, 460, 74, -410, 565, 74, 186, 2,
	186, 2, -393, 2, 559, 186, 2, 2, -585, 2,
	344, 186, 2, 186, 2, 186, 2, 186, 2, 186,
	2, -185, 455, 518, 496, 392, 250, 2, -132, 556,
	-116, 250, 249, -436, 556, 2, -606, 182, 443, -436,
	2, 516, 259, 158, 186, -393, 2, 186, 2, 186,
	2, 5, 2, 393, 479, 2, 248, 387, 479, 2,
	-292, 497, 550, 450, 120, 28, 2, 442, 2, 2,
	88, 89, 186, 2, 186, 2, 201, 186, 2, 186,
	497, 565, 2, -385, -472, -422, -423, -422, 513, -351,
	-353, -186, 459, 2, -223, -383, -225, 182, -413, -414,
	-226, 273, 169, 340, -227, -392, 28, 138, -392, -392,
	60, 594, 594, 11, 12, 76, 41, 584, 585, 586,
	587, 180, 588, 589, 582, 583, 581, 574, 575, 579,
	254, 255, 95, 578, 576, 86, 287, 436, 170, 171,
	172, 173, 413, 228, 34, 229, 14, 15, 16, -317,
	33, 349, 272, 566, 218, 463, 577, 17, 18, 19,
	245, 247, 331, 50, 221, -269, 360, -316, 494, 67,
	-436, -436, -436, -436, -436, -436, -436, -436, 356, 593,
	-379, -431, 591, -218, 593, 593, 593, 593, -512, -218,
	-436, -450, 594, -371, 593, -218, -450, -445, 593, 434,
	591, 593, -453, -436, 5, 5, 5, 593, 595, -566,
	560, 182, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 383, -494, 593,
	-493, 593, -493, -493, 551, -491, 593, 568, 561, 593,
	-491, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 551, 598, -563, -347, 593, -375,
	-477, -436, 586, -375, -375, 344, -368, -436, 106, -396,
	251, 312, 187, 269, 428, 236, -433, 597, -433, -461,
	568, -218, -469, -291, -218, -471, 593, -467, -461, -106,
	-512, -89, -102, -111, -132, -146, -190, -191, 586, -292,
	593, 186, 593, 595, -516, 186, -357, -275, -292, -308,
	-309, -314, 2, 137, -368, -581, 525, 444, 28, 450,
	-357, -264, 38, -447, -486, -487, -537, 597, -536, -489,
	-499, -495, -498, 373, 377, -518, 54, 547, -501, 241,
	4, -528, -530, 238, 239, 471, 51, 397, 177, 125,
	124, 337, 56, 509, 510, 511, 512, 191, 192, 58,
	548, 483, 69, 70, -581, 525, 444, 28, 450, -357,
	182, -523, 2, -522, -521, 116, 456, -519, 5, 2,
	153, 2, 2, 2, -261, -238, 598, 64, 421, 153,
	-366, 214, -238, 153, -238, 153, -315, 214, -314, -238,
	153, -238, 598, 153, -238, 598, 153, 595, 598, 153,
	-523, 2, -409, -515, -368, 38, -423, 2, 126, -521,
	-633, 598, 271, -320, 286, 328, 210, 345, 563, 338,
	130, -524, 5, 4, -446, -458, 126, 279, 241, -506,
	-508, 8, -507, 9, -509, 584, 585, -514, -513, 109,
	595, -516, -235, 414, 457, 359, -234, 24, 29, 142,
	232, 315, 544, 159, -333, 233, -330, 363, 153, 475,
	534, -595, -596, 441, 504, 505, 90, 338, 457, 359,
	414, 153, -389, -391, 38, 118, 315, 358, 61, 225,
	291, 292, 477, 553, 153, 457, 359, 414, 359, 457,
	24, 142, -252, -247, -596, 99, 414, 489, 386, -596,
	-237, 475, 534, -595, -596, 441, 414, -236, -335, -330,
	363, 153, 597, 24, 142, 414, 457, 359, -617, -618,
	29, 414, 359, -589, -282, -560, 221, 559, 153, -282,
	-282, -472, 214, -610, 2, 182, -603, -128, 263, 5,
	10, -525, -128, -364, 598, 598, -516, 586, 443, 442,
	153, 153, 153, 153, 182, 329, 2, 2, 2, 2,
	2, 188, -598, -622, 2, 2, -292, 214, -349, 344,
	-584, -365, 497, -292, 182, 329, 43, -295, 214, 2,
	-298, 550, -589, 329, -297, 214, -292, 38, 593, 329,
	2, -409, 2, 230, -560, 329, -473, -311, -292, -468,
	-311, 457, -285, 38, -433, -292, 594, 598, -483, -483,
	-525, -199, 559, 186, 102, 593, 593, -211, -480, 598,
	-479, 221, -526, -129, -525, 417, -525, -584, -275, 2,
	-292, 2, 497, 252, -525, -199, 221, -525, -525, -525,
	-515, 28, 460, 2, -185, 455, 518, 89, 460, 2,
	-292, 497, 120, 230, 80, -261, -587, 182, -582, 429,
	444, 525, -581, -292, 120, -292, 120, -292, 120, -292,
	-292, 2, 2, 2, 2, 2, 85, 2, -132, -436,
	2, 85, 2, 46, -606, 182, 2, 516, 2, 516,
	2, -261, -261, -261, 478, 271, -292, -292, -292, -293,
	-298, 498, 443, -436, 2, -624, 2, 186, 182, 2,
	497, 230, 497, 230, 120, 186, 74, 120, 28, 497,
	440, -238, 598, -265, -223, -383, -515, -384, -383, -224,
	-223, -226, 182, 396, 535, 315, 461, 256, -414, -413,
	28, -436, -418, 176, 314, -436, -416, -438, 584, 585,
	-507, -509, -367, 338, -217, -217, -217, -354, -463, -436,
	386, 230, -488, -486, -486, -290, -516, 509, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, 272, 218, 463, 50, 221, -436,
	513, -436, -436, -436, -436, 309, 329, 334, 522, 167,
	532, 138, 338, -636, 491, 40, -443, -218, -372, 593,
	-457, 35, 474, 28, -450, 593, 2, -431, -436, -432,
	-318, -316, -261, 584, 585, 586, 587, 588, 589, 574,
	575, 576, 14, 15, 16, 579, 583, 581, 582, 180,
	95, 578, 287, 436, 86, 170, 171, 172, 173, 254,
	255, 17, 18, 19, 34, 577, -369, -368, -368, 594,
	549, 28, 138, 586, 2, 594, 598, 38, 594, -436,
	-369, -449, -445, -368, -456, -455, 556, -404, -405, 564,
	296, 123, 212, 294, -406, 448, -510, 8, -516, 586,
	-567, 175, 205, 593, 594, 2, 594, 2, 594, -436,
	2, 594, -436, 2, 594, -436, 2, 594, -436, 2,
	594, 2, -436, -436, -436, -436, -436, -436, -436, -368,
	8, -510, -510, 509, 509, -510, -510, -510, -502, 373,
	374, 375, 376, 274, 275, 276, 277, 377, 378, 379,
	380, 301, 302, 303, 304, 297, 298, 299, 300, 305,
	306, 307, 308, 196, 197, 198, 199, 192, 193, 194,
	195, -502, -398, 2, -504, -368, 4, 564, 296, 123,
	212, 294, 448, 5, -398, 2, -399, 2, -436, -368,
	-400, -437, -438, 584, 585, 577, -317, -450, -401, 2,
	-436, -369, -436, 57, 266, 515, -402, -436, 186, -368,
	-368, 2, -368, 2, -564, 38, -368, -360, 598, 186,
	38, 4, -360, -360, 593, 594, 598, -397, 209, 290,
	285, 244, -397, -467, -396, 251, -394, 354, -394, -394,
	-461, -276, 591, 599, -516, -461, -460, -459, 38, -285,
	351, -461, -461, 595, 594, -460, 592, -579, 593, 596,
	596, 596, 596, 596, -292, 593, -368, -516, 595, 480,
	2, 594, 245, 245, 245, 245, 435, 594, 513, -583,
	-301, -305, 498, 2, 559, -104, 346, 594, 598, -359,
	37, 591, 595, -510, 2, 2, -505, 551, 593, 593,
	-405, 593, 186, -583, -305, 498, 2, -358, 598, 513,
	-261, 2, -292, -366, -238, 153, -366, -366, -238, 598,
	153, -275, -296, -301, -303, -305, -261, -525, -526, -238,
	-297, -614, 594, 517, -424, -319, 396, 473, 415, 452,
	493, 8, 9, 8, 9, 598, -516, 598, -615, 93,
	513, 78, 444, -254, 280, 513, -427, 214, 78, -538,
	-278, 93, -539, -261, 72, 531, 386, 185, 151, -615,
	93, 386, -615, 93, 2, 232, 93, 457, 478, 28,
	60, -472, 41, 41, 28, -613, 327, 267, 555, 186,
	565, 497, 230, 444, 513, 513, -472, -391, -486, 118,
	291, 292, 60, -511, -506, 584, 585, -511, 60, -511,
	-511, -511, 559, -295, -472, 444, 513, 513, 513, -250,
	-247, 369, 405, 405, 513, 513, -634, 576, 405, 598,
	41, 41, 28, -613, 327, 267, 186, 513, -314, -276,
	545, 42, 545, 42, 545, 513, 42, 444, 513, 598,
	42, 513, 513, -13, 457, 571, 419, -590, -266, 105,
	321, 284, 322, 97, 318, 96, 317, 103, 319, 104,
	320, 552, 332, 63, 316, 295, 323, -267, -268, 365,
	543, 120, -525, -13, -13, 457, 359, 414, 153, -611,
	221, -600, 221, -480, 221, -480, -306, -261, 595, -132,
	-436, -436, -132, -436, -132, 46, 153, 2, -630, 260,
	593, -323, 329, 186, -357, -481, 242, 598, -365, -581,
	153, -522, -390, -389, 329, -297, 214, 2, 153, -347,
	329, 147, 593, 394, 2, 153, -277, 214, -262, -261,
	-409, -241, 501, 153, -387, 541, -419, -132, 593, 126,
	38, -419, -376, -377, -478, -378, -278, 593, -285, -433,
	-105, -482, 594, 594, 594, -198, 348, -197, -261, 5,
	-211, 541, -322, -428, -427, -542, -543, -538, 272, 230,
	531, 244, 168, -348, -279, -278, 119, -205, 559, -128,
	-129, 594, -480, 221, 481, -199, -199, -480, -480, -292,
	182, -525, -199, -199, -199, 2, 2, 2, 2, -393,
	-292, -275, -314, -292, 595, -357, -357, -305, -301, -393,
	-275, -393, -275, -393, -275, -132, -436, 2, 454, 182,
	182, 595, -393, -350, 424, 2, 394, 120, 497, 363,
	230, -292, -314, -292, -314, -275, 120, -275, 121, -292,
	-472, -384, -224, 345, 256, 461, -416, -417, -438, 434,
	435, -417, 434, 435, 8, 9, 8, 9, -228, 465,
	333, -366, 598, -232, 39, 134, 256, -292, 565, 149,
	-436, -436, 513, -636, 491, -443, 149, -436, 309, 334,
	522, 167, 532, 138, 338, 186, 593, -437, -437, 594,
	-370, -436, -436, 592, 601, 594, 595, 594, -353, 598,
	-351, -436, -368, -368, 594, 595, -368, -357, 592, 592,
	598, 594, -454, -455, 143, -436, 513, 513, 513, 513,
	593, 594, 595, -572, 355, 593, 593, -436, 594, 594,
	594, 594, 38, 598, 598, 598, 594, 598, 598, 598,
	594, 594, 594, 598, 594, 565, 565, 594, 594, 594,
	594, 598, 594, 598, 594, 186, 594, 594, -407, 370,
	594, 11, 12, 584, 585, 586, 587, 180, 588, 589,
	582, 583, 581, 574, 575, 576, 86, 287, 436, 14,
	15, 16, -317, 245, 221, -437, -437, -437, -437, 594,
	-441, -442, 186, 182, 38, -402, -402, -402, 594, 186,
	-368, 594, 594, 593, -565, 289, 329, 594, -430, -429,
	557, -477, -361, 2, -467, -287, -516, -430, -430, -368,
	-436, 251, 251, -395, 541, 344, -397, -467, -460, -512,
	-435, -434, 184, 39, 134, 324, 325, 217, -460, -285,
	-347, -460, -460, -516, -461, -461, -459, 594, -580, -512,
	594, -362, -470, -559, -353, 595, -516, -208, -560, -187,
	5, 334, -187, -187, -187, -357, 513, 513, 221, 25,
	371, -486, 591, 592, 8, -516, 593, -510, -510, -510,
	-357, 186, 186, 221, 186, -522, -522, 2, -238, -366,
	-238, -238, -314, -315, -238, -238, -238, -388, 559, -513,
	-423, 529, 83, 396, 509, -513, -234, 414, -278, -278,
	-292, -302, -261, 200, 406, -522, 329, -427, 214, -240,
	329, -486, -286, -261, 593, -411, 561, 256, 256, 541,
	-278, -286, 256, 214, -278, 214, -286, 2, -286, -591,
	396, 339, -436, 60, -331, 278, 394, 330, -235, 414,
	457, 359, -132, -132, -132, -132, -132, 593, -614, 541,
	137, -292, -314, -292, -302, -522, -297, 457, 359, 414,
	326, -308, -511, -511, -389, 457, 359, 414, -302, -522,
	-295, -522, 422, 126, -246, 214, -261, -246, 214, 444,
	-275, 405, 565, 45, -634, -236, -132, -132, -132, -132,
	-132, 593, -276, -237, 414, 5, 214, -278, 5, -278,
	214, 5, -261, -278, -302, -522, -618, 24, 142, -278,
	-302, -522, -144, 28, -186, -266, -525, 334, 537, -275,
	-589, -282, 444, 513, 513, -472, -607, -608, 202, 427,
	444, -357, -128, -202, 559, -128, -196, 226, 586, -586,
	-261, 550, -261, -321, -324, -322, -278, -214, -215, 561,
	559, 153, -312, -292, 591, -199, -525, -292, -481, -303,
	-304, 153, -347, 329, -525, 38, 153, 593, 2, 2,
	-296, 344, 329, -277, 214, -242, 144, -634, -275, -430,
	-361, -386, -421, 424, 344, -348, 546, -285, -386, -363,
	598, 186, 576, 595, -348, -476, 586, -105, -105, -199,
	598, 593, 576, 576, 593, -525, -525, 594, 598, -240,
	-292, -277, 230, 230, -284, -262, 594, 598, 595, 593,
	-207, 348, -206, 145, 258, 243, 467, 468, 469, 470,
	136, 466, -480, -205, -129, 186, 186, -64, 559, 497,
	-199, 597, -261, -393, -393, -393, 454, 454, -261, -357,
	-288, -275, -292, -289, -314, 182, 182, -275, 535, -417,
	345, 283, -463, -233, 567, -292, 597, -436, -436, 149,
	149, -436, -437, -437, -436, 149, 186, 593, -436, -447,
	33, 33, 594, 598, -432, -436, -316, 594, 549, -353,
	-353, 594, 586, -516, 597, 594, -445, 146, -436, 507,
	296, 212, 294, -406, 294, -406, -406, -510, 5, -516,
	586, -573, -281, 593, -261, 557, -352, 350, 594, -488,
	-486, -436, -436, -436, -436, -436, -510, -491, -491, -506,
	-506, -436, -441, -436, -488, -486, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, 138, 329, 338, -437,
	-442, -441, -436, -436, -486, 594, 594, 594, -368, -104,
	593, 289, -380, 205, -436, -480, 598, -380, -380, 594,
	-467, -467, 593, -436, 251, 592, 598, 600, 576, -347,
	595, -459, -460, 592, 594, 598, 594, 598, -420, 38,
	594, -516, -430, -210, -209, 135, 53, 107, 133, 334,
	-357, -357, 444, 347, 5, 8, 591, 592, 595, -510,
	594, 594, 594, -357, -357, 444, -357, -238, -238, 119,
	315, -436, 513, 513, 60, 221, 153, 329, 543, -544,
	-539, 151, -436, 593, 230, 593, 593, 2, -230, -231,
	142, 457, 24, -616, 2, 541, 153, -238, 153, -238,
	563, -331, 593, 593, 513, 444, -254, 513, 559, -368,
	-436, -200, 126, -515, -596, 597, -596, 597, 444, 513,
	513, 444, 513, 513, 329, 153, 559, 166, 166, 565,
	-246, 559, -368, 513, -490, 48, 26, 329, -296, -238,
	153, 513, 513, 525, 457, -525, 334, -13, -302, -522,
	-297, 457, 359, 414, -588, -358, -588, 202, -305, -480,
	-204, 348, -203, 145, 426, 136, 258, 223, -480, -202,
	186, 242, 559, -297, 2, 594, 594, 598, -545, 38,
	342, 342, 593, -292, -85, 559, -479, -512, -592, 559,
	43, -295, 38, 153, -589, -132, -297, -484, -485, 5,
	38, -292, 153, 344, 329, -243, 265, -634, -520, -560,
	-353, -386, -375, 330, 91, 594, -430, -377, -361, -436,
	2, 594, -197, -198, -525, -525, -525, -199, -211, -211,
	-428, -325, 593, -277, -262, 593, -211, -279, 2, -526,
	598, 593, 576, 576, 576, -205, -480, -128, -132, 348,
	-292, 586, -393, -337, -336, 363, 338, -337, 434, 434,
	345, 176, 261, -232, -276, -436, -436, 149, 33, 33,
	-436, -436, -447, 594, -436, -436, -368, 592, 5, -436,
	594, 594, 8, -436, 594, 595, -574, -261, -436, 594,
	60, 594, 594, 598, 598, 594, 594, 594, 594, 594,
	594, 594, -442, 186, 138, 338, 593, 594, 594, -104,
	-444, 208, 60, -467, -444, -444, -395, -357, -467, -434,
	-276, 591, -516, -512, -470, 593, 595, -209, 576, -525,
	-525, 559, -305, 592, 2, 591, -516, 594, -305, 119,
	-278, -278, 497, 434, -246, 386, -427, 153, -546, 93,
	-548, 76, 168, 102, 329, 334, 531, 386, 72, 126,
	402, -626, 38, 570, 594, -355, -464, -559, 593, -261,
	-355, -357, 329, 486, 126, 329, 126, 554, 119, 2,
	525, 79, -278, -286, -357, -357, -292, -302, -522, 160,
	594, 598, 576, 2, 586, 586, -302, -522, -297, -302,
	-522, -295, 153, -246, 361, 166, 160, 594, -276, 5,
	5, 153, -273, 76, -278, 5, -278, -296, 119, 444,
	513, 513, 344, 344, 347, -202, 598, 593, 576, 576,
	-202, -526, -128, 2, -347, -338, 232, -278, -543, -540,
	-541, 386, -547, -549, 168, 386, -132, 2, -213, -212,
	-261, 5, 593, -323, 348, 592, -594, 348, -593, 117,
	136, -522, -390, -132, -297, -347, 594, 598, 147, -412,
	541, -276, -292, 153, -244, 264, -634, -520, -241, -415,
	-413, 139, 593, 344, -132, -353, 576, 594, 594, 119,
	119, 224, 152, -355, 593, 593, -357, 119, 594, -206,
	-207, -525, -128, -525, -205, -480, -65, -66, 230, 93,
	368, -289, 497, 230, 593, 593, -232, -436, -436, -436,
	594, -353, -516, 586, -568, 363, 594, -463, -436, -436,
	-437, 186, 593, -447, 594, -569, 558, -436, -381, -382,
	-436, 432, 108, 206, -569, -569, 594, -512, 2, -525,
	2, 513, 591, 2, 186, 221, 38, 405, -427, -286,
	-290, -283, -261, 168, 214, 334, 554, -411, 256, 593,
	-437, -292, 593, 2, 30, -627, 130, 235, 594, 598,
	-465, -272, -261, -436, -465, 594, 594, 334, 334, 554,
	-436, -486, 593, -238, -238, 594, 594, -436, 513, -515,
	100, -513, 2, -596, -246, -275, -436, 513, 5, -238,
	-290, -238, -238, -273, 525, -302, -522, -297, -612, 498,
	451, 526, 445, 189, 433, -612, 182, -203, -204, -525,
	-128, -202, 38, -328, 234, 2, -545, 256, -283, 256,
	-625, 559, 594, 598, 576, 576, -321, -214, -86, -87,
	514, -479, 598, 593, 576, -347, 38, 5, 593, 593,
	-261, 344, 593, -276, -256, 92, -634, -520, -242, -386,
	330, -357, 93, -415, -443, -199, 593, 593, -326, 81,
	94, 127, 213, 190, 231, 478, 484, 28, -326, 594,
	-355, -355, 594, 593, -199, 594, 598, 28, 593, 28,
	593, -292, -314, -368, -368, 594, -353, 60, 598, 594,
	594, -437, -447, 594, -570, -571, -281, 598, 593, 593,
	458, 592, -357, 2, -357, -246, 386, -261, -548, -283,
	329, 541, -436, -263, 593, -436, 38, 235, 131, 219,
	-426, -628, 101, 487, 222, -464, -232, 594, -425, 541,
	402, -273, -355, 593, 593, 593, 576, 186, 593, -490,
	-238, -296, 513, 2, 2, 186, -588, 594, -601, 400,
	-132, -332, -333, 221, 593, -327, 344, 119, 315, -212,
	-513, -513, 594, 38, -87, 9, -593, -594, -436, 38,
	-132, -484, -355, -292, -355, 344, -248, -247, 273, -520,
	-243, 594, -286, -386, -526, -526, -425, 594, 594, -526,
	-66, -357, -357, 594, 594, -575, 394, 435, 207, -368,
	-354, 594, 598, 38, -382, 2, 2, 2, 405, 153,
	209, 594, -550, 288, -261, 594, 131, 219, -328, 593,
	-233, -465, -328, 209, -292, -597, 541, 594, -340, -339,
	-336, -342, -341, -336, -368, -513, 100, 361, -368, -273,
	-357, -357, 344, -604, 187, -603, 5, 10, -214, 361,
	-356, -466, -278, 82, 119, -338, -132, 594, -132, 594,
	594, -412, 594, -292, -245, -527, 405, 407, -634, -244,
	-430, 594, 594, -426, -425, -334, -330, 594, 594, 594,
	594, -576, -577, 50, 528, 109, -436, -576, -576, -571,
	-573, 168, 559, -551, -554, -553, 344, 464, 187, 362,
	594, 486, 553, -334, -357, 559, -347, -436, -425, 594,
	598, 546, 594, 598, 546, 594, 186, 594, -238, -609,
	559, -238, -612, -201, 559, 46, -327, -292, 594, 598,
	385, 132, 142, -328, -625, -425, 593, -426, 593, -253,
	-252, -634, -506, -256, 139, -199, -199, -328, -426, -215,
	559, -199, -578, 151, -577, 382, 181, 434, 382, 181,
	-578, -578, -283, 55, -553, 344, -554, 344, 535, 132,
	-627, 594, 55, -550, -328, -339, 221, -341, 186, 361,
	202, 186, 442, -603, 30, -255, -254, 593, -466, 435,
	435, 2, -332, -327, -426, -355, -328, -355, -249, -250,
	-251, -357, -248, 330, 535, -334, -328, -430, 109, 205,
	508, 315, 33, 576, -552, 315, 421, 64, 457, -552,
	-430, 576, -551, 593, 593, 347, -357, 348, -357, 2,
	-214, -328, 594, -334, 594, -245, 457, -215, -334, 434,
	352, -577, -436, 23, 334, 126, -436, -627, -368, -368,
	-238, -198, 593, 594, -327, -334, -425, -215, -426, -253,
	-376, -430, -215, 594, 594, -198, -239, 64, 421, -255,
	-215, -426, -430, -328, -249, -430, -430, -329, -330, 513,
	594, -430, -328, -334, 593, -334, -215, -368, -215, -430,
	594, -430, -329,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1377, 1379, 1381, 1383, 0, 789, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 991, 993, 0, 630, 632,
	0, 996, 998, 0, 0, 652, 653, 0, 1488, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, -2, -2, 0, -2, -2, -2, 1395, 41,
	43, 45, 47, 49, 51, 53, 55, 57, 59, 422,
	424, 426, 428, 430, 433, 435, 437, 1546, 485, 487,
	489, 491, 493, 495, 497, 0, -2, 1560, 0, 0,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 107, 108, 109, 110, 111, 112, 113, 114, 75,
	76, 77, 79, 80, 81, 82, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 105, 73, 0, 0, 1519,
	1521, 1523, 1525, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 547, 551,
	554, 556, 558, 562, 565, 571, 573, 575, 530, 531,
	534, 2252, 2270, 2271, 2272, 2275, 2276, 2277, 2278, 2279,
	2280, 2728, 2810, 2811, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	532, 533, 1168, 0, 599, 597, 2237, 600, 2527, 602,
	604, 472, 473, 474, 475, 476, 477, 0, 623, 613,
	1558, 624, 626, 627, 628, 629, 594, 592, 0, 623,
	2306, 621, 1375, 1376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 401, 1226, 1227, 1228, 1360,
	1361, 2573, 1402, 0, 231, 642, -2, -2, -2, 2693,
	-2, 674, -2, 685, 688, 689, 681, 2697, 0, 2576,
	-2, 692, 1378, 1380, 1382, 787, 788, 2256, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 241, -2, -2, -2, -2, 0,
	0, 2621, 2358, 2205, 2272, 2208, 2203, 331, 333, 335,
	336, 0, 0, 0, 0, 0, 0, 362, 365, 367,
	371, -2, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1052, 1044, 1045, 1284, 0,
	0, 0, -2, 480, 482, 535, 536, 0, 1547, 1547,
	543, 544, -2, 0, 0, 0, 0, 301, 289, 992,
	994, 995, 0, 0, 0, 0, 631, 633, 0, 0,
	270, 997, 999, 1000, 0, 0, 0, 0, 0, 303,
	0, 0, 647, 649, 651, 717, 719, 721, 723, 725,
	727, 729, 731, 733, 736, 738, 740, 742, 744, 747,
	749, 751, 754, 757, 759, 761, 763, 765, 767, 769,
	771, 773, 775, 777, 779, 781, 783, 784, 795, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 888, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 972, 0, 0, 798, 800, 801, 802, 0,
	861, 886, 887, 896, 0, 1208, 1548, 1404, 1385, 1399,
	1404, 1387, 1388, 1389, 1390, 1391, 1396, 1398, 1392, 1393,
	1394, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 423, 425, 427, 429, 431, 434, 436, 438, -2,
	1517, 1518, 486, 488, 490, 492, 494, 496, 498, 634,
	0, 636, 0, 799, -2, 0, 1552, 1552, 1552, 0,
	0, 1518, 1516, 0, 639, 640, 696, 697, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 1909, 0,
	698, -2, 1942, 1944, 2668, 2500, 2693, 2078, 1946, 1947,
	1948, 1949, 1950, 0, 1952, 1953, 1954, 1955, 1956, 1957,
	0, 1959, 0, 1964, 1965, 1966, 0, 2675, 2182, 2266,
	-2, 0, 0, 2681, 2262, 0, 2045, 1982, -2, -2,
	2289, 2268, 1753, 1754, 1755, 1756, 1757, -2, -2, 2711,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 0, 2656, 2676, 2677, 2682, 2684, 2678, 2665, 2007,
	2371, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1780, 1789, -2, -2, -2, -2,
	-2, -2, -2, 2669, 2670, 2687, 2690, 2696, 2701, 2702,
	2674, 2683, 2710, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 1781,
	-2, -2, -2, -2, 1535, 2540, 1538, 1168, 1536, 1520,
	1522, 0, 1524, 0, 0, 0, 1529, 1555, 1553, 0,
	1604, 1533, 1534, 1623, 1623, 1647, 0, 1628, 0, 1647,
	1547, 1674, 0, 1634, 2565, 1983, 1984, 0, 2272, 2267,
	-2, -2, 2708, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 601, 603, 0, 0, 0, 622, 1557,
	0, 0, 0, 0, 0, 0, 0, 404, 405, 406,
	407, 408, 2676, 0, 0, 0, 413, 0, 415, 416,
	417, 418, 419, 420, 421, 200, 2676, 503, 528, 0,
	200, 2676, 506, 200, 2676, 509, 0, 512, 1282, 200,
	2676, 515, 2233, 200, 2676, 518, 520, 2241, 200, 2676,
	524, 2248, 2246, 525, 2676, 527, 306, 304, 305, 2285,
	2286, 2293, 2294, 2295, 2296, 2709, 2711, 1371, 1372, 1373,
	1374, 0, 1401, 1283, 644, 645, 0, 669, 0, 673,
	2664, -2, 0, 2585, -2, 677, 1405, 1409, 1410, 1411,
	1412, 1413, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 670, 671, 684, 690, 693, 0, 790, 791, 792,
	793, 794, 72, 0, 2676, 1674, 74, 0, 2227, 2297,
	2298, 2299, 2300, 2301, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 78, 0, 2676, 83, 0,
	2676, 0, -2, 95, 0, 106, 0, 2230, 115, 0,
	2676, 0, 2202, -2, 0, 212, 290, 291, 292, 0,
	1019, -2, 2676, 1220, 1222, 1222, 0, -2, 0, 0,
	0, 982, 2199, 2204, 983, 2223, 984, 2209, 0, 337,
	338, 339, 340, 341, 0, 342, 2676, 344, 345, 0,
	347, 348, 2676, 350, 351, 0, 353, 0, 253, 254,
	2676, 375, 377, 0, 379, 380, 0, 382, 0, 0,
	0, 386, -2, 402, 0, 399, 389, 390, 392, 393,
	394, 395, 396, 0, 442, 440, 2238, 0, 0, -2,
	2676, 0, 1016, 0, 0, 1262, -2, 2676, 1213, 0,
	1269, 2676, 1265, 0, -2, 0, 1545, 2676, 1422, 1048,
	1049, 1050, 1051, 1686, 469, 0, 1453, 0, 1455, 0,
	1474, 1680, 1623, 0, 0, 1685, 0, -2, 588, 2255,
	-2, 538, 0, 539, 0, -2, 0, 318, 0, 0,
	1001, 1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1660,
	271, 273, 0, 0, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 0, 0, 654, 0, 0, 796, 797,
	0, 0, 807, 808, 809, 0, 318, 2577, 2536, 2392,
	816, 0, 819, 822, -2, 0, 0, 0, 0, 826,
	0, 831, 832, 833, 0, 0, 837, 839, 990, 841,
	0, 0, 843, 0, 847, 0, 850, 0, 852, 0,
	854, -2, -2, -2, 862, 863, -2, 868, -2, 0,
	872, -2, 0, 875, 0, 878, -2, 0, 888, 884,
	885, 0, 0, 0, 0, 904, 905, 0, 914, 0,
	917, 918, 919, 0, 923, 924, 0, 926, 927, 928,
	929, 0, 2648, 2582, 2358, 0, 935, -2, 941, 943,
	0, -2, 0, 959, 0, 963, 0, 0, 971, 0,
	0, 803, 804, 200, 1678, 1384, -2, 1386, 0, -2,
	0, 635, 0, 638, 1577, 1503, 1500, 0, 1574, 1575,
	1504, 0, 0, 0, 1511, 0, 1550, 1551, 0, 0,
	0, 1490, 1491, 0, 0, 0, 0, 2084, 2085, 2086,
	2087, 2100, 2088, 2089, 2099, 2097, 2098, 2090, 2091, 2096,
	2110, 2111, 2101, 2102, 2092, 2105, 2103, 2104, 2106, 2107,
	2108, 2109, 0, 0, 2115, 0, 2093, 2094, 2095, 2123,
	0, 0, 2124, 0, 2126, 0, 2116, 2112, 2113, 2114,
	0, 1888, 1890, 2190, 0, 0, 0, 2122, 2117, 2118,
	1826, 1827, 1828, 1829, 1830, 1863, 1867, 1868, 0, 0,
	1943, 2187, 2186, 1945, 0, 0, 2138, 0, 1958, -2,
	0, 2079, 2133, 0, 0, 1967, 1968, 1969, 0, 0,
	2138, 0, 0, 2181, 1979, 1980, 1818, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 1766, 0,
	1768, 0, 1769, 1770, 1777, 1790, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 2162, -2,
	0, 0, 0, 0, 1782, 0, 1537, 0, 0, 1608,
	2191, 2195, 2196, 1608, 1608, 0, 0, 2139, 1671, 1671,
	0, 0, 1666, 1666, 1666, 1664, 1647, 0, 1647, 1657,
	0, 1647, 1647, 0, -2, 1628, 0, 0, 1657, 0,
	1641, 576, 578, 580, 582, 583, 584, 586, 1675, 1676,
	0, 0, 0, 0, 2273, 0, 0, 0, 0, 0,
	2258, 0, 358, 0, 0, 0, 2631, 2576, 0, -2,
	606, 625, 1547, 0, 2141, 1701, 1705, 0, 1707, 1708,
	1709, 1710, 1711, 0, 0, 1702, -2, 1778, 1780, 1801,
	2290, 2291, 2292, 1761, 1762, 1763, 1764, 1765, 1773, 1760,
	1760, 1760, 1771, 1800, 1792, 1800, 1796, 1746, 1747, 1748,
	1783, 1784, 1785, 1786, 0, 2631, 2576, 0, -2, 615,
	0, 0, 1485, 216, 218, 219, 220, 221, 222, 403,
	0, 410, 411, 412, 0, 499, 0, 198, 199, 0,
	200, 2676, 504, 0, 507, 0, 200, 2676, 2197, 513,
	0, 516, 0, 0, 522, 0, 0, 0, 0, 0,
	200, 1487, 0, 0, 0, 0, -2, 679, 686, 687,
	0, 1407, 0, 1414, 707, 708, 709, 1416, 1417, 0,
	1419, 682, 710, 711, 712, 713, 714, 715, 0, 2211,
	2212, 2213, 2214, 2217, 2218, 0, 0, 680, 700, 683,
	0, 694, 116, 1357, 0, 0, 159, 0, 1357, 1357,
	0, 0, 0, 0, 185, 0, 1087, 0, 0, 0,
	0, 131, 144, 155, 128, 129, 0, 0, 0, 0,
	0, 0, 84, 1190, 0, 1193, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 103, 143, 0, 0, 1450, 0, 138,
	118, 0, 0, 131, 145, 157, 0, 189, 191, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 223,
	0, 0, 0, 1214, 0, 0, 0, 1544, 0, 0,
	0, 0, 2676, 1355, 1340, 0, 0, 1660, 2441, -2,
	-2, 271, 1660, 981, 0, 0, 2273, 2207, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 381, 383, 384,
	385, 0, 1261, 0, 391, 432, 1139, 2676, 0, 0,
	459, 454, 0, 456, 0, 0, 0, 1189, 2676, 1187,
	2242, 0, 1211, 0, 1168, 2676, 2240, 0, 0, 0,
	1270, 2282, 1279, 1283, 1440, 0, 471, 0, 1456, 1458,
	0, 0, 1681, 0, 1683, 1623, 1547, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 277, 0,
	1659, 0, 0, 1660, 271, 2551, 318, 318, 1660, 656,
	1660, 658, 0, 0, 810, 811, 0, 318, 318, 318,
	817, 818, 820, 821, -2, -2, -2, -2, 823, 824,
	911, 0, 0, 0, 910, 836, 840, 0, 975, 2560,
	2576, 2631, 988, 911, 2358, 911, 2358, 911, 2358, 851,
	853, 856, 899, 907, 867, 874, 0, 869, 873, 876,
	879, 0, 881, 889, -2, 0, 891, 0, 893, 0,
	895, 911, 912, 915, 922, 925, 930, 931, 932, 933,
	2253, 934, -2, 938, 939, 0, 950, 955, 956, 952,
	0, 0, 0, 0, 0, 0, 966, 967, 0, 0,
	974, 1207, 0, 1397, 1577, 1503, 637, 1494, 1576, 1495,
	1502, 1505, 0, 0, 1507, 0, 1509, 0, 1572, 1573,
	1580, 1581, 0, 1591, 1592, 1584, 0, -2, 0, 0,
	1587, 1588, 1513, 0, 1530, 1531, 1532, 1561, 1564, 1298,
	0, 2810, 1822, 1696, 1823, 1824, 2226, 0, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, -2, -2,
	-2, -2, -2, -2, -2, -2, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, -2, -2, -2,
	1864, 1865, 1866, -2, 2125, 2127, 0, 2190, 0, -2,
	0, -2, -2, -2, -2, 1885, 0, 1887, 1892, 1894,
	1896, 0, 0, 0, 0, 2189, 1906, 2173, 2174, 0,
	0, 2081, 2082, 2083, 1891, 0, 1910, 2188, 2185, 0,
	0, 2119, 0, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 0, 2137, 1560, 1971,
	0, 0, 0, 0, 1978, 1963, 2135, 0, 2134, 0,
	0, 0, 2145, 0, 2180, 2176, 0, 2224, 1817, 1804,
	1805, 1806, 1807, 1808, 1809, 1819, 0, 2221, 2259, 2265,
	2055, 0, 0, 0, 2008, 2009, 2010, 2011, 2012, 0,
	2014, 2015, 0, 2017, 2018, 0, 2020, 2021, 0, 2023,
	2024, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 0, 0, 2027, 0, 2148, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2029, 0, 2031, 2139, 2159,
	0, 0, 1911, 0, 0, 0, 0, 2079, 0, 2034,
	2139, 2167, 0, 0, 0, 0, 0, 2139, 0, 2172,
	0, 2041, 0, 2043, 1539, 0, 0, 1691, 0, 0,
	0, 2194, 1691, 1691, 0, 1603, 0, 0, 1667, 1668,
	1669, 1670, 0, 0, 1671, 0, 1661, 1665, 1662, 1663,
	1657, 1620, 0, 0, 2228, 1657, 1626, 1656, 0, 1168,
	1646, 1657, 1657, 0, -2, 1630, 1647, 0, 0, 577,
	579, 581, 585, 587, 0, 0, 1560, -2, 0, -2,
	320, 1167, 0, 0, 0, 0, 596, 598, 0, 0,
	519, 0, 0, 612, 0, 590, 0, 593, 0, 1692,
	1695, 0, 0, 1706, 1712, 1713, 0, -2, 0, 0,
	1802, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 414, 529, 200, 501, 0, 200, 200, 510, 0,
	0, 200, 521, 200, 2249, 200, 2247, 307, 526, 1486,
	234, 0, 672, 0, 1406, 1415, 0, 704, 0, 706,
	0, 2215, 2219, 2216, 2220, 0, 695, 0, 0, 0,
	0, 1356, 0, 1305, 0, 0, 163, 2676, 0, 202,
	0, 0, 1132, 2234, 0, 1124, 0, 0, 2378, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 1191, 1192, 1194,
	1201, 1203, 0, 1197, 2222, 0, 0, 1198, 0, 1200,
	1202, 1204, 0, 0, 0, 0, 0, 0, 0, 97,
	104, 0, 0, 0, 0, 0, 0, 1449, 1450, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 1257, 1255, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 0,
	0, 0, -2, 1218, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 309, 2200, 2210, 0, 1006,
	1007, 343, 346, 349, 352, 240, 0, 387, 0, 0,
	1054, 1029, 0, 0, 441, 318, 0, 0, 455, 459,
	2251, 1014, 1185, 1188, 0, 1168, 2676, 1234, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 2676, 2229, 2281,
	2282, 1442, 1450, 0, 1691, 0, 1472, 1459, 0, 0,
	0, 1472, 1476, 1477, 1479, 1480, 0, 0, 1682, 1688,
	537, 589, 1547, 1547, 318, 316, 2503, 314, 311, 313,
	0, 0, 0, 1055, 1057, 1058, 1059, 202, 0, 2282,
	1124, 2430, 2282, 0, 1462, 1464, 0, 265, 0, 274,
	1660, 272, 277, 0, 0, 0, 453, 655, 660, 805,
	0, 318, 813, 814, 815, 858, 901, 909, 954, 825,
	827, 828, 829, 0, 0, 989, 985, 986, 987, 842,
	911, 845, 911, 848, 911, 871, 877, 883, 890, 0,
	0, 0, 903, 920, 0, 937, 0, 0, 0, 0,
	0, 0, 0, 960, 961, 962, 964, 969, 968, 973,
	1679, 1498, 1499, 1501, 0, 1510, 0, 0, 1586, -2,
	-2, 1585, 1589, 1590, -2, -2, -2, -2, 1506, 0,
	1515, 1512, 0, 1571, 1296, 1297, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1907, 0, -2, 1886, 1889,
	1893, 1895, 1897, 0, 0, 0, 0, 0, 0, 2128,
	0, 2130, 1908, 2183, 2186, 2121, 0, 2077, 0, 0,
	1559, 1560, 1560, 0, 1977, 0, 2136, 0, 2143, 2144,
	0, 1970, 0, 2177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 2013, 2016,
	2019, 2022, 0, 0, 0, 0, 2002, 0, 0, 0,
	2006, 1772, 1758, 0, 1800, 1798, 1799, 1793, 1800, 1797,
	1750, 0, 1749, 0, 2026, 0, 2028, 2030, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1914, 1915, 1916, 1936, 2033,
	2165, 2166, 0, 0, 0, 0, 0, 0, 2039, 0,
	2171, 2040, 2042, 1547, 0, 1540, 0, 1605, 1594, 1690,
	0, 2192, 1660, 1607, 1609, 2193, 2231, 1594, 1594, 0,
	2140, 0, 0, 1651, 0, 0, 0, 1653, 1624, 0,
	0, 1618, 0, 1613, 1614, 1615, 1616, 1617, 1625, 1168,
	1655, 1627, 1631, 2259, 0, 1657, 0, 1642, 0, 1644,
	1677, 0, 1636, 1639, 0, 0, 2274, 1691, 0, 354,
	359, 360, 355, 356, 357, 605, 0, 0, 0, 0,
	0, 2142, 0, 1697, 0, 1703, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 217, 1484, 409, 500, 200,
	505, 508, 2198, 200, 514, 517, 523, 230, 0, 668,
	-2, 702, 703, 705, 0, 701, 160, 1357, 0, 0,
	1301, 1303, 2245, 1307, 1313, 1316, 0, 165, 2676, 176,
	0, 1103, 0, 2232, 0, 0, 0, 0, 0, 0,
	1359, 0, 0, 2676, 200, 2676, 200, 179, 181, 184,
	0, 188, 186, 0, 1091, 0, 0, 1094, 117, 1357,
	0, 0, 120, 124, 132, 133, 136, 0, 0, 0,
	142, 0, 0, 0, 1318, 1322, 1330, 0, 0, 0,
	1195, 1196, 1199, 1205, 85, 0, 0, 0, 1326, 1328,
	1334, 96, 1428, 1429, 98, 2676, 2243, 100, 2676, 0,
	1300, 0, 0, 0, 0, 190, 122, 126, 134, 135,
	137, 0, 1336, 119, 0, 215, 0, 0, 205, 200,
	2676, 0, 207, 0, 208, 209, 224, 0, 0, 0,
	1017, 1018, 1223, 1224, 1225, 1256, 1209, 1210, 0, 1221,
	1215, 0, 0, 0, 0, 0, 1338, 1339, 0, 0,
	0, 1352, 1660, 236, 0, 1660, 244, 0, 2206, 0,
	374, 0, 0, 0, 0, 1053, 1150, 0, 1024, 0,
	0, 0, 447, 443, 0, 452, 458, 457, 463, -2,
	0, 0, 0, 0, -2, 0, 0, 1272, 1266, 1267,
	0, 0, 0, 0, 2676, 1444, 1450, 0, 1545, 1560,
	470, 1451, 1472, 0, 0, 0, 1461, 1457, 1454, 1691,
	0, 0, 0, 0, 0, 1684, 1687, 540, 541, 293,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 1060,
	1064, 0, 2282, 2282, 0, 2236, 0, 0, 0, 0,
	275, 0, 278, 0, 0, 0, 283, 284, 285, 286,
	287, 288, 277, 267, 1660, 0, 0, 657, 0, 0,
	812, 0, 835, 844, 846, 849, 892, 894, 911, 921,
	944, 945, 1081, 0, 1081, 0, 0, 965, 1508, 0,
	1583, 1514, 1565, 1566, 0, 1298, 0, 1825, 1870, 0,
	0, -2, 0, 0, 1874, 0, 0, 0, -2, 0,
	0, 0, 2129, 2131, 0, 2185, 2120, 1972, 0, 0,
	0, 1976, 1960, 1961, 0, 2080, 2146, 2175, 2179, 0,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 0, 2225, 2260,
	2264, 2053, 2054, 2058, 2239, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1795, 0,
	0, 2147, 2158, 2160, 1912, 1913, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, -2, -2, -2, 1930,
	1931, 1932, -2, -2, -2, 1937, 0, 0, 0, 2161,
	2163, 2164, 2168, 2169, 0, 2036, 2037, 2038, 2170, 0,
	1547, 1541, 1602, 0, 1689, 1606, 0, 1602, 1602, 1554,
	1649, 0, 0, 1673, 0, 1621, 0, 1622, 0, 1654,
	0, 1629, 1632, 1633, 1643, 0, 1635, 0, 1638, 0,
	1972, -2, 319, 321, 323, 0, 326, 327, 0, 0,
	608, 609, 0, 607, 591, 0, 0, 1699, 0, 0,
	1775, 1779, 1803, 617, 618, 0, 616, 502, 511, 232,
	0, 1658, 0, 0, 0, 0, 0, 0, 201, 1101,
	1131, 0, 0, 0, 1123, 0, 0, 1137, 167, 168,
	0, 0, 0, 0, 177, 0, 0, 174, 0, 183,
	187, 1088, 0, 0, 0, 0, 1306, 0, 0, 0,
	139, 140, 141, 0, 146, 0, 147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1434, 1435, 0,
	1425, 0, 0, 0, 203, 0, 0, 0, 1295, 226,
	0, 0, 0, 0, 0, 1259, 1260, 1217, 1319, 1323,
	1331, 0, 0, 0, 0, 623, 0, 628, 1354, 244,
	242, 0, 245, 0, 248, 249, 0, 251, 244, 238,
	0, 0, 0, 1168, 388, 1027, 1138, 0, 1140, 0,
	1025, 0, 0, 1139, 439, 0, 446, 0, 460, 0,
	0, 1189, 0, 0, 1212, 1232, 1168, 0, 1271, 1273,
	0, 1281, 0, 0, 0, 1446, 1450, 0, 1439, 1440,
	1579, 1452, 1470, -2, 0, 0, 1560, 1478, 1475, 1481,
	1482, 0, 315, 0, 310, 312, 0, 296, 0, 0,
	1056, 1061, 0, 0, 0, 0, 0, 1463, 1465, 0,
	0, 0, 0, 0, 0, 266, 277, 1660, 302, 0,
	806, 830, 902, 946, 1080, 0, 0, 948, 0, 0,
	1582, 1569, 1570, 1567, 1298, 1872, 1876, 0, 0, 0,
	1878, -2, 0, 1900, -2, -2, 2132, 2184, 1951, 1560,
	1973, 1975, 1962, 2178, 1820, 0, 2060, 2057, 0, 2044,
	0, 1997, 1998, 0, 0, 2001, 2003, 2004, 2005, 1759,
	1752, 1751, 2157, 0, 0, 0, 0, 2035, 1542, 0,
	2049, 0, 0, 1610, 2049, 2049, 1650, 0, 1652, 1619,
	1611, 0, 2260, 1645, 1637, 0, 0, 324, 0, 328,
	329, 0, 0, 1693, 1698, 0, 1704, 1774, 0, 233,
	161, 162, 1310, 1314, 1311, 0, 164, 0, 1102, 0,
	1105, 0, 0, 0, 0, 1112, 1124, 0, 0, 0,
	0, 0, 1125, 0, 1154, 0, 1286, 1293, 0, -2,
	0, 0, 0, 170, 193, 0, 0, 194, 1358, 172,
	0, 0, 200, 200, 0, 0, 1302, 1304, 1317, 0,
	0, 0, 0, 149, 0, 0, 1320, 1324, 1332, 1327,
	1329, 1335, 0, 101, 0, 1436, 0, 0, 1337, 213,
	214, 0, 200, 0, 200, 206, 200, 1295, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	237, 308, 244, 376, 0, 1075, 0, 1150, 1142, 1143,
	1144, 0, 1149, 1151, 0, 0, 1041, 1026, 0, 1037,
	0, 0, 1054, 1029, 0, 444, 461, 0, 464, 0,
	467, 1015, 1186, 1229, 1168, 0, 1263, 0, 0, 0,
	0, 0, 0, 0, 1448, 1450, 0, 1441, 1442, 1472,
	1578, 0, 0, 0, 1460, 1579, 0, 317, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 279,
	0, 280, 281, 282, 268, 269, 659, 661, 0, 0,
	667, 1079, 0, 0, 0, 0, 1568, 1880, -2, -2,
	1901, 0, 2261, 2263, 1560, 0, 2046, 1562, 0, 0,
	-2, 0, 0, 0, 1543, 1526, 0, 1601, 1593, 1595,
	1597, 2563, 2353, 2675, 1527, 1528, 1672, 0, 1640, 325,
	610, 0, 0, 1700, 0, 0, 0, 1312, 166, 0,
	1106, 1107, 2235, 1109, 0, 1111, 1113, 1114, 1115, 0,
	1118, 2284, 0, 1122, 0, 1133, 1155, 0, 1164, 0,
	1288, 1298, 1292, 0, 1290, 1166, 0, 169, 171, 195,
	192, 1295, 0, 173, 182, 0, 0, 121, 0, 0,
	2347, 152, 150, 148, 99, 1299, 123, 0, 215, 225,
	1294, 227, 210, 200, 0, 1321, 1325, 1333, 0, 1346,
	1347, 1348, 1349, 0, 0, 0, 0, 246, 0, 247,
	250, 0, 0, 1090, 0, 1028, 1141, 0, 1152, 1153,
	1031, 0, 1030, 0, 0, 0, 0, 0, 445, 448,
	0, 451, 0, 0, 0, 0, 0, 1274, 1272, 0,
	1280, 0, 0, 0, 1424, 0, 0, 1443, 1444, 468,
	1466, 0, 0, 1472, 1483, 295, 0, 0, 1062, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1063, 1166,
	0, 0, 1130, 0, 300, 276, 0, 663, 0, 665,
	0, 947, 949, 0, 0, 1974, 2064, 0, 0, 1999,
	2000, -2, 0, 1940, 2048, 2050, 0, 0, 0, 0,
	0, 1612, 611, 1694, 619, 1308, 0, 1315, 1104, 1108,
	0, 0, 0, 1172, 0, 0, 1126, 0, 1158, 1159,
	1075, 0, 1160, 1161, 1162, 1287, 1571, 1293, 1075, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 204,
	228, 1295, 0, 1350, 1351, 0, 0, 243, 261, 0,
	1230, 1029, 1089, 0, 0, 1039, 0, 1042, 0, 1038,
	1035, 1036, 1027, 0, 449, 450, 465, 0, 466, 0,
	1233, 0, 0, 1281, 0, 0, 1431, 1423, 1450, 1445,
	1446, 1691, 1469, 1473, 0, 0, 1164, 1166, 1086, 0,
	662, 0, 0, 957, 958, 0, 0, 0, 0, 2059,
	1563, 1941, 0, 0, 1596, 1598, 1599, 1600, 1309, 0,
	0, 1117, 1177, 0, 0, 0, 1156, 1157, 1086, 0,
	1291, 1289, 1135, 0, 1168, 175, 0, 1166, 0, 1095,
	0, 0, 1098, 0, 0, 153, 2347, 151, 0, 200,
	1343, 200, 0, 264, 0, 258, 256, 257, 1031, 0,
	0, 1146, 1148, 0, 1043, 1075, 1041, 462, 1231, 1264,
	1166, 0, 1164, 0, 1438, 1450, 1432, 1433, 0, 1448,
	0, 318, 318, 1075, 1164, 1029, 1085, 318, 664, 666,
	2056, 2076, 2065, -2, 2634, 2354, 0, 2076, 2076, 2051,
	2052, 0, 0, 1119, 1173, 1174, 0, 1169, 1170, 1171,
	2283, 1120, 1121, 1154, 0, 0, 1172, 196, 1075, 1092,
	0, 0, 1093, 0, 0, 156, 0, 158, 229, 1341,
	0, 1344, 0, 252, 0, 0, 1023, 0, 1145, 0,
	0, 0, 0, 1090, 1031, 1164, 0, 1075, 0, 1427,
	1437, 0, 1447, 1424, 0, 297, 298, 1086, 1075, 1691,
	0, 299, 2061, 0, 0, 2067, 2068, 2069, 2070, 2071,
	2062, 2063, 1110, 0, 1175, 0, 1176, 0, 0, 0,
	1691, 1163, 0, 1177, 180, 1096, 0, 1099, 0, 154,
	0, 0, 0, 259, 260, 1020, 1022, 0, 1147, 1032,
	0, 1034, 1029, 1040, 1075, 0, 1086, 0, 1420, 1426,
	1430, 2244, 1431, 1467, 0, 1029, 1086, 1129, 0, 2073,
	2074, 0, 0, 0, 1178, 0, 1181, 1182, 0, 1179,
	1134, 0, 1154, 0, 0, 1342, 200, 0, 0, 1033,
	1031, 1086, 1166, 1029, 1164, 1438, 0, 1691, 1029, 2072,
	2075, 2066, 1116, 1180, 1183, 1184, 1165, 1136, 0, 0,
	1345, 262, 0, 1078, 1023, 1029, 1164, 1691, 1075, 1427,
	1691, 1127, 1691, 1083, 0, 0, 1074, 1076, 1077, 1021,
	1691, 1075, 1277, 1086, 1421, 1468, 1128, 1097, 1082, 0,
	263, 1275, 1086, 1029, 0, 1029, 1691, 0, 1691, 1278,
	1083, 1276, 1100,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 582, 3, 588, 583, 3,
	593, 594, 586, 584, 598, 585, 595, 587, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 601, 3,
	574, 576, 575, 579, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 591, 3, 592, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 599, 581, 600, 577,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 578, 57917, 580, 57918, 590, 57919, 596,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1464
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1676
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1760
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1825
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1877
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1878
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1951
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2001
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2021
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2027
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2058
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2187
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2421
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2598
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3035
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3041
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3046
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3051
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3056
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3061
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3406
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3432
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3439
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3622
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4001
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4025
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4033
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4114
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4147
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4237
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4401
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4648
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.str = "client_encoding"
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.str = "timezone"
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4959
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = true
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = false
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = true
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = false
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5519
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5592
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5600
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5748
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5762
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6179
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6195
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{

			sqlVAL.union.val = nil
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.str = ""
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = nil
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6263
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6293
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6693
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{

			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = false
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6831
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7119
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = true
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{

			sqlVAL.union.val = true
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7288
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7302
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7336
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = nil
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7484
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7486
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7488
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7492
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7530
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7548
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7567
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7584
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7665
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.str = ""
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7975
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7987
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7993
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8007
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = tree.Types
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8143
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8144
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8148
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8314
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8335
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.str = ""
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{

		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.str = ""
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.str = ""
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.str = ""
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8586
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8600
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8660
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8736
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8846
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9026
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = true
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = false
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = nil
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9216
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = true
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = false
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = true
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9245
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9250
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9317
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9504
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9541
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9648
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9694
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9724
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9757
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = nil
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = true
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = false
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.str = tree.AstFull
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.str = tree.AstRight
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.str = tree.AstInner
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9876
		{
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9877
		{
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.str = tree.AstHash
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.str = ""
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9969
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9991
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = true
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = false
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = true
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = false
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10053
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10061
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10062
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10080
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10082
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10090
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10103
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10110
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10159
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10171
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = types.Geography
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10221
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10229
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10263
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = nil
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = types.Int2
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = types.Int
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = types.Float4
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = types.Float
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = types.Bool
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = types.Float
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10361
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10383
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = types.String
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = true
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = false
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = types.Date
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10432
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10440
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10471
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10488
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = true
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = false
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = false
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = types.Interval
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10512
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = nil
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10641
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10701
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10858
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11037
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11167
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11276
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11302
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11326
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11356
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11367
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11368
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11458
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11634
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11653
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11654
		{
			return unimplemented(sqllex, "treat")
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11680
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.str = ""
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11926
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12343
		{
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12415
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12496
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12512
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12532
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12549
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12566
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12785
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12798
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12805
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.str = ""
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
