// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11680

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1319,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	222, 199,
	449, 199,
	-2, 0,
	-1, 79,
	211, 1122,
	224, 1122,
	240, 337,
	340, 337,
	349, 912,
	381, 337,
	393, 912,
	434, 912,
	459, 337,
	484, 912,
	-2, 0,
	-1, 85,
	240, 341,
	-2, 0,
	-1, 86,
	125, 1319,
	217, 1319,
	469, 1319,
	470, 1319,
	-2, 0,
	-1, 102,
	142, 1290,
	160, 1290,
	173, 1290,
	220, 1290,
	253, 1290,
	299, 1290,
	309, 1290,
	464, 1290,
	-2, 1261,
	-1, 136,
	150, 797,
	239, 797,
	343, 766,
	398, 766,
	452, 797,
	-2, 0,
	-1, 138,
	4, 1321,
	21, 1321,
	22, 1321,
	23, 1321,
	24, 1321,
	25, 1321,
	26, 1321,
	28, 1321,
	29, 1321,
	35, 1321,
	40, 1321,
	41, 1321,
	42, 1321,
	43, 1321,
	44, 1321,
	45, 1321,
	46, 1321,
	47, 1321,
	48, 1321,
	49, 1321,
	51, 1321,
	52, 1321,
	53, 1321,
	54, 1321,
	56, 1321,
	57, 1321,
	58, 1321,
	59, 1321,
	60, 1321,
	61, 1321,
	65, 1321,
	66, 1321,
	67, 1321,
	68, 1321,
	70, 1321,
	71, 1321,
	72, 1321,
	76, 1321,
	77, 1321,
	78, 1321,
	79, 1321,
	80, 1321,
	81, 1321,
	82, 1321,
	85, 1321,
	86, 1321,
	87, 1321,
	88, 1321,
	90, 1321,
	92, 1321,
	93, 1321,
	94, 1321,
	95, 1321,
	96, 1321,
	97, 1321,
	99, 1321,
	100, 1321,
	102, 1321,
	103, 1321,
	111, 1321,
	112, 1321,
	113, 1321,
	114, 1321,
	116, 1321,
	117, 1321,
	118, 1321,
	120, 1321,
	121, 1321,
	122, 1321,
	124, 1321,
	125, 1321,
	127, 1321,
	128, 1321,
	129, 1321,
	132, 1321,
	133, 1321,
	134, 1321,
	136, 1321,
	137, 1321,
	139, 1321,
	140, 1321,
	141, 1321,
	143, 1321,
	144, 1321,
	145, 1321,
	146, 1321,
	147, 1321,
	148, 1321,
	149, 1321,
	150, 1321,
	151, 1321,
	152, 1321,
	153, 1321,
	154, 1321,
	155, 1321,
	156, 1321,
	157, 1321,
	159, 1321,
	165, 1321,
	166, 1321,
	167, 1321,
	168, 1321,
	172, 1321,
	174, 1321,
	178, 1321,
	179, 1321,
	180, 1321,
	181, 1321,
	182, 1321,
	183, 1321,
	185, 1321,
	186, 1321,
	188, 1321,
	189, 1321,
	191, 1321,
	192, 1321,
	193, 1321,
	194, 1321,
	195, 1321,
	196, 1321,
	197, 1321,
	198, 1321,
	199, 1321,
	201, 1321,
	202, 1321,
	204, 1321,
	205, 1321,
	206, 1321,
	207, 1321,
	211, 1321,
	212, 1321,
	213, 1321,
	214, 1321,
	217, 1321,
	218, 1321,
	219, 1321,
	221, 1321,
	223, 1321,
	224, 1321,
	226, 1321,
	228, 1321,
	229, 1321,
	230, 1321,
	232, 1321,
	236, 1321,
	237, 1321,
	238, 1321,
	239, 1321,
	240, 1321,
	241, 1321,
	243, 1321,
	244, 1321,
	245, 1321,
	247, 1321,
	248, 1321,
	250, 1321,
	251, 1321,
	254, 1321,
	255, 1321,
	256, 1321,
	259, 1321,
	260, 1321,
	261, 1321,
	262, 1321,
	264, 1321,
	265, 1321,
	266, 1321,
	267, 1321,
	268, 1321,
	269, 1321,
	270, 1321,
	271, 1321,
	272, 1321,
	273, 1321,
	274, 1321,
	276, 1321,
	278, 1321,
	279, 1321,
	280, 1321,
	281, 1321,
	282, 1321,
	283, 1321,
	284, 1321,
	285, 1321,
	286, 1321,
	288, 1321,
	290, 1321,
	292, 1321,
	294, 1321,
	295, 1321,
	296, 1321,
	297, 1321,
	298, 1321,
	301, 1321,
	304, 1321,
	305, 1321,
	306, 1321,
	307, 1321,
	310, 1321,
	311, 1321,
	312, 1321,
	314, 1321,
	316, 1321,
	317, 1321,
	318, 1321,
	319, 1321,
	320, 1321,
	321, 1321,
	322, 1321,
	323, 1321,
	324, 1321,
	325, 1321,
	326, 1321,
	327, 1321,
	329, 1321,
	330, 1321,
	331, 1321,
	332, 1321,
	333, 1321,
	334, 1321,
	335, 1321,
	336, 1321,
	337, 1321,
	339, 1321,
	341, 1321,
	342, 1321,
	343, 1321,
	344, 1321,
	345, 1321,
	346, 1321,
	347, 1321,
	348, 1321,
	349, 1321,
	350, 1321,
	351, 1321,
	353, 1321,
	359, 1321,
	361, 1321,
	362, 1321,
	363, 1321,
	364, 1321,
	365, 1321,
	366, 1321,
	367, 1321,
	368, 1321,
	370, 1321,
	371, 1321,
	372, 1321,
	374, 1321,
	375, 1321,
	376, 1321,
	377, 1321,
	378, 1321,
	379, 1321,
	381, 1321,
	382, 1321,
	383, 1321,
	384, 1321,
	385, 1321,
	386, 1321,
	387, 1321,
	388, 1321,
	389, 1321,
	390, 1321,
	391, 1321,
	393, 1321,
	394, 1321,
	395, 1321,
	396, 1321,
	397, 1321,
	398, 1321,
	400, 1321,
	401, 1321,
	402, 1321,
	403, 1321,
	404, 1321,
	406, 1321,
	407, 1321,
	408, 1321,
	409, 1321,
	410, 1321,
	411, 1321,
	412, 1321,
	414, 1321,
	416, 1321,
	417, 1321,
	418, 1321,
	419, 1321,
	420, 1321,
	421, 1321,
	422, 1321,
	423, 1321,
	424, 1321,
	425, 1321,
	426, 1321,
	427, 1321,
	428, 1321,
	430, 1321,
	431, 1321,
	433, 1321,
	435, 1321,
	436, 1321,
	437, 1321,
	438, 1321,
	439, 1321,
	440, 1321,
	441, 1321,
	442, 1321,
	444, 1321,
	445, 1321,
	446, 1321,
	447, 1321,
	448, 1321,
	450, 1321,
	452, 1321,
	453, 1321,
	454, 1321,
	455, 1321,
	456, 1321,
	458, 1321,
	459, 1321,
	460, 1321,
	462, 1321,
	463, 1321,
	466, 1321,
	467, 1321,
	468, 1321,
	469, 1321,
	470, 1321,
	471, 1321,
	472, 1321,
	474, 1321,
	477, 1321,
	478, 1321,
	479, 1321,
	480, 1321,
	481, 1321,
	482, 1321,
	484, 1321,
	485, 1321,
	486, 1321,
	491, 1321,
	492, 1321,
	493, 1321,
	494, 1321,
	495, 1321,
	496, 1321,
	-2, 0,
	-1, 139,
	1, 1195,
	228, 1195,
	339, 1195,
	347, 1195,
	499, 1195,
	523, 1195,
	-2, 0,
	-1, 141,
	1, 1195,
	523, 1195,
	-2, 0,
	-1, 142,
	1, 1195,
	523, 1195,
	-2, 0,
	-1, 143,
	1, 1195,
	449, 1195,
	523, 1195,
	-2, 0,
	-1, 172,
	142, 1289,
	160, 1289,
	173, 1289,
	220, 1289,
	253, 1289,
	299, 1289,
	309, 1289,
	464, 1289,
	-2, 1264,
	-1, 210,
	4, 1328,
	5, 1328,
	6, 1328,
	7, 1328,
	8, 1328,
	9, 1328,
	10, 1328,
	21, 1328,
	22, 1328,
	23, 1328,
	24, 1328,
	25, 1328,
	26, 1328,
	28, 1328,
	29, 1328,
	35, 1328,
	36, 1328,
	40, 1328,
	41, 1328,
	42, 1328,
	43, 1328,
	44, 1328,
	45, 1328,
	46, 1328,
	47, 1328,
	48, 1328,
	49, 1328,
	51, 1328,
	52, 1328,
	53, 1328,
	54, 1328,
	56, 1328,
	57, 1328,
	58, 1328,
	59, 1328,
	60, 1328,
	61, 1328,
	62, 1328,
	63, 1328,
	64, 1328,
	65, 1328,
	66, 1328,
	67, 1328,
	68, 1328,
	70, 1328,
	71, 1328,
	72, 1328,
	74, 1328,
	76, 1328,
	77, 1328,
	78, 1328,
	79, 1328,
	80, 1328,
	81, 1328,
	82, 1328,
	85, 1328,
	86, 1328,
	87, 1328,
	88, 1328,
	90, 1328,
	92, 1328,
	93, 1328,
	94, 1328,
	95, 1328,
	96, 1328,
	97, 1328,
	99, 1328,
	100, 1328,
	101, 1328,
	102, 1328,
	103, 1328,
	104, 1328,
	105, 1328,
	106, 1328,
	107, 1328,
	108, 1328,
	109, 1328,
	110, 1328,
	111, 1328,
	112, 1328,
	113, 1328,
	114, 1328,
	115, 1328,
	116, 1328,
	117, 1328,
	118, 1328,
	119, 1328,
	120, 1328,
	121, 1328,
	122, 1328,
	124, 1328,
	125, 1328,
	127, 1328,
	128, 1328,
	129, 1328,
	132, 1328,
	133, 1328,
	134, 1328,
	136, 1328,
	137, 1328,
	139, 1328,
	140, 1328,
	141, 1328,
	143, 1328,
	144, 1328,
	145, 1328,
	146, 1328,
	147, 1328,
	148, 1328,
	149, 1328,
	150, 1328,
	151, 1328,
	152, 1328,
	153, 1328,
	154, 1328,
	155, 1328,
	156, 1328,
	157, 1328,
	158, 1328,
	159, 1328,
	165, 1328,
	166, 1328,
	167, 1328,
	168, 1328,
	172, 1328,
	174, 1328,
	177, 1328,
	178, 1328,
	179, 1328,
	180, 1328,
	181, 1328,
	182, 1328,
	183, 1328,
	185, 1328,
	186, 1328,
	188, 1328,
	189, 1328,
	191, 1328,
	192, 1328,
	193, 1328,
	194, 1328,
	195, 1328,
	196, 1328,
	197, 1328,
	198, 1328,
	199, 1328,
	200, 1328,
	201, 1328,
	202, 1328,
	204, 1328,
	205, 1328,
	206, 1328,
	207, 1328,
	211, 1328,
	212, 1328,
	213, 1328,
	214, 1328,
	216, 1328,
	217, 1328,
	218, 1328,
	219, 1328,
	221, 1328,
	223, 1328,
	224, 1328,
	225, 1328,
	226, 1328,
	227, 1328,
	228, 1328,
	229, 1328,
	230, 1328,
	231, 1328,
	232, 1328,
	236, 1328,
	237, 1328,
	238, 1328,
	239, 1328,
	240, 1328,
	241, 1328,
	243, 1328,
	244, 1328,
	245, 1328,
	247, 1328,
	248, 1328,
	249, 1328,
	250, 1328,
	251, 1328,
	252, 1328,
	254, 1328,
	255, 1328,
	256, 1328,
	257, 1328,
	258, 1328,
	259, 1328,
	260, 1328,
	261, 1328,
	262, 1328,
	264, 1328,
	265, 1328,
	266, 1328,
	267, 1328,
	268, 1328,
	269, 1328,
	270, 1328,
	271, 1328,
	272, 1328,
	273, 1328,
	274, 1328,
	276, 1328,
	277, 1328,
	278, 1328,
	279, 1328,
	280, 1328,
	281, 1328,
	282, 1328,
	283, 1328,
	284, 1328,
	285, 1328,
	286, 1328,
	287, 1328,
	288, 1328,
	289, 1328,
	290, 1328,
	291, 1328,
	292, 1328,
	293, 1328,
	294, 1328,
	295, 1328,
	296, 1328,
	297, 1328,
	298, 1328,
	301, 1328,
	305, 1328,
	306, 1328,
	307, 1328,
	310, 1328,
	311, 1328,
	312, 1328,
	313, 1328,
	314, 1328,
	315, 1328,
	316, 1328,
	317, 1328,
	318, 1328,
	319, 1328,
	320, 1328,
	321, 1328,
	322, 1328,
	323, 1328,
	324, 1328,
	325, 1328,
	326, 1328,
	327, 1328,
	329, 1328,
	330, 1328,
	331, 1328,
	332, 1328,
	333, 1328,
	334, 1328,
	335, 1328,
	336, 1328,
	337, 1328,
	339, 1328,
	341, 1328,
	342, 1328,
	343, 1328,
	344, 1328,
	345, 1328,
	346, 1328,
	347, 1328,
	348, 1328,
	349, 1328,
	350, 1328,
	351, 1328,
	353, 1328,
	359, 1328,
	361, 1328,
	362, 1328,
	363, 1328,
	364, 1328,
	365, 1328,
	366, 1328,
	367, 1328,
	368, 1328,
	370, 1328,
	371, 1328,
	372, 1328,
	373, 1328,
	374, 1328,
	375, 1328,
	376, 1328,
	377, 1328,
	378, 1328,
	379, 1328,
	381, 1328,
	382, 1328,
	383, 1328,
	384, 1328,
	385, 1328,
	386, 1328,
	387, 1328,
	388, 1328,
	389, 1328,
	390, 1328,
	391, 1328,
	393, 1328,
	394, 1328,
	395, 1328,
	396, 1328,
	397, 1328,
	398, 1328,
	399, 1328,
	400, 1328,
	401, 1328,
	402, 1328,
	403, 1328,
	404, 1328,
	405, 1328,
	406, 1328,
	407, 1328,
	408, 1328,
	409, 1328,
	410, 1328,
	411, 1328,
	412, 1328,
	414, 1328,
	416, 1328,
	417, 1328,
	418, 1328,
	419, 1328,
	420, 1328,
	421, 1328,
	422, 1328,
	423, 1328,
	424, 1328,
	425, 1328,
	426, 1328,
	427, 1328,
	428, 1328,
	430, 1328,
	431, 1328,
	432, 1328,
	433, 1328,
	435, 1328,
	436, 1328,
	437, 1328,
	438, 1328,
	439, 1328,
	440, 1328,
	441, 1328,
	442, 1328,
	444, 1328,
	445, 1328,
	446, 1328,
	447, 1328,
	448, 1328,
	450, 1328,
	452, 1328,
	453, 1328,
	454, 1328,
	455, 1328,
	456, 1328,
	457, 1328,
	458, 1328,
	459, 1328,
	460, 1328,
	462, 1328,
	463, 1328,
	465, 1328,
	466, 1328,
	467, 1328,
	468, 1328,
	469, 1328,
	470, 1328,
	471, 1328,
	472, 1328,
	473, 1328,
	474, 1328,
	477, 1328,
	478, 1328,
	479, 1328,
	480, 1328,
	481, 1328,
	482, 1328,
	484, 1328,
	485, 1328,
	486, 1328,
	491, 1328,
	492, 1328,
	493, 1328,
	494, 1328,
	495, 1328,
	496, 1328,
	497, 1328,
	504, 1328,
	511, 1328,
	512, 1328,
	513, 1328,
	520, 1328,
	524, 1328,
	-2, 0,
	-1, 632,
	176, 2037,
	449, 2037,
	503, 2037,
	522, 2037,
	-2, 0,
	-1, 633,
	176, 2128,
	449, 2128,
	503, 2128,
	522, 2128,
	-2, 0,
	-1, 634,
	176, 2025,
	449, 2025,
	503, 2025,
	522, 2025,
	-2, 0,
	-1, 636,
	176, 2230,
	449, 2230,
	503, 2230,
	522, 2230,
	-2, 0,
	-1, 638,
	176, 2264,
	449, 2264,
	503, 2264,
	522, 2264,
	-2, 0,
	-1, 645,
	176, 2143,
	449, 2143,
	503, 2143,
	522, 2143,
	-2, 614,
	-1, 676,
	522, 1976,
	525, 1976,
	-2, 851,
	-1, 677,
	522, 1978,
	525, 1978,
	-2, 852,
	-1, 678,
	522, 1977,
	525, 1977,
	-2, 853,
	-1, 679,
	525, 1911,
	-2, 854,
	-1, 701,
	173, 213,
	-2, 0,
	-1, 723,
	484, 1099,
	-2, 913,
	-1, 763,
	4, 1120,
	21, 1120,
	22, 1120,
	23, 1120,
	24, 1120,
	25, 1120,
	26, 1120,
	28, 1120,
	29, 1120,
	35, 1120,
	40, 1120,
	41, 1120,
	42, 1120,
	43, 1120,
	44, 1120,
	45, 1120,
	46, 1120,
	47, 1120,
	48, 1120,
	49, 1120,
	51, 1120,
	52, 1120,
	53, 1120,
	54, 1120,
	56, 1120,
	57, 1120,
	58, 1120,
	59, 1120,
	60, 1120,
	61, 1120,
	65, 1120,
	66, 1120,
	67, 1120,
	68, 1120,
	70, 1120,
	71, 1120,
	72, 1120,
	76, 1120,
	77, 1120,
	78, 1120,
	79, 1120,
	80, 1120,
	81, 1120,
	82, 1120,
	85, 1120,
	86, 1120,
	87, 1120,
	88, 1120,
	90, 1120,
	92, 1120,
	93, 1120,
	94, 1120,
	95, 1120,
	96, 1120,
	97, 1120,
	99, 1120,
	100, 1120,
	102, 1120,
	103, 1120,
	111, 1120,
	112, 1120,
	113, 1120,
	114, 1120,
	116, 1120,
	117, 1120,
	118, 1120,
	120, 1120,
	121, 1120,
	122, 1120,
	124, 1120,
	125, 1120,
	127, 1120,
	128, 1120,
	129, 1120,
	132, 1120,
	133, 1120,
	134, 1120,
	136, 1120,
	137, 1120,
	139, 1120,
	140, 1120,
	141, 1120,
	143, 1120,
	144, 1120,
	145, 1120,
	146, 1120,
	147, 1120,
	148, 1120,
	149, 1120,
	150, 1120,
	151, 1120,
	152, 1120,
	153, 1120,
	154, 1120,
	155, 1120,
	156, 1120,
	157, 1120,
	159, 1120,
	165, 1120,
	166, 1120,
	167, 1120,
	168, 1120,
	172, 1120,
	174, 1120,
	178, 1120,
	179, 1120,
	180, 1120,
	181, 1120,
	182, 1120,
	183, 1120,
	185, 1120,
	186, 1120,
	188, 1120,
	189, 1120,
	191, 1120,
	192, 1120,
	193, 1120,
	194, 1120,
	195, 1120,
	196, 1120,
	197, 1120,
	198, 1120,
	199, 1120,
	201, 1120,
	202, 1120,
	204, 1120,
	205, 1120,
	206, 1120,
	207, 1120,
	211, 1120,
	212, 1120,
	213, 1120,
	214, 1120,
	217, 1120,
	218, 1120,
	219, 1120,
	221, 1120,
	223, 1120,
	224, 1120,
	226, 1120,
	228, 1120,
	229, 1120,
	230, 1120,
	232, 1120,
	236, 1120,
	237, 1120,
	238, 1120,
	239, 1120,
	240, 1120,
	241, 1120,
	243, 1120,
	244, 1120,
	245, 1120,
	247, 1120,
	248, 1120,
	250, 1120,
	251, 1120,
	254, 1120,
	255, 1120,
	256, 1120,
	259, 1120,
	260, 1120,
	261, 1120,
	262, 1120,
	264, 1120,
	265, 1120,
	266, 1120,
	267, 1120,
	268, 1120,
	269, 1120,
	270, 1120,
	271, 1120,
	272, 1120,
	273, 1120,
	274, 1120,
	276, 1120,
	278, 1120,
	279, 1120,
	280, 1120,
	281, 1120,
	282, 1120,
	283, 1120,
	284, 1120,
	285, 1120,
	286, 1120,
	288, 1120,
	290, 1120,
	292, 1120,
	294, 1120,
	295, 1120,
	296, 1120,
	297, 1120,
	298, 1120,
	301, 1120,
	305, 1120,
	306, 1120,
	307, 1120,
	310, 1120,
	311, 1120,
	312, 1120,
	314, 1120,
	316, 1120,
	317, 1120,
	318, 1120,
	319, 1120,
	320, 1120,
	321, 1120,
	322, 1120,
	323, 1120,
	324, 1120,
	325, 1120,
	326, 1120,
	327, 1120,
	329, 1120,
	330, 1120,
	331, 1120,
	332, 1120,
	333, 1120,
	334, 1120,
	335, 1120,
	336, 1120,
	337, 1120,
	339, 1120,
	341, 1120,
	342, 1120,
	343, 1120,
	344, 1120,
	345, 1120,
	346, 1120,
	347, 1120,
	348, 1120,
	349, 1120,
	350, 1120,
	351, 1120,
	353, 1120,
	359, 1120,
	361, 1120,
	362, 1120,
	363, 1120,
	364, 1120,
	365, 1120,
	366, 1120,
	367, 1120,
	368, 1120,
	370, 1120,
	371, 1120,
	372, 1120,
	374, 1120,
	375, 1120,
	376, 1120,
	377, 1120,
	378, 1120,
	379, 1120,
	381, 1120,
	382, 1120,
	383, 1120,
	384, 1120,
	385, 1120,
	386, 1120,
	387, 1120,
	388, 1120,
	389, 1120,
	390, 1120,
	391, 1120,
	393, 1120,
	394, 1120,
	395, 1120,
	396, 1120,
	397, 1120,
	398, 1120,
	400, 1120,
	401, 1120,
	402, 1120,
	403, 1120,
	404, 1120,
	406, 1120,
	407, 1120,
	408, 1120,
	409, 1120,
	410, 1120,
	411, 1120,
	412, 1120,
	414, 1120,
	416, 1120,
	417, 1120,
	418, 1120,
	419, 1120,
	420, 1120,
	421, 1120,
	422, 1120,
	423, 1120,
	424, 1120,
	425, 1120,
	426, 1120,
	427, 1120,
	428, 1120,
	430, 1120,
	431, 1120,
	433, 1120,
	435, 1120,
	436, 1120,
	437, 1120,
	438, 1120,
	439, 1120,
	440, 1120,
	441, 1120,
	442, 1120,
	444, 1120,
	445, 1120,
	446, 1120,
	447, 1120,
	448, 1120,
	450, 1120,
	452, 1120,
	453, 1120,
	454, 1120,
	455, 1120,
	456, 1120,
	458, 1120,
	459, 1120,
	460, 1120,
	462, 1120,
	463, 1120,
	466, 1120,
	467, 1120,
	468, 1120,
	469, 1120,
	470, 1120,
	471, 1120,
	472, 1120,
	474, 1120,
	477, 1120,
	478, 1120,
	479, 1120,
	480, 1120,
	481, 1120,
	482, 1120,
	484, 1120,
	485, 1120,
	486, 1120,
	491, 1120,
	492, 1120,
	493, 1120,
	494, 1120,
	495, 1120,
	496, 1120,
	-2, 0,
	-1, 842,
	343, 767,
	398, 767,
	-2, 0,
	-1, 843,
	343, 766,
	398, 766,
	-2, 710,
	-1, 847,
	1, 807,
	519, 807,
	521, 807,
	523, 807,
	-2, 0,
	-1, 848,
	1, 745,
	519, 745,
	521, 745,
	523, 745,
	-2, 0,
	-1, 849,
	1, 850,
	173, 850,
	519, 850,
	521, 850,
	523, 850,
	-2, 0,
	-1, 857,
	1, 770,
	519, 770,
	521, 770,
	523, 770,
	-2, 0,
	-1, 863,
	1, 807,
	519, 807,
	521, 807,
	523, 807,
	-2, 0,
	-1, 864,
	1, 809,
	519, 809,
	521, 809,
	523, 809,
	-2, 0,
	-1, 865,
	1, 812,
	519, 812,
	521, 812,
	523, 812,
	-2, 0,
	-1, 871,
	1, 829,
	519, 829,
	521, 829,
	523, 829,
	-2, 0,
	-1, 872,
	1, 831,
	519, 831,
	521, 831,
	523, 831,
	-2, 0,
	-1, 921,
	160, 1330,
	173, 1330,
	253, 1330,
	299, 1330,
	-2, 1268,
	-1, 936,
	160, 1329,
	173, 1329,
	253, 1329,
	299, 1329,
	-2, 1265,
	-1, 962,
	522, 1975,
	-2, 622,
	-1, 990,
	5, 1967,
	520, 1965,
	-2, 1956,
	-1, 998,
	5, 1988,
	520, 1985,
	-2, 1976,
	-1, 999,
	5, 1989,
	520, 1986,
	-2, 1977,
	-1, 1007,
	522, 1973,
	-2, 1955,
	-1, 1008,
	520, 2343,
	-2, 1974,
	-1, 1031,
	520, 2342,
	-2, 1990,
	-1, 1032,
	5, 1495,
	-2, 2313,
	-1, 1033,
	5, 1496,
	-2, 2314,
	-1, 1034,
	5, 1497,
	-2, 2328,
	-1, 1035,
	5, 1498,
	-2, 2292,
	-1, 1036,
	5, 1499,
	-2, 2326,
	-1, 1037,
	5, 1507,
	-2, 2305,
	-1, 1038,
	5, 1494,
	-2, 2301,
	-1, 1039,
	5, 1494,
	-2, 2300,
	-1, 1040,
	5, 1494,
	-2, 2319,
	-1, 1041,
	5, 1505,
	-2, 2294,
	-1, 1042,
	5, 1510,
	-2, 2293,
	-1, 1043,
	5, 1512,
	-2, 2338,
	-1, 1046,
	5, 1534,
	-2, 2331,
	-1, 1047,
	5, 1526,
	-2, 2332,
	-1, 1048,
	5, 1534,
	-2, 2333,
	-1, 1049,
	5, 1530,
	-2, 2334,
	-1, 1050,
	5, 1480,
	-2, 2306,
	-1, 1051,
	5, 1481,
	-2, 2307,
	-1, 1052,
	5, 1482,
	-2, 2295,
	-1, 1079,
	5, 1517,
	-2, 2339,
	-1, 1080,
	5, 1518,
	-2, 2329,
	-1, 1081,
	5, 1519,
	485, 1519,
	-2, 2296,
	-1, 1082,
	5, 1520,
	485, 1520,
	-2, 2297,
	-1, 1119,
	520, 1985,
	-2, 1976,
	-1, 1120,
	520, 1986,
	-2, 1977,
	-1, 1150,
	176, 2264,
	449, 2264,
	503, 2264,
	522, 2264,
	-2, 0,
	-1, 1153,
	1, 600,
	523, 600,
	-2, 1203,
	-1, 1278,
	361, 1951,
	400, 1951,
	513, 1951,
	-2, 1949,
	-1, 1290,
	524, 1951,
	-2, 1952,
	-1, 1297,
	1, 1096,
	519, 1096,
	521, 1096,
	523, 1096,
	-2, 1317,
	-1, 1351,
	349, 912,
	484, 912,
	-2, 336,
	-1, 1372,
	1, 1096,
	519, 1096,
	521, 1096,
	523, 1096,
	-2, 1317,
	-1, 1379,
	4, 1120,
	21, 1120,
	22, 1120,
	23, 1120,
	24, 1120,
	25, 1120,
	26, 1120,
	28, 1120,
	29, 1120,
	35, 1120,
	40, 1120,
	41, 1120,
	42, 1120,
	43, 1120,
	44, 1120,
	45, 1120,
	46, 1120,
	47, 1120,
	48, 1120,
	49, 1120,
	51, 1120,
	52, 1120,
	53, 1120,
	54, 1120,
	56, 1120,
	57, 1120,
	58, 1120,
	59, 1120,
	60, 1120,
	61, 1120,
	65, 1120,
	66, 1120,
	67, 1120,
	68, 1120,
	70, 1120,
	71, 1120,
	72, 1120,
	76, 1120,
	77, 1120,
	78, 1120,
	79, 1120,
	80, 1120,
	81, 1120,
	82, 1120,
	85, 1120,
	86, 1120,
	87, 1120,
	88, 1120,
	90, 1120,
	92, 1120,
	93, 1120,
	94, 1120,
	95, 1120,
	96, 1120,
	97, 1120,
	99, 1120,
	100, 1120,
	102, 1120,
	103, 1120,
	111, 1120,
	112, 1120,
	113, 1120,
	114, 1120,
	116, 1120,
	117, 1120,
	118, 1120,
	120, 1120,
	121, 1120,
	122, 1120,
	124, 1120,
	125, 1120,
	127, 1120,
	128, 1120,
	129, 1120,
	132, 1120,
	133, 1120,
	134, 1120,
	136, 1120,
	137, 1120,
	139, 1120,
	140, 1120,
	141, 1120,
	143, 1120,
	144, 1120,
	145, 1120,
	146, 1120,
	147, 1120,
	148, 1120,
	149, 1120,
	150, 1120,
	151, 1120,
	152, 1120,
	153, 1120,
	154, 1120,
	155, 1120,
	156, 1120,
	157, 1120,
	165, 1120,
	166, 1120,
	167, 1120,
	168, 1120,
	172, 1120,
	174, 1120,
	178, 1120,
	179, 1120,
	180, 1120,
	181, 1120,
	182, 1120,
	183, 1120,
	185, 1120,
	186, 1120,
	188, 1120,
	189, 1120,
	191, 1120,
	192, 1120,
	193, 1120,
	194, 1120,
	195, 1120,
	196, 1120,
	197, 1120,
	198, 1120,
	199, 1120,
	201, 1120,
	202, 1120,
	204, 1120,
	205, 1120,
	206, 1120,
	207, 1120,
	212, 1120,
	213, 1120,
	214, 1120,
	217, 1120,
	218, 1120,
	219, 1120,
	221, 1120,
	223, 1120,
	224, 1120,
	226, 1120,
	228, 1120,
	229, 1120,
	230, 1120,
	232, 1120,
	236, 1120,
	237, 1120,
	238, 1120,
	239, 1120,
	240, 1120,
	241, 1120,
	243, 1120,
	244, 1120,
	245, 1120,
	247, 1120,
	248, 1120,
	250, 1120,
	251, 1120,
	254, 1120,
	255, 1120,
	256, 1120,
	259, 1120,
	260, 1120,
	261, 1120,
	262, 1120,
	264, 1120,
	265, 1120,
	266, 1120,
	267, 1120,
	268, 1120,
	269, 1120,
	270, 1120,
	271, 1120,
	272, 1120,
	273, 1120,
	274, 1120,
	276, 1120,
	278, 1120,
	279, 1120,
	280, 1120,
	281, 1120,
	282, 1120,
	283, 1120,
	284, 1120,
	285, 1120,
	286, 1120,
	288, 1120,
	292, 1120,
	294, 1120,
	295, 1120,
	296, 1120,
	297, 1120,
	298, 1120,
	301, 1120,
	303, 1120,
	305, 1120,
	306, 1120,
	307, 1120,
	310, 1120,
	311, 1120,
	312, 1120,
	314, 1120,
	316, 1120,
	317, 1120,
	318, 1120,
	319, 1120,
	320, 1120,
	321, 1120,
	322, 1120,
	323, 1120,
	324, 1120,
	325, 1120,
	326, 1120,
	327, 1120,
	329, 1120,
	330, 1120,
	331, 1120,
	332, 1120,
	333, 1120,
	334, 1120,
	335, 1120,
	336, 1120,
	337, 1120,
	339, 1120,
	341, 1120,
	342, 1120,
	343, 1120,
	344, 1120,
	345, 1120,
	346, 1120,
	347, 1120,
	348, 1120,
	349, 1120,
	350, 1120,
	351, 1120,
	353, 1120,
	359, 1120,
	361, 1120,
	362, 1120,
	363, 1120,
	364, 1120,
	365, 1120,
	366, 1120,
	367, 1120,
	368, 1120,
	370, 1120,
	371, 1120,
	372, 1120,
	374, 1120,
	375, 1120,
	376, 1120,
	377, 1120,
	378, 1120,
	379, 1120,
	381, 1120,
	382, 1120,
	383, 1120,
	384, 1120,
	385, 1120,
	386, 1120,
	387, 1120,
	388, 1120,
	389, 1120,
	390, 1120,
	391, 1120,
	393, 1120,
	394, 1120,
	395, 1120,
	396, 1120,
	397, 1120,
	398, 1120,
	400, 1120,
	401, 1120,
	402, 1120,
	403, 1120,
	404, 1120,
	406, 1120,
	407, 1120,
	408, 1120,
	409, 1120,
	410, 1120,
	411, 1120,
	412, 1120,
	414, 1120,
	416, 1120,
	417, 1120,
	418, 1120,
	419, 1120,
	420, 1120,
	421, 1120,
	422, 1120,
	423, 1120,
	424, 1120,
	425, 1120,
	426, 1120,
	427, 1120,
	428, 1120,
	430, 1120,
	431, 1120,
	433, 1120,
	435, 1120,
	436, 1120,
	437, 1120,
	438, 1120,
	439, 1120,
	440, 1120,
	441, 1120,
	442, 1120,
	444, 1120,
	445, 1120,
	446, 1120,
	447, 1120,
	448, 1120,
	450, 1120,
	452, 1120,
	453, 1120,
	454, 1120,
	455, 1120,
	456, 1120,
	458, 1120,
	459, 1120,
	460, 1120,
	462, 1120,
	463, 1120,
	466, 1120,
	467, 1120,
	468, 1120,
	469, 1120,
	470, 1120,
	471, 1120,
	472, 1120,
	474, 1120,
	477, 1120,
	478, 1120,
	479, 1120,
	480, 1120,
	481, 1120,
	482, 1120,
	484, 1120,
	485, 1120,
	486, 1120,
	491, 1120,
	492, 1120,
	493, 1120,
	494, 1120,
	495, 1120,
	496, 1120,
	-2, 0,
	-1, 1452,
	1, 475,
	519, 475,
	521, 475,
	523, 475,
	-2, 1288,
	-1, 1455,
	4, 2337,
	11, 2337,
	12, 2337,
	14, 2337,
	15, 2337,
	16, 2337,
	17, 2337,
	18, 2337,
	19, 2337,
	21, 2337,
	22, 2337,
	23, 2337,
	24, 2337,
	25, 2337,
	26, 2337,
	28, 2337,
	29, 2337,
	32, 2337,
	33, 2337,
	35, 2337,
	37, 2337,
	40, 2337,
	41, 2337,
	42, 2337,
	43, 2337,
	44, 2337,
	45, 2337,
	46, 2337,
	47, 2337,
	48, 2337,
	49, 2337,
	51, 2337,
	52, 2337,
	53, 2337,
	54, 2337,
	56, 2337,
	57, 2337,
	58, 2337,
	59, 2337,
	60, 2337,
	61, 2337,
	65, 2337,
	66, 2337,
	67, 2337,
	68, 2337,
	70, 2337,
	71, 2337,
	72, 2337,
	73, 2337,
	76, 2337,
	77, 2337,
	78, 2337,
	79, 2337,
	80, 2337,
	81, 2337,
	82, 2337,
	83, 2337,
	85, 2337,
	86, 2337,
	87, 2337,
	88, 2337,
	90, 2337,
	91, 2337,
	92, 2337,
	93, 2337,
	94, 2337,
	95, 2337,
	96, 2337,
	97, 2337,
	99, 2337,
	100, 2337,
	101, 2337,
	102, 2337,
	103, 2337,
	111, 2337,
	112, 2337,
	113, 2337,
	114, 2337,
	116, 2337,
	117, 2337,
	118, 2337,
	120, 2337,
	121, 2337,
	122, 2337,
	124, 2337,
	125, 2337,
	127, 2337,
	128, 2337,
	129, 2337,
	132, 2337,
	133, 2337,
	134, 2337,
	136, 2337,
	137, 2337,
	139, 2337,
	140, 2337,
	141, 2337,
	143, 2337,
	144, 2337,
	145, 2337,
	146, 2337,
	147, 2337,
	148, 2337,
	149, 2337,
	150, 2337,
	151, 2337,
	152, 2337,
	153, 2337,
	154, 2337,
	155, 2337,
	156, 2337,
	157, 2337,
	161, 2337,
	162, 2337,
	163, 2337,
	164, 2337,
	165, 2337,
	166, 2337,
	167, 2337,
	168, 2337,
	171, 2337,
	172, 2337,
	174, 2337,
	177, 2337,
	178, 2337,
	179, 2337,
	180, 2337,
	181, 2337,
	182, 2337,
	183, 2337,
	185, 2337,
	186, 2337,
	188, 2337,
	189, 2337,
	191, 2337,
	192, 2337,
	193, 2337,
	194, 2337,
	195, 2337,
	196, 2337,
	197, 2337,
	198, 2337,
	199, 2337,
	200, 2337,
	201, 2337,
	202, 2337,
	203, 2337,
	204, 2337,
	205, 2337,
	206, 2337,
	207, 2337,
	209, 2337,
	210, 2337,
	212, 2337,
	213, 2337,
	214, 2337,
	216, 2337,
	217, 2337,
	218, 2337,
	219, 2337,
	221, 2337,
	223, 2337,
	224, 2337,
	225, 2337,
	226, 2337,
	227, 2337,
	228, 2337,
	229, 2337,
	230, 2337,
	231, 2337,
	232, 2337,
	234, 2337,
	235, 2337,
	236, 2337,
	237, 2337,
	238, 2337,
	239, 2337,
	240, 2337,
	241, 2337,
	243, 2337,
	244, 2337,
	245, 2337,
	247, 2337,
	248, 2337,
	249, 2337,
	250, 2337,
	251, 2337,
	252, 2337,
	254, 2337,
	255, 2337,
	256, 2337,
	259, 2337,
	260, 2337,
	261, 2337,
	262, 2337,
	263, 2337,
	264, 2337,
	265, 2337,
	266, 2337,
	267, 2337,
	268, 2337,
	269, 2337,
	270, 2337,
	271, 2337,
	272, 2337,
	273, 2337,
	274, 2337,
	276, 2337,
	277, 2337,
	278, 2337,
	279, 2337,
	280, 2337,
	281, 2337,
	282, 2337,
	283, 2337,
	284, 2337,
	285, 2337,
	286, 2337,
	288, 2337,
	291, 2337,
	292, 2337,
	294, 2337,
	295, 2337,
	296, 2337,
	297, 2337,
	298, 2337,
	301, 2337,
	305, 2337,
	306, 2337,
	307, 2337,
	308, 2337,
	310, 2337,
	311, 2337,
	312, 2337,
	314, 2337,
	316, 2337,
	317, 2337,
	318, 2337,
	319, 2337,
	320, 2337,
	321, 2337,
	322, 2337,
	323, 2337,
	324, 2337,
	325, 2337,
	326, 2337,
	327, 2337,
	329, 2337,
	330, 2337,
	331, 2337,
	332, 2337,
	333, 2337,
	334, 2337,
	335, 2337,
	336, 2337,
	337, 2337,
	339, 2337,
	341, 2337,
	342, 2337,
	343, 2337,
	344, 2337,
	345, 2337,
	346, 2337,
	347, 2337,
	348, 2337,
	349, 2337,
	350, 2337,
	351, 2337,
	353, 2337,
	359, 2337,
	360, 2337,
	361, 2337,
	362, 2337,
	363, 2337,
	364, 2337,
	365, 2337,
	366, 2337,
	367, 2337,
	368, 2337,
	370, 2337,
	371, 2337,
	372, 2337,
	373, 2337,
	374, 2337,
	375, 2337,
	376, 2337,
	377, 2337,
	378, 2337,
	379, 2337,
	380, 2337,
	381, 2337,
	382, 2337,
	383, 2337,
	384, 2337,
	385, 2337,
	386, 2337,
	387, 2337,
	388, 2337,
	389, 2337,
	390, 2337,
	391, 2337,
	393, 2337,
	394, 2337,
	395, 2337,
	396, 2337,
	397, 2337,
	398, 2337,
	400, 2337,
	401, 2337,
	402, 2337,
	403, 2337,
	404, 2337,
	405, 2337,
	406, 2337,
	407, 2337,
	408, 2337,
	409, 2337,
	410, 2337,
	411, 2337,
	412, 2337,
	414, 2337,
	416, 2337,
	417, 2337,
	418, 2337,
	419, 2337,
	420, 2337,
	421, 2337,
	422, 2337,
	423, 2337,
	424, 2337,
	425, 2337,
	426, 2337,
	427, 2337,
	428, 2337,
	430, 2337,
	431, 2337,
	433, 2337,
	435, 2337,
	436, 2337,
	437, 2337,
	438, 2337,
	439, 2337,
	440, 2337,
	441, 2337,
	442, 2337,
	444, 2337,
	445, 2337,
	446, 2337,
	447, 2337,
	448, 2337,
	450, 2337,
	452, 2337,
	453, 2337,
	454, 2337,
	455, 2337,
	456, 2337,
	458, 2337,
	459, 2337,
	460, 2337,
	462, 2337,
	463, 2337,
	466, 2337,
	467, 2337,
	468, 2337,
	469, 2337,
	470, 2337,
	471, 2337,
	472, 2337,
	474, 2337,
	477, 2337,
	478, 2337,
	479, 2337,
	480, 2337,
	481, 2337,
	482, 2337,
	484, 2337,
	485, 2337,
	486, 2337,
	491, 2337,
	492, 2337,
	493, 2337,
	494, 2337,
	495, 2337,
	496, 2337,
	497, 2337,
	498, 2337,
	501, 2337,
	502, 2337,
	503, 2337,
	504, 2337,
	505, 2337,
	506, 2337,
	508, 2337,
	509, 2337,
	510, 2337,
	511, 2337,
	512, 2337,
	513, 2337,
	514, 2337,
	515, 2337,
	516, 2337,
	518, 2337,
	521, 2337,
	522, 2337,
	524, 2337,
	525, 2337,
	-2, 0,
	-1, 1460,
	176, 2230,
	449, 2230,
	503, 2230,
	522, 2230,
	-2, 0,
	-1, 1509,
	343, 767,
	398, 767,
	-2, 0,
	-1, 1534,
	1, 762,
	519, 762,
	521, 762,
	523, 762,
	-2, 0,
	-1, 1535,
	1, 798,
	519, 798,
	521, 798,
	523, 798,
	-2, 0,
	-1, 1536,
	1, 769,
	519, 769,
	521, 769,
	523, 769,
	-2, 0,
	-1, 1538,
	1, 773,
	519, 773,
	521, 773,
	523, 773,
	-2, 0,
	-1, 1544,
	1, 780,
	519, 780,
	521, 780,
	523, 780,
	-2, 0,
	-1, 1572,
	1, 2284,
	519, 2284,
	521, 2284,
	522, 2284,
	523, 2284,
	-2, 827,
	-1, 1573,
	1, 2227,
	519, 2227,
	521, 2227,
	522, 2227,
	523, 2227,
	-2, 828,
	-1, 1588,
	1, 1198,
	523, 1198,
	-2, 1203,
	-1, 1591,
	160, 1329,
	173, 1329,
	253, 1329,
	299, 1329,
	-2, 1269,
	-1, 1685,
	142, 1290,
	160, 1290,
	173, 1290,
	220, 1290,
	253, 1290,
	299, 1290,
	309, 1290,
	464, 1290,
	-2, 1695,
	-1, 1745,
	521, 1845,
	-2, 0,
	-1, 1780,
	142, 1290,
	160, 1290,
	173, 1290,
	220, 1290,
	253, 1290,
	299, 1290,
	309, 1290,
	464, 1290,
	-2, 1410,
	-1, 1828,
	520, 1522,
	-2, 1510,
	-1, 1864,
	1, 602,
	523, 602,
	-2, 1203,
	-1, 1976,
	203, 214,
	-2, 1984,
	-1, 1977,
	203, 215,
	-2, 257,
	-1, 2104,
	1, 764,
	519, 764,
	521, 764,
	523, 764,
	-2, 0,
	-1, 2105,
	1, 800,
	519, 800,
	521, 800,
	523, 800,
	-2, 0,
	-1, 2135,
	1, 782,
	519, 782,
	521, 782,
	523, 782,
	-2, 0,
	-1, 2181,
	378, 1356,
	379, 1356,
	-2, 1555,
	-1, 2212,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1575,
	-1, 2213,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1576,
	-1, 2214,
	91, 0,
	234, 0,
	235, 0,
	505, 0,
	506, 0,
	-2, 1577,
	-1, 2215,
	91, 0,
	234, 0,
	235, 0,
	505, 0,
	506, 0,
	-2, 1578,
	-1, 2216,
	91, 0,
	234, 0,
	235, 0,
	505, 0,
	506, 0,
	-2, 1579,
	-1, 2217,
	91, 0,
	234, 0,
	235, 0,
	505, 0,
	506, 0,
	-2, 1580,
	-1, 2218,
	91, 0,
	234, 0,
	235, 0,
	505, 0,
	506, 0,
	-2, 1581,
	-1, 2219,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1582,
	-1, 2231,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1594,
	-1, 2232,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1595,
	-1, 2233,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1596,
	-1, 2236,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1601,
	-1, 2242,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1605,
	-1, 2244,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1613,
	-1, 2245,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1614,
	-1, 2246,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1615,
	-1, 2247,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1616,
	-1, 2359,
	5, 1988,
	176, 1856,
	520, 1985,
	-2, 1976,
	-1, 2360,
	176, 1857,
	-2, 2288,
	-1, 2361,
	176, 1858,
	-2, 2142,
	-1, 2362,
	176, 1859,
	-2, 2052,
	-1, 2363,
	176, 1860,
	-2, 2096,
	-1, 2364,
	176, 1861,
	-2, 2137,
	-1, 2365,
	176, 1862,
	-2, 2225,
	-1, 2366,
	176, 1863,
	-2, 1678,
	-1, 2435,
	1, 1411,
	2, 1411,
	101, 1411,
	142, 1411,
	160, 1411,
	173, 1411,
	177, 1411,
	187, 1411,
	190, 1411,
	216, 1411,
	220, 1411,
	231, 1411,
	249, 1411,
	253, 1411,
	277, 1411,
	299, 1411,
	303, 1411,
	309, 1411,
	369, 1411,
	373, 1411,
	464, 1411,
	475, 1411,
	488, 1411,
	489, 1411,
	490, 1411,
	499, 1411,
	519, 1411,
	521, 1411,
	523, 1411,
	525, 1411,
	-2, 1410,
	-1, 2448,
	520, 1957,
	-2, 1971,
	-1, 2450,
	1, 273,
	-2, 1317,
	-1, 2474,
	520, 1521,
	-2, 1511,
	-1, 2602,
	1, 1096,
	519, 1096,
	521, 1096,
	523, 1096,
	-2, 1317,
	-1, 2774,
	304, 1359,
	-2, 2327,
	-1, 2775,
	304, 1360,
	-2, 2211,
	-1, 2779,
	378, 1922,
	379, 1922,
	-2, 1676,
	-1, 2780,
	378, 1926,
	379, 1926,
	-2, 1677,
	-1, 2781,
	378, 1923,
	379, 1923,
	-2, 1676,
	-1, 2782,
	378, 1927,
	379, 1927,
	-2, 1677,
	-1, 2795,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1603,
	-1, 2796,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1607,
	-1, 2802,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1609,
	-1, 3002,
	228, 1203,
	339, 1203,
	347, 1203,
	499, 1203,
	-2, 599,
	-1, 3136,
	1, 1096,
	519, 1096,
	521, 1096,
	523, 1096,
	-2, 1317,
	-1, 3244,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1611,
	-1, 3251,
	225, 0,
	227, 0,
	291, 0,
	-2, 1630,
	-1, 3318,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1659,
	-1, 3319,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1660,
	-1, 3320,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1661,
	-1, 3324,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1665,
	-1, 3325,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1666,
	-1, 3326,
	14, 0,
	15, 0,
	16, 0,
	501, 0,
	502, 0,
	503, 0,
	-2, 1667,
	-1, 3372,
	520, 1958,
	-2, 1972,
	-1, 3505,
	522, 2443,
	-2, 1247,
	-1, 3563,
	225, 0,
	227, 0,
	291, 0,
	-2, 1631,
	-1, 3566,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1634,
	-1, 3567,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1636,
	-1, 3777,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1635,
	-1, 3778,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	200, 0,
	203, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 1637,
	-1, 3789,
	225, 0,
	-2, 1668,
	-1, 3939,
	225, 0,
	-2, 1669,
	-1, 4089,
	48, 0,
	200, 0,
	252, 0,
	405, 0,
	497, 0,
	504, 0,
	-2, 2291,
}

const sqlPrivate = 57344

const sqlLast = 106246

var sqlAct = [...]int{

	244, 3982, 4099, 3961, 3821, 2929, 4197, 3867, 2693, 4088,
	4063, 4044, 3546, 3824, 3121, 1973, 3702, 4029, 4100, 4047,
	4101, 3809, 3122, 4147, 3400, 2663, 3874, 3283, 1317, 2073,
	3943, 1123, 2930, 3734, 2191, 3729, 4087, 3766, 3716, 946,
	3684, 3497, 3883, 1438, 3020, 3439, 1300, 3153, 3632, 2259,
	2082, 3906, 1815, 1001, 2057, 937, 3146, 3148, 3474, 3739,
	1600, 3117, 3457, 3236, 3459, 3107, 2199, 1917, 37, 2509,
	678, 3401, 643, 3199, 2573, 1786, 1280, 1816, 2391, 1475,
	3794, 2192, 2788, 1182, 3374, 2702, 2652, 3201, 2634, 2715,
	2625, 2704, 2952, 1275, 678, 1112, 2972, 2912, 2944, 3602,
	3545, 2695, 2712, 1517, 777, 2933, 2701, 2018, 2664, 2647,
	1967, 1927, 2511, 2649, 1968, 2548, 2196, 1755, 2911, 1693,
	2272, 1283, 2428, 3944, 945, 163, 2427, 2711, 673, 1474,
	3039, 2587, 1946, 990, 2772, 2303, 1731, 2055, 1962, 2301,
	2935, 101, 3868, 2635, 238, 1166, 3343, 1900, 1103, 994,
	1903, 1588, 2430, 237, 1756, 1418, 2292, 2256, 1953, 1442,
	2080, 2979, 1044, 4, 1890, 2180, 2163, 1775, 958, 2409,
	2161, 1453, 3119, 2547, 1439, 2657, 999, 2007, 679, 2460,
	1370, 680, 2500, 2459, 1155, 1429, 609, 1443, 2388, 2705,
	2295, 1106, 2417, 1765, 2355, 1085, 172, 1302, 2399, 1602,
	595, 1678, 2345, 173, 617, 2273, 625, 1544, 1601, 2162,
	675, 163, 2164, 1120, 684, 637, 1726, 2006, 2030, 750,
	1394, 1451, 723, 687, 1312, 992, 1916, 2185, 975, 612,
	42, 41, 39, 30, 1083, 28, 26, 836, 684, 620,
	1607, 1108, 2823, 1587, 1323, 855, 3357, 687, 3358, 2046,
	771, 2819, 1615, 1616, 2046, 4260, 2931, 4254, 2046, 2408,
	2046, 3180, 2046, 4239, 4238, 1772, 4214, 2408, 2408, 4212,
	3648, 4208, 4129, 3648, 1646, 1981, 4130, 941, 3163, 4123,
	4121, 1618, 1102, 2408, 2408, 4118, 4115, 1483, 4110, 4119,
	4116, 1316, 1981, 3162, 4085, 4084, 4083, 4078, 1981, 1981,
	2066, 2066, 4077, 4072, 792, 4070, 2066, 3648, 4042, 3648,
	941, 1537, 3648, 1469, 1617, 3000, 942, 4023, 4016, 1615,
	1616, 2465, 2408, 4015, 1637, 4010, 4009, 2408, 2461, 3648,
	3648, 4003, 1634, 3975, 3941, 1981, 3923, 3694, 2465, 3920,
	3534, 1646, 2401, 1981, 3180, 3917, 1118, 3876, 1618, 3648,
	3841, 3877, 1337, 1100, 1981, 3840, 2787, 1086, 1086, 1981,
	922, 3832, 3831, 1981, 3800, 1981, 3648, 921, 1981, 3779,
	3758, 3747, 3679, 2465, 2066, 3180, 2408, 2408, 4024, 3667,
	3647, 1617, 3559, 2408, 3648, 3565, 3513, 1163, 1139, 2465,
	3196, 1637, 1615, 1616, 3507, 3936, 3472, 3367, 3196, 1634,
	3473, 3368, 1640, 1641, 1642, 1643, 3365, 3350, 1163, 931,
	3366, 2408, 1623, 2081, 1646, 3267, 936, 3924, 3263, 1981,
	3195, 1618, 2408, 3187, 3196, 2928, 2923, 3188, 2922, 2408,
	2408, 2875, 2408, 2873, 3347, 2876, 86, 2874, 2865, 2863,
	1087, 2834, 2866, 2408, 2718, 2408, 2832, 1134, 2066, 3248,
	1645, 1647, 2833, 2691, 1617, 1331, 2690, 2069, 1325, 2484,
	2069, 2569, 2464, 2408, 2457, 1089, 2465, 1090, 2408, 1640,
	1641, 1642, 1643, 2451, 2407, 1632, 1633, 1981, 2408, 1623,
	2066, 2068, 1325, 3347, 1325, 2069, 2400, 3728, 3694, 3668,
	210, 1981, 3534, 2408, 3188, 2564, 2499, 1921, 1870, 2045,
	2631, 2061, 1980, 2581, 1638, 2497, 1751, 1615, 1616, 1311,
	1648, 1649, 1650, 1658, 1659, 1660, 3430, 1645, 1647, 3239,
	3217, 1773, 3164, 1135, 1615, 1616, 2822, 1956, 1651, 1646,
	1519, 2444, 212, 2443, 2442, 2441, 1618, 2440, 1091, 1088,
	930, 3165, 1632, 1633, 1664, 929, 1336, 928, 927, 926,
	210, 925, 1623, 1618, 924, 2047, 920, 919, 918, 917,
	2047, 236, 2752, 3618, 2047, 916, 2047, 915, 2047, 1617,
	914, 1638, 913, 912, 911, 910, 909, 908, 211, 1637,
	2884, 2885, 907, 2902, 2903, 2904, 1617, 1634, 204, 906,
	1645, 1647, 212, 905, 904, 886, 205, 834, 833, 832,
	831, 1644, 830, 829, 828, 827, 210, 826, 825, 824,
	823, 822, 2044, 821, 820, 819, 818, 817, 174, 816,
	815, 1639, 814, 813, 812, 1487, 1324, 3162, 811, 810,
	809, 808, 807, 806, 805, 795, 794, 790, 211, 789,
	783, 782, 999, 741, 1638, 740, 999, 700, 212, 1330,
	699, 698, 2899, 690, 689, 688, 657, 1640, 1641, 1642,
	1643, 1185, 1316, 649, 1135, 1185, 648, 1623, 1644, 1305,
	647, 631, 232, 231, 230, 210, 229, 210, 174, 228,
	227, 1165, 226, 225, 1623, 1170, 224, 136, 1639, 1159,
	223, 2400, 222, 999, 211, 999, 1655, 999, 221, 1665,
	220, 210, 1305, 210, 204, 1645, 1647, 219, 218, 217,
	1291, 3577, 205, 2679, 216, 215, 3383, 212, 2045, 212,
	1286, 1661, 2064, 1662, 2061, 1305, 2156, 1473, 214, 213,
	1632, 1633, 3361, 3197, 174, 2975, 2926, 1135, 2845, 2828,
	2890, 2612, 210, 212, 2469, 212, 1635, 1631, 1653, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1315, 1638,
	2927, 1639, 1322, 211, 1329, 211, 1335, 2449, 1305, 999,
	1376, 1378, 2906, 204, 1305, 204, 2434, 2328, 1305, 1776,
	2643, 205, 2314, 205, 212, 2312, 999, 1663, 999, 211,
	1153, 211, 1305, 1898, 2905, 2660, 1539, 1325, 999, 204,
	999, 204, 1614, 174, 1652, 174, 1381, 205, 1178, 205,
	1272, 1277, 1799, 1635, 1631, 1704, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 1319, 684, 1294, 1172, 174,
	211, 174, 2900, 1734, 2298, 687, 1695, 1734, 1449, 1733,
	204, 1432, 1305, 1733, 2076, 210, 1122, 4106, 205, 4086,
	3989, 3933, 1148, 2884, 2885, 1467, 1644, 1472, 3793, 999,
	1314, 1737, 999, 1313, 3748, 1732, 3927, 1481, 3925, 1486,
	174, 3743, 3727, 3819, 3625, 3600, 1639, 3599, 2884, 2885,
	3593, 3592, 1366, 3591, 3584, 3583, 3581, 212, 3576, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 3573, 163,
	163, 1656, 1615, 1616, 3572, 3471, 1488, 3387, 3477, 3386,
	3385, 3371, 2299, 1615, 1616, 942, 3338, 1423, 1426, 3337,
	3336, 3259, 2075, 3255, 1646, 2970, 1538, 2919, 2910, 2883,
	2880, 1618, 2879, 211, 3428, 1646, 2884, 2885, 1456, 1458,
	2877, 1159, 1618, 204, 1159, 1435, 2533, 2884, 2885, 2901,
	2899, 205, 999, 999, 999, 999, 999, 999, 999, 3191,
	2872, 2871, 2870, 2867, 1617, 2864, 2844, 1553, 2884, 2885,
	2827, 1454, 2820, 174, 1637, 1617, 1696, 1592, 1694, 1702,
	2692, 2435, 1634, 999, 2285, 1637, 2645, 2300, 2297, 999,
	1614, 2924, 1099, 1654, 1695, 1988, 1450, 1629, 1630, 1636,
	1657, 1635, 1631, 2021, 1628, 1626, 1627, 1619, 1620, 1621,
	1622, 1624, 1625, 2890, 1613, 210, 210, 3587, 4253, 1986,
	4206, 3586, 1397, 4205, 1619, 1620, 1621, 1622, 1624, 1625,
	3478, 1468, 3243, 2467, 4139, 4137, 1586, 4128, 2890, 1124,
	2884, 2885, 3285, 1482, 3981, 3971, 3968, 3967, 3966, 3960,
	3953, 3921, 1640, 1641, 1642, 1643, 1684, 212, 212, 3905,
	3904, 2262, 1623, 1640, 1641, 1642, 1643, 3892, 210, 3889,
	2896, 2897, 2898, 1623, 944, 1493, 3837, 2895, 2893, 2894,
	2886, 2887, 2888, 2889, 2891, 2892, 2884, 2885, 3742, 1510,
	3815, 210, 3791, 999, 999, 999, 2890, 3774, 3773, 999,
	1645, 1647, 1540, 211, 211, 3755, 1120, 2890, 1120, 2302,
	212, 1645, 1647, 204, 204, 3754, 3719, 210, 1753, 3695,
	3617, 205, 205, 1185, 942, 1632, 1633, 3478, 2890, 3598,
	2900, 999, 3535, 212, 678, 3529, 2268, 1589, 1833, 678,
	3526, 3418, 922, 174, 174, 3417, 3404, 1597, 999, 921,
	1596, 1687, 1305, 1802, 1638, 1692, 211, 3403, 3353, 212,
	3341, 2644, 3250, 1812, 1591, 1638, 204, 999, 1858, 1682,
	1593, 3198, 3181, 1185, 205, 2967, 3139, 1762, 1790, 211,
	1610, 1611, 3079, 1807, 3052, 1736, 3023, 3022, 2900, 204,
	2994, 1827, 2992, 2849, 2848, 2843, 2659, 205, 1867, 2900,
	2890, 1159, 1803, 2811, 2624, 211, 1896, 1740, 1739, 1809,
	1738, 1759, 1760, 2296, 1735, 204, 1727, 1725, 1861, 174,
	2900, 2476, 2475, 205, 1278, 2446, 1862, 1290, 1293, 2439,
	2406, 1615, 1616, 2310, 163, 1615, 1616, 1086, 2478, 1118,
	1798, 1118, 1754, 1749, 1748, 174, 2890, 2901, 1783, 942,
	1747, 1644, 1746, 1745, 1744, 1743, 1728, 1729, 1742, 1741,
	1618, 1806, 1644, 1722, 1618, 1721, 2077, 1720, 3023, 1719,
	1718, 1639, 1717, 1716, 1715, 1714, 1784, 1805, 684, 1713,
	1887, 1712, 1639, 684, 1711, 1710, 1709, 687, 1293, 1293,
	1708, 1697, 687, 1617, 1683, 3945, 2327, 1617, 1681, 1781,
	1830, 2313, 1864, 1476, 2311, 2901, 1676, 1147, 1137, 1130,
	1305, 1305, 3722, 3621, 3569, 3382, 2901, 3364, 3356, 1752,
	1185, 1909, 2831, 2437, 3804, 3623, 997, 1293, 1860, 2884,
	2885, 3381, 1696, 2990, 1679, 1889, 3670, 2901, 2900, 1794,
	1793, 1792, 1791, 1789, 1810, 1788, 1787, 1778, 1942, 1856,
	1889, 1945, 4203, 1163, 1950, 2888, 2889, 2891, 2892, 3928,
	4196, 3926, 3969, 1821, 3149, 1813, 1169, 3879, 3878, 1774,
	1717, 3746, 1889, 3697, 1776, 2895, 2893, 2894, 2886, 2887,
	2888, 2889, 2891, 2892, 3055, 3696, 210, 3669, 3620, 1974,
	1978, 3818, 1892, 1882, 1717, 1623, 1635, 1631, 3538, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 3537, 3536,
	1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1926,
	1168, 3359, 2552, 3183, 950, 3182, 1167, 3884, 212, 1954,
	1509, 1921, 1584, 2895, 2893, 2894, 2886, 2887, 2888, 2889,
	2891, 2892, 2869, 2868, 1160, 2893, 2894, 2886, 2887, 2888,
	2889, 2891, 2892, 1734, 2793, 2901, 684, 1971, 1305, 1733,
	1305, 2535, 1305, 2011, 210, 687, 3481, 2894, 2886, 2887,
	2888, 2889, 2891, 2892, 211, 1163, 1163, 1164, 1305, 1305,
	3416, 902, 1876, 2016, 204, 3124, 2022, 3123, 1518, 1305,
	1314, 1706, 205, 1313, 1703, 2096, 2027, 4082, 1865, 2074,
	3875, 1305, 4126, 1305, 1305, 1305, 212, 4111, 1554, 4098,
	1098, 3108, 2716, 1949, 174, 2468, 1519, 1969, 3115, 2931,
	3436, 903, 3435, 3421, 678, 3644, 3214, 3795, 3287, 2837,
	2293, 2095, 2474, 1154, 1750, 4107, 1979, 1730, 2015, 1115,
	2886, 2887, 2888, 2889, 2891, 2892, 1422, 1375, 1308, 2035,
	1142, 4120, 211, 4117, 3158, 1161, 3395, 3640, 1497, 2578,
	2575, 3962, 204, 1162, 3730, 2024, 4041, 3950, 2088, 2079,
	205, 3026, 1999, 3411, 1998, 2699, 2656, 3101, 2049, 2100,
	4163, 4164, 3231, 3858, 4002, 3658, 2886, 2887, 2888, 2889,
	2891, 2892, 174, 1881, 1880, 4108, 3004, 1889, 1891, 942,
	1353, 942, 1343, 2485, 999, 2141, 999, 3641, 2084, 2029,
	900, 2033, 1551, 999, 3449, 882, 1833, 1833, 1185, 2139,
	999, 999, 999, 999, 999, 999, 999, 999, 999, 999,
	999, 999, 999, 999, 999, 999, 999, 999, 999, 999,
	999, 999, 999, 999, 999, 999, 999, 999, 999, 999,
	999, 999, 999, 999, 999, 1454, 999, 1454, 999, 999,
	999, 999, 2173, 2037, 2038, 2083, 1309, 2160, 684, 1827,
	1827, 1397, 1877, 2032, 3448, 2032, 1148, 687, 1354, 2070,
	999, 2071, 1552, 999, 999, 4248, 898, 896, 3851, 2171,
	1290, 999, 894, 2197, 2198, 999, 3843, 999, 999, 1169,
	891, 1550, 3692, 2991, 1169, 1185, 2374, 2087, 1884, 3445,
	3444, 999, 999, 999, 999, 1163, 999, 999, 999, 999,
	999, 999, 999, 999, 1160, 940, 3438, 3434, 1918, 1495,
	3054, 3432, 3392, 2169, 2118, 3391, 1625, 1621, 1622, 1624,
	1625, 3006, 999, 999, 999, 999, 999, 999, 999, 999,
	999, 3104, 2298, 1168, 2135, 999, 2986, 2842, 1168, 1160,
	1914, 2274, 2275, 4001, 2841, 2840, 2503, 1120, 736, 2839,
	2184, 2797, 2585, 2584, 1185, 2274, 2290, 3636, 1830, 1830,
	2501, 3637, 2074, 1120, 1919, 1920, 2580, 2571, 2563, 2562,
	2561, 2653, 2560, 2341, 2539, 2526, 2458, 2157, 2165, 999,
	1185, 2336, 2159, 939, 922, 2158, 2243, 922, 922, 2172,
	1886, 2188, 1915, 2340, 2189, 2190, 2289, 2556, 1764, 1590,
	2358, 2358, 2372, 942, 2274, 2201, 3639, 2392, 2394, 1387,
	2299, 1386, 942, 2398, 2892, 1161, 942, 2503, 2549, 2550,
	3642, 1821, 1821, 1162, 2267, 1885, 4191, 3671, 2422, 1490,
	1385, 2501, 1384, 2549, 2550, 1511, 2170, 1794, 2254, 1687,
	737, 1997, 3772, 2338, 2492, 888, 1615, 1616, 2339, 1305,
	1161, 2342, 1127, 2343, 2344, 2549, 2550, 2447, 1162, 2270,
	2537, 2293, 3215, 2154, 2092, 655, 2252, 2258, 1646, 1361,
	2450, 1563, 941, 1310, 1768, 1618, 1408, 2150, 1349, 1185,
	1118, 2153, 2287, 2513, 1086, 2300, 2297, 2414, 2171, 3654,
	1125, 2436, 2258, 2379, 1549, 1867, 1118, 3826, 2525, 2145,
	1159, 1595, 2168, 1783, 942, 4163, 1583, 2770, 1617, 1833,
	4192, 2014, 4075, 1771, 996, 2413, 4104, 2367, 2524, 163,
	2421, 1146, 2426, 2354, 2755, 2432, 2433, 2396, 1766, 1507,
	2034, 2383, 2169, 3638, 4200, 2470, 2104, 1185, 2404, 2405,
	1491, 2415, 2419, 2420, 3222, 2111, 1769, 2577, 2482, 2785,
	3407, 1305, 1297, 2266, 1781, 2108, 1519, 3398, 2462, 3003,
	2264, 2103, 1827, 654, 1736, 2532, 999, 999, 3645, 999,
	2505, 1290, 3221, 2749, 1767, 1163, 1519, 2576, 2574, 2152,
	1567, 3455, 2248, 2302, 607, 1340, 2542, 2483, 1128, 2516,
	2572, 2105, 3691, 3433, 3431, 803, 3420, 2249, 2568, 2167,
	2946, 2250, 2477, 4194, 3828, 2255, 1623, 2302, 1372, 602,
	1163, 1496, 2557, 3276, 2628, 3103, 2051, 3069, 2541, 2053,
	3454, 2480, 2758, 242, 796, 2058, 2481, 938, 2060, 877,
	2641, 1534, 2063, 2613, 2486, 2140, 2616, 3062, 2618, 1728,
	1729, 892, 2528, 2112, 1645, 1647, 3073, 1305, 1305, 2138,
	1305, 1446, 935, 1546, 2540, 2170, 3068, 1921, 4207, 3652,
	4105, 1462, 1305, 2604, 2784, 3771, 2579, 2558, 2518, 2521,
	1770, 1830, 1928, 1940, 2508, 4180, 3061, 1305, 1371, 2658,
	1893, 1894, 2658, 2536, 2667, 2682, 1535, 2551, 2553, 2554,
	2555, 1924, 739, 738, 1932, 2488, 2721, 2722, 1638, 734,
	2149, 733, 2603, 2637, 2559, 684, 2538, 2728, 2729, 2730,
	2490, 2296, 1939, 999, 687, 2607, 2681, 892, 892, 2609,
	3419, 2168, 1369, 893, 2738, 1501, 2739, 1114, 2713, 4217,
	1923, 892, 2240, 2757, 1821, 2302, 784, 2504, 878, 1314,
	4179, 2717, 2610, 2491, 1904, 4103, 1929, 2736, 2456, 1905,
	1985, 1984, 2515, 4198, 2777, 2778, 2754, 999, 4152, 2622,
	2698, 3551, 2489, 999, 999, 2251, 2632, 4193, 2735, 2669,
	3550, 3155, 2945, 163, 2253, 4230, 1351, 2741, 2155, 2743,
	2746, 2745, 3156, 656, 2673, 2760, 653, 2762, 2676, 2662,
	2677, 2502, 2651, 2733, 3963, 3977, 3653, 1912, 1407, 962,
	1348, 1371, 2151, 2740, 2684, 2742, 1564, 2744, 2046, 3005,
	2763, 1126, 2688, 4020, 3037, 1639, 3408, 770, 999, 999,
	2685, 2689, 2683, 3711, 999, 2719, 2753, 3827, 691, 2723,
	2700, 2724, 3273, 3462, 1561, 2687, 3082, 999, 999, 1723,
	4199, 1933, 3460, 999, 999, 2756, 2988, 1454, 3155, 999,
	2808, 797, 798, 1966, 1912, 1906, 4132, 2799, 999, 999,
	999, 1492, 1921, 3036, 999, 4133, 2110, 3915, 2594, 2592,
	1943, 2800, 1908, 4201, 999, 2596, 2588, 889, 2806, 2514,
	3547, 1904, 2257, 2503, 2238, 2765, 1905, 2241, 3784, 1562,
	1675, 999, 1912, 2830, 4173, 2776, 1965, 2519, 3043, 4052,
	1594, 879, 1934, 1935, 4151, 3980, 2767, 3274, 3677, 2766,
	2847, 2821, 603, 2425, 2418, 1930, 4218, 1565, 3907, 804,
	1145, 2184, 2771, 2786, 2284, 2379, 3768, 2431, 1506, 1508,
	3908, 1952, 941, 3045, 1910, 3289, 2237, 2825, 2826, 4228,
	3721, 2265, 2829, 3463, 1626, 1627, 1619, 1620, 1621, 1622,
	1624, 1625, 1931, 1293, 1951, 2107, 3541, 999, 999, 999,
	3909, 2102, 1768, 785, 786, 3378, 999, 999, 999, 4018,
	3983, 999, 1140, 3552, 3233, 1957, 604, 2768, 2798, 4102,
	1964, 999, 1120, 1185, 942, 1522, 1947, 999, 3044, 999,
	2938, 2939, 1906, 4162, 2803, 4160, 3998, 1120, 1566, 1293,
	3891, 1771, 3712, 4019, 3495, 2379, 2379, 799, 800, 1908,
	1919, 1920, 1115, 2804, 1115, 1185, 2416, 2809, 605, 3911,
	606, 3142, 2005, 1605, 880, 1761, 1138, 1120, 2836, 2302,
	1185, 1133, 594, 3237, 1769, 3910, 2590, 3476, 1948, 1911,
	3548, 2187, 2960, 1912, 2980, 1604, 1833, 1922, 3767, 2921,
	1185, 1878, 3912, 1936, 3834, 692, 693, 2595, 2593, 2597,
	2589, 2591, 3596, 3833, 999, 2940, 4150, 2985, 4131, 973,
	881, 1910, 4223, 3813, 3272, 3949, 3461, 3496, 999, 2950,
	1278, 4231, 3009, 2974, 3442, 3657, 1963, 3394, 2998, 2239,
	1833, 3143, 3656, 1941, 3135, 2969, 3462, 1290, 3018, 1827,
	2600, 3014, 2642, 3001, 2636, 3460, 999, 1305, 2626, 2028,
	2017, 2010, 1993, 3342, 2047, 1118, 1159, 3007, 4030, 787,
	788, 1937, 2973, 2989, 2177, 2379, 2379, 2379, 2949, 3234,
	1118, 2146, 1494, 2958, 877, 2932, 1944, 2948, 1603, 2961,
	2962, 2966, 1305, 1827, 3028, 2978, 2520, 3033, 3034, 3984,
	3010, 3011, 1185, 3040, 2916, 2917, 2918, 935, 1770, 630,
	1118, 1305, 2959, 1871, 3769, 2947, 1305, 3019, 3027, 695,
	694, 3031, 3057, 3015, 1764, 3498, 1911, 2805, 3049, 3050,
	1912, 1305, 3051, 2964, 1605, 2965, 2807, 1305, 3040, 1305,
	3327, 2995, 2996, 1185, 2997, 2982, 2983, 2984, 2543, 1907,
	678, 3873, 1675, 1293, 1293, 3735, 3463, 3040, 1830, 3553,
	2623, 1305, 3040, 3871, 3076, 3077, 1410, 3002, 3078, 3047,
	3074, 1305, 1909, 696, 697, 3085, 3080, 3060, 3088, 3597,
	3008, 3814, 3093, 3095, 3071, 1875, 2178, 1120, 3029, 3129,
	1604, 3151, 2674, 878, 3013, 3025, 4222, 3024, 2678, 3134,
	1768, 1909, 1830, 2601, 1290, 2410, 3046, 2791, 3048, 3913,
	1806, 3053, 3655, 2769, 3914, 962, 3106, 2093, 3109, 962,
	1960, 1821, 3072, 2455, 3120, 3458, 3064, 3355, 3059, 1305,
	1305, 3067, 1116, 3554, 1269, 3081, 1523, 1954, 1269, 1771,
	3160, 3090, 1290, 3102, 1290, 1954, 3097, 2954, 3098, 3070,
	3091, 1305, 3179, 3075, 1766, 1873, 3065, 2943, 1604, 2713,
	3066, 3150, 2942, 1958, 3172, 1821, 1536, 3985, 2713, 3089,
	2454, 1599, 1769, 2453, 3096, 2412, 2452, 2541, 3113, 3467,
	2411, 1874, 2981, 1603, 3105, 1185, 1907, 3216, 1185, 3461,
	2630, 3144, 3152, 1379, 684, 2072, 1393, 1391, 802, 3328,
	1767, 939, 1959, 687, 2544, 2545, 1380, 3329, 3822, 3956,
	3703, 1446, 2085, 3192, 2026, 3111, 4170, 3157, 999, 3869,
	1118, 3752, 2086, 3132, 999, 999, 3166, 2720, 999, 999,
	999, 942, 999, 2608, 2094, 2955, 2097, 2098, 2099, 3210,
	2606, 999, 1833, 3228, 3159, 163, 163, 3190, 3173, 1500,
	999, 1603, 3083, 999, 3194, 3209, 879, 4038, 4027, 1185,
	3603, 3169, 3225, 3344, 3202, 3209, 4033, 3811, 999, 2309,
	3957, 3227, 629, 4056, 3202, 3218, 1185, 3219, 1581, 3220,
	3211, 1579, 3751, 2953, 3177, 3178, 1833, 1833, 999, 999,
	1558, 999, 999, 999, 3252, 1827, 1770, 1605, 4172, 3235,
	3823, 1556, 1533, 2137, 3812, 4122, 3224, 1531, 2957, 999,
	3261, 3262, 3970, 999, 3790, 1833, 1833, 999, 999, 999,
	999, 999, 999, 999, 999, 999, 999, 999, 999, 999,
	999, 999, 999, 999, 999, 999, 3232, 999, 3595, 1827,
	1827, 3466, 2913, 4034, 999, 999, 1833, 3958, 3249, 3212,
	3204, 999, 1529, 1527, 1525, 2999, 1516, 1514, 2878, 1389,
	3204, 2810, 999, 2197, 3292, 3203, 2627, 2570, 1827, 1827,
	3257, 2914, 3230, 1120, 1120, 3203, 2534, 999, 2479, 880,
	1801, 1797, 1582, 3268, 1478, 3229, 1599, 2751, 2750, 2726,
	2166, 2148, 2197, 3307, 1545, 2956, 2115, 2379, 2379, 1827,
	1990, 3284, 3291, 1859, 1830, 1707, 1185, 1489, 1365, 3279,
	3275, 3277, 3278, 4097, 2308, 3678, 1392, 1390, 801, 3666,
	3301, 3360, 3302, 3335, 1183, 881, 4174, 4026, 1284, 3339,
	3304, 3306, 3298, 890, 3299, 3733, 3683, 999, 3300, 3331,
	3629, 3494, 3486, 3084, 3200, 3377, 4148, 3447, 1830, 1830,
	3147, 3414, 1580, 999, 999, 1578, 3412, 3393, 3388, 3389,
	2181, 3332, 3138, 3133, 1557, 3125, 2680, 1821, 2675, 2654,
	1114, 2640, 1114, 2633, 2136, 1555, 1532, 1830, 1830, 163,
	2620, 1530, 2605, 999, 999, 2379, 2379, 2379, 2379, 2379,
	2379, 2379, 2379, 2379, 2379, 2379, 2379, 2379, 2379, 2379,
	2379, 2379, 2379, 2379, 2067, 2379, 1118, 1118, 1830, 2065,
	999, 1821, 1821, 3351, 3352, 3348, 3349, 3362, 3340, 2062,
	2059, 2054, 3363, 1115, 3346, 2052, 1528, 1526, 1524, 1290,
	1515, 1513, 1305, 1388, 2048, 3205, 3206, 3207, 3208, 1115,
	1821, 1821, 2039, 1989, 1987, 3205, 3206, 3207, 3208, 1970,
	1955, 1833, 2014, 1938, 3427, 3429, 1925, 3426, 1913, 3443,
	3384, 3422, 3269, 3397, 933, 3898, 877, 3092, 1808, 4164,
	2789, 1821, 1964, 3376, 4066, 895, 897, 899, 3757, 1305,
	1608, 3750, 3749, 3690, 2714, 1897, 999, 1095, 3437, 935,
	1345, 2503, 3900, 2523, 1120, 999, 1269, 3508, 3506, 2375,
	1921, 2106, 1576, 1577, 1827, 2501, 3465, 3482, 2503, 2541,
	2025, 1431, 1096, 1305, 1305, 1305, 2353, 2349, 2132, 2131,
	3517, 4065, 2522, 1430, 2113, 3500, 3659, 3685, 3019, 1305,
	1512, 3935, 3503, 934, 3483, 3499, 3488, 3502, 3604, 3582,
	962, 2546, 3453, 4166, 2527, 3521, 1269, 1612, 1185, 3375,
	4158, 4127, 2575, 3469, 2619, 668, 2134, 3484, 2790, 1868,
	2583, 608, 2667, 2582, 2565, 3441, 2529, 4025, 3993, 2567,
	1185, 1290, 1290, 999, 999, 878, 3489, 3487, 1963, 999,
	999, 1833, 2566, 1609, 999, 999, 3440, 999, 3990, 2347,
	3955, 999, 1431, 3452, 1007, 3501, 2713, 3456, 3887, 3510,
	3464, 3509, 999, 3504, 2602, 1431, 2351, 2352, 2350, 1615,
	1616, 3540, 3516, 1830, 619, 1097, 3168, 233, 999, 3170,
	3171, 3522, 3523, 3866, 3174, 3524, 3175, 1118, 3176, 3531,
	3530, 3527, 3485, 3564, 1827, 724, 3528, 3475, 240, 240,
	240, 767, 597, 598, 3556, 613, 597, 613, 623, 628,
	1290, 3555, 3370, 646, 3137, 1615, 1616, 3544, 652, 3549,
	2531, 2661, 591, 2397, 240, 3568, 2346, 2348, 1863, 1814,
	4195, 1617, 4058, 2530, 3820, 2987, 1821, 4059, 1120, 4221,
	2884, 2885, 781, 3992, 1618, 1316, 1120, 3574, 240, 4058,
	1185, 4209, 1185, 1269, 4059, 2304, 4176, 1615, 1616, 1120,
	2686, 1446, 3539, 2495, 2496, 3380, 1904, 2493, 2494, 1499,
	2495, 1905, 3609, 2493, 1185, 1498, 3533, 1617, 2337, 1560,
	3888, 3852, 1559, 3686, 3682, 3681, 3570, 3492, 3379, 3280,
	2727, 3086, 3594, 1701, 999, 1700, 4181, 3946, 879, 3847,
	3805, 3802, 3714, 1830, 3622, 3532, 3512, 3470, 3468, 3410,
	3405, 3167, 3141, 3140, 2748, 2732, 2731, 2671, 3650, 2646,
	2621, 1185, 2472, 3651, 3612, 2471, 2269, 2133, 2130, 1185,
	2129, 2128, 3615, 2127, 2042, 2041, 3662, 3663, 3606, 3607,
	3611, 3608, 2040, 2023, 2000, 1996, 1800, 1995, 3619, 3661,
	1994, 3626, 3627, 1992, 2973, 3616, 163, 1305, 1305, 597,
	597, 1991, 1575, 1574, 1520, 1417, 1821, 240, 1416, 3628,
	1415, 1118, 3660, 1414, 1413, 3649, 1412, 1906, 3605, 1118,
	1411, 1409, 3689, 1404, 1403, 1185, 3610, 1402, 1401, 1400,
	1305, 3701, 1118, 1360, 1908, 3601, 1899, 1359, 1358, 1357,
	1356, 1355, 1350, 3680, 1344, 3687, 1342, 3688, 1341, 1176,
	1175, 3726, 3693, 1174, 1173, 1144, 1143, 999, 3676, 932,
	3698, 880, 1078, 1869, 901, 887, 3825, 1305, 1305, 1305,
	3674, 3643, 1569, 3704, 3713, 84, 3737, 3700, 1185, 1352,
	712, 3753, 78, 1961, 3724, 3409, 3736, 860, 3756, 4055,
	999, 999, 999, 3740, 3745, 3705, 1910, 1338, 3976, 3731,
	3720, 719, 4040, 3723, 3035, 2586, 3744, 881, 1185, 2114,
	3665, 1521, 2116, 999, 2968, 2438, 999, 999, 3738, 4017,
	3578, 3673, 2846, 3675, 3725, 1116, 999, 1116, 3942, 1833,
	3783, 2773, 2307, 1705, 999, 999, 2925, 80, 983, 3760,
	1029, 3710, 3709, 3630, 3396, 2703, 3707, 3762, 3706, 1185,
	1818, 1305, 3759, 1820, 949, 1188, 1879, 3780, 989, 3764,
	1895, 3770, 1888, 2473, 1185, 2357, 1006, 1003, 1822, 3775,
	1824, 1005, 999, 1004, 3413, 1823, 3415, 1293, 1724, 999,
	1002, 3792, 1827, 1982, 3699, 1817, 3491, 999, 3490, 1833,
	2629, 1269, 2665, 1396, 3786, 862, 1883, 999, 2263, 2291,
	999, 1911, 2835, 1698, 964, 1912, 3807, 985, 2288, 999,
	1136, 2375, 2375, 3797, 974, 963, 1185, 3798, 3799, 3801,
	2951, 3154, 3369, 3741, 2176, 2014, 728, 1305, 1305, 2881,
	3808, 1114, 2294, 1129, 2380, 2373, 3446, 2369, 2655, 3846,
	1585, 1677, 1827, 3830, 1901, 3806, 2666, 1114, 1171, 967,
	3829, 2261, 1689, 2815, 2186, 3161, 2971, 2466, 1115, 4062,
	3857, 3288, 2004, 3872, 1185, 3881, 3836, 1305, 1094, 1093,
	3848, 3844, 1092, 1115, 4046, 4043, 3525, 3118, 1269, 1872,
	2487, 1667, 3854, 1902, 3849, 999, 999, 3886, 3862, 3861,
	3126, 1830, 979, 3870, 2379, 1289, 3865, 2936, 3193, 1362,
	651, 3899, 3885, 1115, 999, 999, 991, 3864, 3903, 3918,
	3919, 3880, 3514, 3895, 1666, 2599, 3515, 3897, 3922, 3120,
	2598, 999, 1833, 3894, 3952, 3896, 3902, 1158, 1157, 1156,
	3860, 2375, 2375, 2375, 3916, 3901, 3740, 3017, 3893, 4229,
	2379, 3406, 209, 2783, 1606, 1598, 999, 1269, 206, 999,
	208, 1830, 207, 3715, 1821, 3373, 2977, 3930, 4125, 3424,
	3110, 1907, 21, 3948, 20, 19, 105, 40, 999, 3934,
	18, 3959, 119, 1269, 3940, 1827, 135, 134, 133, 132,
	131, 3859, 3931, 3932, 137, 130, 3947, 129, 124, 128,
	127, 126, 3965, 125, 1131, 123, 122, 121, 120, 118,
	117, 116, 115, 114, 113, 112, 111, 3964, 110, 999,
	999, 109, 3979, 108, 1821, 107, 106, 642, 639, 57,
	999, 56, 1141, 999, 104, 1305, 103, 17, 3972, 38,
	14, 646, 3974, 61, 3099, 1305, 1305, 62, 16, 13,
	33, 83, 95, 94, 3995, 34, 3986, 3997, 3987, 3988,
	92, 4008, 1305, 91, 240, 3991, 240, 240, 1281, 32,
	240, 240, 1296, 3885, 3130, 3978, 999, 999, 4000, 15,
	89, 3999, 1269, 88, 3136, 4004, 240, 31, 1318, 4005,
	29, 2200, 11, 9, 1830, 4013, 3994, 4014, 8, 2379,
	35, 1785, 4012, 2812, 2813, 12, 5, 4035, 168, 999,
	999, 4022, 999, 1347, 167, 170, 166, 169, 4037, 4045,
	4048, 4060, 82, 1115, 165, 1364, 164, 1296, 81, 4036,
	27, 240, 240, 4057, 1281, 10, 2014, 160, 3882, 3480,
	1269, 76, 3185, 3186, 240, 162, 4067, 161, 159, 4050,
	1293, 158, 1406, 4080, 4021, 4054, 157, 1821, 77, 999,
	999, 999, 4079, 74, 240, 156, 240, 240, 155, 1281,
	240, 1296, 4071, 4081, 4074, 75, 4076, 154, 2305, 25,
	4109, 646, 999, 240, 240, 6, 4114, 4049, 60, 7,
	4053, 4064, 3765, 4096, 3213, 4095, 4093, 4094, 98, 4068,
	99, 36, 4069, 72, 71, 70, 781, 24, 59, 23,
	197, 4112, 658, 196, 4136, 4134, 195, 194, 193, 192,
	187, 186, 191, 2907, 2908, 2909, 4138, 4145, 189, 188,
	999, 190, 4006, 4007, 4144, 4135, 4143, 185, 200, 4149,
	199, 4140, 201, 198, 203, 184, 182, 4141, 4142, 4011,
	178, 177, 181, 4146, 183, 4165, 180, 4155, 4156, 4157,
	4161, 4159, 179, 176, 202, 152, 153, 67, 4169, 4045,
	4167, 4168, 4048, 2448, 151, 240, 150, 4183, 999, 4171,
	999, 4178, 149, 4175, 148, 2667, 4188, 147, 146, 4182,
	4184, 4189, 240, 145, 66, 4186, 22, 4177, 2, 1,
	0, 4190, 4185, 0, 4187, 0, 0, 0, 0, 0,
	4204, 4202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 4210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4213, 0, 999, 999, 4216, 0,
	4064, 4211, 0, 0, 999, 4219, 999, 999, 0, 4225,
	0, 0, 4215, 0, 0, 0, 4233, 0, 0, 4232,
	0, 4236, 0, 2375, 2375, 0, 0, 0, 4235, 0,
	0, 0, 2498, 0, 0, 0, 4234, 4240, 0, 4237,
	4244, 0, 0, 4246, 0, 0, 4247, 4243, 4250, 0,
	4249, 0, 4245, 4252, 999, 4242, 1116, 671, 0, 4255,
	4251, 0, 4259, 0, 4261, 0, 0, 0, 4262, 1115,
	1115, 0, 1116, 3838, 3839, 4256, 0, 0, 4258, 0,
	0, 665, 0, 0, 4226, 4227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3853, 984, 102,
	3855, 3856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
	2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
	0, 2375, 4257, 0, 1290, 669, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 1114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 240, 0, 0, 0, 240, 0, 0, 0,
	0, 1114, 0, 772, 0, 102, 0, 0, 0, 1318,
	1281, 240, 660, 240, 0, 0, 0, 0, 240, 1318,
	613, 0, 0, 240, 1318, 3450, 0, 0, 0, 68,
	646, 775, 774, 0, 0, 664, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 670, 0, 1269, 0, 0, 0,
	0, 0, 1615, 1616, 0, 0, 0, 667, 0, 0,
	3644, 0, 923, 662, 0, 0, 0, 0, 0, 0,
	3973, 0, 0, 943, 1646, 0, 0, 0, 1269, 79,
	0, 1618, 0, 0, 0, 0, 3518, 3519, 3520, 0,
	1115, 0, 3640, 1269, 0, 0, 3633, 0, 0, 0,
	0, 0, 1446, 0, 659, 3245, 3246, 0, 0, 0,
	0, 1104, 3631, 1269, 1617, 85, 0, 0, 0, 0,
	0, 3635, 0, 0, 0, 0, 0, 962, 0, 100,
	666, 0, 0, 0, 86, 97, 0, 0, 0, 0,
	0, 962, 3641, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 240, 0, 0, 0,
	0, 0, 3634, 87, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 3308, 3309, 3310, 3311, 3312, 3313, 3314,
	3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324,
	3325, 3326, 1623, 3330, 0, 1269, 2884, 2885, 0, 2902,
	2903, 2904, 0, 0, 0, 0, 240, 0, 0, 0,
	240, 0, 0, 0, 240, 0, 0, 3561, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 1647, 0, 240, 0, 240, 1269, 240, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 4124, 0, 0,
	0, 0, 0, 0, 1115, 2043, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 240, 2899, 0,
	0, 0, 0, 0, 240, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 90, 0, 0, 0,
	0, 0, 3636, 0, 0, 0, 3637, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 781,
	0, 0, 0, 0, 0, 0, 2937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 93, 0, 96,
	0, 0, 0, 0, 240, 0, 1281, 240, 0, 0,
	0, 3639, 0, 0, 0, 0, 0, 0, 2963, 0,
	1446, 646, 0, 210, 0, 3642, 2890, 0, 240, 0,
	0, 776, 0, 2976, 0, 136, 0, 0, 240, 240,
	0, 240, 0, 240, 0, 240, 0, 240, 1269, 0,
	0, 1269, 0, 2993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 2142, 0, 0,
	2143, 1639, 2144, 0, 0, 0, 0, 0, 0, 0,
	2905, 0, 0, 0, 240, 0, 0, 0, 0, 138,
	3761, 0, 3763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 628, 0, 0, 0, 646,
	0, 211, 0, 1763, 0, 0, 0, 0, 2900, 0,
	0, 204, 1269, 0, 0, 0, 0, 1114, 1114, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 3638, 1269,
	0, 1116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3645, 3803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 1615, 1616, 0, 0, 2976, 0, 1658, 1659,
	1660, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 1615, 1616, 2901, 0, 0, 0, 0,
	0, 0, 102, 0, 102, 0, 102, 0, 0, 0,
	3863, 0, 0, 0, 1617, 1646, 0, 0, 0, 0,
	0, 0, 1618, 0, 1637, 0, 597, 0, 0, 1269,
	2375, 0, 1634, 0, 1615, 1616, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 948,
	597, 0, 0, 0, 0, 1617, 1646, 240, 0, 597,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 2375, 0, 102, 0,
	0, 0, 943, 102, 102, 0, 240, 0, 0, 2884,
	2885, 0, 2902, 2903, 2904, 102, 1617, 102, 1284, 0,
	0, 1183, 1640, 1641, 1642, 1643, 1637, 102, 1114, 102,
	3560, 0, 1623, 0, 1634, 0, 2896, 2897, 2898, 0,
	0, 0, 0, 2895, 2893, 2894, 2886, 2887, 2888, 2889,
	2891, 2892, 240, 0, 613, 240, 0, 0, 0, 0,
	0, 1655, 0, 0, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 1623, 0, 0, 1116, 0, 0, 0,
	0, 2899, 0, 0, 3242, 0, 102, 0, 0, 0,
	0, 0, 3265, 0, 0, 1632, 1633, 0, 0, 2512,
	0, 0, 0, 0, 1640, 1641, 1642, 1643, 240, 3281,
	0, 1645, 1647, 1653, 1623, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 1446, 1446,
	0, 0, 0, 0, 0, 2375, 0, 0, 0, 0,
	240, 0, 1645, 1647, 0, 1446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 2890,
	0, 0, 0, 0, 923, 240, 2611, 1632, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 1680, 0, 0, 0, 0, 0,
	1318, 0, 0, 240, 0, 0, 1638, 0, 0, 0,
	240, 1685, 1114, 1269, 0, 1691, 0, 0, 0, 2650,
	1114, 1644, 0, 2905, 0, 0, 0, 0, 0, 2512,
	0, 597, 3789, 1114, 2670, 0, 0, 0, 0, 3372,
	240, 1639, 0, 240, 0, 0, 0, 240, 0, 240,
	0, 0, 0, 0, 1281, 0, 240, 240, 0, 1296,
	1296, 2900, 0, 0, 0, 0, 1656, 0, 0, 2696,
	781, 0, 2512, 2512, 0, 0, 0, 0, 3816, 0,
	0, 0, 1639, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 240, 1281, 240, 0, 0,
	1318, 0, 1318, 0, 0, 1281, 0, 1281, 0, 1281,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 1777, 1269, 1780, 0, 102, 0,
	0, 0, 0, 0, 240, 240, 240, 240, 1281, 240,
	0, 240, 0, 0, 0, 0, 0, 1269, 1654, 0,
	0, 0, 1116, 1116, 0, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 2901, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 1269, 1619, 1620, 1621, 1622, 1624, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 3939, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1631,
	0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	0, 0, 0, 0, 0, 0, 1320, 0, 1326, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 2896,
	2897, 2898, 0, 0, 0, 0, 2895, 2893, 2894, 2886,
	2887, 2888, 2889, 2891, 2892, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1447, 0, 2884, 2885, 0, 2902, 2903, 2904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1465,
	0, 1470, 0, 1116, 0, 0, 0, 0, 0, 0,
	0, 1479, 1269, 1484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 0, 1615,
	1616, 240, 0, 0, 0, 0, 597, 0, 0, 0,
	0, 597, 0, 0, 597, 3614, 0, 597, 597, 0,
	0, 1646, 0, 597, 0, 0, 2899, 0, 1618, 0,
	0, 240, 0, 962, 0, 0, 0, 3624, 0, 0,
	0, 0, 1541, 1318, 0, 1547, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 943, 0, 943, 1634,
	0, 0, 0, 0, 0, 2512, 2512, 240, 0, 1296,
	0, 0, 2512, 0, 0, 3021, 0, 1269, 0, 0,
	0, 0, 0, 2512, 3021, 0, 2512, 3021, 3021, 0,
	0, 0, 0, 0, 2890, 0, 0, 0, 0, 0,
	0, 240, 240, 1296, 240, 0, 0, 0, 0, 2801,
	0, 0, 0, 0, 0, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 0, 0, 1296, 240, 0, 0, 1281, 1640,
	1641, 1642, 1643, 0, 0, 0, 0, 1116, 0, 1623,
	2512, 0, 3087, 2512, 1296, 1116, 1686, 2512, 2512, 1296,
	0, 0, 1699, 0, 0, 0, 0, 0, 1116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 1183, 0, 0, 240, 3114, 2900, 0, 3116, 2512,
	0, 0, 240, 0, 0, 0, 240, 0, 1296, 0,
	0, 0, 1632, 1633, 0, 0, 923, 0, 0, 923,
	923, 3781, 0, 0, 0, 0, 2650, 0, 0, 1281,
	0, 240, 962, 962, 2512, 0, 597, 0, 0, 0,
	0, 1638, 0, 2512, 68, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 240, 240, 0, 0, 0, 0,
	69, 0, 3781, 0, 0, 0, 1757, 1757, 1757, 0,
	0, 0, 0, 0, 2260, 0, 73, 2200, 0, 0,
	0, 240, 2650, 0, 0, 2650, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2901, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 0, 3223, 0, 2200,
	1281, 240, 0, 240, 0, 0, 0, 0, 1644, 0,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 100, 0, 240, 0, 0, 86,
	97, 0, 0, 0, 0, 1104, 0, 0, 1615, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 1618, 0, 2884,
	2885, 0, 2902, 2903, 2904, 0, 0, 0, 87, 0,
	0, 0, 3286, 102, 0, 0, 0, 0, 0, 0,
	3254, 0, 0, 0, 2896, 2897, 2898, 0, 0, 0,
	1617, 2895, 2893, 2894, 2886, 2887, 2888, 2889, 2891, 2892,
	1637, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2884, 2885, 0, 2902, 2903, 2904, 0, 0,
	0, 2899, 0, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2794, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 240, 0,
	0, 2463, 0, 0, 0, 102, 0, 0, 1640, 1641,
	1642, 1643, 0, 0, 0, 0, 0, 0, 1623, 597,
	597, 90, 0, 0, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 2890,
	0, 0, 0, 0, 1318, 1318, 1645, 1647, 0, 0,
	0, 171, 93, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 102, 0, 102, 0,
	0, 1632, 1633, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 0, 0,
	136, 0, 0, 2905, 0, 0, 0, 0, 0, 646,
	1638, 0, 2890, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 2900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 102, 1296, 240,
	0, 0, 0, 0, 0, 0, 2905, 0, 175, 0,
	240, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 204, 0, 240, 0,
	0, 0, 0, 240, 205, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 2900, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 2512, 240, 0,
	102, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 2696, 2696, 0, 0, 0,
	0, 781, 781, 2512, 0, 0, 2650, 2650, 0, 0,
	781, 2512, 0, 0, 0, 0, 0, 2175, 2901, 2179,
	0, 0, 0, 0, 0, 0, 2193, 0, 0, 0,
	240, 0, 0, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 0, 2242,
	0, 2244, 2245, 2246, 2247, 0, 0, 0, 0, 0,
	0, 2901, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 0, 2271, 0, 0, 0, 0, 0, 0,
	3579, 0, 0, 0, 1686, 0, 0, 0, 2286, 0,
	0, 1685, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620,
	1621, 1622, 1624, 1625, 2316, 2319, 2322, 2325, 0, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 0, 0, 0, 2896,
	2897, 2898, 0, 0, 0, 0, 2895, 2893, 2894, 2886,
	2887, 2888, 2889, 2891, 2892, 0, 0, 2371, 0, 2382,
	2384, 2389, 240, 0, 0, 0, 0, 0, 1318, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2896, 2897, 2898, 0, 2512, 2512, 2512, 2895,
	2893, 2894, 2886, 2887, 2888, 2889, 2891, 2892, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 2512, 0, 3021,
	0, 0, 1318, 1318, 240, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 240, 1296, 240,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2512, 0, 2512, 240, 0, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2512, 1008,
	0, 0, 0, 3717, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 241, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 1615, 1616, 0,
	1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 102, 102,
	0, 0, 102, 241, 0, 0, 0, 0, 1651, 1646,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 2614,
	2615, 0, 2617, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 2512, 0, 3021, 1634, 0, 3810,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 1616, 0, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 1104, 1296, 240, 943, 1618,
	0, 0, 0, 0, 0, 0, 0, 1640, 1641, 1642,
	1643, 0, 0, 0, 0, 0, 3810, 1623, 0, 0,
	0, 0, 0, 0, 2512, 0, 0, 0, 0, 102,
	102, 0, 1617, 0, 0, 3890, 2747, 0, 0, 0,
	0, 0, 1637, 0, 0, 0, 1655, 1318, 0, 1665,
	1634, 0, 0, 0, 0, 1645, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 1662, 0, 0, 240, 240, 0, 0,
	1632, 1633, 0, 0, 0, 0, 1668, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 0,
	3286, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 3810, 0, 68, 0,
	1640, 1641, 1642, 1643, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 69, 0, 0, 1663, 0, 0,
	0, 2795, 2796, 0, 0, 0, 68, 2802, 0, 0,
	73, 0, 0, 0, 1652, 0, 2884, 2885, 0, 2902,
	2903, 2904, 69, 240, 0, 0, 2816, 2817, 1645, 1647,
	0, 0, 2286, 0, 0, 0, 0, 3253, 73, 0,
	0, 2824, 3717, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 1632, 1633, 0, 240, 2838, 0, 0,
	0, 0, 0, 0, 0, 3021, 1644, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 79, 0, 0, 0,
	0, 0, 1638, 0, 85, 0, 1639, 0, 2899, 0,
	0, 1318, 0, 1318, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 86, 97, 0, 0, 0, 0, 0,
	0, 1656, 85, 0, 0, 0, 0, 0, 4031, 0,
	0, 0, 0, 102, 0, 1318, 100, 0, 240, 0,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 1104, 0, 0, 240, 2512, 0, 0, 2389,
	2389, 2389, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 1757, 68, 0, 0, 0, 0,
	0, 0, 2941, 0, 0, 0, 2890, 0, 0, 1644,
	87, 69, 0, 0, 0, 0, 0, 0, 0, 3286,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 1639,
	0, 0, 0, 1654, 0, 0, 0, 1629, 1630, 1636,
	1657, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621,
	1622, 1624, 1625, 0, 0, 0, 0, 2859, 0, 0,
	2905, 2860, 0, 0, 0, 79, 0, 0, 0, 0,
	2512, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 948, 3810, 0, 0, 0, 0, 0, 2900, 0,
	0, 85, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 3038,
	86, 97, 0, 1318, 0, 2512, 0, 0, 0, 241,
	1189, 241, 241, 90, 1189, 241, 241, 0, 1189, 0,
	0, 0, 0, 0, 0, 171, 93, 0, 96, 0,
	0, 241, 0, 0, 1635, 1631, 0, 1628, 1626, 1627,
	1619, 1620, 1621, 1622, 1624, 1625, 102, 0, 0, 87,
	0, 1189, 210, 171, 93, 0, 96, 0, 0, 0,
	776, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 1189, 0, 241, 241, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 776, 241,
	0, 0, 136, 0, 212, 2901, 0, 0, 0, 0,
	0, 0, 0, 2696, 0, 0, 0, 0, 0, 241,
	0, 241, 241, 0, 0, 241, 2696, 1189, 138, 0,
	0, 102, 212, 1189, 0, 0, 0, 1189, 241, 241,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	211, 1189, 0, 0, 0, 0, 138, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 204, 0,
	174, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1459, 0,
	0, 0, 171, 93, 0, 96, 2896, 2897, 2898, 0,
	241, 0, 0, 2895, 2893, 2894, 2886, 2887, 2888, 2889,
	2891, 2892, 0, 0, 0, 0, 0, 241, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 776, 0, 0,
	102, 136, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 2193, 0, 0, 1104, 0, 0, 3240, 3241, 0,
	0, 3244, 0, 0, 0, 3247, 0, 0, 0, 0,
	0, 212, 0, 0, 3251, 0, 0, 0, 0, 0,
	0, 0, 0, 3258, 0, 0, 2941, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 3270, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 3293, 3294, 0, 3295, 3296, 3297, 204, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 3303, 0, 0, 0, 3305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 3333, 3334, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	3354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1189, 1651, 1646, 0, 241, 241, 241, 0,
	3390, 1618, 0, 241, 0, 0, 0, 0, 241, 1664,
	0, 0, 0, 0, 0, 0, 3399, 3402, 0, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 1189, 0, 1637, 0, 0, 3423, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 1641, 1642, 1643, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 3511, 0,
	0, 1655, 0, 0, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 0, 0, 2260, 0, 0, 241, 1189,
	1189, 241, 0, 0, 0, 0, 1661, 0, 1662, 1189,
	0, 0, 0, 0, 0, 1632, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 241, 3557, 3558, 0, 241,
	0, 0, 3562, 3563, 0, 241, 0, 3566, 3567, 0,
	0, 0, 1663, 0, 3571, 0, 0, 0, 241, 0,
	241, 0, 241, 0, 0, 3575, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 102, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 1189, 0, 1189,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 1189, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1189, 241,
	0, 0, 241, 0, 0, 0, 1656, 0, 0, 0,
	1189, 0, 1189, 1189, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 241, 241, 0, 241, 3402, 241, 0,
	241, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 239, 239, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 1654, 0,
	0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0,
	0, 685, 2282, 0, 0, 0, 2283, 1189, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 0, 1648, 1649,
	1650, 1658, 1659, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 1646, 0, 0,
	3402, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3776, 3777, 3778, 0, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 1189, 1634, 2193, 0, 0, 3787,
	3788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3796, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3402, 1189, 0, 1640, 1641, 1642, 1643, 0,
	3835, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	3842, 0, 0, 948, 0, 0, 241, 0, 0, 1189,
	0, 0, 3850, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 1655, 0, 0, 1665, 0, 1110,
	0, 0, 0, 1645, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	0, 1662, 0, 0, 0, 0, 0, 0, 1632, 1633,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	241, 0, 0, 235, 235, 593, 1653, 0, 1189, 0,
	0, 758, 0, 0, 0, 0, 0, 1638, 3402, 3402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 0, 1189, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 0, 0, 0, 241, 3951,
	0, 0, 3954, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 1189, 0, 0, 0,
	0, 3402, 0, 745, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	241, 0, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 746, 948, 948, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 3402, 0, 241, 3402, 0, 0, 1656,
	0, 0, 0, 0, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 241, 0, 749, 241, 0,
	0, 0, 241, 0, 241, 0, 671, 0, 0, 0,
	2193, 241, 241, 0, 0, 0, 1189, 1189, 0, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 948, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 1654, 241, 0, 0, 1629, 1630, 1636, 1657, 1635,
	1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624,
	1625, 0, 0, 0, 760, 0, 0, 0, 0, 3585,
	0, 0, 4092, 4092, 4092, 0, 0, 0, 0, 241,
	241, 241, 241, 0, 241, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 4113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 239,
	239, 0, 0, 239, 239, 0, 0, 241, 751, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 770,
	0, 752, 0, 4092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 239, 239, 0, 0, 0, 0,
	753, 0, 0, 0, 768, 769, 766, 239, 0, 0,
	0, 3402, 761, 3402, 0, 754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 239,
	239, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 239, 0, 0,
	0, 0, 755, 762, 0, 0, 0, 0, 0, 0,
	0, 756, 0, 0, 0, 0, 0, 0, 0, 4092,
	4220, 0, 0, 0, 757, 0, 0, 4224, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 759, 0, 0, 0, 68, 0, 44,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 1189, 0, 0, 239, 46, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 79, 0, 0,
	0, 0, 0, 0, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1189,
	48, 64, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 85, 0, 0, 0, 142, 0, 1189,
	0, 0, 0, 0, 0, 47, 0, 100, 0, 1180,
	0, 0, 86, 97, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 241, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1398,
	241, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 1421,
	1189, 1421, 1421, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1463, 1464,
	1189, 0, 0, 0, 0, 241, 1189, 0, 1189, 0,
	0, 0, 1189, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 1779, 0, 1117, 0, 241, 0, 239,
	1189, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 239, 1779, 239, 0, 0, 0,
	0, 685, 0, 0, 90, 0, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 241,
	241, 0, 55, 0, 0, 0, 0, 0, 65, 0,
	1568, 0, 0, 54, 171, 93, 0, 96, 1189, 1189,
	0, 52, 0, 0, 0, 143, 241, 0, 0, 0,
	0, 1031, 53, 0, 0, 0, 0, 0, 0, 0,
	1189, 210, 0, 0, 0, 0, 0, 0, 0, 58,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 1189, 0, 241, 1189, 241, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 702,
	0, 0, 0, 0, 0, 1615, 1616, 0, 1648, 1649,
	1650, 1658, 1659, 1660, 0, 0, 0, 138, 0, 0,
	0, 241, 0, 703, 0, 0, 1651, 1646, 0, 0,
	0, 175, 0, 0, 1618, 0, 0, 0, 0, 211,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 239, 205, 1189, 685,
	704, 0, 721, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 0, 0, 0, 1189, 0, 1637, 0, 174,
	0, 0, 3, 0, 0, 1634, 705, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	729, 0, 0, 239, 0, 0, 707, 239, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 239, 0, 239, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 708, 0, 1121, 1640, 1641, 1642, 1643, 0,
	0, 1795, 0, 0, 0, 1623, 0, 0, 0, 0,
	239, 0, 709, 0, 0, 710, 1804, 239, 1288, 0,
	731, 0, 0, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 1665, 0, 0,
	0, 0, 0, 1645, 1647, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	0, 1662, 0, 0, 0, 0, 0, 0, 1632, 1633,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	239, 0, 0, 0, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 1638, 0, 0,
	0, 239, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 239, 0, 239, 0, 239, 0, 239, 0,
	239, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 713, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 0, 0, 241, 0, 0, 0, 0, 714,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 241, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 241, 0,
	0, 670, 241, 0, 1639, 0, 0, 0, 1189, 0,
	0, 0, 701, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 1189, 1189, 1189, 2009, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 0, 0, 1189, 0,
	716, 0, 0, 734, 0, 733, 0, 0, 1398, 717,
	2031, 0, 2031, 0, 0, 241, 0, 1189, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 735, 0, 732, 0, 0, 0, 0, 1189,
	672, 0, 1421, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1654, 0, 0, 0, 1629, 1630, 1636, 1657, 1635,
	1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624,
	1625, 0, 0, 0, 1117, 0, 0, 0, 0, 3256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	0, 0, 2090, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 2121, 0, 2123, 0,
	2125, 0, 2126, 0, 0, 0, 0, 0, 0, 1189,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 239, 1121, 0, 239, 0,
	1121, 0, 0, 1189, 0, 0, 0, 0, 0, 2147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	1189, 239, 241, 0, 241, 0, 1121, 0, 1189, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 1189, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 1121, 241, 0, 0, 1121,
	0, 0, 0, 0, 1189, 241, 0, 677, 685, 1189,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 1189, 1189, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 1189, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 239, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 0, 1189, 0, 239,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 2445, 0, 1189, 0,
	1189, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	239, 0, 0, 1189, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 239,
	239, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 1189, 1189, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 241, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1646, 0, 0, 0, 0, 0, 1121, 1618, 1121,
	0, 0, 0, 0, 0, 0, 1664, 0, 2009, 0,
	0, 0, 0, 0, 1121, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 1617, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 1637, 0, 1121, 0, 2672, 0, 0, 1421, 1634,
	0, 0, 1421, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1121, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 1189, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 0, 0, 0, 1117,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	2734, 0, 2737, 0, 1117, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1779, 0, 0, 0, 0, 2759,
	1288, 2761, 1288, 0, 2764, 0, 0, 0, 1655, 0,
	241, 1665, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 1661, 0, 1662, 0, 1421, 0, 0,
	0, 0, 1632, 1633, 0, 2792, 0, 0, 0, 0,
	239, 1121, 1121, 0, 0, 0, 0, 0, 0, 0,
	1653, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 239, 0, 239, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 1186, 0,
	0, 0, 1186, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 685, 1644, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 239,
	0, 0, 1306, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1121,
	0, 1121, 0, 1121, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 0, 0, 1121,
	1121, 0, 0, 239, 0, 1306, 0, 239, 239, 0,
	1121, 1306, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 1121, 0, 1121, 1121, 1121, 0, 0, 1306,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 239, 1654, 239, 0, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 2862, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3012, 0, 0, 0, 0, 1834, 1834, 1121,
	0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 3056, 3058, 0, 2020,
	1618, 0, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3127, 0, 0,
	0, 3131, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 1640, 1641, 1642, 1643, 1121, 0, 0, 0, 0,
	0, 1623, 0, 0, 1121, 1421, 0, 0, 0, 1288,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 1665, 0, 0, 3189, 0, 0, 1645,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 1632, 1633, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 0, 677, 0, 0, 0,
	0, 0, 1653, 0, 0, 0, 3226, 0, 1288, 1306,
	1121, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1121, 3238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 239, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1117, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 1306, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 1121,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 0, 0, 1654, 0, 0,
	0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626,
	1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 1779, 1306, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 1306, 0, 0, 0,
	0, 0, 0, 1187, 0, 0, 1306, 1187, 0, 0,
	0, 1307, 0, 0, 2020, 0, 0, 0, 1306, 0,
	1306, 1306, 1306, 0, 0, 2020, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 3479, 0, 0, 0, 0,
	239, 677, 239, 0, 1307, 0, 0, 0, 2020, 0,
	0, 0, 3493, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 1307, 0, 0, 0,
	1307, 0, 0, 0, 0, 3542, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 1121, 0, 856, 841, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 842, 0, 1121, 0, 0, 845,
	0, 0, 0, 0, 885, 0, 0, 0, 1121, 0,
	239, 1121, 853, 854, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1121, 0, 0, 0, 0, 878, 847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 1834, 876, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 3664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 0, 839, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 850, 851, 0, 0, 0, 239,
	239, 0, 1121, 0, 0, 0, 1306, 1121, 0, 0,
	0, 0, 858, 857, 0, 0, 2020, 0, 0, 0,
	852, 0, 1121, 0, 867, 3732, 0, 0, 1121, 0,
	1121, 0, 0, 0, 1121, 0, 1186, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 879,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 1187, 239, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 1306, 884,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 239,
	1121, 1121, 0, 0, 844, 0, 0, 0, 874, 875,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 883, 868, 0, 861, 859,
	0, 864, 3817, 0, 0, 0, 1121, 865, 0, 1121,
	837, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 0, 1306, 1306, 0, 1306, 239, 0,
	0, 0, 0, 866, 0, 0, 0, 0, 863, 1306,
	0, 0, 2020, 0, 0, 0, 239, 0, 881, 0,
	0, 0, 0, 1834, 1306, 0, 869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 0, 1307, 1307, 0, 0, 0, 1834, 1834, 873,
	0, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3929, 1288, 0, 0, 0, 1834, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1121, 1121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 3996, 1307, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 0, 1307, 1307, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 4073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 1186, 0, 0, 0, 0, 0, 0, 0,
	1187, 0, 0, 0, 0, 1121, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1121, 1121, 1121, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 1121, 0, 0, 1306, 0, 0, 1187, 0, 0,
	1651, 1646, 1834, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 1617, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 1637, 0, 1306, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 1187, 0, 1306, 0,
	0, 0, 0, 0, 1306, 0, 1306, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 1306, 1121,
	0, 0, 0, 0, 0, 0, 0, 1121, 1306, 0,
	0, 1121, 0, 1121, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 0, 0, 1121, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 1306, 1306, 1655, 0,
	0, 1665, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 1306, 0,
	1121, 1187, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 1121,
	1653, 0, 1186, 0, 0, 1186, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1121, 0, 0, 1187,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 1121,
	1121, 0, 0, 0, 0, 0, 1186, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	1307, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 1121, 1656, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 1121, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 1121, 0, 0, 1121, 0,
	0, 0, 0, 2861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1121, 0, 0, 0,
	1306, 1306, 1306, 0, 0, 0, 1121, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 0, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	1651, 1646, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 1187, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 1186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1187, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 1307, 1640,
	1641, 1642, 1643, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 1307, 0, 0, 0, 0, 1186, 1307,
	0, 1307, 0, 0, 0, 1187, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 1665, 0, 1307, 0, 0, 0, 1645, 1647, 0,
	0, 0, 0, 1307, 1306, 1306, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 1306, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1307, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 1306, 1306, 0, 0, 1663,
	0, 0, 0, 1307, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 1187, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 1306, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 1639, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1646, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 1187, 0, 1656, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 1306, 1306, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 1306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 2858, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 1665, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 1306, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 1306,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 1307, 0, 0, 0, 1615, 1616, 0, 1648, 1649,
	1650, 1658, 1659, 1660, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 1651, 1646, 0, 0,
	0, 0, 0, 0, 1618, 1307, 1307, 1307, 0, 0,
	0, 0, 1664, 1656, 0, 0, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 1640, 1641, 1642, 1643, 0,
	0, 0, 0, 2857, 0, 1623, 0, 0, 0, 0,
	0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 1646, 1655, 0, 0, 1665, 0, 0,
	1618, 0, 0, 1645, 1647, 0, 0, 0, 1664, 0,
	0, 0, 1187, 0, 1187, 0, 0, 0, 0, 1661,
	0, 1662, 0, 0, 0, 0, 0, 0, 1632, 1633,
	0, 0, 0, 1617, 0, 0, 1187, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1653, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 0, 1663, 0, 0, 0, 0,
	0, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	1307, 1640, 1641, 1642, 1643, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 0, 0,
	0, 0, 1307, 0, 1644, 0, 0, 0, 0, 0,
	1655, 0, 0, 1665, 0, 0, 0, 0, 0, 1645,
	1647, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 1662, 0, 1307,
	1307, 1307, 0, 0, 1632, 1633, 0, 0, 0, 1656,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 1187, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 0, 0, 0,
	0, 1654, 0, 0, 0, 1629, 1630, 1636, 1657, 1635,
	1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 2856,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1654, 0, 0,
	0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626,
	1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 2283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 1307, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1190, 255,
	256, 1191, 1192, 1193, 1307, 1194, 539, 1195, 1196, 1197,
	1198, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 1199, 544, 267, 268,
	269, 270, 271, 1200, 1201, 0, 272, 545, 546, 547,
	1202, 273, 274, 548, 1203, 1270, 1204, 275, 276, 277,
	278, 279, 280, 281, 0, 1205, 283, 284, 285, 282,
	1206, 286, 0, 287, 288, 289, 290, 291, 292, 1207,
	293, 294, 1062, 295, 296, 1208, 1209, 1211, 1210, 1212,
	1213, 1214, 297, 298, 299, 300, 0, 301, 549, 550,
	1215, 305, 302, 303, 1216, 306, 304, 1217, 307, 308,
	309, 1218, 1219, 310, 311, 312, 1220, 313, 314, 1221,
	315, 316, 317, 1222, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 1223,
	246, 1224, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 1225, 335, 1226, 1227, 1063, 336,
	337, 555, 556, 338, 339, 1228, 340, 557, 1229, 558,
	341, 1230, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 1065, 347, 348, 1231, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 1232, 1064, 355, 562,
	563, 1233, 564, 1234, 357, 358, 1066, 565, 1067, 359,
	360, 361, 1068, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 1235, 369, 371, 370, 1236, 372, 566,
	1069, 373, 374, 1070, 1237, 375, 376, 377, 1238, 1239,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 1071, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 1072, 397,
	1240, 248, 1073, 404, 1241, 567, 405, 568, 407, 408,
	1242, 0, 409, 0, 1243, 1244, 411, 412, 413, 1245,
	1246, 414, 415, 569, 1074, 416, 1075, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 1247,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 1248,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 1249, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	1250, 453, 454, 455, 1076, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 1251, 476, 477, 475, 478, 479, 480,
	1252, 481, 465, 466, 482, 483, 1077, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 1253, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	1254, 502, 503, 0, 501, 1255, 504, 505, 506, 507,
	508, 509, 325, 510, 1256, 511, 580, 581, 582, 583,
	1257, 518, 1258, 512, 513, 584, 514, 585, 1259, 515,
	516, 517, 0, 519, 520, 1260, 1261, 521, 522, 523,
	525, 526, 524, 527, 1262, 528, 1263, 0, 529, 530,
	531, 586, 587, 588, 1264, 533, 532, 589, 1265, 1266,
	1267, 1268, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 0, 2423,
	0, 0, 0, 0, 0, 0, 0, 2424, 249, 250,
	251, 252, 253, 254, 1190, 255, 256, 1191, 1192, 1193,
	0, 1194, 539, 1195, 1196, 1197, 1198, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 1199, 544, 267, 268, 269, 270, 271, 1200,
	1201, 0, 272, 545, 546, 547, 1202, 273, 274, 548,
	1203, 1270, 1204, 275, 276, 277, 278, 279, 280, 281,
	0, 1205, 283, 284, 285, 282, 1206, 286, 0, 287,
	288, 289, 290, 291, 292, 1207, 293, 294, 1062, 295,
	296, 1208, 1209, 1211, 1210, 1212, 1213, 1214, 297, 298,
	299, 300, 0, 301, 549, 550, 1215, 305, 302, 303,
	1216, 306, 304, 1217, 307, 308, 309, 1218, 1219, 310,
	311, 312, 1220, 313, 314, 1221, 315, 316, 317, 1222,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 1223, 246, 1224, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	1225, 335, 1226, 1227, 1063, 336, 337, 555, 556, 338,
	339, 1228, 340, 557, 1229, 558, 341, 1230, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 1065, 347, 348,
	1231, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 1232, 1064, 355, 562, 563, 1233, 564, 1234,
	357, 358, 1066, 565, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 1235,
	369, 371, 370, 1236, 372, 566, 1069, 373, 374, 1070,
	1237, 375, 376, 377, 1238, 1239, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 1240, 248, 1073, 404,
	1241, 567, 405, 568, 407, 408, 1242, 0, 409, 0,
	1243, 1244, 411, 412, 413, 1245, 1246, 414, 415, 569,
	1074, 416, 1075, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 1247, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 1248, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 1249,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 1250, 453, 454, 455,
	1076, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 1251,
	476, 477, 475, 478, 479, 480, 1252, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 1253, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 1254, 502, 503, 0,
	501, 1255, 504, 505, 506, 507, 508, 509, 325, 510,
	1256, 511, 580, 581, 582, 583, 1257, 518, 1258, 512,
	513, 584, 514, 585, 1259, 515, 516, 517, 0, 519,
	520, 1260, 1261, 521, 522, 523, 525, 526, 524, 527,
	1262, 528, 1263, 0, 529, 530, 531, 586, 587, 588,
	1264, 533, 532, 589, 1265, 1266, 1267, 1268, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	3264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3266, 249, 250, 251, 252, 253, 254, 1190, 255,
	256, 1191, 1192, 1193, 0, 1194, 539, 1195, 1196, 1197,
	1198, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 1199, 544, 267, 268,
	269, 270, 271, 1200, 1201, 0, 272, 545, 546, 547,
	1202, 273, 274, 548, 1203, 1270, 1204, 275, 276, 277,
	278, 279, 280, 281, 0, 1205, 283, 284, 285, 282,
	1206, 286, 0, 287, 288, 289, 290, 291, 292, 1207,
	293, 294, 1062, 295, 296, 1208, 1209, 1211, 1210, 1212,
	1213, 1214, 297, 298, 299, 300, 0, 301, 549, 550,
	1215, 305, 302, 303, 1216, 306, 304, 1217, 307, 308,
	309, 1218, 1219, 310, 311, 312, 1220, 313, 314, 1221,
	315, 316, 317, 1222, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 1223,
	246, 1224, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 1225, 335, 1226, 1227, 1063, 336,
	337, 555, 556, 338, 339, 1228, 340, 557, 1229, 558,
	341, 1230, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 1065, 347, 348, 1231, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 1232, 1064, 355, 562,
	563, 1233, 564, 1234, 357, 358, 1066, 565, 1067, 359,
	360, 361, 1068, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 1235, 369, 371, 370, 1236, 372, 566,
	1069, 373, 374, 1070, 1237, 375, 376, 377, 1238, 1239,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 1071, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 1072, 397,
	1240, 248, 1073, 404, 1241, 567, 405, 568, 407, 408,
	1242, 0, 409, 0, 1243, 1244, 411, 412, 413, 1245,
	1246, 414, 415, 569, 1074, 416, 1075, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 1247,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 1248,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 1249, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	1250, 453, 454, 455, 1076, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 1251, 476, 477, 475, 478, 479, 480,
	1252, 481, 465, 466, 482, 483, 1077, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 1253, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	1254, 502, 503, 0, 501, 1255, 504, 505, 506, 507,
	508, 509, 325, 510, 1256, 511, 580, 581, 582, 583,
	1257, 518, 1258, 512, 513, 584, 514, 585, 1259, 515,
	516, 517, 0, 519, 520, 1260, 1261, 521, 522, 523,
	525, 526, 524, 527, 1262, 528, 1263, 0, 529, 530,
	531, 586, 587, 588, 1264, 533, 532, 589, 1265, 1266,
	1267, 1268, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3613,
	249, 250, 251, 252, 253, 254, 1190, 255, 256, 1191,
	1192, 1193, 0, 1194, 539, 1195, 1196, 1197, 1198, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 1199, 544, 267, 268, 269, 270,
	271, 1200, 1201, 0, 272, 545, 546, 547, 1202, 273,
	274, 548, 1203, 1270, 1204, 275, 276, 277, 278, 279,
	280, 281, 0, 1205, 283, 284, 285, 282, 1206, 286,
	0, 287, 288, 289, 290, 291, 292, 1207, 293, 294,
	1062, 295, 296, 1208, 1209, 1211, 1210, 1212, 1213, 1214,
	297, 298, 299, 300, 0, 301, 549, 550, 1215, 305,
	302, 303, 1216, 306, 304, 1217, 307, 308, 309, 1218,
	1219, 310, 311, 312, 1220, 313, 314, 1221, 315, 316,
	317, 1222, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 1223, 246, 1224,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 1225, 335, 1226, 1227, 1063, 336, 337, 555,
	556, 338, 339, 1228, 340, 557, 1229, 558, 341, 1230,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 1065,
	347, 348, 1231, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 1232, 1064, 355, 562, 563, 1233,
	564, 1234, 357, 358, 1066, 565, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 1235, 369, 371, 370, 1236, 372, 566, 1069, 373,
	374, 1070, 1237, 375, 376, 377, 1238, 1239, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 1240, 248,
	1073, 404, 1241, 567, 405, 568, 407, 408, 1242, 0,
	409, 0, 1243, 1244, 411, 412, 413, 1245, 1246, 414,
	415, 569, 1074, 416, 1075, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 1247, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 1248, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 1249, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 1250, 453,
	454, 455, 1076, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 1251, 476, 477, 475, 478, 479, 480, 1252, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 1253, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 1254, 502,
	503, 0, 501, 1255, 504, 505, 506, 507, 508, 509,
	325, 510, 1256, 511, 580, 581, 582, 583, 1257, 518,
	1258, 512, 513, 584, 514, 585, 1259, 515, 516, 517,
	0, 519, 520, 1260, 1261, 521, 522, 523, 525, 526,
	524, 527, 1262, 528, 1263, 0, 529, 530, 531, 586,
	587, 588, 1264, 533, 532, 589, 1265, 1266, 1267, 1268,
	534, 535, 590, 536, 537, 538, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3782, 249, 250, 251, 252, 253, 254, 1190,
	255, 256, 1191, 1192, 1193, 0, 1194, 539, 1195, 1196,
	1197, 1198, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 1199, 544, 267,
	268, 269, 270, 271, 1200, 1201, 0, 272, 545, 546,
	547, 1202, 273, 274, 548, 1203, 1270, 1204, 275, 276,
	277, 278, 279, 280, 281, 0, 1205, 283, 284, 285,
	282, 1206, 286, 0, 287, 288, 289, 290, 291, 292,
	1207, 293, 294, 1062, 295, 296, 1208, 1209, 1211, 1210,
	1212, 1213, 1214, 297, 298, 299, 300, 0, 301, 549,
	550, 1215, 305, 302, 303, 1216, 306, 304, 1217, 307,
	308, 309, 1218, 1219, 310, 311, 312, 1220, 313, 314,
	1221, 315, 316, 317, 1222, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	1223, 246, 1224, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 1225, 335, 1226, 1227, 1063,
	336, 337, 555, 556, 338, 339, 1228, 340, 557, 1229,
	558, 341, 1230, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 1065, 347, 348, 1231, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 1232, 1064, 355,
	562, 563, 1233, 564, 1234, 357, 358, 1066, 565, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 1235, 369, 371, 370, 1236, 372,
	566, 1069, 373, 374, 1070, 1237, 375, 376, 377, 1238,
	1239, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 1240, 248, 1073, 404, 1241, 567, 405, 568, 407,
	408, 1242, 0, 409, 0, 1243, 1244, 411, 412, 413,
	1245, 1246, 414, 415, 569, 1074, 416, 1075, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	1247, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	1248, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 1249, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 1250, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 1251, 476, 477, 475, 478, 479,
	480, 1252, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 1253, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 1254, 502, 503, 0, 501, 1255, 504, 505, 506,
	507, 508, 509, 325, 510, 1256, 511, 580, 581, 582,
	583, 1257, 518, 1258, 512, 513, 584, 514, 585, 1259,
	515, 516, 517, 0, 519, 520, 1260, 1261, 521, 522,
	523, 525, 526, 524, 527, 1262, 528, 1263, 0, 529,
	530, 531, 586, 587, 588, 1264, 533, 532, 589, 1265,
	1266, 1267, 1268, 534, 535, 590, 536, 537, 538, 1184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3672, 249, 250, 251, 252,
	253, 254, 1190, 255, 256, 1191, 1192, 1193, 0, 1194,
	539, 1195, 1196, 1197, 1198, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	1199, 544, 267, 268, 269, 270, 271, 1200, 1201, 0,
	272, 545, 546, 547, 1202, 273, 274, 548, 1203, 1270,
	1204, 275, 276, 277, 278, 279, 280, 281, 0, 1205,
	283, 284, 285, 282, 1206, 286, 0, 287, 288, 289,
	290, 291, 292, 1207, 293, 294, 1062, 295, 296, 1208,
	1209, 1211, 1210, 1212, 1213, 1214, 297, 298, 299, 300,
	0, 301, 549, 550, 1215, 305, 302, 303, 1216, 306,
	304, 1217, 307, 308, 309, 1218, 1219, 310, 311, 312,
	1220, 313, 314, 1221, 315, 316, 317, 1222, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 1223, 246, 1224, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 1225, 335,
	1226, 1227, 1063, 336, 337, 555, 556, 338, 339, 1228,
	340, 557, 1229, 558, 341, 1230, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 1065, 347, 348, 1231, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	1232, 1064, 355, 562, 563, 1233, 564, 1234, 357, 358,
	1066, 565, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 1235, 369, 371,
	370, 1236, 372, 566, 1069, 373, 374, 1070, 1237, 375,
	376, 377, 1238, 1239, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 1240, 248, 1073, 404, 1241, 567,
	405, 568, 407, 408, 1242, 0, 409, 0, 1243, 1244,
	411, 412, 413, 1245, 1246, 414, 415, 569, 1074, 416,
	1075, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 1247, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 1248, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 1249, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 1250, 453, 454, 455, 1076, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 1251, 476, 477,
	475, 478, 479, 480, 1252, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	1253, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 1254, 502, 503, 0, 501, 1255,
	504, 505, 506, 507, 508, 509, 325, 510, 1256, 511,
	580, 581, 582, 583, 1257, 518, 1258, 512, 513, 584,
	514, 585, 1259, 515, 516, 517, 0, 519, 520, 1260,
	1261, 521, 522, 523, 525, 526, 524, 527, 1262, 528,
	1263, 0, 529, 530, 531, 586, 587, 588, 1264, 533,
	532, 589, 1265, 1266, 1267, 1268, 534, 535, 590, 536,
	537, 538, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3543, 249,
	250, 251, 252, 253, 254, 1190, 255, 256, 1191, 1192,
	1193, 0, 1194, 539, 1195, 1196, 1197, 1198, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 1199, 544, 267, 268, 269, 270, 271,
	1200, 1201, 0, 272, 545, 546, 547, 1202, 273, 274,
	548, 1203, 1270, 1204, 275, 276, 277, 278, 279, 280,
	281, 0, 1205, 283, 284, 285, 282, 1206, 286, 0,
	287, 288, 289, 290, 291, 292, 1207, 293, 294, 1062,
	295, 296, 1208, 1209, 1211, 1210, 1212, 1213, 1214, 297,
	298, 299, 300, 0, 301, 549, 550, 1215, 305, 302,
	303, 1216, 306, 304, 1217, 307, 308, 309, 1218, 1219,
	310, 311, 312, 1220, 313, 314, 1221, 315, 316, 317,
	1222, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 1223, 246, 1224, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 1225, 335, 1226, 1227, 1063, 336, 337, 555, 556,
	338, 339, 1228, 340, 557, 1229, 558, 341, 1230, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 1065, 347,
	348, 1231, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 1232, 1064, 355, 562, 563, 1233, 564,
	1234, 357, 358, 1066, 565, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	1235, 369, 371, 370, 1236, 372, 566, 1069, 373, 374,
	1070, 1237, 375, 376, 377, 1238, 1239, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 1240, 248, 1073,
	404, 1241, 567, 405, 568, 407, 408, 1242, 0, 409,
	0, 1243, 1244, 411, 412, 413, 1245, 1246, 414, 415,
	569, 1074, 416, 1075, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 1247, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 1248, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	1249, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 1250, 453, 454,
	455, 1076, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	1251, 476, 477, 475, 478, 479, 480, 1252, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 1253, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 1254, 502, 503,
	0, 501, 1255, 504, 505, 506, 507, 508, 509, 325,
	510, 1256, 511, 580, 581, 582, 583, 1257, 518, 1258,
	512, 513, 584, 514, 585, 1259, 515, 516, 517, 0,
	519, 520, 1260, 1261, 521, 522, 523, 525, 526, 524,
	527, 1262, 528, 1263, 0, 529, 530, 531, 586, 587,
	588, 1264, 533, 532, 589, 1265, 1266, 1267, 1268, 534,
	535, 590, 536, 537, 538, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3282, 249, 250, 251, 252, 253, 254, 1190, 255,
	256, 1191, 1192, 1193, 0, 1194, 539, 1195, 1196, 1197,
	1198, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 1199, 544, 267, 268,
	269, 270, 271, 1200, 1201, 0, 272, 545, 546, 547,
	1202, 273, 274, 548, 1203, 1270, 1204, 275, 276, 277,
	278, 279, 280, 281, 0, 1205, 283, 284, 285, 282,
	1206, 286, 0, 287, 288, 289, 290, 291, 292, 1207,
	293, 294, 1062, 295, 296, 1208, 1209, 1211, 1210, 1212,
	1213, 1214, 297, 298, 299, 300, 0, 301, 549, 550,
	1215, 305, 302, 303, 1216, 306, 304, 1217, 307, 308,
	309, 1218, 1219, 310, 311, 312, 1220, 313, 314, 1221,
	315, 316, 317, 1222, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 1223,
	246, 1224, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 1225, 335, 1226, 1227, 1063, 336,
	337, 555, 556, 338, 339, 1228, 340, 557, 1229, 558,
	341, 1230, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 1065, 347, 348, 1231, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 1232, 1064, 355, 562,
	563, 1233, 564, 1234, 357, 358, 1066, 565, 1067, 359,
	360, 361, 1068, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 1235, 369, 371, 370, 1236, 372, 566,
	1069, 373, 374, 1070, 1237, 375, 376, 377, 1238, 1239,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 1071, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 1072, 397,
	1240, 248, 1073, 404, 1241, 567, 405, 568, 407, 408,
	1242, 0, 409, 0, 1243, 1244, 411, 412, 413, 1245,
	1246, 414, 415, 569, 1074, 416, 1075, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 1247,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 1248,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 1249, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	1250, 453, 454, 455, 1076, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 1251, 476, 477, 475, 478, 479, 480,
	1252, 481, 465, 466, 482, 483, 1077, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 1253, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	1254, 502, 503, 0, 501, 1255, 504, 505, 506, 507,
	508, 509, 325, 510, 1256, 511, 580, 581, 582, 583,
	1257, 518, 1258, 512, 513, 584, 514, 585, 1259, 515,
	516, 517, 0, 519, 520, 1260, 1261, 521, 522, 523,
	525, 526, 524, 527, 1262, 528, 1263, 0, 529, 530,
	531, 586, 587, 588, 1264, 533, 532, 589, 1265, 1266,
	1267, 1268, 534, 535, 590, 536, 537, 538, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3112, 249, 250, 251, 252, 253,
	254, 1190, 255, 256, 1191, 1192, 1193, 0, 1194, 539,
	1195, 1196, 1197, 1198, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 1199,
	544, 267, 268, 269, 270, 271, 1200, 1201, 0, 272,
	545, 546, 547, 1202, 273, 274, 548, 1203, 1270, 1204,
	275, 276, 277, 278, 279, 280, 281, 0, 1205, 283,
	284, 285, 282, 1206, 286, 0, 287, 288, 289, 290,
	291, 292, 1207, 293, 294, 1062, 295, 296, 1208, 1209,
	1211, 1210, 1212, 1213, 1214, 297, 298, 299, 300, 0,
	301, 549, 550, 1215, 305, 302, 303, 1216, 306, 304,
	1217, 307, 308, 309, 1218, 1219, 310, 311, 312, 1220,
	313, 314, 1221, 315, 316, 317, 1222, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 1223, 246, 1224, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 1225, 335, 1226,
	1227, 1063, 336, 337, 555, 556, 338, 339, 1228, 340,
	557, 1229, 558, 341, 1230, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 1065, 347, 348, 1231, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 1232,
	1064, 355, 562, 563, 1233, 564, 1234, 357, 358, 1066,
	565, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 1235, 369, 371, 370,
	1236, 372, 566, 1069, 373, 374, 1070, 1237, 375, 376,
	377, 1238, 1239, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 1240, 248, 1073, 404, 1241, 567, 405,
	568, 407, 408, 1242, 0, 409, 0, 1243, 1244, 411,
	412, 413, 1245, 1246, 414, 415, 569, 1074, 416, 1075,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 1247, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 1248, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 1249, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 1250, 453, 454, 455, 1076, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 1251, 476, 477, 475,
	478, 479, 480, 1252, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 1253,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 1254, 502, 503, 0, 501, 1255, 504,
	505, 506, 507, 508, 509, 325, 510, 1256, 511, 580,
	581, 582, 583, 1257, 518, 1258, 512, 513, 584, 514,
	585, 1259, 515, 516, 517, 0, 519, 520, 1260, 1261,
	521, 522, 523, 525, 526, 524, 527, 1262, 528, 1263,
	0, 529, 530, 531, 586, 587, 588, 1264, 533, 532,
	589, 1265, 1266, 1267, 1268, 534, 535, 590, 536, 537,
	538, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2306, 249, 250,
	251, 252, 253, 254, 1190, 255, 256, 1191, 1192, 1193,
	0, 1194, 539, 1195, 1196, 1197, 1198, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 1199, 544, 267, 268, 269, 270, 271, 1200,
	1201, 0, 272, 545, 546, 547, 1202, 273, 274, 548,
	1203, 1270, 1204, 275, 276, 277, 278, 279, 280, 281,
	0, 1205, 283, 284, 285, 282, 1206, 286, 0, 287,
	288, 289, 290, 291, 292, 1207, 293, 294, 1062, 295,
	296, 1208, 1209, 1211, 1210, 1212, 1213, 1214, 297, 298,
	299, 300, 0, 301, 549, 550, 1215, 305, 302, 303,
	1216, 306, 304, 1217, 307, 308, 309, 1218, 1219, 310,
	311, 312, 1220, 313, 314, 1221, 315, 316, 317, 1222,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 1223, 246, 1224, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	1225, 335, 1226, 1227, 1063, 336, 337, 555, 556, 338,
	339, 1228, 340, 557, 1229, 558, 341, 1230, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 1065, 347, 348,
	1231, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 1232, 1064, 355, 562, 563, 1233, 564, 1234,
	357, 358, 1066, 565, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 1235,
	369, 371, 370, 1236, 372, 566, 1069, 373, 374, 1070,
	1237, 375, 376, 377, 1238, 1239, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 1240, 248, 1073, 404,
	1241, 567, 405, 568, 407, 408, 1242, 0, 409, 0,
	1243, 1244, 411, 412, 413, 1245, 1246, 414, 415, 569,
	1074, 416, 1075, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 1247, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 1248, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 1249,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 1250, 453, 454, 455,
	1076, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 1251,
	476, 477, 475, 478, 479, 480, 1252, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 1253, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 1254, 502, 503, 0,
	501, 1255, 504, 505, 506, 507, 508, 509, 325, 510,
	1256, 511, 580, 581, 582, 583, 1257, 518, 1258, 512,
	513, 584, 514, 585, 1259, 515, 516, 517, 0, 519,
	520, 1260, 1261, 521, 522, 523, 525, 526, 524, 527,
	1262, 528, 1263, 0, 529, 530, 531, 586, 587, 588,
	1264, 533, 532, 589, 1265, 1266, 1267, 1268, 534, 535,
	590, 536, 537, 538, 1282, 0, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 249, 250, 251, 252, 253, 254, 1190,
	255, 256, 1191, 1192, 1193, 0, 1194, 539, 1195, 1196,
	1197, 1198, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 1199, 544, 267,
	268, 269, 270, 271, 1200, 1201, 0, 272, 545, 546,
	547, 1202, 273, 274, 548, 1203, 1270, 1204, 275, 276,
	277, 278, 279, 280, 281, 0, 1205, 283, 284, 285,
	282, 1206, 286, 0, 287, 288, 289, 290, 291, 292,
	1207, 293, 294, 1062, 295, 296, 1208, 1209, 1211, 1210,
	1212, 1213, 1214, 297, 298, 299, 300, 0, 301, 549,
	550, 1215, 305, 302, 303, 1216, 306, 304, 1217, 307,
	308, 309, 1218, 1219, 310, 311, 312, 1220, 313, 314,
	1221, 315, 316, 317, 1222, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	1223, 246, 1224, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 1225, 335, 1226, 1227, 1063,
	336, 337, 555, 556, 338, 339, 1228, 340, 557, 1229,
	558, 341, 1230, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 1065, 347, 348, 1231, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 1232, 1064, 355,
	562, 563, 1233, 564, 1234, 357, 358, 1066, 565, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 1235, 369, 371, 370, 1236, 372,
	566, 1069, 373, 374, 1070, 1237, 375, 376, 377, 1238,
	1239, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 1240, 248, 1073, 404, 1241, 567, 405, 568, 407,
	408, 1242, 0, 409, 0, 1243, 1244, 411, 412, 413,
	1245, 1246, 414, 415, 569, 1074, 416, 1075, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	1247, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	1248, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 1249, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 1250, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 1251, 476, 477, 475, 478, 479,
	480, 1252, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 1253, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 1254, 502, 503, 0, 501, 1255, 504, 505, 506,
	507, 508, 509, 325, 510, 1256, 511, 580, 581, 582,
	583, 1257, 518, 1258, 512, 513, 584, 514, 585, 1259,
	515, 516, 517, 0, 519, 520, 1260, 1261, 521, 522,
	523, 525, 526, 524, 527, 1262, 528, 1263, 0, 529,
	530, 531, 586, 587, 588, 1264, 533, 532, 589, 1265,
	1266, 1267, 1268, 534, 535, 590, 536, 537, 538, 1181,
	0, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1190, 255, 256, 1191, 1192, 1193,
	0, 1194, 539, 1195, 1196, 1197, 1198, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 1199, 544, 267, 268, 269, 270, 271, 1200,
	1201, 0, 272, 545, 546, 547, 1202, 273, 274, 548,
	1203, 1270, 1204, 275, 276, 277, 278, 279, 280, 281,
	0, 1205, 283, 284, 285, 282, 1206, 286, 0, 287,
	288, 289, 290, 291, 292, 1207, 293, 294, 1062, 295,
	296, 1208, 1209, 1211, 1210, 1212, 1213, 1214, 297, 298,
	299, 300, 0, 301, 549, 550, 1215, 305, 302, 303,
	1216, 306, 304, 1217, 307, 308, 309, 1218, 1219, 310,
	311, 312, 1220, 313, 314, 1221, 315, 316, 317, 1222,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 1223, 246, 1224, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	1225, 335, 1226, 1227, 1063, 336, 337, 555, 556, 338,
	339, 1228, 340, 557, 1229, 558, 341, 1230, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 1065, 347, 348,
	1231, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 1232, 1064, 355, 562, 563, 1233, 564, 1234,
	357, 358, 1066, 565, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 1235,
	369, 371, 370, 1236, 372, 566, 1069, 373, 374, 1070,
	1237, 375, 376, 377, 1238, 1239, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 1240, 248, 1073, 404,
	1241, 567, 405, 568, 407, 408, 1242, 0, 409, 0,
	1243, 1244, 411, 412, 413, 1245, 1246, 414, 415, 569,
	1074, 416, 1075, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 1247, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 1248, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 1249,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 1250, 453, 454, 455,
	1076, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 1251,
	476, 477, 475, 478, 479, 480, 1252, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 1253, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 1254, 502, 503, 0,
	501, 1255, 504, 505, 506, 507, 508, 509, 325, 510,
	1256, 511, 580, 581, 582, 583, 1257, 518, 1258, 512,
	513, 584, 514, 585, 1259, 515, 516, 517, 0, 519,
	520, 1260, 1261, 521, 522, 523, 525, 526, 524, 527,
	1262, 528, 1263, 0, 529, 530, 531, 586, 587, 588,
	1264, 533, 532, 589, 1265, 1266, 1267, 1268, 534, 535,
	590, 536, 537, 538, 1184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 1190, 255, 256,
	1191, 1192, 1193, 0, 1194, 539, 1195, 1196, 1197, 1198,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 1199, 544, 267, 268, 269,
	270, 271, 1200, 1201, 0, 272, 545, 546, 547, 1202,
	273, 274, 548, 1203, 1270, 1204, 275, 276, 277, 278,
	279, 280, 281, 0, 1205, 283, 284, 285, 282, 1206,
	286, 0, 287, 288, 289, 290, 291, 292, 1207, 293,
	294, 1062, 295, 296, 1208, 1209, 1211, 1210, 1212, 1213,
	1214, 297, 298, 299, 300, 0, 301, 549, 550, 1215,
	305, 302, 303, 1216, 306, 304, 1217, 307, 308, 309,
	1218, 1219, 310, 311, 312, 1220, 313, 314, 1221, 315,
	316, 317, 1222, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 1223, 246,
	1224, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 1225, 335, 1226, 1227, 1063, 336, 337,
	555, 556, 338, 339, 1228, 340, 557, 1229, 558, 341,
	1230, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	1065, 347, 348, 1231, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 1232, 1064, 355, 562, 563,
	1233, 564, 1234, 357, 358, 1066, 565, 1067, 359, 360,
	361, 1068, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 1235, 369, 371, 370, 1236, 372, 566, 1069,
	373, 374, 1070, 1237, 375, 376, 377, 1238, 1239, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 1071, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 1072, 397, 1240,
	248, 1073, 404, 1241, 567, 405, 568, 407, 408, 1242,
	0, 409, 0, 1243, 1244, 411, 412, 413, 1245, 1246,
	414, 415, 569, 1074, 416, 1075, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 1247, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 1248, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 1249, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 1250,
	453, 454, 455, 1076, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 1251, 476, 477, 475, 478, 479, 480, 1252,
	481, 465, 466, 482, 483, 1077, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 1253, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 1254,
	502, 503, 0, 501, 1255, 504, 505, 506, 507, 508,
	509, 325, 510, 1256, 511, 580, 581, 582, 583, 1257,
	518, 1258, 512, 513, 584, 514, 585, 1259, 515, 516,
	517, 0, 519, 520, 1260, 1261, 521, 522, 523, 525,
	526, 524, 527, 1262, 528, 1263, 0, 529, 530, 531,
	586, 587, 588, 1264, 533, 532, 589, 1265, 1266, 1267,
	1268, 534, 535, 590, 536, 537, 538, 2281, 0, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 2278, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 2279, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 2277, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 2280, 0,
	0, 0, 0, 0, 0, 982, 2276, 0, 944, 980,
	998, 970, 971, 972, 968, 969, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 210, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	212, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 519, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 1455, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 204, 534, 535, 590,
	536, 537, 538, 957, 205, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 998,
	970, 971, 972, 968, 969, 981, 1690, 1688, 0, 0,
	980, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 210, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 212,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 1455, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 204, 534, 535, 590, 536,
	537, 538, 957, 205, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 998, 970,
	971, 972, 968, 969, 981, 1690, 2814, 0, 0, 980,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 210, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 212, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 1455, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 204, 534, 535, 590, 536, 537,
	538, 957, 205, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 998, 970, 971,
	972, 968, 969, 981, 1690, 1688, 0, 0, 980, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1022, 986,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 1035, 0, 265, 1042, 266, 1041, 2385, 1052,
	267, 268, 269, 270, 271, 988, 1021, 955, 272, 1081,
	1082, 547, 0, 273, 274, 1028, 0, 1009, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 1012, 1010, 1011,
	1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045, 301,
	1039, 1038, 959, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 1030, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 965, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 1053,
	1054, 977, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 1037, 0, 0, 0, 334, 0, 335, 0, 2390,
	1063, 336, 337, 1050, 1051, 338, 339, 0, 340, 1060,
	0, 987, 341, 0, 342, 343, 344, 345, 346, 1023,
	1024, 1027, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 247, 353, 354, 356, 0, 1064,
	355, 1032, 1033, 0, 993, 0, 357, 358, 1066, 1025,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 2386,
	372, 1061, 1069, 373, 374, 1070, 0, 375, 376, 377,
	1016, 1015, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 956, 248, 1073, 404, 978, 1026, 405, 1040,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 1055,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 1056, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 1036, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 966, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 1019, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 1034, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 1080, 496, 497, 498,
	499, 1057, 0, 502, 503, 954, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 1046, 1047,
	1048, 1049, 0, 518, 2387, 512, 513, 1058, 514, 1059,
	976, 515, 516, 517, 0, 519, 520, 0, 960, 521,
	522, 523, 525, 526, 524, 527, 1020, 528, 0, 0,
	529, 530, 531, 586, 1043, 1079, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	957, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 0, 951, 952, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 2326, 980, 998, 970,
	971, 972, 968, 969, 981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 0, 0, 0,
	0, 0, 0, 0, 982, 2324, 0, 2323, 980, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 0, 0,
	0, 0, 0, 0, 0, 982, 2321, 0, 2320, 980,
	998, 970, 971, 972, 968, 969, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 519, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 957, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 0,
	0, 0, 0, 0, 0, 0, 982, 2318, 0, 2317,
	980, 998, 970, 971, 972, 968, 969, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1022, 986, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 1035, 0, 265, 1042,
	266, 1041, 0, 1052, 267, 268, 269, 270, 271, 988,
	1021, 955, 272, 1081, 1082, 547, 0, 273, 274, 1028,
	0, 1009, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 1062, 295,
	296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298,
	299, 300, 1045, 301, 1039, 1038, 959, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	1030, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 965, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 1053, 1054, 977, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 1037, 0, 0, 0, 334,
	0, 335, 0, 0, 1063, 336, 337, 1050, 1051, 338,
	339, 0, 340, 1060, 0, 987, 341, 0, 342, 343,
	344, 345, 346, 1023, 1024, 1027, 406, 1065, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 1064, 355, 1032, 1033, 0, 993, 0,
	357, 358, 1066, 1025, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 1061, 1069, 373, 374, 1070,
	0, 375, 376, 377, 1016, 1015, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 956, 248, 1073, 404,
	978, 1026, 405, 1040, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	1074, 416, 1075, 1055, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	1056, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 1036, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	1076, 456, 457, 458, 459, 966, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 1019, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 1034,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	1080, 496, 497, 498, 499, 1057, 0, 502, 503, 954,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 1046, 1047, 1048, 1049, 0, 518, 0, 512,
	513, 1058, 514, 1059, 976, 515, 516, 517, 0, 519,
	520, 0, 960, 521, 522, 523, 525, 526, 524, 527,
	1020, 528, 0, 0, 529, 530, 531, 586, 1043, 1079,
	0, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 957, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 0, 0, 0, 0, 0, 0, 982, 2315, 0,
	1543, 980, 998, 970, 971, 972, 968, 969, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 1073,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	519, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 1542, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 957, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 947, 980, 998, 970, 971, 972, 968, 969, 981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1022, 986, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 1035, 0,
	265, 1042, 266, 1041, 0, 1052, 267, 268, 269, 270,
	271, 988, 1021, 955, 272, 1081, 1082, 547, 0, 273,
	274, 1028, 0, 1009, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017,
	297, 298, 299, 300, 1045, 301, 1039, 1038, 959, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 1030, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 965, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 1053, 1054, 977, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 1037, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 1050,
	1051, 338, 339, 0, 340, 1060, 0, 987, 341, 0,
	342, 343, 344, 345, 346, 1023, 1024, 1027, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 1064, 355, 1032, 1033, 0,
	993, 0, 357, 358, 1066, 1025, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 1061, 1069, 373,
	374, 1070, 0, 375, 376, 377, 1016, 1015, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 956, 248,
	1073, 404, 978, 1026, 405, 1040, 407, 408, 0, 0,
	409, 0, 961, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 1055, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 1056, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 1036, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 966, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 1019, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 1034, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 1080, 496, 497, 498, 499, 1057, 0, 502,
	503, 954, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 1046, 1047, 1048, 1049, 0, 518,
	0, 512, 513, 1058, 514, 1059, 976, 515, 516, 517,
	0, 519, 520, 0, 960, 521, 522, 523, 525, 526,
	524, 527, 1020, 528, 0, 0, 529, 530, 531, 586,
	1043, 1079, 0, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 957, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	951, 952, 998, 970, 971, 972, 968, 969, 981, 982,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 4051, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 1073,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 961, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	519, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 957, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 951,
	952, 998, 970, 971, 972, 968, 969, 981, 982, 0,
	0, 0, 980, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1022, 986, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 1035, 0, 265, 1042,
	266, 1041, 0, 1052, 267, 268, 269, 270, 271, 988,
	1021, 955, 272, 1081, 1082, 547, 0, 273, 274, 1028,
	0, 1009, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 1062, 295,
	296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298,
	299, 300, 1045, 301, 1039, 1038, 959, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	1030, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 965, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 1053, 1054, 977, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 1037, 0, 0, 0, 334,
	0, 335, 0, 0, 1063, 336, 337, 1050, 1051, 338,
	339, 0, 340, 1060, 0, 987, 341, 0, 342, 343,
	344, 345, 346, 1023, 1024, 1027, 406, 1065, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 2195, 353,
	354, 356, 0, 1064, 355, 1032, 1033, 0, 993, 0,
	357, 358, 1066, 1025, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 1061, 1069, 373, 374, 1070,
	0, 375, 376, 377, 1016, 1015, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 956, 248, 1073, 404,
	978, 1026, 405, 1040, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	1074, 416, 1075, 1055, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	1056, 429, 574, 430, 431, 2194, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 1036, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	1076, 456, 457, 458, 459, 966, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 1019, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 1034,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	1080, 496, 497, 498, 499, 1057, 0, 502, 503, 954,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 1046, 1047, 1048, 1049, 0, 518, 0, 512,
	513, 1058, 514, 1059, 976, 515, 516, 517, 0, 519,
	520, 0, 960, 521, 522, 523, 525, 526, 524, 527,
	1020, 528, 0, 0, 529, 530, 531, 586, 1043, 1079,
	0, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 957, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 951, 952,
	998, 970, 971, 972, 968, 969, 981, 982, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 961,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 519, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 957, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 998,
	970, 971, 972, 968, 969, 981, 982, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 3845, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 961, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 998, 970,
	971, 972, 968, 969, 981, 982, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 3505, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 1758, 0, 0,
	0, 0, 0, 0, 982, 0, 0, 0, 980, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 3260, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 998, 970,
	971, 972, 968, 969, 981, 982, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 1758, 0, 0,
	0, 0, 0, 0, 982, 0, 0, 0, 980, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 2390, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 998, 970,
	971, 972, 968, 969, 981, 982, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 0, 0, 0,
	0, 0, 0, 0, 982, 1688, 0, 2395, 980, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 2393, 980,
	998, 970, 971, 972, 968, 969, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 519, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 957, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 2381,
	980, 998, 970, 971, 972, 968, 969, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1022, 986, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 1035, 0, 265, 1042,
	266, 1041, 0, 1052, 267, 268, 269, 270, 271, 988,
	1021, 955, 272, 1081, 1082, 547, 0, 273, 274, 1028,
	0, 1009, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 1062, 295,
	296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298,
	299, 300, 1045, 301, 1039, 1038, 959, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	1030, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 965, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 1053, 1054, 977, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 1037, 0, 0, 0, 334,
	0, 335, 0, 0, 1063, 336, 337, 1050, 1051, 338,
	339, 0, 340, 1060, 0, 987, 341, 0, 342, 343,
	344, 345, 346, 1023, 1024, 1027, 406, 1065, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 1064, 355, 1032, 1033, 0, 993, 0,
	357, 358, 1066, 1025, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 1061, 1069, 373, 374, 1070,
	0, 375, 376, 377, 1016, 1015, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 956, 248, 1073, 404,
	978, 1026, 405, 1040, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	1074, 416, 1075, 1055, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	1056, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 1036, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	1076, 456, 457, 458, 459, 966, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 1019, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 1034,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	1080, 496, 497, 498, 499, 1057, 0, 502, 503, 954,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 1046, 1047, 1048, 1049, 0, 518, 0, 512,
	513, 1058, 514, 1059, 976, 515, 516, 517, 0, 519,
	520, 0, 960, 521, 522, 523, 525, 526, 524, 527,
	1020, 528, 0, 0, 529, 530, 531, 586, 1043, 1079,
	0, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 957, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	2370, 980, 998, 970, 971, 972, 968, 969, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 1073,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	519, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 957, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 2368, 980, 2359, 2366, 971, 972, 968, 969, 981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1022, 986, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 1035, 0,
	265, 1042, 266, 1041, 0, 1052, 267, 268, 269, 270,
	271, 988, 1021, 955, 272, 1081, 1082, 547, 0, 273,
	274, 1028, 0, 1009, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017,
	297, 298, 299, 300, 1045, 2362, 1039, 1038, 959, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 1030, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 965, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 1053, 1054, 977, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 1037, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 1050,
	1051, 338, 339, 0, 340, 1060, 0, 987, 341, 0,
	342, 343, 344, 2363, 346, 1023, 1024, 1027, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 1064, 355, 1032, 1033, 0,
	993, 0, 357, 358, 1066, 1025, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 1061, 1069, 373,
	374, 1070, 0, 375, 376, 377, 1016, 1015, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 2364, 2361,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 956, 248,
	1073, 404, 978, 1026, 405, 1040, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 1055, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 1056, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 1036, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 966, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	2365, 0, 476, 477, 475, 478, 479, 480, 1019, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 1034, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 1080, 496, 497, 498, 499, 1057, 0, 502,
	503, 954, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 1046, 1047, 1048, 1049, 0, 518,
	0, 512, 513, 1058, 514, 1059, 976, 515, 516, 517,
	0, 519, 520, 0, 960, 521, 522, 523, 525, 526,
	524, 527, 1020, 528, 0, 0, 529, 530, 531, 586,
	1043, 1079, 0, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 2360, 538, 957, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	951, 952, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 2356, 980, 2359, 2366, 971, 972, 968, 969,
	981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1022, 986, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 1035,
	0, 265, 1042, 266, 1041, 0, 1052, 267, 268, 269,
	270, 271, 988, 1021, 955, 272, 1081, 1082, 547, 0,
	273, 274, 1028, 0, 1009, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013,
	1017, 297, 298, 299, 300, 1045, 2362, 1039, 1038, 959,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 1030, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 965, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 1053, 1054, 977, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 1037, 0,
	0, 0, 334, 0, 335, 0, 0, 1063, 336, 337,
	1050, 1051, 338, 339, 0, 340, 1060, 0, 987, 341,
	0, 342, 343, 344, 2363, 346, 1023, 1024, 1027, 406,
	1065, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 1064, 355, 1032, 1033,
	0, 993, 0, 357, 358, 1066, 1025, 1067, 359, 360,
	361, 1068, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 1061, 1069,
	373, 374, 1070, 0, 375, 376, 377, 1016, 1015, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 2364,
	2361, 388, 389, 390, 393, 0, 392, 1071, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 1072, 397, 956,
	248, 1073, 404, 978, 1026, 405, 1040, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 1074, 416, 1075, 1055, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 1056, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 1036, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 1076, 456, 457, 458, 459, 966, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 2365, 0, 476, 477, 475, 478, 479, 480, 1019,
	481, 465, 466, 482, 483, 1077, 484, 485, 486, 487,
	488, 489, 1034, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 1080, 496, 497, 498, 499, 1057, 0,
	502, 503, 954, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 1046, 1047, 1048, 1049, 0,
	518, 0, 512, 513, 1058, 514, 1059, 976, 515, 516,
	517, 0, 519, 520, 0, 960, 521, 522, 523, 525,
	526, 524, 527, 1020, 528, 0, 0, 529, 530, 531,
	586, 1043, 1079, 0, 533, 532, 589, 0, 0, 0,
	0, 534, 535, 590, 536, 2360, 538, 957, 0, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	0, 951, 952, 998, 970, 971, 972, 968, 969, 981,
	982, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1022, 986, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 1035, 0,
	265, 1042, 266, 1041, 0, 1052, 267, 268, 269, 270,
	271, 988, 1021, 955, 272, 1081, 1082, 547, 0, 273,
	274, 1028, 0, 1009, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017,
	297, 298, 299, 300, 1045, 301, 1039, 1038, 959, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 1030, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 965, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 1053, 1054, 977, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 1037, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 1050,
	1051, 338, 339, 0, 340, 1060, 0, 987, 341, 0,
	342, 343, 344, 345, 346, 1023, 1024, 1027, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 1064, 355, 1032, 1033, 0,
	993, 0, 357, 358, 1066, 1025, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 1061, 1069, 373,
	374, 1070, 0, 375, 376, 377, 1016, 1015, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 956, 248,
	1073, 404, 978, 1026, 405, 1040, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 1055, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 1056, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 1036, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 966, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 1019, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 1034, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 1080, 496, 497, 498, 499, 1057, 0, 502,
	503, 954, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 1046, 1047, 1048, 1049, 0, 518,
	0, 512, 513, 1058, 514, 1059, 976, 515, 516, 517,
	0, 519, 520, 0, 960, 521, 522, 523, 525, 526,
	524, 527, 1020, 528, 0, 0, 529, 530, 531, 586,
	1043, 1079, 0, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 957, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	951, 952, 0, 0, 0, 0, 0, 1696, 0, 982,
	0, 0, 0, 980, 998, 970, 971, 972, 968, 969,
	981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 2174, 255, 256,
	0, 0, 0, 0, 0, 1022, 986, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 1035,
	0, 265, 1042, 266, 1041, 0, 1052, 267, 268, 269,
	270, 271, 988, 1021, 955, 272, 1081, 1082, 547, 0,
	273, 274, 1028, 0, 1009, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013,
	1017, 297, 298, 299, 300, 1045, 301, 1039, 1038, 959,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 1030, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 965, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 1053, 1054, 977, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 1037, 0,
	0, 0, 334, 0, 335, 0, 0, 1063, 336, 337,
	1050, 1051, 338, 339, 0, 340, 1060, 0, 987, 341,
	0, 342, 343, 344, 345, 346, 1023, 1024, 1027, 406,
	1065, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 1064, 355, 1032, 1033,
	0, 993, 0, 357, 358, 1066, 1025, 1067, 359, 360,
	361, 1068, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 1061, 1069,
	373, 374, 1070, 0, 375, 376, 377, 1016, 1015, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 1071, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 1072, 397, 956,
	248, 1073, 404, 978, 1026, 405, 1040, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 1074, 416, 1075, 1055, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 1056, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 1036, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 1076, 456, 457, 458, 459, 966, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 1019,
	481, 465, 466, 482, 483, 1077, 484, 485, 486, 487,
	488, 489, 1034, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 1080, 496, 497, 498, 499, 1057, 0,
	502, 503, 954, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 1046, 1047, 1048, 1049, 0,
	518, 0, 512, 513, 1058, 514, 1059, 976, 515, 516,
	517, 0, 519, 520, 0, 960, 521, 522, 523, 525,
	526, 524, 527, 1020, 528, 0, 0, 529, 530, 531,
	586, 1043, 1079, 0, 533, 532, 589, 0, 0, 0,
	0, 534, 535, 590, 536, 537, 538, 957, 0, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	0, 951, 952, 0, 0, 0, 0, 0, 0, 0,
	982, 0, 0, 1548, 980, 998, 970, 971, 972, 968,
	969, 981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1022, 986, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	1035, 0, 265, 1042, 266, 1041, 0, 1052, 267, 268,
	269, 270, 271, 988, 1021, 955, 272, 1081, 1082, 547,
	0, 273, 274, 1028, 0, 1009, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 1062, 295, 296, 1012, 1010, 1011, 1018, 1014,
	1013, 1017, 297, 298, 299, 300, 1045, 301, 1039, 1038,
	959, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 1030, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 965, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 1053, 1054, 977,
	246, 0, 0, 0, 0, 0, 331, 332, 333, 1037,
	0, 0, 0, 334, 0, 335, 0, 0, 1063, 336,
	337, 1050, 1051, 338, 339, 0, 340, 1060, 0, 987,
	341, 0, 342, 343, 344, 345, 346, 1023, 1024, 1027,
	406, 1065, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 0, 1064, 355, 1032,
	1033, 0, 993, 0, 357, 358, 1066, 1025, 1067, 359,
	360, 361, 1068, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 1061,
	1069, 373, 374, 1070, 0, 375, 376, 377, 1016, 1015,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 1071, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 1072, 397,
	956, 248, 1073, 404, 978, 1026, 405, 1040, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 1074, 416, 1075, 1055, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 1056, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 1036,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 1076, 456, 457, 458, 459, 966,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	1019, 481, 465, 466, 482, 483, 1077, 484, 485, 486,
	487, 488, 489, 1034, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 1080, 496, 497, 498, 499, 1057,
	0, 502, 503, 954, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 1046, 1047, 1048, 1049,
	0, 518, 0, 512, 513, 1058, 514, 1059, 976, 515,
	516, 517, 0, 519, 520, 0, 960, 521, 522, 523,
	525, 526, 524, 527, 1020, 528, 0, 0, 529, 530,
	531, 586, 1043, 1079, 0, 533, 532, 589, 0, 0,
	0, 0, 534, 535, 590, 536, 537, 538, 957, 0,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 0,
	0, 0, 951, 952, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 0, 1485, 980, 998, 970, 971, 972,
	968, 969, 981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1022, 986, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 1035, 0, 265, 1042, 266, 1041, 0, 1052, 267,
	268, 269, 270, 271, 988, 1021, 955, 272, 1081, 1082,
	547, 0, 273, 274, 1028, 0, 1009, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 1012, 1010, 1011, 1018,
	1014, 1013, 1017, 297, 298, 299, 300, 1045, 301, 1039,
	1038, 959, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 1030, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 965, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 1053, 1054,
	977, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	1037, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 1050, 1051, 338, 339, 0, 340, 1060, 0,
	987, 341, 0, 342, 343, 344, 345, 346, 1023, 1024,
	1027, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 1064, 355,
	1032, 1033, 0, 993, 0, 357, 358, 1066, 1025, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	1061, 1069, 373, 374, 1070, 0, 375, 376, 377, 1016,
	1015, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 956, 248, 1073, 404, 978, 1026, 405, 1040, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 1055, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 1056, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	1036, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	966, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 1019, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 1034, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 1080, 496, 497, 498, 499,
	1057, 0, 502, 503, 954, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 1046, 1047, 1048,
	1049, 0, 518, 0, 512, 513, 1058, 514, 1059, 976,
	515, 516, 517, 0, 519, 520, 0, 960, 521, 522,
	523, 525, 526, 524, 527, 1020, 528, 0, 0, 529,
	530, 531, 586, 1043, 1079, 0, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 957,
	0, 0, 0, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 0, 951, 952, 0, 0, 0, 0, 0,
	0, 0, 982, 0, 0, 1480, 980, 998, 970, 971,
	972, 968, 969, 981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1022, 986,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 1035, 0, 265, 1042, 266, 1041, 0, 1052,
	267, 268, 269, 270, 271, 988, 1021, 955, 272, 1081,
	1082, 547, 0, 273, 274, 1028, 0, 1009, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 1012, 1010, 1011,
	1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045, 301,
	1039, 1038, 959, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 1030, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 965, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 1053,
	1054, 977, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 1037, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 1050, 1051, 338, 339, 0, 340, 1060,
	0, 987, 341, 0, 342, 343, 344, 345, 346, 1023,
	1024, 1027, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 247, 353, 354, 356, 0, 1064,
	355, 1032, 1033, 0, 993, 0, 357, 358, 1066, 1025,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 1061, 1069, 373, 374, 1070, 0, 375, 376, 377,
	1016, 1015, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 956, 248, 1073, 404, 978, 1026, 405, 1040,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 1055,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 1056, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 1036, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 966, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 1019, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 1034, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 1080, 496, 497, 498,
	499, 1057, 0, 502, 503, 954, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 1046, 1047,
	1048, 1049, 0, 518, 0, 512, 513, 1058, 514, 1059,
	976, 515, 516, 517, 0, 519, 520, 0, 960, 521,
	522, 523, 525, 526, 524, 527, 1020, 528, 0, 0,
	529, 530, 531, 586, 1043, 1079, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	957, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 0, 951, 952, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 1471, 980, 998, 970,
	971, 972, 968, 969, 981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 0, 0, 0,
	0, 0, 0, 0, 982, 0, 0, 1466, 980, 998,
	970, 971, 972, 968, 969, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 1448, 980,
	998, 970, 971, 972, 968, 969, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 519, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 957, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 1334,
	980, 998, 970, 971, 972, 968, 969, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1022, 986, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 1035, 0, 265, 1042,
	266, 1041, 0, 1052, 267, 268, 269, 270, 271, 988,
	1021, 955, 272, 1081, 1082, 547, 0, 273, 274, 1028,
	0, 1009, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 1062, 295,
	296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298,
	299, 300, 1045, 301, 1039, 1038, 959, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	1030, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 965, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 1053, 1054, 977, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 1037, 0, 0, 0, 334,
	0, 335, 0, 0, 1063, 336, 337, 1050, 1051, 338,
	339, 0, 340, 1060, 0, 987, 341, 0, 342, 343,
	344, 345, 346, 1333, 1024, 1027, 406, 1065, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 1064, 355, 1032, 1033, 0, 993, 0,
	357, 358, 1066, 1025, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 1061, 1069, 373, 374, 1070,
	0, 375, 376, 377, 1016, 1015, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 956, 248, 1073, 404,
	978, 1026, 405, 1040, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	1074, 416, 1075, 1055, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	1056, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 1036, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	1076, 456, 457, 458, 459, 966, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 1019, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 1034,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	1080, 496, 497, 498, 499, 1057, 0, 502, 503, 954,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 1046, 1047, 1048, 1049, 0, 518, 0, 512,
	513, 1058, 514, 1059, 976, 515, 516, 517, 0, 519,
	520, 0, 960, 521, 522, 523, 525, 526, 524, 527,
	1020, 528, 0, 0, 529, 530, 531, 586, 1043, 1079,
	0, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 957, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	1328, 980, 998, 970, 971, 972, 968, 969, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1327, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 1073,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	519, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 957, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 1321, 980, 998, 970, 971, 972, 968, 969, 981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1022, 986, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 1035, 0,
	265, 1042, 266, 1041, 0, 1052, 267, 268, 269, 270,
	271, 988, 1021, 955, 272, 1081, 1082, 547, 0, 273,
	274, 1028, 0, 1009, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017,
	297, 298, 299, 300, 1045, 301, 1039, 1038, 959, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 1030, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 965, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 1053, 1054, 977, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 1037, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 1050,
	1051, 338, 339, 0, 340, 1060, 0, 987, 341, 0,
	342, 343, 344, 345, 346, 1023, 1024, 1027, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 1064, 355, 1032, 1033, 0,
	993, 0, 357, 358, 1066, 1025, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 1061, 1069, 373,
	374, 1070, 0, 375, 376, 377, 1016, 1015, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 956, 248,
	1073, 404, 978, 1026, 405, 1040, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 1055, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 1056, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 1036, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 966, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 1019, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 1034, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 1080, 496, 497, 498, 499, 1057, 0, 502,
	503, 954, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 1046, 1047, 1048, 1049, 0, 518,
	0, 512, 513, 1058, 514, 1059, 976, 515, 516, 517,
	0, 519, 520, 0, 960, 521, 522, 523, 525, 526,
	524, 527, 1020, 528, 0, 0, 529, 530, 531, 586,
	1043, 1079, 0, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 957, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	951, 952, 998, 970, 971, 972, 968, 969, 981, 982,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 1073,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	519, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 957, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 951,
	952, 998, 970, 971, 972, 968, 969, 981, 982, 0,
	0, 0, 980, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1022, 986, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 1035, 0, 265, 1042,
	266, 1041, 0, 1052, 267, 268, 269, 270, 271, 988,
	1021, 955, 272, 1081, 1082, 547, 0, 273, 274, 1028,
	0, 1009, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 1062, 295,
	4091, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298,
	299, 300, 1045, 301, 1039, 1038, 959, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	1030, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 965, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 1053, 1054, 977, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 1037, 0, 0, 0, 334,
	0, 335, 0, 0, 1063, 336, 337, 1050, 1051, 338,
	339, 0, 340, 1060, 0, 987, 341, 0, 342, 343,
	344, 345, 346, 1023, 1024, 1027, 406, 1065, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 1064, 355, 1032, 1033, 0, 993, 0,
	357, 358, 1066, 1025, 1067, 359, 360, 361, 1068, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 1061, 1069, 373, 374, 1070,
	0, 375, 376, 377, 1016, 1015, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 1071, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 1072, 397, 956, 248, 1073, 404,
	978, 1026, 405, 1040, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	1074, 416, 1075, 1055, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	1056, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 1036, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	1076, 456, 457, 458, 459, 966, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 1019, 481, 465, 466,
	482, 483, 1077, 484, 485, 486, 487, 488, 489, 1034,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	1080, 496, 497, 498, 499, 1057, 0, 502, 503, 954,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 1046, 1047, 1048, 1049, 0, 518, 0, 512,
	513, 1058, 514, 1059, 976, 515, 516, 517, 0, 4090,
	520, 0, 960, 521, 522, 523, 525, 526, 524, 527,
	1020, 528, 0, 0, 529, 530, 531, 586, 1043, 1079,
	0, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 957, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 951, 952,
	998, 970, 971, 972, 968, 969, 981, 982, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 986, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 4089, 1035, 0, 265, 1042, 266,
	1041, 0, 1052, 267, 268, 269, 270, 271, 988, 1021,
	955, 272, 1081, 1082, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 4091,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 1045, 301, 1039, 1038, 959, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 1030,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 965, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 977, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 1037, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 1050, 1051, 338, 339,
	0, 340, 1060, 0, 987, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 1032, 1033, 0, 993, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 956, 248, 1073, 404, 978,
	1026, 405, 1040, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 1036, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 966, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 1034, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 1080,
	496, 497, 498, 499, 1057, 0, 502, 503, 954, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 1046, 1047, 1048, 1049, 0, 518, 0, 512, 513,
	1058, 514, 1059, 976, 515, 516, 517, 0, 4090, 520,
	0, 960, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 1043, 1079, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 957, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 951, 952, 998,
	970, 971, 972, 2781, 2782, 981, 982, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 955,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 959, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 956, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 966, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 954, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	960, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 957, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 951, 952, 998, 970,
	971, 972, 2779, 2780, 981, 982, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1022,
	986, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 1035, 0, 265, 1042, 266, 1041, 0,
	1052, 267, 268, 269, 270, 271, 988, 1021, 955, 272,
	1081, 1082, 547, 0, 273, 274, 1028, 0, 1009, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 1062, 295, 296, 1012, 1010,
	1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045,
	301, 1039, 1038, 959, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 1030, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 965,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	1053, 1054, 977, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 1037, 0, 0, 0, 334, 0, 335, 0,
	0, 1063, 336, 337, 1050, 1051, 338, 339, 0, 340,
	1060, 0, 987, 341, 0, 342, 343, 344, 345, 346,
	1023, 1024, 1027, 406, 1065, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	1064, 355, 1032, 1033, 0, 993, 0, 357, 358, 1066,
	1025, 1067, 359, 360, 361, 1068, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 1061, 1069, 373, 374, 1070, 0, 375, 376,
	377, 1016, 1015, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 1071, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 1072, 397, 956, 248, 1073, 404, 978, 1026, 405,
	1040, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 1074, 416, 1075,
	1055, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 1056, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 1036, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 1076, 456, 457,
	458, 459, 966, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 1019, 481, 465, 466, 482, 483, 1077,
	484, 485, 486, 487, 488, 489, 1034, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 1080, 496, 497,
	498, 499, 1057, 0, 502, 503, 954, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 1046,
	1047, 1048, 1049, 0, 518, 0, 512, 513, 1058, 514,
	1059, 976, 515, 516, 517, 0, 519, 520, 0, 960,
	521, 522, 523, 525, 526, 524, 527, 1020, 528, 0,
	0, 529, 530, 531, 586, 1043, 1079, 0, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 957, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 951, 952, 998, 970, 971,
	972, 968, 969, 981, 982, 0, 0, 0, 980, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1022, 986,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 1035, 0, 265, 1042, 266, 1041, 0, 1052,
	267, 268, 269, 270, 271, 988, 1021, 955, 272, 1081,
	1082, 547, 0, 273, 274, 1028, 0, 1009, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 1012, 1010, 1011,
	1018, 1014, 1013, 1017, 297, 298, 299, 300, 1045, 301,
	1039, 1038, 959, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 1030, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 965, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 1053,
	1054, 977, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 1037, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 1050, 1051, 338, 339, 0, 340, 1060,
	0, 987, 341, 0, 342, 343, 344, 345, 346, 1023,
	1024, 1027, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 247, 353, 354, 356, 0, 1064,
	355, 1032, 1033, 0, 993, 0, 357, 358, 1066, 1025,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 1061, 1069, 373, 374, 1070, 0, 375, 376, 377,
	1016, 1015, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 956, 248, 1073, 404, 978, 1026, 405, 1040,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 1055,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 1056, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 1036, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 966, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 1019, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 1034, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 1080, 496, 497, 498,
	499, 1057, 0, 502, 503, 954, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 1046, 1047,
	1048, 1049, 0, 518, 0, 512, 513, 1058, 514, 1059,
	976, 515, 516, 517, 0, 519, 520, 0, 960, 521,
	522, 523, 525, 526, 524, 527, 1020, 528, 0, 0,
	529, 530, 531, 586, 1043, 1079, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	957, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 0, 2182, 2183, 998, 970, 971, 972,
	968, 969, 981, 982, 0, 0, 0, 980, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1022, 986, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 1035, 0, 265, 1042, 266, 1041, 0, 1052, 267,
	268, 269, 270, 271, 988, 1021, 0, 272, 1081, 1082,
	547, 0, 273, 274, 1028, 0, 1009, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 1012, 1010, 1011, 1018,
	1014, 1013, 1017, 297, 298, 299, 300, 1045, 301, 1039,
	1038, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 1030, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 965, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 1053, 1054,
	977, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	1037, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 1050, 1051, 338, 339, 0, 340, 1060, 0,
	987, 341, 0, 342, 343, 344, 345, 346, 1023, 1024,
	1027, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 1064, 355,
	1032, 1033, 0, 993, 0, 357, 358, 1066, 1025, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	1061, 1069, 373, 374, 1070, 0, 375, 376, 377, 1016,
	1015, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 0, 248, 1073, 404, 978, 1026, 405, 1040, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 1055, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 1056, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	1036, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	966, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 1019, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 1034, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 1080, 496, 497, 498, 499,
	1057, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 1046, 1047, 1048,
	1049, 0, 518, 0, 512, 513, 1058, 514, 1059, 976,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 1020, 528, 0, 0, 529,
	530, 531, 586, 1043, 1079, 0, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 998,
	970, 971, 972, 968, 969, 981, 2378, 0, 0, 0,
	0, 0, 0, 2376, 2377, 0, 249, 250, 251, 252,
	253, 254, 982, 255, 256, 0, 980, 0, 0, 0,
	1022, 986, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 1035, 0, 265, 1042, 266, 1041,
	0, 1052, 267, 268, 269, 270, 271, 988, 1021, 0,
	272, 1081, 1082, 547, 0, 273, 274, 1028, 0, 1009,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 1012,
	1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299, 300,
	1045, 301, 1039, 1038, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 1030, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	965, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 1053, 1054, 977, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 1037, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 1050, 1051, 338, 339, 0,
	340, 1060, 0, 987, 341, 0, 342, 343, 344, 345,
	346, 1023, 1024, 1027, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 1064, 355, 1032, 1033, 0, 993, 0, 357, 358,
	1066, 1025, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 1061, 1069, 373, 374, 1070, 0, 375,
	376, 377, 1016, 1015, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 0, 248, 1073, 404, 978, 1026,
	405, 1040, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 1055, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 1056, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 1036, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 2774, 2775, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 1019, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 1034, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 1080, 496,
	497, 498, 499, 1057, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	1046, 1047, 1048, 1049, 0, 518, 0, 512, 513, 1058,
	514, 1059, 976, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 1020, 528,
	0, 0, 529, 530, 531, 586, 1043, 1079, 0, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 998, 970, 971, 972, 968, 969, 981, 0,
	0, 0, 0, 0, 0, 0, 1893, 1894, 0, 249,
	250, 251, 252, 253, 254, 982, 255, 256, 0, 980,
	0, 0, 0, 1022, 986, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 0, 1035, 0, 265,
	1042, 266, 1041, 0, 1052, 267, 268, 269, 270, 271,
	988, 1021, 955, 272, 1081, 1082, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 4091, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 1045, 301, 1039, 1038, 959, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 1030, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 965, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 977, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 1037, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 1050, 1051,
	338, 339, 0, 340, 1060, 0, 987, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 1032, 1033, 0, 993,
	0, 357, 358, 0, 1025, 0, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	0, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 956, 248, 0,
	404, 978, 1026, 405, 1040, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 1036, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 966, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	1034, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 1080, 496, 497, 498, 499, 1057, 0, 502, 503,
	954, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 1046, 1047, 1048, 1049, 0, 518, 0,
	512, 513, 1058, 514, 1059, 976, 515, 516, 517, 0,
	4090, 520, 0, 960, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 1043,
	1079, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 1119, 0, 0, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 980, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1022, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 1021, 0, 272, 545, 546,
	547, 0, 273, 274, 1028, 0, 1009, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 1012, 1010, 1011, 1018,
	1014, 1013, 1017, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 1053, 1054,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 555, 556, 338, 339, 0, 340, 1060, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 1023, 1024,
	1027, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 1064, 355,
	562, 563, 0, 564, 0, 357, 358, 1066, 1025, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 1105, 369, 371, 370, 0, 372,
	1061, 1069, 373, 374, 1070, 0, 375, 376, 377, 1016,
	1015, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 0, 248, 1073, 404, 0, 1026, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 1111, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 1055, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 1056, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 1113, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 210, 476, 477, 475, 478, 479,
	480, 1019, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	1057, 0, 502, 503, 0, 501, 212, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 1058, 514, 1059, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 1020, 528, 0, 0, 529,
	530, 531, 1455, 587, 588, 0, 533, 532, 589, 0,
	1119, 0, 204, 534, 535, 590, 536, 537, 538, 0,
	205, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1109, 1022, 1782, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 1021,
	0, 272, 545, 546, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 1060, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 1105, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 248, 1073, 404, 0,
	1026, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	1111, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 1113, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 210, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 1057, 0, 502, 503, 0, 501,
	212, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	1058, 514, 1059, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 1455, 587, 588, 0,
	533, 532, 589, 0, 0, 0, 204, 534, 535, 590,
	536, 537, 538, 0, 205, 0, 0, 0, 2934, 0,
	1119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 1782, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1022, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 1021,
	0, 272, 545, 546, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 1060, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 1105, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 248, 1073, 404, 0,
	1026, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	1111, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 1113, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 1057, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	1058, 514, 1059, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 0, 1101, 0, 1119, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 1109, 0, 1107, 1022, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 1021, 0, 272, 545, 546,
	547, 0, 273, 274, 1028, 0, 1009, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 1012, 1010, 1011, 1018,
	1014, 1013, 1017, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 1053, 1054,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 555, 556, 338, 339, 0, 340, 1060, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 1023, 1024,
	1027, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 1064, 355,
	562, 563, 0, 564, 0, 357, 358, 1066, 1025, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 1105, 369, 371, 370, 0, 372,
	1061, 1069, 373, 374, 1070, 0, 375, 376, 377, 1016,
	1015, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 0, 248, 1073, 404, 0, 1026, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 1111, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 1055, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 1056, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 1113, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 1019, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	1057, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 1058, 514, 1059, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 1020, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 0,
	1119, 0, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1109, 1022, 1107, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 1021,
	0, 272, 545, 546, 547, 0, 273, 274, 1028, 0,
	1009, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	1012, 1010, 1011, 1018, 1014, 1013, 1017, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 1053, 1054, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 1060, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 1023, 1024, 1027, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 1025, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 1105, 369,
	371, 370, 0, 372, 1061, 1069, 373, 374, 1070, 0,
	375, 376, 377, 1016, 1015, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 248, 1073, 404, 0,
	1026, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	1111, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 1055, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 1056,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 1113, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 1019, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 1057, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	1058, 514, 1059, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 1020,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 0, 1119, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1109, 1022, 1107, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 1021, 0, 272, 545, 546, 547, 0,
	273, 274, 1028, 0, 1009, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 1062, 295, 296, 1012, 1010, 1011, 1018, 1014, 1013,
	1017, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 1053, 1054, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 1063, 336, 337,
	555, 556, 338, 339, 0, 340, 1060, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 1023, 1024, 1027, 406,
	1065, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 1064, 355, 562, 563,
	0, 564, 0, 357, 358, 1066, 1025, 1067, 359, 360,
	361, 1068, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 1061, 1069,
	373, 374, 1070, 0, 375, 376, 377, 1016, 1015, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 1071, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 1072, 397, 0,
	248, 1073, 404, 0, 1026, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 1074, 416, 1075, 1055, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 1056, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 1076, 456, 457, 458, 459, 576, 1113,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 1019,
	481, 465, 466, 482, 483, 1077, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 1057, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 1058, 514, 1059, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 1020, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 0, 944, 0,
	1304, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1681, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	1270, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 565, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 1069, 373, 374, 1070, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 0, 1073, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 210, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	212, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 1455, 587, 588, 0,
	533, 532, 589, 0, 0, 0, 204, 534, 535, 590,
	536, 537, 538, 0, 205, 0, 0, 0, 1452, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	1270, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 565, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 1069, 373, 374, 1070, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 0, 1073, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 210, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	212, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 1455, 587, 588, 0,
	533, 532, 589, 0, 0, 0, 204, 534, 535, 590,
	536, 537, 538, 0, 205, 0, 0, 0, 0, 0,
	1304, 1303, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	1270, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 565, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 1069, 373, 374, 1070, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 0, 1073, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 1304, 1303, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1477, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 1270, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 1064, 355, 562, 563, 0,
	564, 0, 357, 358, 1066, 565, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 1069, 373,
	374, 1070, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 0, 0,
	1073, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 1304, 1976, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 3184,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 1270, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 1064, 355,
	562, 563, 0, 564, 0, 357, 358, 1066, 565, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 1975, 371, 370, 0, 372,
	566, 1069, 373, 374, 1070, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 0, 0, 1073, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 1304,
	1303, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 1477, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 1270,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 1062, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 1063, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 1065, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 1064, 355, 562, 563, 0, 564, 0, 357, 358,
	1066, 565, 1067, 359, 360, 361, 1068, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 1069, 373, 374, 1070, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 1071, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 1072, 397, 0, 0, 1073, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 1074, 416,
	1075, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 1076, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	1077, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 1119, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1022, 0, 1461, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 1021, 0, 272, 545, 546, 547, 0, 273, 274,
	1028, 0, 1009, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 1012, 1010, 1011, 1018, 1014, 1013, 1017, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 1053, 1054, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 555, 556,
	338, 339, 0, 340, 1060, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 1023, 1024, 1027, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 1064, 355, 562, 563, 0, 564,
	0, 357, 358, 1066, 1025, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 1061, 1069, 373, 374,
	1070, 0, 375, 376, 377, 1016, 1015, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 0, 248, 1073,
	404, 0, 1026, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 1055, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 1056, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 1019, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 1057, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 1058, 514, 1059, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 1020, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 0, 533, 532, 589, 944, 0, 243, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 0, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 210, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 212, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 1455, 587, 588, 0, 533, 532, 589,
	243, 0, 0, 204, 534, 535, 590, 536, 537, 538,
	0, 205, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 174, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 248, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 0, 1395, 0, 243, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 1796, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 248, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 0,
	243, 2697, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1399, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 0, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 243, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 4241, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 248,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 243, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 3128, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 248, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 243, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 1399, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 243, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 2668, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 243, 0, 0,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	3285, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 0, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 0, 533, 532, 589,
	0, 793, 0, 676, 534, 535, 590, 536, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 2078, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 683, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 791, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 248,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 681, 504, 505, 506, 507, 682, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 0, 674, 0, 676,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 686, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 683, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 681,
	504, 505, 506, 507, 682, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 676, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 686, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 683, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 248, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 681, 504,
	505, 506, 507, 682, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 676, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 686, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 683, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 247, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 248, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 2117, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 681, 504, 505,
	506, 507, 682, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 676, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 686, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 683, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 248, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 681, 504, 505, 506,
	507, 682, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 1857, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 676, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 686, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 0, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 683, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	246, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 0, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 0, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 0, 0, 355, 562,
	563, 0, 564, 0, 357, 358, 0, 565, 0, 359,
	360, 361, 0, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	0, 373, 374, 0, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 0, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 0, 397,
	0, 248, 0, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 0, 416, 0, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 0, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 0, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 681, 504, 505, 506, 507,
	682, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 1811, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 1832, 533, 532, 589, 0, 0,
	0, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 0, 1838,
	0, 265, 1828, 266, 1844, 0, 1851, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 1854, 1855, 0, 0,
	273, 274, 0, 0, 1270, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 1062, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 1045, 301, 1842, 1841, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 1030, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 0, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 1840, 0,
	0, 0, 334, 0, 335, 0, 0, 1063, 336, 337,
	1849, 1850, 338, 339, 0, 340, 0, 0, 0, 341,
	0, 342, 343, 344, 345, 346, 0, 0, 0, 406,
	1065, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 1064, 355, 1835, 1836,
	0, 1831, 0, 357, 358, 1066, 0, 1067, 359, 360,
	361, 1068, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 0, 1069,
	373, 374, 1070, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 1071, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 1072, 397, 0,
	0, 1073, 404, 0, 0, 405, 1843, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 0, 1074, 416, 1075, 0, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 1825, 1826, 0, 429, 0, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 1839, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 1076, 456, 457, 458, 459, 0, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 1077, 484, 485, 486, 487,
	488, 489, 1837, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 1853, 496, 497, 498, 499, 0, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 1845, 1846, 1847, 1848, 0,
	518, 0, 512, 513, 0, 514, 0, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	0, 1829, 1852, 0, 533, 532, 0, 0, 0, 0,
	0, 534, 535, 0, 536, 537, 538, 1304, 1303, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 1819, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 1270, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 1064,
	355, 562, 563, 0, 564, 0, 357, 358, 1066, 565,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 1069, 373, 374, 1070, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 0, 0, 1073, 404, 3451, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	1304, 1303, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	1270, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 565, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 1069, 373, 374, 1070, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 0, 1073, 404, 3100,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 1304, 1303, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 1270, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 0, 0, 0, 0, 0, 0, 3041,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 1064, 355, 562, 563, 0,
	564, 0, 357, 358, 1066, 565, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 1069, 373,
	374, 1070, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 0, 0,
	1073, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 3042, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 243, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 248, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 1505, 0, 1304, 1303, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 1270, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 1504, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 1064,
	355, 562, 563, 0, 564, 0, 357, 358, 1066, 565,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 1069, 373, 374, 1070, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 0, 0, 1073, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 1503,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 1502, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	1445, 0, 1304, 1303, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 1270, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 1444, 560, 561, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 0,
	353, 354, 356, 0, 1064, 355, 562, 563, 0, 564,
	0, 357, 358, 1066, 565, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 1069, 373, 374,
	1070, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 0, 0, 1073,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 1374, 0, 1304, 1303, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 1270, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 1373,
	560, 561, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 1064,
	355, 562, 563, 0, 564, 0, 357, 358, 1066, 565,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 1069, 373, 374, 1070, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 0, 0, 1073, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	1339, 0, 1304, 1303, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 1270, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 1062,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 1063, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 1065, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 0,
	353, 354, 356, 0, 1064, 355, 562, 563, 0, 564,
	0, 357, 358, 1066, 565, 1067, 359, 360, 361, 1068,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 1069, 373, 374,
	1070, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 1071, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 1072, 397, 0, 0, 1073,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 1074, 416, 1075, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 1076, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 1077, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 0, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 1299, 0, 1304, 1303, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 1270, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 1062, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	1063, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 1298,
	560, 561, 406, 1065, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 1064,
	355, 562, 563, 0, 564, 0, 357, 358, 1066, 565,
	1067, 359, 360, 361, 1068, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 1069, 373, 374, 1070, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	1071, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	1072, 397, 0, 0, 1073, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 1074, 416, 1075, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 1076, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 1077, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 0, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	1304, 1303, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	1270, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 1062, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 1063, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 1065, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 1064, 355, 562, 563, 0, 564, 0, 357,
	358, 1066, 565, 1067, 359, 360, 361, 1068, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 1069, 373, 374, 1070, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 1071, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 1072, 397, 0, 0, 1073, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 1074,
	416, 1075, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 1076,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 1077, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 1304, 1303, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 1270, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	1062, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 1866, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 1063, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 1065,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 1064, 355, 562, 563, 0,
	564, 0, 357, 358, 1066, 565, 1067, 359, 360, 361,
	1068, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 1069, 373,
	374, 1070, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 1071, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 1072, 397, 0, 0,
	1073, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 1074, 416, 1075, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 1076, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 1077, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 1304, 1303, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 1270, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 1062, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 1063,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 1065, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 1064, 355,
	562, 563, 0, 564, 0, 357, 358, 1066, 565, 1067,
	359, 360, 361, 1068, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 1069, 373, 374, 1070, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 1071,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 1072,
	397, 0, 0, 1073, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 1074, 416, 1075, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 1076, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 1077, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 1304, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 1270, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 1062, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 299, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	246, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 1063, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 1065, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 0, 353, 354, 356, 0, 1064, 355, 562,
	563, 0, 564, 0, 357, 358, 1066, 565, 1067, 359,
	360, 361, 1068, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	1069, 373, 374, 1070, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 1071, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 1072, 397,
	0, 0, 1073, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 1074, 416, 1075, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 1076, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 1077, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 517, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 243, 533, 532, 589, 0, 0,
	0, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 2513,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 2510,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 2517, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 2710,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 2516, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 2707, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 2709, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 2706, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 2515, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 2708, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 243, 533, 532, 589, 0, 0, 0,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 2513, 273,
	274, 548, 0, 0, 2507, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 2510, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 2517, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 2516, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 2506, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 0,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 2515, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 2514, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 1570, 0, 243, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 248, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 1573, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 1571, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 0, 1572, 532,
	589, 1274, 0, 243, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 1276, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 248,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 1111, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 1271, 0, 243, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	1273, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 248, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 1111, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 0, 533, 532,
	589, 1177, 0, 243, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 1179, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 248,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 1111, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 0, 533, 532, 589, 622, 0, 243, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 621, 253,
	254, 611, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 614, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 615, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 0, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 0, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 616, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 0, 533, 532,
	589, 610, 0, 243, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 611, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 614, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 615, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 0,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 616, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 243, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 246, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 247,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 248, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 1111, 411, 412, 413, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 243, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 3063, 397, 0, 248, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 2639, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 2638, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 248, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 2091,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 248, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	243, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 248, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	2008, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 2013, 0, 243, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 0, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 299, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	246, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 0, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 2012, 560, 561,
	406, 0, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 247, 353, 354, 356, 0, 0, 355, 562,
	563, 0, 564, 0, 357, 358, 0, 565, 0, 359,
	360, 361, 0, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	0, 373, 374, 0, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 0, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 0, 397,
	0, 248, 0, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 0, 416, 0, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 0, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 0, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 517, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 0, 533, 532, 589, 2001, 0,
	243, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 2003, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 248, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 243,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 1972, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 1111,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 1437, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 1436, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	248, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 1428, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 1427, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 1425, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 1424, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	248, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 1420, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 1419, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 1377, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	248, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 1292, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 1285, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 1287, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	248, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 592, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 234, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 246,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 247, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	248, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 243, 533, 532, 589, 0, 0, 0,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 246, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 559, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	247, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 248,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 243, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 614, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 615, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 0,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 0, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	616, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 243, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	2124, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 246, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 247, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 248, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	243, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 2122,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 246, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 247, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 248, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 243,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 2120, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 246, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 247, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 248, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 243, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 246, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	2056, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 247, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 248, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 243, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 246, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 2050,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 247, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 248, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 243, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 246, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 2019, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 247, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 248, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 780,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 779,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 778, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	243, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 2710, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 0, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 3708, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 0,
	533, 532, 589, 601, 0, 243, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 600, 255,
	256, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 0, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 299, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 0, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 0, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 0, 353, 354, 356, 0, 0, 355, 562,
	563, 0, 564, 0, 357, 358, 0, 565, 0, 359,
	360, 361, 0, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	0, 373, 374, 0, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 0, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 0, 397,
	0, 0, 0, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 0, 416, 0, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 599, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 0, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 0, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 517, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 0, 533, 532, 589, 243, 2697,
	0, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 0, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 0, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 0, 533, 532,
	589, 243, 3718, 0, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	243, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 3425, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 0, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 481, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 243,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 2429, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 0, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 243, 2697, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 559, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 0,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 0, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 2694, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 243, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 2101, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 2089, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 644,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 1151,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 1149, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 645, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 641, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 1152, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 640, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 644, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 634, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 645, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 641,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 1460,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 640, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 1441,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 1440, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 1434, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 1433, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 1383,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 1382, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 1368, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 1367, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 1363,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 1295, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 1279,
	0, 243, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	468, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	0, 533, 532, 589, 644, 0, 243, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 1151, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	1149, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 645, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 641,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 1152,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 640, 581, 582,
	583, 0, 518, 0, 512, 1150, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 243, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1132, 255,
	256, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 0, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 299, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 0, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 559, 560, 561,
	406, 0, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 0, 353, 354, 356, 0, 0, 355, 562,
	563, 0, 564, 0, 357, 358, 0, 565, 0, 359,
	360, 361, 0, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	0, 373, 374, 0, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 0, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 0, 397,
	0, 0, 0, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 0, 416, 0, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 0, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 0, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 517, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 243, 533, 532, 589, 0, 0,
	0, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 650, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 644, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 634, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 632, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 633, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 645, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 0, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 635, 460, 0, 461, 462, 468, 469,
	463, 464, 641, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 636, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	640, 581, 582, 583, 0, 518, 0, 512, 638, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 626, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 627, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 624, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 0, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 0, 533,
	532, 589, 618, 0, 243, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 559, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 0, 533, 532, 589, 596, 0, 243,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 559, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 0, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 243, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	559, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 0, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 0, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 243, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 3145,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 0, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 441, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 243, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 341, 0, 342, 343, 344, 345, 346, 3094, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 437, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 460, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 243, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 540,
	541, 0, 265, 542, 266, 543, 0, 544, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 545, 546, 547,
	0, 273, 274, 548, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 0, 295, 296, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 299, 300, 0, 301, 549, 550,
	0, 305, 302, 303, 0, 306, 304, 0, 307, 308,
	309, 0, 0, 310, 311, 312, 0, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 551, 320, 321, 322,
	324, 326, 323, 327, 328, 329, 330, 552, 553, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 554,
	0, 0, 0, 334, 0, 335, 0, 0, 0, 336,
	337, 555, 556, 338, 339, 0, 340, 557, 0, 558,
	341, 0, 342, 343, 344, 345, 346, 3032, 560, 561,
	406, 0, 347, 348, 0, 349, 350, 351, 352, 0,
	0, 0, 0, 353, 354, 356, 0, 0, 355, 562,
	563, 0, 564, 0, 357, 358, 0, 565, 0, 359,
	360, 361, 0, 362, 0, 0, 0, 363, 364, 365,
	366, 367, 368, 0, 369, 371, 370, 0, 372, 566,
	0, 373, 374, 0, 0, 375, 376, 377, 0, 0,
	378, 379, 380, 381, 0, 382, 383, 385, 387, 384,
	386, 391, 388, 389, 390, 393, 0, 392, 0, 394,
	395, 396, 401, 402, 399, 400, 403, 398, 0, 397,
	0, 0, 0, 404, 0, 567, 405, 568, 407, 408,
	0, 0, 409, 0, 0, 0, 411, 412, 413, 0,
	0, 414, 415, 569, 0, 416, 0, 570, 417, 418,
	410, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 428, 571, 572, 573, 429, 574, 430, 431, 0,
	432, 0, 433, 434, 435, 436, 437, 438, 439, 575,
	441, 440, 442, 0, 443, 0, 0, 0, 0, 0,
	444, 0, 446, 447, 448, 445, 449, 450, 451, 452,
	0, 453, 454, 455, 0, 456, 457, 458, 459, 576,
	460, 0, 461, 462, 468, 469, 463, 464, 470, 471,
	472, 473, 474, 0, 476, 477, 475, 478, 479, 480,
	0, 481, 465, 466, 482, 483, 0, 484, 485, 486,
	487, 488, 489, 577, 0, 490, 0, 491, 492, 493,
	494, 467, 495, 500, 578, 496, 497, 498, 499, 579,
	0, 502, 503, 0, 501, 0, 504, 505, 506, 507,
	508, 509, 325, 510, 0, 511, 580, 581, 582, 583,
	0, 518, 0, 512, 513, 584, 514, 585, 0, 515,
	516, 517, 0, 519, 520, 0, 0, 521, 522, 523,
	525, 526, 524, 527, 0, 528, 0, 0, 529, 530,
	531, 586, 587, 588, 243, 533, 532, 589, 0, 0,
	0, 0, 534, 535, 590, 536, 537, 538, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 540, 541,
	0, 265, 542, 266, 543, 0, 544, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 545, 546, 547, 0,
	273, 274, 548, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 0, 295, 296, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 299, 300, 0, 301, 549, 550, 0,
	305, 302, 303, 0, 306, 304, 0, 307, 308, 309,
	0, 0, 310, 311, 312, 0, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 551, 320, 321, 322, 324,
	326, 323, 327, 328, 329, 330, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 554, 0,
	0, 0, 334, 0, 335, 0, 0, 0, 336, 337,
	555, 556, 338, 339, 0, 340, 557, 0, 558, 341,
	0, 342, 343, 344, 345, 346, 3030, 560, 561, 406,
	0, 347, 348, 0, 349, 350, 351, 352, 0, 0,
	0, 0, 353, 354, 356, 0, 0, 355, 562, 563,
	0, 564, 0, 357, 358, 0, 565, 0, 359, 360,
	361, 0, 362, 0, 0, 0, 363, 364, 365, 366,
	367, 368, 0, 369, 371, 370, 0, 372, 566, 0,
	373, 374, 0, 0, 375, 376, 377, 0, 0, 378,
	379, 380, 381, 0, 382, 383, 385, 387, 384, 386,
	391, 388, 389, 390, 393, 0, 392, 0, 394, 395,
	396, 401, 402, 399, 400, 403, 398, 0, 397, 0,
	0, 0, 404, 0, 567, 405, 568, 407, 408, 0,
	0, 409, 0, 0, 0, 411, 412, 413, 0, 0,
	414, 415, 569, 0, 416, 0, 570, 417, 418, 410,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	428, 571, 572, 573, 429, 574, 430, 431, 0, 432,
	0, 433, 434, 435, 436, 437, 438, 439, 575, 441,
	440, 442, 0, 443, 0, 0, 0, 0, 0, 444,
	0, 446, 447, 448, 445, 449, 450, 451, 452, 0,
	453, 454, 455, 0, 456, 457, 458, 459, 576, 460,
	0, 461, 462, 468, 469, 463, 464, 470, 471, 472,
	473, 474, 0, 476, 477, 475, 478, 479, 480, 0,
	481, 465, 466, 482, 483, 0, 484, 485, 486, 487,
	488, 489, 577, 0, 490, 0, 491, 492, 493, 494,
	467, 495, 500, 578, 496, 497, 498, 499, 579, 0,
	502, 503, 0, 501, 0, 504, 505, 506, 507, 508,
	509, 325, 510, 0, 511, 580, 581, 582, 583, 0,
	518, 0, 512, 513, 584, 514, 585, 0, 515, 516,
	517, 0, 519, 520, 0, 0, 521, 522, 523, 525,
	526, 524, 527, 0, 528, 0, 0, 529, 530, 531,
	586, 587, 588, 243, 533, 532, 589, 0, 0, 0,
	0, 534, 535, 590, 536, 537, 538, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 540, 541, 0,
	265, 542, 266, 543, 0, 544, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 545, 546, 547, 0, 273,
	274, 548, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	0, 295, 296, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 299, 300, 0, 301, 549, 550, 0, 305,
	302, 303, 0, 306, 304, 0, 307, 308, 309, 0,
	0, 310, 311, 312, 0, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 551, 320, 321, 322, 324, 326,
	323, 327, 328, 329, 330, 552, 553, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 554, 0, 0,
	0, 334, 0, 335, 0, 0, 0, 336, 337, 555,
	556, 338, 339, 0, 340, 557, 0, 558, 341, 0,
	342, 343, 344, 345, 346, 3016, 560, 561, 406, 0,
	347, 348, 0, 349, 350, 351, 352, 0, 0, 0,
	0, 353, 354, 356, 0, 0, 355, 562, 563, 0,
	564, 0, 357, 358, 0, 565, 0, 359, 360, 361,
	0, 362, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 369, 371, 370, 0, 372, 566, 0, 373,
	374, 0, 0, 375, 376, 377, 0, 0, 378, 379,
	380, 381, 0, 382, 383, 385, 387, 384, 386, 391,
	388, 389, 390, 393, 0, 392, 0, 394, 395, 396,
	401, 402, 399, 400, 403, 398, 0, 397, 0, 0,
	0, 404, 0, 567, 405, 568, 407, 408, 0, 0,
	409, 0, 0, 0, 411, 412, 413, 0, 0, 414,
	415, 569, 0, 416, 0, 570, 417, 418, 410, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 428,
	571, 572, 573, 429, 574, 430, 431, 0, 432, 0,
	433, 434, 435, 436, 437, 438, 439, 575, 441, 440,
	442, 0, 443, 0, 0, 0, 0, 0, 444, 0,
	446, 447, 448, 445, 449, 450, 451, 452, 0, 453,
	454, 455, 0, 456, 457, 458, 459, 576, 460, 0,
	461, 462, 468, 469, 463, 464, 470, 471, 472, 473,
	474, 0, 476, 477, 475, 478, 479, 480, 0, 481,
	465, 466, 482, 483, 0, 484, 485, 486, 487, 488,
	489, 577, 0, 490, 0, 491, 492, 493, 494, 467,
	495, 500, 578, 496, 497, 498, 499, 579, 0, 502,
	503, 0, 501, 0, 504, 505, 506, 507, 508, 509,
	325, 510, 0, 511, 580, 581, 582, 583, 0, 518,
	0, 512, 513, 584, 514, 585, 0, 515, 516, 517,
	0, 519, 520, 0, 0, 521, 522, 523, 525, 526,
	524, 527, 0, 528, 0, 0, 529, 530, 531, 586,
	587, 588, 243, 533, 532, 589, 0, 0, 0, 0,
	534, 535, 590, 536, 537, 538, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 540, 541, 0, 265,
	542, 266, 543, 0, 544, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 545, 546, 547, 0, 273, 274,
	548, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 299, 300, 0, 301, 549, 550, 0, 305, 302,
	303, 0, 306, 304, 0, 307, 308, 309, 0, 0,
	310, 311, 312, 0, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 551, 320, 321, 322, 324, 326, 323,
	327, 328, 329, 330, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 554, 0, 0, 0,
	334, 0, 335, 0, 0, 0, 336, 337, 555, 556,
	338, 339, 0, 340, 557, 0, 558, 341, 0, 342,
	343, 344, 345, 346, 2648, 560, 561, 406, 0, 347,
	348, 0, 349, 350, 351, 352, 0, 0, 0, 0,
	353, 354, 356, 0, 0, 355, 562, 563, 0, 564,
	0, 357, 358, 0, 565, 0, 359, 360, 361, 0,
	362, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 369, 371, 370, 0, 372, 566, 0, 373, 374,
	0, 0, 375, 376, 377, 0, 0, 378, 379, 380,
	381, 0, 382, 383, 385, 387, 384, 386, 391, 388,
	389, 390, 393, 0, 392, 0, 394, 395, 396, 401,
	402, 399, 400, 403, 398, 0, 397, 0, 0, 0,
	404, 0, 567, 405, 568, 407, 408, 0, 0, 409,
	0, 0, 0, 411, 412, 413, 0, 0, 414, 415,
	569, 0, 416, 0, 570, 417, 418, 410, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 428, 571,
	572, 573, 429, 574, 430, 431, 0, 432, 0, 433,
	434, 435, 436, 437, 438, 439, 575, 441, 440, 442,
	0, 443, 0, 0, 0, 0, 0, 444, 0, 446,
	447, 448, 445, 449, 450, 451, 452, 0, 453, 454,
	455, 0, 456, 457, 458, 459, 576, 460, 0, 461,
	462, 468, 469, 463, 464, 470, 471, 472, 473, 474,
	0, 476, 477, 475, 478, 479, 480, 0, 481, 465,
	466, 482, 483, 0, 484, 485, 486, 487, 488, 489,
	577, 0, 490, 0, 491, 492, 493, 494, 467, 495,
	500, 578, 496, 497, 498, 499, 579, 0, 502, 503,
	0, 501, 0, 504, 505, 506, 507, 508, 509, 325,
	510, 0, 511, 580, 581, 582, 583, 0, 518, 0,
	512, 513, 584, 514, 585, 0, 515, 516, 517, 0,
	519, 520, 0, 0, 521, 522, 523, 525, 526, 524,
	527, 0, 528, 0, 0, 529, 530, 531, 586, 587,
	588, 243, 533, 532, 589, 0, 0, 0, 0, 534,
	535, 590, 536, 537, 538, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 540, 541, 0, 265, 542,
	266, 543, 0, 544, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 545, 546, 547, 0, 273, 274, 548,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 0, 295,
	296, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	299, 300, 0, 301, 549, 550, 0, 305, 302, 303,
	0, 306, 304, 0, 307, 308, 309, 0, 0, 310,
	311, 312, 0, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 551, 320, 321, 322, 324, 326, 323, 327,
	328, 329, 330, 552, 553, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 554, 0, 0, 0, 334,
	0, 335, 0, 0, 0, 336, 337, 555, 556, 338,
	339, 0, 340, 557, 0, 558, 341, 0, 342, 343,
	344, 345, 346, 559, 560, 561, 406, 0, 347, 348,
	0, 349, 350, 351, 352, 0, 0, 0, 0, 353,
	354, 356, 0, 0, 355, 562, 563, 0, 564, 0,
	357, 358, 0, 565, 0, 359, 360, 361, 0, 362,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 0,
	369, 371, 370, 0, 372, 566, 0, 373, 374, 0,
	0, 375, 376, 377, 0, 0, 378, 379, 380, 381,
	0, 382, 383, 385, 387, 384, 386, 391, 388, 389,
	390, 393, 0, 392, 0, 394, 395, 396, 401, 402,
	399, 400, 403, 398, 0, 397, 0, 0, 0, 404,
	0, 567, 405, 568, 407, 408, 0, 0, 409, 0,
	0, 0, 411, 412, 413, 0, 0, 414, 415, 569,
	0, 416, 0, 570, 417, 418, 410, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 428, 571, 572,
	573, 429, 574, 430, 431, 0, 432, 0, 433, 434,
	435, 436, 437, 438, 439, 575, 441, 440, 442, 0,
	443, 0, 0, 0, 0, 0, 444, 0, 446, 447,
	448, 445, 449, 450, 451, 452, 0, 453, 454, 455,
	0, 456, 457, 458, 459, 576, 460, 0, 461, 462,
	627, 469, 463, 464, 470, 471, 472, 473, 474, 0,
	476, 477, 475, 478, 479, 480, 0, 481, 465, 466,
	482, 483, 0, 484, 485, 486, 487, 488, 489, 577,
	0, 490, 0, 491, 492, 493, 494, 467, 495, 500,
	578, 496, 497, 498, 499, 579, 0, 502, 503, 0,
	501, 0, 504, 505, 506, 507, 508, 509, 325, 510,
	0, 511, 580, 581, 582, 583, 0, 518, 0, 512,
	513, 584, 514, 585, 0, 515, 516, 517, 0, 519,
	520, 0, 0, 521, 522, 523, 525, 526, 524, 527,
	0, 528, 0, 0, 529, 530, 531, 586, 587, 588,
	243, 533, 532, 589, 0, 0, 0, 0, 534, 535,
	590, 536, 537, 538, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 539, 0, 2036, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 540, 541, 0, 265, 542, 266,
	543, 0, 544, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 545, 546, 547, 0, 273, 274, 548, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 0, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	300, 0, 301, 549, 550, 0, 305, 302, 303, 0,
	306, 304, 0, 307, 308, 309, 0, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 551, 320, 321, 322, 324, 326, 323, 327, 328,
	329, 330, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 554, 0, 0, 0, 334, 0,
	335, 0, 0, 0, 336, 337, 555, 556, 338, 339,
	0, 340, 557, 0, 558, 341, 0, 342, 343, 344,
	345, 346, 559, 560, 561, 406, 0, 347, 348, 0,
	349, 350, 351, 352, 0, 0, 0, 0, 353, 354,
	356, 0, 0, 355, 562, 563, 0, 564, 0, 357,
	358, 0, 565, 0, 359, 360, 361, 0, 362, 0,
	0, 0, 363, 364, 365, 366, 367, 368, 0, 369,
	371, 370, 0, 372, 566, 0, 373, 374, 0, 0,
	375, 376, 377, 0, 0, 378, 379, 380, 381, 0,
	382, 383, 385, 387, 384, 386, 391, 388, 389, 390,
	393, 0, 392, 0, 394, 395, 396, 401, 402, 399,
	400, 403, 398, 0, 397, 0, 0, 0, 404, 0,
	567, 405, 568, 407, 408, 0, 0, 409, 0, 0,
	0, 411, 412, 413, 0, 0, 414, 415, 569, 0,
	416, 0, 570, 417, 418, 410, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 428, 571, 572, 573,
	429, 574, 430, 431, 0, 432, 0, 433, 434, 435,
	436, 437, 438, 439, 575, 441, 440, 442, 0, 443,
	0, 0, 0, 0, 0, 444, 0, 446, 447, 448,
	445, 449, 450, 451, 452, 0, 453, 454, 455, 0,
	456, 457, 458, 459, 576, 460, 0, 461, 462, 468,
	469, 463, 464, 470, 471, 472, 473, 474, 0, 476,
	477, 475, 478, 479, 480, 0, 0, 465, 466, 482,
	483, 0, 484, 485, 486, 487, 488, 489, 577, 0,
	490, 0, 491, 492, 493, 494, 467, 495, 500, 578,
	496, 497, 498, 499, 579, 0, 502, 503, 0, 501,
	0, 504, 505, 506, 507, 508, 509, 325, 510, 0,
	511, 580, 581, 582, 583, 0, 518, 0, 512, 513,
	584, 514, 585, 0, 515, 516, 517, 0, 519, 520,
	0, 0, 521, 522, 523, 525, 526, 524, 527, 0,
	528, 0, 0, 529, 530, 531, 586, 587, 588, 243,
	533, 532, 589, 0, 0, 0, 0, 534, 535, 590,
	536, 537, 538, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 540, 541, 0, 265, 542, 266, 543,
	0, 544, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 545, 546, 547, 0, 273, 274, 548, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 0, 295, 296, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 299, 300,
	0, 301, 549, 550, 0, 305, 302, 303, 0, 306,
	304, 0, 307, 308, 309, 0, 0, 310, 311, 312,
	0, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	551, 320, 321, 322, 324, 326, 323, 327, 328, 329,
	330, 552, 553, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 554, 0, 0, 0, 334, 0, 335,
	0, 0, 0, 336, 337, 555, 556, 338, 339, 0,
	340, 557, 0, 558, 341, 0, 342, 343, 344, 345,
	346, 1405, 560, 561, 406, 0, 347, 348, 0, 349,
	350, 351, 352, 0, 0, 0, 0, 353, 354, 356,
	0, 0, 355, 562, 563, 0, 564, 0, 357, 358,
	0, 565, 0, 359, 360, 361, 0, 362, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 369, 371,
	370, 0, 372, 566, 0, 373, 374, 0, 0, 375,
	376, 377, 0, 0, 378, 379, 380, 381, 0, 382,
	383, 385, 387, 384, 386, 391, 388, 389, 390, 393,
	0, 392, 0, 394, 395, 396, 401, 402, 399, 400,
	403, 398, 0, 397, 0, 0, 0, 404, 0, 567,
	405, 568, 407, 408, 0, 0, 409, 0, 0, 0,
	411, 412, 413, 0, 0, 414, 415, 569, 0, 416,
	0, 570, 417, 418, 410, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 428, 571, 572, 573, 429,
	574, 430, 431, 0, 432, 0, 433, 434, 435, 436,
	437, 438, 439, 575, 441, 440, 442, 0, 443, 0,
	0, 0, 0, 0, 444, 0, 446, 447, 448, 445,
	449, 450, 451, 452, 0, 453, 454, 455, 0, 456,
	457, 458, 459, 576, 460, 0, 461, 462, 468, 469,
	463, 464, 470, 471, 472, 473, 474, 0, 476, 477,
	475, 478, 479, 480, 0, 481, 465, 466, 482, 483,
	0, 484, 485, 486, 487, 488, 489, 577, 0, 490,
	0, 491, 492, 493, 494, 467, 495, 500, 578, 496,
	497, 498, 499, 579, 0, 502, 503, 0, 501, 0,
	504, 505, 506, 507, 508, 509, 325, 510, 0, 511,
	580, 581, 582, 583, 0, 518, 0, 512, 513, 584,
	514, 585, 0, 515, 516, 517, 0, 519, 520, 0,
	0, 521, 522, 523, 525, 526, 524, 527, 0, 528,
	0, 0, 529, 530, 531, 586, 587, 588, 243, 533,
	532, 589, 0, 0, 0, 0, 534, 535, 590, 536,
	537, 538, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 540, 541, 0, 265, 542, 266, 543, 0,
	544, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	545, 546, 547, 0, 273, 274, 548, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 0, 295, 296, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 299, 300, 0,
	301, 549, 550, 0, 305, 302, 303, 0, 306, 304,
	0, 307, 308, 309, 0, 0, 310, 311, 312, 0,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 551,
	320, 321, 322, 324, 326, 323, 327, 328, 329, 330,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 554, 0, 0, 0, 334, 0, 335, 0,
	0, 0, 336, 337, 555, 556, 338, 339, 0, 340,
	557, 0, 558, 341, 0, 342, 343, 344, 345, 346,
	1346, 560, 561, 406, 0, 347, 348, 0, 349, 350,
	351, 352, 0, 0, 0, 0, 353, 354, 356, 0,
	0, 355, 562, 563, 0, 564, 0, 357, 358, 0,
	565, 0, 359, 360, 361, 0, 362, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 0, 369, 371, 370,
	0, 372, 566, 0, 373, 374, 0, 0, 375, 376,
	377, 0, 0, 378, 379, 380, 381, 0, 382, 383,
	385, 387, 384, 386, 391, 388, 389, 390, 393, 0,
	392, 0, 394, 395, 396, 401, 402, 399, 400, 403,
	398, 0, 397, 0, 0, 0, 404, 0, 567, 405,
	568, 407, 408, 0, 0, 409, 0, 0, 0, 411,
	412, 413, 0, 0, 414, 415, 569, 0, 416, 0,
	570, 417, 418, 410, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 428, 571, 572, 573, 429, 574,
	430, 431, 0, 432, 0, 433, 434, 435, 436, 437,
	438, 439, 575, 441, 440, 442, 0, 443, 0, 0,
	0, 0, 0, 444, 0, 446, 447, 448, 445, 449,
	450, 451, 452, 0, 453, 454, 455, 0, 456, 457,
	458, 459, 576, 460, 0, 461, 462, 468, 469, 463,
	464, 470, 471, 472, 473, 474, 0, 476, 477, 475,
	478, 479, 480, 0, 481, 465, 466, 482, 483, 0,
	484, 485, 486, 487, 488, 489, 577, 0, 490, 0,
	491, 492, 493, 494, 467, 495, 500, 578, 496, 497,
	498, 499, 579, 0, 502, 503, 0, 501, 0, 504,
	505, 506, 507, 508, 509, 325, 510, 0, 511, 580,
	581, 582, 583, 0, 518, 0, 512, 513, 584, 514,
	585, 0, 515, 516, 517, 0, 519, 520, 0, 0,
	521, 522, 523, 525, 526, 524, 527, 0, 528, 0,
	0, 529, 530, 531, 586, 587, 588, 243, 533, 532,
	589, 0, 0, 0, 0, 534, 535, 590, 536, 537,
	538, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 540, 541, 0, 265, 542, 266, 543, 0, 544,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 545,
	546, 547, 0, 273, 274, 548, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 0, 295, 296, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 299, 300, 0, 301,
	549, 550, 0, 305, 302, 303, 0, 306, 304, 0,
	307, 308, 309, 0, 0, 310, 311, 312, 0, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 551, 320,
	321, 322, 324, 326, 323, 327, 328, 329, 330, 552,
	553, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 554, 0, 0, 0, 334, 0, 335, 0, 0,
	0, 336, 337, 555, 556, 338, 339, 0, 340, 557,
	0, 558, 341, 0, 342, 343, 344, 345, 346, 559,
	560, 561, 406, 0, 347, 348, 0, 349, 350, 351,
	352, 0, 0, 0, 0, 353, 354, 356, 0, 0,
	355, 562, 563, 0, 564, 0, 357, 358, 0, 565,
	0, 359, 360, 361, 0, 362, 0, 0, 0, 363,
	364, 365, 366, 367, 368, 0, 369, 371, 370, 0,
	372, 566, 0, 373, 374, 0, 0, 375, 376, 377,
	0, 0, 378, 379, 380, 381, 0, 382, 383, 385,
	387, 384, 386, 391, 388, 389, 390, 393, 0, 392,
	0, 394, 395, 396, 401, 402, 399, 400, 403, 398,
	0, 397, 0, 0, 0, 404, 0, 567, 405, 568,
	407, 408, 0, 0, 409, 0, 0, 0, 411, 412,
	413, 0, 0, 414, 415, 569, 0, 416, 0, 570,
	417, 418, 410, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 428, 571, 572, 573, 429, 574, 430,
	431, 0, 432, 0, 433, 434, 435, 436, 437, 438,
	439, 575, 1084, 440, 442, 0, 443, 0, 0, 0,
	0, 0, 444, 0, 446, 447, 448, 445, 449, 450,
	451, 452, 0, 453, 454, 455, 0, 456, 457, 458,
	459, 576, 460, 0, 461, 462, 468, 469, 463, 464,
	470, 471, 472, 473, 474, 0, 476, 477, 475, 478,
	479, 480, 0, 481, 465, 466, 482, 483, 0, 484,
	485, 486, 487, 488, 489, 577, 0, 490, 0, 491,
	492, 493, 494, 467, 495, 500, 578, 496, 497, 498,
	499, 579, 0, 502, 503, 0, 501, 0, 504, 505,
	506, 507, 508, 509, 325, 510, 0, 511, 580, 581,
	582, 583, 0, 518, 0, 512, 513, 584, 514, 585,
	0, 515, 516, 517, 0, 519, 520, 0, 0, 521,
	522, 523, 525, 526, 524, 527, 0, 528, 0, 0,
	529, 530, 531, 586, 587, 588, 243, 533, 532, 589,
	0, 0, 0, 0, 534, 535, 590, 536, 537, 538,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	540, 541, 0, 265, 542, 266, 543, 0, 544, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 545, 546,
	547, 0, 273, 274, 548, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 299, 300, 0, 301, 549,
	550, 0, 305, 302, 303, 0, 306, 304, 0, 307,
	308, 309, 0, 0, 310, 311, 312, 0, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 551, 320, 321,
	322, 324, 326, 323, 327, 328, 329, 330, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	554, 0, 0, 0, 334, 0, 335, 0, 0, 0,
	336, 337, 555, 556, 338, 339, 0, 340, 557, 0,
	558, 0, 0, 342, 343, 344, 345, 346, 559, 560,
	561, 406, 0, 347, 348, 0, 349, 350, 351, 352,
	0, 0, 0, 0, 353, 354, 356, 0, 0, 355,
	562, 563, 0, 564, 0, 357, 358, 0, 565, 0,
	359, 360, 361, 0, 362, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 0, 369, 371, 370, 0, 372,
	566, 0, 373, 374, 0, 0, 375, 376, 377, 0,
	0, 378, 379, 380, 381, 0, 382, 383, 385, 387,
	384, 386, 391, 388, 389, 390, 393, 0, 392, 0,
	394, 395, 396, 401, 402, 399, 400, 403, 398, 0,
	397, 0, 0, 0, 404, 0, 567, 405, 568, 407,
	408, 0, 0, 409, 0, 0, 0, 411, 412, 413,
	0, 0, 414, 415, 569, 0, 416, 0, 570, 417,
	418, 410, 419, 420, 0, 422, 423, 424, 425, 426,
	0, 427, 428, 571, 572, 573, 429, 574, 430, 431,
	0, 432, 0, 433, 434, 435, 436, 0, 438, 439,
	575, 441, 440, 442, 0, 443, 0, 0, 0, 0,
	0, 444, 0, 446, 447, 448, 445, 449, 450, 451,
	452, 0, 453, 454, 455, 0, 456, 457, 458, 459,
	576, 0, 0, 461, 462, 468, 469, 463, 464, 470,
	471, 472, 473, 474, 0, 476, 477, 475, 478, 479,
	480, 0, 481, 465, 466, 482, 483, 0, 484, 485,
	486, 487, 488, 489, 577, 0, 490, 0, 491, 492,
	493, 494, 467, 495, 500, 578, 496, 497, 498, 499,
	579, 0, 502, 503, 0, 501, 0, 504, 505, 506,
	507, 508, 509, 325, 510, 0, 511, 580, 581, 582,
	583, 0, 518, 0, 512, 513, 584, 514, 585, 0,
	515, 516, 517, 0, 519, 520, 0, 0, 521, 522,
	523, 525, 526, 524, 527, 0, 528, 0, 0, 529,
	530, 531, 586, 587, 588, 0, 533, 532, 589, 0,
	0, 0, 0, 534, 535, 590, 536, 537, 538, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1646, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658,
	1659, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 1651, 1646, 0, 0, 0, 0,
	0, 1637, 1618, 0, 0, 0, 0, 0, 0, 1634,
	1664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 1665, 0, 1640, 1641, 1642, 1643, 1645, 1647, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 1665, 0, 0, 0, 0,
	1653, 1645, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 1661, 0, 1662,
	0, 0, 0, 0, 0, 0, 1632, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 1639, 1648,
	1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 1646, 0,
	0, 0, 1644, 1656, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 1637, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 1646, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 1654, 0, 1664, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 0, 0, 0, 0, 4032,
	0, 0, 1617, 0, 0, 0, 1640, 1641, 1642, 1643,
	0, 0, 1637, 0, 0, 0, 1623, 0, 0, 1654,
	1634, 0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0,
	1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0,
	0, 0, 0, 4028, 0, 1655, 0, 0, 1665, 0,
	0, 0, 0, 0, 1645, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 1662, 0, 0, 0, 0, 0, 0, 1632,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 1641, 1642, 1643, 0, 0, 0, 1653, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 1665, 0, 0, 0, 1663, 0, 1645, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 1661, 0, 1662, 0, 0, 0,
	0, 0, 0, 1632, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 1615, 1616, 0,
	1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 1646,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 1644,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 1656, 0, 0, 1634, 0, 0,
	0, 0, 1654, 0, 0, 0, 1629, 1630, 1636, 1657,
	1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622,
	1624, 1625, 0, 0, 0, 0, 3938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 1641, 1642,
	1643, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627,
	1619, 1620, 1621, 1622, 1624, 1625, 1655, 0, 0, 1665,
	3937, 0, 0, 0, 0, 1645, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 1662, 0, 0, 0, 0, 0, 0,
	1632, 1633, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658,
	1659, 1660, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 0, 0, 0, 1651, 1646, 0, 0, 0, 1638,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 1652, 1637, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 0, 1648,
	1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 1646, 0,
	0, 0, 0, 0, 0, 1618, 1644, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 1640, 1641, 1642, 1643, 0, 1617, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 1637, 0,
	0, 1656, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 1665, 0, 0, 0, 0,
	0, 1645, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 1662,
	0, 0, 0, 0, 0, 0, 1632, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 1640, 1641, 1642, 1643,
	0, 0, 0, 0, 0, 1638, 1623, 0, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 1629, 1630, 1636,
	1657, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621,
	1622, 1624, 1625, 1663, 0, 1655, 0, 3785, 1665, 0,
	0, 0, 0, 0, 1645, 1647, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 1662, 0, 0, 0, 0, 0, 0, 1632,
	1633, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 0, 0, 0, 0, 0, 0, 1653, 0, 0,
	0, 0, 0, 1651, 1646, 0, 0, 0, 1638, 0,
	0, 1618, 1644, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 1637, 0, 0, 1656, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 1640, 1641, 1642, 1643, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 1654,
	1656, 0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0,
	1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0,
	0, 1655, 0, 3646, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 1662, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 1615, 1616,
	0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 1651,
	1646, 0, 0, 0, 1638, 0, 0, 1618, 0, 0,
	0, 0, 1654, 0, 0, 1664, 1629, 1630, 1636, 1657,
	1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622,
	1624, 1625, 1663, 0, 0, 0, 3590, 0, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	1637, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 1646, 0, 0, 0, 0, 0, 0,
	1618, 1644, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 1640, 1641,
	1642, 1643, 0, 1617, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 1637, 0, 0, 1656, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	1665, 0, 0, 0, 0, 0, 1645, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1662, 0, 0, 0, 0, 0,
	0, 1632, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	0, 1640, 1641, 1642, 1643, 0, 0, 0, 0, 0,
	1638, 1623, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1663, 0,
	1655, 0, 3589, 1665, 0, 0, 0, 0, 0, 1645,
	1647, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 1662, 0, 0,
	0, 0, 0, 0, 1632, 1633, 0, 1615, 1616, 0,
	1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0,
	0, 0, 1653, 0, 0, 0, 0, 0, 1651, 1646,
	0, 0, 0, 1638, 0, 0, 1618, 1644, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 1637,
	0, 0, 1656, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 1640, 1641, 1642,
	1643, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 1654, 1656, 0, 0, 1629, 1630,
	1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620,
	1621, 1622, 1624, 1625, 0, 0, 1655, 0, 3588, 1665,
	0, 0, 0, 0, 0, 1645, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 1662, 0, 0, 0, 0, 0, 0,
	1632, 1633, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658,
	1659, 1660, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 0, 0, 0, 1651, 1646, 0, 0, 0, 1638,
	0, 0, 1618, 0, 0, 0, 0, 1654, 0, 0,
	1664, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626,
	1627, 1619, 1620, 1621, 1622, 1624, 1625, 1663, 0, 0,
	0, 3290, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 1652, 1637, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 0, 1648,
	1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 1646, 0,
	0, 0, 0, 0, 0, 1618, 1644, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 1640, 1641, 1642, 1643, 0, 1617, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 1637, 0,
	0, 1656, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 1665, 0, 0, 0, 0,
	0, 1645, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 1662,
	0, 0, 0, 0, 0, 0, 1632, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 1640, 1641, 1642, 1643,
	0, 0, 0, 0, 0, 1638, 1623, 0, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 1629, 1630, 1636,
	1657, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621,
	1622, 1624, 1625, 1663, 0, 1655, 0, 2854, 1665, 0,
	0, 0, 0, 0, 1645, 1647, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 1662, 0, 0, 0, 0, 0, 0, 1632,
	1633, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 0, 0, 0, 0, 0, 0, 1653, 0, 0,
	0, 0, 0, 1651, 1646, 0, 0, 0, 1638, 0,
	0, 1618, 1644, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 1637, 0, 0, 1656, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 1640, 1641, 1642, 1643, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 1654,
	1656, 0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0,
	1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0,
	0, 1655, 0, 2853, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 1662, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 1615, 1616,
	0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 1651,
	1646, 0, 0, 0, 1638, 0, 0, 1618, 0, 0,
	0, 0, 1654, 0, 0, 1664, 1629, 1630, 1636, 1657,
	1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622,
	1624, 1625, 1663, 0, 0, 0, 2852, 0, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	1637, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 1646, 0, 0, 0, 0, 0, 0,
	1618, 1644, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 1640, 1641,
	1642, 1643, 0, 1617, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 1637, 0, 0, 1656, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	1665, 0, 0, 0, 0, 0, 1645, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1662, 0, 0, 0, 0, 0,
	0, 1632, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	0, 1640, 1641, 1642, 1643, 0, 0, 0, 0, 0,
	1638, 1623, 4154, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1663, 0,
	1655, 0, 2851, 1665, 0, 0, 0, 0, 0, 1645,
	1647, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 1662, 0, 0,
	0, 0, 0, 0, 1632, 1633, 0, 0, 0, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 0, 1653, 0, 0, 0, 0, 0, 0, 0,
	1651, 1646, 0, 1638, 0, 0, 2789, 1644, 1618, 0,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 1637, 1656, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2790, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 1654, 1656, 0, 0, 1629, 1630,
	1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619, 1620,
	1621, 1622, 1624, 1625, 0, 0, 2818, 0, 1655, 0,
	0, 1665, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 1654, 0, 0,
	0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626,
	1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0, 1663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 0, 1648,
	1649, 1650, 1658, 1659, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 1646, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 1644, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 1656, 0, 2403, 1634, 0, 0, 0,
	0, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1651, 1646, 0, 0, 0, 2402, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 1640, 1641, 1642, 1643,
	0, 0, 0, 0, 1637, 0, 1623, 0, 2914, 0,
	0, 2913, 1634, 0, 0, 1654, 0, 0, 0, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 1655, 0, 0, 1665, 0,
	0, 0, 0, 0, 1645, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 1662, 0, 0, 0, 0, 0, 0, 1632,
	1633, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 0, 1640, 1641, 1642, 1643, 0, 1653, 0, 0,
	0, 0, 1623, 1651, 1646, 0, 0, 0, 1638, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 0, 1665, 0, 1663, 0, 0, 0,
	1645, 1647, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 1637, 0, 1661, 0, 1662, 0,
	0, 0, 1634, 0, 0, 1632, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 1640, 1641, 1642, 1643, 0, 0, 0, 1652,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 0, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 1661, 0, 1662, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 1656, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 1629, 1630, 1636, 1657,
	1635, 1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622,
	1624, 1625, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 1646, 0, 0, 0, 0, 1654, 0,
	1618, 1644, 1629, 1630, 1636, 1657, 1635, 1631, 1664, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1656, 0, 0, 0,
	0, 1634, 0, 0, 0, 1615, 1616, 0, 1648, 1649,
	1650, 1658, 1659, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 1646, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 1640, 1641, 1642, 1643, 0, 0, 1637, 0, 0,
	0, 1623, 0, 0, 0, 1634, 0, 0, 1654, 0,
	0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0,
	1655, 0, 0, 1665, 0, 0, 0, 0, 0, 1645,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 1662, 0, 0,
	0, 0, 0, 0, 1632, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 1641, 1642, 1643, 0,
	0, 0, 1653, 0, 0, 1623, 0, 0, 0, 0,
	2920, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 1665, 0, 0,
	0, 1663, 0, 1645, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 1661,
	0, 1662, 0, 0, 0, 0, 0, 0, 1632, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658, 1659,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1651, 1646, 0, 0, 0, 2915, 0,
	0, 1618, 0, 3271, 1644, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 1656,
	0, 0, 1634, 0, 0, 0, 0, 1654, 0, 0,
	0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626,
	1627, 1619, 1620, 1621, 1622, 1624, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 1641, 1642, 1643, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 1654, 0, 0, 0, 1629, 1630, 1636, 1657, 1635,
	1631, 0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624,
	1625, 1655, 0, 0, 1665, 0, 0, 0, 0, 0,
	1645, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 1662, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 1615, 1616,
	0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 1651,
	1646, 0, 0, 0, 1638, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	1637, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 0, 1648, 1649, 1650, 1658,
	1659, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1651, 1646, 0, 0, 0, 2855,
	0, 1644, 1618, 0, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 1640, 1641,
	1642, 1643, 0, 0, 0, 1617, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 1637, 1656, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	1665, 0, 0, 0, 0, 0, 1645, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1662, 0, 0, 0, 0, 0,
	0, 1632, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	0, 0, 0, 1640, 1641, 1642, 1643, 0, 0, 0,
	1638, 0, 0, 1623, 0, 0, 0, 0, 1654, 0,
	0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0, 1628,
	1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1663, 0,
	0, 0, 1655, 0, 0, 1665, 0, 0, 0, 0,
	0, 1645, 1647, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 1662,
	0, 0, 0, 0, 0, 2882, 1632, 1633, 0, 1615,
	1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	1651, 1646, 0, 0, 0, 1638, 0, 1644, 1618, 0,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 1637, 1656, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1616, 0, 1648, 1649, 1650,
	1658, 1659, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 1646, 0, 0, 0,
	0, 0, 1644, 1618, 0, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 1640,
	1641, 1642, 1643, 0, 0, 0, 1617, 0, 0, 1623,
	0, 0, 0, 0, 1654, 0, 1637, 1656, 1629, 1630,
	1636, 1657, 1635, 1631, 1634, 1628, 1626, 1627, 1619, 1620,
	1621, 1622, 1624, 1625, 0, 0, 0, 0, 1655, 0,
	0, 1665, 0, 0, 0, 0, 0, 1645, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 1662, 0, 0, 0, 0,
	0, 0, 1632, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 0, 0, 0, 1640, 1641, 1642, 1643, 0, 0,
	0, 1638, 0, 0, 1623, 0, 0, 0, 0, 1654,
	0, 0, 0, 1629, 1630, 1636, 1657, 1635, 1631, 0,
	1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625, 1663,
	0, 0, 0, 1655, 0, 0, 1665, 0, 0, 0,
	0, 0, 1645, 1647, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	1662, 0, 0, 0, 0, 0, 0, 1632, 1633, 0,
	1615, 1616, 0, 1648, 1649, 1650, 1658, 1659, 1660, 0,
	0, 0, 0, 0, 0, 1653, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 1638, 0, 1644, 1618,
	0, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 1656, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	1640, 1641, 1642, 1643, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 1654, 0, 0, 1656, 1629,
	1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627, 1619,
	1620, 1621, 1622, 1624, 1625, 0, 0, 0, 0, 1655,
	0, 0, 1665, 0, 0, 0, 0, 0, 1645, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 0, 1662, 0, 0, 0,
	0, 0, 0, 1632, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 0, 0, 1629, 1630, 1636, 1657, 1635, 1631,
	0, 1628, 1626, 1627, 1619, 1620, 1621, 1622, 1624, 1625,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	1629, 1630, 1636, 1657, 1635, 1631, 0, 1628, 1626, 1627,
	1619, 1620, 1621, 1622, 1624, 1625,
}
var sqlPact = [...]int{

	9069, -1000, -1000, -1000, -1000, 206, -1000, -1000, 205, 192,
	191, 186, 185, 184, 177, 175, 169, -1000, -1000, -1000,
	-1000, -1000, -1000, 167, -1000, -1000, 163, -1000, 160, 159,
	157, -1000, -1000, 156, -1000, 153, -1000, -1000, -1000, -1000,
	151, 150, 149, 77050, 76565, 77529, 2149, 93935, 82331, 2002,
	68829, 93450, 68344, 92965, 92480, 2577, 148, -1000, 91995, 147,
	143, 140, -1000, 91510, -1000, 1772, -1000, 133, 4070, 56205,
	132, 131, 130, 2246, 128, -1000, 127, 124, -1000, 9507,
	1643, -1000, 122, 120, -1000, 8609, 4381, 81367, 118, 117,
	2154, 116, 114, 55719, 113, 112, 2042, 2766, -1000, -1000,
	1950, -1000, -1000, 111, 110, 109, 108, 107, 106, 105,
	101, 100, 99, -1000, 97, 96, 94, 93, 92, 91,
	90, 88, -1000, 87, 86, 85, 84, 82, 81, 80,
	79, 77, 76, 75, 74, -1000, 11813, 72, 1863, 1698,
	1690, 1685, 1684, 1608, 1028, 71, 70, 66, 59, 54,
	53, 52, 51, 50, -1000, 49, 47, 44, 42, 36,
	35, 34, 33, 158, 31, 28, 26, 25, 24, 22,
	17, 3132, -1000, 1583, 1072, 26499, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 99683, 94414, 16, -58, 15, -1000,
	3155, 990, 46472, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 324,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 519, 1797, 789, -1000, -1000, -1000, 91031,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2148, -2,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 788, -1000, 2143,
	212, 2086, -1000, -1000, -1000, -1000, -1000, 94414, -1000, 1066,
	-1000, -1000, 3524, 3523, 1939, 787, 90552, -1000, 1531, -1000,
	981, 28026, -1000, 1250, -1000, 28026, 306, -1000, -1000, -1000,
	-1000, -1000, -1000, 3522, 3521, 3518, 3517, -1000, -1000, 67859,
	20337, 67374, 66889, 90067, 19842, 76080, 75595, 89582, 63023, 1064,
	-1000, -1000, -1000, 1444, -1000, -1000, -1000, -1000, -1000, -1000,
	-16, 60548, 3347, 94414, -1000, 303, -1000, -1000, -1000, -1000,
	-1000, -1000, 39949, 624, 39428, 453, 38907, 350, -1000, -1000,
	-1000, 62528, -1000, 3516, 3514, 1147, 3512, 3066, 99204, 1786,
	3510, 1833, 1219, 3509, 3508, 3507, 3506, 3505, 3501, 1455,
	89097, 2805, 88612, 1749, 62033, 1063, 75110, 77529, 2552, 88127,
	1414, 1393, -1000, -1000, -1000, -1000, 2927, 2765, 2764, 52342,
	-1000, -1000, 3497, 3496, 3495, 3492, 3491, 98725, 1784, 3489,
	2396, 3488, 3484, 3482, 3481, 3478, 3476, 3473, -1000, 74625,
	1062, 74140, 73655, 3191, 87642, 73170, 87157, 61538, 38386, 994,
	-1000, -1000, -1000, 48426, 7237, 7078, 86672, 50405, 77529, 77529,
	-1000, -1000, -1000, -1000, -1000, 37865, 311, 37344, 725, -1000,
	-1000, 48926, 2778, -1000, -1000, -1000, -1000, 36823, 285, 36302,
	623, 94414, -1000, 2804, 1847, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2550, 1556, 3377,
	2616, 61043, 1947, 1359, 3129, 2925, 2924, 1486, 3472, 2403,
	2922, 2921, 2920, 2875, 2870, 1708, 2506, 309, 25978, 2791,
	1687, 35781, 1462, 1506, 2869, 2858, 3387, 1910, 1889, 1998,
	66404, 3471, 3470, 3087, 2849, 2846, 2776, -1000, -1000, -1000,
	-1000, 1430, -1000, -1000, -1000, -1000, -1000, 69308, -1000, -1000,
	1216, -1000, -1000, 1216, -1000, -1000, -1000, -1000, -1000, 1370,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1583, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2045, -1000, 1919, -1000, -1000, 2568, 3123, 3123,
	3123, 3159, 493, 469, -1000, 158, -1000, -1000, 105408, -1000,
	-1000, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 1995, -1000,
	786, -1000, -1000, 816, -1000, 778, 649, -1000, -1000, -1000,
	-1000, -1000, -1000, 774, -1000, -1000, -1000, -1000, -1000, -1000,
	3347, -1000, 22864, -1000, -1000, -1000, 458, 771, 40458, -1000,
	-1000, 3400, 3398, 974, -1000, 293, 1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2802,
	770, 766, -1000, 765, 764, 761, 759, 755, -1000, -1000,
	-1000, 754, 753, 752, 750, 749, 747, 745, 743, -1000,
	1924, -1000, -1000, -1000, -1000, -1000, -1000, 697, 696, 696,
	696, -1000, 1052, -1000, -1000, -1000, 345, 694, 341, 690,
	688, 687, -1000, 739, 738, 735, 734, 733, 732, 730,
	724, 723, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1049, -1000,
	-1000, -1000, -1000, -19, 94414, -1000, 519, -19, -1000, -1000,
	722, -1000, 30074, 30074, 30074, -1000, -1000, 2142, 40458, -1000,
	2493, -1000, -3, -3, 876, 47440, -1000, 45486, 876, 283,
	826, 51856, -1000, 2775, -1000, -1000, 720, 290, -1000, -1000,
	-1000, -1000, 20830, 2774, 94414, 94414, 77529, 77529, 77529, 3009,
	40458, -1000, -1000, 58121, 94414, 78008, 3302, 58600, 57642, 94414,
	2800, -1000, 3097, -1000, -1000, 94414, -1000, 40458, -1000, 3301,
	1496, 63999, 3187, -27, -1000, -1000, -1000, -1000, -1000, -1000,
	2332, 2463, 1178, 2174, 1589, -1000, 28026, 3052, -1000, -1000,
	-1000, 271, 20830, -1000, -1000, -1000, -1000, -1000, 3353, 2983,
	1344, -1000, 2170, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1750, 2981, -1000, 2055, 2978, 1732, -1000, -1000,
	2195, -1000, -1000, 3083, -1000, -1000, 1990, 2975, 3, -1000,
	-1000, 2372, -1000, -1000, 1955, -1000, -1000, 1027, 2974, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 72685, 49912,
	48926, 60548, -23, -1000, -1000, -1000, -1000, -34, -1000, 19347,
	105408, -1000, -1000, -1000, -1000, 1785, 105408, 874, -1000, -1000,
	2969, -1000, 105408, 850, -1000, -1000, 2968, -1000, 2797, -1000,
	-1000, -1000, -1000, 3469, -1000, 3461, 2243, 3458, 3455, 3453,
	-1000, 1683, 1897, 3452, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 72206, 2139, -1000, -1000, 71236, -1000, 2242, -1000, 71721,
	1054, -1000, 1027, 2241, -1000, 80882, 966, -1000, 3451, 3178,
	2573, 1027, 2240, -1000, -1000, -1000, -1000, -1000, 53788, -1000,
	53788, -1000, 53788, -1000, 1550, -1000, 98246, -3, -3, 3347,
	-1000, -1000, -1000, -1000, -1000, 2967, 3450, 3443, 3442, -1000,
	94414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 193, 2959,
	-1000, -1000, 80403, 193, 2950, -1000, 193, 2946, -1000, 79924,
	-1000, -1000, 2167, 2945, -1000, 199, 2944, -1000, -1000, 197,
	2934, -1000, -1000, -45, 2929, -1000, -1000, 105408, -1000, -1000,
	-1000, -40, -1000, -1000, -1000, 990, -1000, 47926, -1000, 47926,
	86187, 63516, 1009, 746, 55233, 105408, -1000, -1000, -1000, -1000,
	105408, -1000, -1000, -1000, -112, -1000, -1000, 63516, 48926, 105408,
	-1000, -1000, -1000, -1000, 105408, -1000, -1000, -1000, 63516, 71236,
	-1000, 85702, 70757, -1000, -1000, 1450, 2455, -1000, -1000, -1000,
	63516, 1292, 63516, 63516, 63516, -1000, 85217, -1000, -1000, 1979,
	1613, 3085, 1973, 77529, -1000, 1852, -1000, -1000, -1000, 3117,
	-1000, 2793, -1000, 57163, 79445, -1000, 78966, -1000, 78487, -1000,
	77529, -1000, 77529, -1000, 3441, 3439, 3438, -1000, 3436, 3107,
	-1000, 105408, 3106, -1000, 3435, 3182, 2791, 105408, -1000, 2871,
	1617, 1603, 94414, -1000, -1000, 94414, -1000, 94414, -1000, -1000,
	-1000, 1500, -1000, -1000, 2300, -1000, -1000, -1000, -1000, 77529,
	-1000, -1000, -1000, -1000, -1000, -1000, 2788, -1000, 1686, -1000,
	1788, -1000, 1449, -1000, -1000, 201, -1000, -1000, -27, -1000,
	97767, -1000, 2568, -1000, 94414, -1000, 2305, 2783, 2787, 1672,
	2144, 2500, -1000, 35260, 2377, 43003, 2164, 158, -1000, -1000,
	158, 158, 27517, -1000, -1000, 58600, 58600, 20830, 1380, 40458,
	40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458,
	40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458,
	40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458, 40458,
	40458, 40458, 40458, 40458, 2104, 40458, 1357, 40458, 40458, 40458,
	40458, 1728, -1000, -1000, 1873, 541, 1946, -1000, 3356, 3356,
	3356, 513, 513, 105729, 105729, 616, 3434, 816, -1000, 40458,
	-1000, 98, 40458, 21325, -1000, 469, 7831, 2307, -1000, 463,
	21846, -1000, -1000, -1000, 22864, 649, 34739, 40458, 1043, 105408,
	-1000, -1000, 1636, 3357, 18854, 2818, 2652, 713, 783, 780,
	25457, 24936, 24415, 23894, 775, 40458, 40458, 40458, 40458, 40458,
	40458, 40458, 40458, -1000, -1000, 3380, -1000, 3357, -1000, -1000,
	-1000, -1000, 3357, 1368, 1348, 3357, -1000, 3357, 3357, 3005,
	3005, 34230, 33709, 33188, 43512, 32667, 40458, 23373, 32146, 31625,
	-1000, 94414, -19, 3296, 40458, 166, -1000, 104001, -1000, 166,
	166, 710, -47, 105408, 2484, 2484, 46956, 2205, 2021, 2021,
	2021, -1000, 876, 14881, 876, 84255, 2037, 876, 876, 254,
	281, 460, 45002, 2493, 84255, 804, 709, 14, 12, 11,
	-1000, -1000, 10, 8, -1000, -1000, 77529, 705, 21325, 20830,
	245, 1469, -48, 2521, 2518, 2515, -1000, 2468, 1789, -57,
	1347, 77529, -162, -1000, 5906, -59, -1000, 997, 222, 3357,
	-1000, -1000, -1000, -1000, -1000, 3433, 3430, -1000, 1047, 702,
	701, 718, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	697, 696, 696, 696, -1000, 345, 694, 341, 690, 688,
	687, -1000, -1000, -1000, -1000, -1000, 2772, 77529, -34, 78008,
	77529, 917, -62, 1150, -27, -1000, -1000, -1000, 63999, 1216,
	-1000, 1768, -1000, -1000, -1000, -1000, -1000, -1000, 1433, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 974, -1000, -1000, -1000,
	-1000, -1000, -1000, 3369, 3365, -20, -1000, -1000, 20830, -1000,
	-29, 1762, 1770, -1000, 65919, 2228, 3103, 3074, 1538, -1000,
	1499, 1346, 3156, 69308, 3196, 3303, 699, -1000, 2770, -1000,
	-1000, 965, 1669, 1739, 1345, 69308, 2055, -1000, 58600, -1000,
	2507, 3153, 1342, 1364, 1342, 1342, 1327, -1000, 69308, 1737,
	1343, 1341, -1000, 1340, 1339, -1000, -30, 3194, 3212, 214,
	-1000, 2761, 1338, -1000, -1000, 77529, 20830, 1519, 1518, 1699,
	1337, -22, -1000, 3192, 3189, 1324, 1323, -1000, 2196, -1000,
	63516, 1722, 2907, 2607, 854, 2600, -1000, -1000, 854, -23,
	60548, 94414, 219, -1000, 98, 40458, 40458, 98, 40458, 98,
	3180, -1000, -1000, 2905, -1000, -1000, -1000, 3428, 1872, 2390,
	-1000, -1000, 684, 2239, 2760, 94414, 2538, -25, 77529, -1000,
	2898, 2055, 2235, -1000, -1000, 70272, -1000, 2896, 519, 2233,
	-1000, 641, 3427, -1000, 97288, -1000, 3097, 1354, 2894, 1101,
	676, 3294, -1000, 676, 54267, -1000, 94414, -1000, -1000, 94414,
	-1000, -1000, -1000, 3425, -1000, 77529, -1000, -1000, 77529, 193,
	2893, -1000, 77529, -1000, 77529, 188, 2891, -1000, -1000, 94414,
	-1000, 77529, 77529, -1000, 94414, 94414, 63516, 63516, 7050, 64961,
	-65, -68, 459, -1000, 84738, 94414, 1100, 65440, 94414, 3042,
	1022, 48926, -1000, -77, -112, 2594, 1009, 1009, 854, -1000,
	854, -1000, 77529, 2786, -1000, -1000, 63516, 1009, 1009, 1009,
	-1000, -1000, -1000, -1000, 3424, 3423, -1000, -1000, -1000, 1026,
	77529, 94414, 77529, -1000, -1000, 94414, -1000, 94414, -1000, 1026,
	94414, 1026, 94414, 1026, 94414, -1000, -1000, -1000, -1000, -1000,
	-1000, 98, 40458, -1000, -1000, 3422, 1596, -1000, 2785, -1000,
	2784, -1000, 40, -1000, -1000, -1000, -1000, -1000, 1831, 77529,
	77529, 77529, 77529, 94414, 77529, -1000, 69308, -1000, 2305, 2783,
	-1000, -1000, -1000, -1000, -1000, -1000, 1453, 2093, -1000, 2447,
	-1000, 1524, -1000, -1000, -1000, 105408, 44005, -1000, -1000, 105408,
	1796, -1000, 42494, 41985, -1000, -1000, 1677, 77529, 2551, -1000,
	2551, -169, -1000, 103598, 2441, 77529, -1000, -1000, -1000, -1000,
	-1000, 958, 1224, 1224, 1220, 1220, 1220, 1220, 3314, 4441,
	4972, 1855, 4931, 4931, 902, 902, 902, 902, 902, 4931,
	381, 513, 513, 381, 381, 381, 381, 381, 513, 513,
	513, 4931, 4931, 4931, 105729, 105503, 6057, 40458, 40458, 1322,
	1848, 541, 5668, 40458, 6919, 6919, 6919, 6919, -1000, 2140,
	-1000, -1000, -1000, -1000, 2755, 683, 43512, 43512, -1000, -1000,
	-1000, -1000, 22355, 40458, -1000, -1000, -1000, -1000, 31104, -1000,
	-1000, 103277, -277, 451, -148, 1, -1000, 40458, 40458, 40458,
	449, -1000, 217, 40458, 94414, -1000, 14300, 803, -73, -1000,
	-80, 1394, -1000, 40458, -1000, -1000, 1320, -1000, 1316, 1315,
	1308, -1000, 675, 445, -1000, 216, -1000, 2016, 674, 673,
	40458, -1000, -1000, -1000, -1000, -1000, 103051, -1000, -1000, 102825,
	-1000, -1000, 102732, -1000, -1000, 102506, -1000, -1000, -1000, 105182,
	14134, 13778, 13418, 6806, 12668, 10518, -82, 444, -83, 442,
	947, 946, 441, 440, 439, -88, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -90, 419, -1000, 2752, -148, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 411, -1000, 409,
	-1000, 105087, -148, 408, 569, -1000, 43512, 43512, 43512, -1000,
	407, -1000, 103915, -1000, 104861, 30595, 30595, 30595, 406, 104544,
	40458, -148, -93, -1000, -95, -1000, -1000, 471, -96, 1031,
	30074, 45986, 20830, -1000, 1031, 1031, 40458, -1000, 40458, 2501,
	-1000, -1000, -1000, 2496, 1717, 2484, 46956, -1000, -1000, -1000,
	-1000, 84255, -1000, 3347, 2679, -1000, 84255, -1000, -1000, 94414,
	519, -1000, 84255, 84255, 20830, 876, -1000, 876, 84255, 654,
	-1000, -1000, -1000, -1000, -1000, 404, 50888, 1, 213, 20830,
	1027, -1000, 2459, 2459, 2459, 2459, -1000, -1000, 94414, 1307,
	-24, 3321, -1000, 1937, -1000, 58600, -1000, 815, 1184, 20830,
	-1000, -1000, -1000, 670, -1000, 3357, 3357, -1000, 3357, 94414,
	2749, 139, -1000, 28026, -1000, 1216, -1000, -1000, 1516, -1000,
	1882, -1000, 1296, -1000, -1000, -1000, -1000, 28026, -1000, 2141,
	94414, 94414, 77529, -1000, 94414, -1000, 2232, 96809, 2229, 58600,
	94414, -1000, -1000, 667, 666, 2431, 2429, 1096, 94414, 94414,
	2422, 96330, 95851, 94414, 1936, 40458, 60069, 2063, 2278, 98,
	98, -1000, -1000, 98, 664, 1255, 77529, 77529, 94414, 77529,
	1696, -1000, -1000, -1000, -1000, -1000, 69787, -1000, -1000, 3375,
	3372, -1000, 1342, -1000, -1000, -1000, 1342, 2055, 1676, 94414,
	77529, 60069, 1679, 94414, 1952, 98, 98, -1000, -1000, 98,
	662, 20830, 1895, -1000, 2817, 94414, 3396, 94414, 94414, 94414,
	60069, 3114, 95372, 94414, 94414, 60069, 2196, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	59586, 1106, 1027, 1648, 1302, 69308, 48926, 1021, 48926, 2578,
	-1000, -1000, 18361, -1000, 105408, 105408, -1000, 105408, -1000, 56684,
	94414, -1000, 1034, 94414, 65440, 995, 2890, 53309, -34, 1009,
	63516, 77529, -25, 94414, -1000, 2055, 2888, 519, 2225, -1000,
	63516, 3287, 2887, 656, 3421, 3420, -1000, 2138, 2222, -1000,
	-1000, 94893, 2884, 861, 94414, 1031, 46956, 1899, -1000, 51373,
	1074, 94414, 1822, 102, -1000, -1000, -1000, 19, 94414, -1000,
	3419, -1000, -1000, 193, -1000, 77529, 193, 193, -1000, 77529,
	77529, 2167, -1000, 199, -1000, 197, -1000, -45, -1000, -1000,
	7050, 7050, 1009, -181, 652, -1000, 922, 920, 49419, 63516,
	-98, -1000, -1000, -1000, -1000, -1000, 77529, 94414, 748, 2572,
	94414, -101, -1000, 211, 651, -1000, 2707, -1000, -1000, 1022,
	48926, 2743, -1000, -1000, 1036, -1000, 1448, 1009, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -4, -34, -34,
	-1000, 1026, -1000, 1026, -1000, 1026, -1000, 105408, -1000, -1000,
	1595, 1567, 94414, -1000, 20830, 94414, 77529, 20830, 77529, 2782,
	2769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1113,
	-1000, 1796, 2090, -1000, 649, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2290, -1000, -26, 27517, 2158, -1000,
	-1000, 77529, -5, 40458, 40458, 5013, 891, 40458, 43512, 43512,
	-1000, 40458, 308, -1000, -1000, -1000, -1000, -1000, 2742, 642,
	40458, 58600, 7105, 6088, -1000, 402, 9504, 381, -1000, 40458,
	-1000, 400, 29565, -1000, 104141, -32, -103, -1000, 15387, -148,
	-106, -1000, -1000, 814, -1000, 2994, -1000, 40458, 104460, 2224,
	2058, 1764, 1612, 3357, 3394, 17868, -1000, 54750, 1040, 2046,
	102280, -1000, -1000, -1000, -1000, 58600, 58600, 40458, 40458, -1000,
	40458, 40458, 40458, -1000, -1000, -1000, 3357, 961, -1000, -1000,
	-1000, 961, -1000, -1000, 1342, -1000, 1342, -1000, 40458, -1000,
	-1000, 2736, 40458, -1000, 58600, 58600, 43512, 43512, 43512, 43512,
	43512, 43512, 43512, 43512, 43512, 43512, 43512, 43512, 43512, 43512,
	43512, 43512, 43512, 43512, 43512, 2480, 43512, 3339, 3339, 3339,
	-1000, 2768, 2736, 40458, 40458, 58600, 399, 398, 395, -1000,
	40458, -148, -1000, -1000, 7050, 640, -1000, 2268, -1000, 2646,
	-1000, 40458, -1000, -91, -1000, 2493, -1000, -1000, 2646, 2646,
	-114, 105408, 46956, 46956, -1000, 638, 40458, 2466, -1000, -1000,
	799, -279, -1000, 918, -1000, -1000, -1000, -1000, -1000, 519,
	-1000, -1000, -1000, 210, 84255, 84255, 798, -1000, -115, -1000,
	-1000, -124, -1000, 3285, 390, 20830, -1000, -1000, 3092, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, 94414, 2079, 3393, -1000,
	3367, 813, 796, 194, 3357, 389, 388, 386, -34, 94414,
	94414, -1000, -27, -1000, -1000, -1000, 40458, -1000, -1000, 3086,
	1286, 1283, -1000, -1000, 2882, -1000, 2218, -1000, 1079, -1000,
	1834, -1000, 40458, 40458, 637, 626, 3418, 1836, 3417, 1098,
	2881, 2167, 2876, 2167, -1000, -1000, 986, -1000, 105408, -1000,
	-1000, -1000, -1000, 625, 621, -1000, -29, 1691, 1629, 1033,
	-1000, -1000, 40458, 40458, 83776, -1000, 410, 3083, -8, -1000,
	-1000, 1627, 1282, -1000, -1000, -1000, -1000, 2055, 1626, 1278,
	-1000, -1000, -1000, 1032, -1000, -1000, 1030, -1000, -1000, 40458,
	-1000, -30, 1277, 3210, 2215, 77529, 1261, -1000, 1260, -1000,
	-1000, -1000, 3181, 2167, 2872, 1214, -1000, -1000, -1000, -1000,
	-1000, 59093, -1000, 94414, 77529, 1640, 854, -1000, 2388, 854,
	1021, 2735, -1000, 2527, 3416, 77529, 3415, 384, -125, -31,
	58600, 3270, -1000, 2156, 607, 77529, 976, -1000, 3347, -1000,
	-1000, -1000, -1000, 77529, 3265, 2867, 1027, 98, 77529, 3392,
	-1000, -1000, 77529, 2866, 2121, 2208, 2350, 861, 64482, -1000,
	1027, 2043, -42, -1000, 1822, 29044, 3080, -127, -1000, -1000,
	-1000, 1031, 54267, 46956, 40458, 3414, -135, -1000, -1000, 193,
	-1000, -1000, -1000, 188, -1000, -1000, -1000, -1000, -1000, -1000,
	82814, 82814, 63516, 63516, 63516, 1009, 94414, 94414, 65440, -1000,
	620, 94414, 94414, 615, -1000, 94414, 94414, 3413, 63516, -33,
	612, -1000, 906, 905, 895, -1000, -1000, -1000, -1000, -1000,
	-1000, -112, 98, -1000, 2069, 77529, -1000, 17375, -1000, -1000,
	-1000, -1000, -1000, 1026, -1000, -1000, 1978, 2163, 1978, 1812,
	1803, -1000, 2089, -1000, -1000, -1000, -1000, 2462, 3102, 20830,
	3268, 6919, 40458, 40458, 241, 5068, 4605, 6919, 40458, 40458,
	58600, 11060, -136, 40458, 40458, -1000, 40458, 795, 105408, 3391,
	40458, 383, 377, -1000, -1000, -1000, 3349, -1000, -1000, -1000,
	105408, 40458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 367,
	-1000, 189, -1000, -1000, -1000, 100162, -1000, 40458, 365, 3151,
	-1000, 364, 363, 8354, 496, 102187, 101961, 101735, 362, -1000,
	-1000, 360, 359, 105408, 2768, 105408, -1000, -1000, 842, 842,
	1318, 1318, 1318, 1318, 3339, 957, 1075, 936, 867, 867,
	867, 925, 1029, 1029, 867, 867, 867, 2732, 2352, 609,
	6151, -1000, -1000, 105408, 105408, 356, -1000, -1000, -1000, -148,
	354, 7050, -1000, 2640, 3150, 105408, -1000, 46956, 2640, 2640,
	-1000, -1000, 1717, 94414, 105408, 46956, -1000, 2679, -1000, 15891,
	-1000, 20830, -1000, -1000, -1000, -1000, 3347, -1000, 50888, -1000,
	600, -1000, 41, 3092, -1000, 885, -1000, -34, -1000, -1000,
	794, 3412, 807, 20830, 353, -1000, -1000, -1000, -34, -34,
	105408, 94414, 94414, 94414, 2865, -1000, 4423, -1000, 1096, 101642,
	-141, -1000, 103598, 40458, 94414, -1000, -1000, 1790, 2393, 1125,
	-1000, 3120, 94414, -1000, 94414, -1000, -1000, 94414, 94414, 77529,
	94414, 2837, -142, 105408, -36, -1000, 884, -1000, 1334, -1000,
	16882, 94414, 77529, 94414, 77529, 2008, 2833, -149, 20830, -1000,
	3390, 3389, 2861, 3124, 3388, 94414, -1000, 94414, 77529, 3041,
	-1000, -1000, -1000, -1000, 1625, 1253, 1021, -37, 599, -1000,
	882, -1000, -1000, 870, 1021, -1000, 63516, 48926, -1000, 519,
	-1000, 2566, -1000, 81846, 2084, 98, -1000, 3410, 83297, 596,
	-1000, 2053, -1000, 793, 2055, 98, 77529, -1000, -1000, 519,
	351, -38, -1000, 1089, 20830, 77529, 2860, 2381, 861, 64482,
	-1000, 1354, 2500, -1000, -39, -1000, 568, 98, 2043, -1000,
	-42, 105408, -1000, 868, -1000, -1000, -1000, -150, -1000, -1000,
	343, -1000, 3040, 3039, -1000, 2647, 40458, 595, 585, 94414,
	3036, -1000, -1000, -151, 2697, 2697, 63516, 48926, 63516, 1022,
	-1000, 2257, -1000, -1000, -1000, -1000, -1000, 20830, 1651, -1000,
	578, 577, -1000, -1000, -1000, -1000, 3102, 6919, 6919, 40458,
	40458, 40458, 6919, 11060, -152, -1000, 6919, 6919, -148, -1000,
	-1000, 104141, -1000, -1000, -1000, 105408, -1000, 16389, 1986, -1000,
	101416, -1000, 27517, -1000, -1000, 40458, 40458, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 43512, 2708, 572, 58600, -1000,
	-1000, 337, 1038, 40458, 40458, 2493, 1038, 1038, -1000, -157,
	-1000, -1000, -1000, 3347, 41, -1000, -1000, 3409, 20830, -1000,
	63516, 806, -1000, 3408, -1000, -1000, -1000, -1000, -1000, 94414,
	-1000, 94414, -1000, 20830, 94414, 2678, 2200, -1000, -1000, 2415,
	570, 43512, 77529, 871, -1000, 3315, 2655, 1820, 40458, 2158,
	-159, -160, 2190, -1000, -1000, 2181, 40458, -1000, 58600, 556,
	2167, 2167, -166, -171, -1000, -1000, 40458, 1247, 94414, 28535,
	-1000, 3407, 3083, -1000, -1000, -1000, -1000, 94414, 40458, 1239,
	-1000, -1000, -1000, 3386, 2167, 20830, -1000, 2167, 2167, 3124,
	1123, 94414, 77529, -1000, 2125, 2125, 63516, 48926, -1000, -45,
	1021, 3256, 1952, 2586, -1000, -1000, -1000, -1000, 2397, -1000,
	-1000, 94414, 2385, 1010, -1000, -174, -1000, 865, 864, 65440,
	995, 977, -1000, -1000, -1000, 519, 3231, -1000, 3385, 549,
	94414, 2117, 547, 20830, -1000, 861, 64482, -1000, 2884, 1822,
	-1000, 3004, 94414, 3073, -1000, 2500, 541, -1000, 1009, 540,
	539, 2260, 2260, -176, 40458, 40458, -182, 531, 1009, -1000,
	-185, -1000, -1000, -1000, -1000, -108, -1000, 841, 839, -1000,
	-1000, 77529, 77529, 40458, 40458, -1000, 6919, 6919, 6919, -1000,
	330, -1000, -1000, 2043, 3143, -1000, -130, 101099, 101015, 5623,
	43512, 58600, -187, -1000, -1000, 94414, 105408, -148, -1000, -1000,
	-1000, 776, -1000, -1000, 3405, -1000, -1000, 1488, -1000, -1000,
	-1000, 94414, 2206, -1000, 1092, 40458, 6151, 530, 40458, -1000,
	3223, -1000, 2564, 2716, 2566, 529, -1000, -1000, -1000, -1000,
	-1000, 1086, 1862, -1000, -1000, 105408, 3124, 40458, -1000, -1000,
	528, 527, 105408, 526, 859, 2706, -1000, -1000, -1000, -1000,
	105408, 525, 3210, -1000, -1000, -1000, -1000, 2167, 77529, -1000,
	-1000, -1000, -188, -1000, -1000, 1865, 98, 995, -1000, 2005,
	2084, 524, -1000, -1000, 2087, 2457, -1000, 83297, 28026, 28026,
	329, 3221, 977, -1000, 3344, -1000, 3201, 98, -1000, 40458,
	-1000, 77529, 40458, 2113, 64482, -1000, 2350, -1000, 1294, -190,
	94414, 1822, -1000, -1000, 63516, 63516, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1086, -195, -196,
	-1000, 63516, -1000, -1000, 2257, -1000, 94414, -1000, 94414, -1000,
	-1000, -198, -203, -1000, 2044, 40458, 27517, -1000, -1000, 5623,
	-204, -1000, -147, -1000, 3200, -1000, -1000, -1000, -1000, 2852,
	2637, 100692, 2274, 94414, 100648, -1000, 2712, -1000, -1000, 1952,
	94414, 2566, 2636, 77529, 1091, -213, 1978, 1978, 40458, 27008,
	1999, 40458, -1000, -1000, 3124, -1000, 2666, 3354, -1000, 2087,
	77529, 94414, -1000, 3112, -1000, 3032, -1000, -1000, -1000, 2566,
	98, -1000, -1000, 98, -1000, -216, 1089, -218, 77529, -1000,
	2381, 1532, -1000, 1031, -1000, -1000, -219, -224, 1820, 1086,
	1007, -225, -1000, -226, -227, -1000, -1000, 328, 41476, 41476,
	41476, -148, -169, -1000, 94414, 522, 2824, 1019, -1000, 2096,
	1759, 326, 1109, -1000, -1000, 2655, -233, -1000, 1017, 519,
	-1000, 40458, 1086, -235, -1000, 1073, -236, -1000, 1071, -241,
	-1000, 2699, -1000, -242, 2167, 1012, 3177, -1000, -1000, -1000,
	-1000, 517, -249, -1000, -1000, 2151, -1000, 1952, 1010, -1000,
	1086, 515, 1820, 514, -1000, 54267, -1000, 1009, 1009, 2566,
	1820, 1031, 510, 1009, -1000, -1000, -1000, 2873, -1000, 44498,
	2152, 1800, 103370, 2873, 2873, -1000, -1000, 94414, 3167, -1000,
	2112, 2110, 1456, -1000, -1000, -1000, -1000, -1000, -1000, 1031,
	-1000, 3160, 2274, 105408, 2566, -1000, 1978, 2583, -1000, 1978,
	2692, -1000, 1994, -1000, -1000, -1000, 2848, 3337, 94414, -1000,
	94414, 1781, 1716, 3404, 995, 2087, 1820, 40458, 2566, 40458,
	-232, -1000, -1000, 1952, 2566, -1000, -1000, -1000, 1743, 3308,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 857, -1000,
	3014, -1000, 1111, 1893, 1893, -1000, 849, 2096, -1000, -1000,
	503, -1000, 500, -1000, 1693, -1000, -1000, -250, -1000, -1000,
	3359, -1000, 2087, -1000, 2566, -252, 1952, -255, -1000, 1007,
	1952, 1771, -1000, -1000, 2025, 40967, 40458, -1000, 3327, -1000,
	-1000, 2373, -1000, 40458, 2655, 40458, 40458, 2052, 2134, -1000,
	-1000, 1952, 1086, 1007, 1820, 1031, 1007, -1000, -1000, -1000,
	105408, -1000, -1000, -1000, 105408, -1000, -257, -258, 52826, -1000,
	-1000, -1000, 1007, 1820, 1031, 2566, -1000, 1031, 1952, 1236,
	-181, 82814, 1031, 2566, -1000, 1952, -1000, -1000, 498, -264,
	-1000, 1952, 1007, 40458, -1000, 1007, 1031, -266, 1031, -1000,
	1952, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4159, 4158, 4156, 4154, 4153, 4148, 4147, 4144, 4142,
	4136, 4134, 4127, 4126, 4125, 4124, 4123, 4122, 4116, 4114,
	4112, 4111, 4110, 4106, 4105, 4104, 4103, 4102, 4100, 4098,
	4097, 4091, 4089, 4088, 4082, 4081, 4080, 4079, 4078, 4077,
	4076, 4073, 4070, 4069, 4068, 4067, 4065, 4064, 4063, 4061,
	4060, 4058, 4054, 4052, 37, 4049, 4048, 4045, 4039, 4037,
	4035, 4028, 4025, 4023, 4018, 4016, 4011, 4008, 4007, 4005,
	4001, 3999, 3998, 42, 3997, 236, 3995, 3990, 3988, 3986,
	3984, 3982, 3977, 3976, 3975, 3974, 3968, 3966, 235, 3965,
	163, 3961, 3960, 3958, 3953, 3952, 233, 3950, 3947, 3943,
	3940, 244, 3939, 3929, 3923, 3920, 3915, 3913, 3912, 3911,
	3910, 79, 129, 3909, 3908, 68, 3907, 3903, 3900, 3899,
	3897, 3896, 3894, 3891, 3889, 3888, 215, 3887, 232, 3886,
	3885, 3883, 3881, 3878, 3876, 3875, 3874, 3873, 3872, 3871,
	3870, 3869, 3868, 3867, 3866, 3865, 3863, 3861, 3860, 3859,
	3858, 3857, 3855, 3854, 3850, 3849, 3848, 3847, 3846, 3842,
	237, 161, 3840, 3837, 231, 230, 3836, 3835, 3834, 3832,
	3830, 101, 8, 29, 3829, 3828, 65, 64, 62, 89,
	87, 73, 3826, 84, 3825, 104, 38, 3823, 14, 22,
	141, 203, 4298, 196, 3822, 3820, 3818, 212, 166, 3815,
	199, 3814, 3813, 3812, 3811, 82, 63, 150, 147, 158,
	132, 612, 3809, 3807, 86, 56, 41, 33, 3799, 3798,
	3797, 3264, 113, 3794, 229, 206, 131, 3790, 3785, 3784,
	2489, 3776, 40, 3770, 76, 74, 109, 69, 102, 3769,
	123, 21, 3768, 152, 44, 3767, 121, 83, 66, 8257,
	8559, 3765, 93, 43, 107, 561, 153, 144, 179, 159,
	174, 181, 178, 149, 133, 3762, 218, 3760, 3287, 54,
	137, 3751, 3750, 3749, 61, 172, 90, 3747, 3746, 51,
	1, 16, 7, 142, 12, 100, 11, 3745, 19, 3744,
	3742, 3739, 3738, 31, 127, 3732, 242, 3731, 55, 34,
	24, 3729, 28, 186, 3727, 198, 105, 3726, 3725, 224,
	177, 155, 3724, 78, 205, 3723, 3722, 3721, 3719, 3718,
	117, 25, 108, 3716, 3711, 146, 209, 170, 3710, 47,
	3708, 143, 88, 111, 240, 103, 192, 98, 193, 169,
	194, 3707, 3705, 3704, 188, 3703, 3702, 190, 139, 3699,
	3696, 185, 245, 35, 60, 208, 59, 165, 134, 3694,
	175, 3693, 3692, 3691, 243, 151, 184, 3, 13, 85,
	106, 32, 5, 201, 120, 265, 92, 3690, 4863, 1706,
	1424, 3685, 3684, 118, 97, 49, 99, 119, 228, 52,
	3680, 3678, 168, 3677, 3674, 3673, 3672, 156, 3669, 3668,
	3666, 122, 126, 167, 3665, 81, 71, 10, 140, 282,
	241, 96, 191, 148, 220, 3663, 154, 3662, 50, 160,
	3660, 171, 221, 3658, 3656, 77, 3655, 116, 225, 45,
	136, 3650, 216, 3648, 3645, 3643, 3641, 3640, 3638, 3637,
	162, 202, 3636, 3635, 3633, 115, 164, 3632, 227, 135,
	173, 75, 39, 3630, 72, 2333, 3628, 53, 197, 46,
	130, 3626, 1303, 187, 0, 10992, 9451, 6739, 10167, 3625,
	2043, 3624, 3623, 3620, 189, 112, 3618, 3616, 3615, 91,
	3614, 58, 3613, 3612, 48, 3611, 17, 2, 6, 20,
	18, 1934, 1326, 3610, 3608, 95, 114, 124, 3607, 234,
	195, 3606, 3603, 3602, 3600, 80, 3598, 30, 3592, 27,
	3590, 3589, 36, 9, 23, 3585, 3584, 210, 3582, 183,
	217, 3581, 128, 3579, 3231, 110, 3575, 3574, 226, 67,
	3572, 222, 3571, 3225, 3568, 3567, 15, 3559, 3557, 207,
	145, 182, 3555, 3553, 138, 3552, 3550, 3549, 219, 3545,
	3542, 26, 3541, 4, 3536, 3535, 180, 3003, 3534, 3533,
	57, 3532, 157,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 43, 43, 43, 43, 43, 522,
	522, 176, 176, 176, 178, 178, 177, 177, 177, 177,
	64, 64, 535, 535, 536, 536, 534, 537, 537, 537,
	175, 175, 175, 110, 110, 110, 110, 111, 111, 112,
	112, 179, 179, 179, 181, 181, 180, 180, 180, 180,
	180, 180, 180, 180, 185, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 92, 92, 462, 462, 463, 463,
	170, 170, 171, 171, 171, 171, 172, 172, 173, 173,
	173, 57, 182, 182, 184, 184, 183, 183, 45, 45,
	45, 45, 45, 45, 45, 46, 46, 46, 46, 46,
	47, 47, 47, 47, 47, 47, 48, 48, 48, 48,
	48, 48, 55, 55, 55, 55, 161, 161, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 546, 546, 547, 547,
	548, 548, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 70, 70,
	295, 295, 267, 267, 71, 71, 71, 72, 72, 73,
	73, 59, 59, 520, 520, 310, 310, 420, 420, 75,
	75, 330, 330, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 77, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	85, 85, 85, 85, 85, 86, 86, 86, 83, 83,
	83, 80, 80, 80, 79, 79, 79, 84, 84, 84,
	519, 258, 258, 82, 82, 82, 260, 260, 81, 81,
	81, 311, 311, 87, 87, 87, 87, 268, 88, 88,
	88, 88, 88, 88, 88, 88, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 422,
	422, 89, 89, 89, 390, 390, 93, 93, 93, 345,
	345, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 113, 113, 113, 113, 113, 524, 524, 303, 303,
	224, 224, 224, 224, 103, 103, 103, 103, 104, 104,
	104, 105, 105, 166, 166, 120, 120, 120, 120, 120,
	119, 119, 119, 119, 119, 119, 49, 49, 49, 50,
	50, 51, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 122, 122, 540, 540, 124, 121, 121, 121,
	123, 123, 123, 123, 125, 126, 126, 126, 126, 126,
	126, 126, 126, 127, 127, 454, 454, 319, 319, 452,
	452, 471, 471, 453, 453, 272, 272, 272, 272, 272,
	273, 273, 273, 461, 461, 461, 461, 461, 461, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 167,
	167, 168, 169, 169, 169, 169, 148, 148, 148, 160,
	160, 160, 160, 160, 160, 160, 151, 151, 151, 138,
	138, 129, 129, 129, 129, 129, 129, 129, 133, 133,
	133, 133, 133, 133, 133, 133, 130, 130, 140, 140,
	140, 140, 140, 134, 134, 135, 135, 137, 137, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 131, 131,
	131, 131, 142, 142, 142, 142, 352, 352, 352, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	159, 159, 159, 159, 159, 159, 538, 538, 539, 539,
	155, 155, 155, 155, 155, 155, 404, 404, 149, 149,
	149, 149, 154, 154, 154, 154, 335, 335, 146, 146,
	146, 147, 147, 147, 152, 152, 153, 150, 150, 156,
	156, 156, 156, 132, 132, 132, 550, 550, 550, 157,
	157, 145, 145, 158, 158, 158, 158, 158, 158, 158,
	158, 144, 144, 144, 143, 143, 143, 143, 136, 521,
	521, 517, 517, 517, 517, 517, 517, 517, 517, 518,
	518, 523, 523, 98, 98, 98, 98, 98, 106, 106,
	106, 106, 106, 99, 99, 99, 99, 99, 101, 101,
	100, 100, 100, 100, 65, 65, 65, 14, 14, 14,
	66, 66, 188, 188, 188, 189, 189, 280, 280, 280,
	280, 186, 186, 187, 187, 67, 67, 551, 551, 551,
	531, 531, 531, 532, 532, 532, 532, 532, 532, 274,
	274, 275, 275, 370, 370, 370, 370, 370, 278, 278,
	278, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	281, 281, 212, 212, 212, 284, 285, 285, 282, 282,
	283, 283, 283, 287, 287, 286, 289, 289, 288, 369,
	480, 480, 482, 482, 482, 482, 482, 482, 482, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	552, 552, 478, 478, 478, 479, 474, 474, 475, 475,
	475, 475, 475, 276, 276, 277, 277, 277, 277, 476,
	477, 301, 301, 407, 481, 481, 483, 483, 485, 553,
	553, 553, 553, 553, 553, 554, 554, 554, 368, 368,
	367, 367, 293, 293, 486, 486, 486, 486, 487, 487,
	487, 487, 487, 490, 489, 488, 488, 488, 488, 488,
	69, 69, 69, 332, 332, 331, 331, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 163, 163, 227, 227, 63, 63, 63, 12,
	12, 12, 533, 533, 533, 68, 68, 68, 68, 68,
	68, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 526, 526, 525, 525, 228, 228, 556,
	556, 74, 74, 74, 74, 74, 74, 74, 423, 423,
	424, 424, 62, 62, 62, 62, 62, 353, 353, 351,
	351, 350, 350, 300, 300, 406, 232, 232, 205, 205,
	205, 27, 26, 19, 19, 24, 24, 39, 39, 39,
	39, 42, 42, 38, 38, 38, 38, 40, 40, 34,
	34, 541, 541, 542, 542, 102, 102, 107, 107, 107,
	107, 107, 108, 108, 108, 108, 109, 109, 109, 109,
	118, 118, 162, 162, 162, 162, 162, 162, 162, 44,
	44, 44, 44, 56, 56, 56, 56, 116, 558, 558,
	558, 117, 117, 117, 557, 557, 225, 225, 364, 364,
	365, 365, 559, 559, 366, 366, 366, 366, 219, 218,
	220, 220, 61, 61, 61, 214, 214, 215, 215, 216,
	216, 217, 217, 560, 560, 96, 96, 96, 165, 165,
	266, 266, 266, 360, 360, 360, 294, 294, 238, 238,
	363, 363, 361, 361, 361, 361, 329, 329, 329, 164,
	164, 308, 308, 321, 321, 322, 322, 417, 417, 323,
	115, 115, 192, 192, 190, 190, 190, 190, 190, 190,
	190, 190, 197, 197, 198, 198, 199, 199, 200, 201,
	201, 201, 201, 312, 312, 202, 202, 202, 191, 191,
	191, 193, 193, 193, 193, 193, 193, 193, 196, 196,
	196, 196, 203, 203, 203, 195, 195, 497, 497, 497,
	499, 499, 501, 501, 500, 500, 496, 496, 498, 498,
	555, 555, 334, 334, 334, 291, 292, 290, 290, 298,
	298, 296, 297, 297, 299, 299, 405, 405, 405, 206,
	206, 206, 326, 326, 326, 326, 327, 327, 356, 356,
	354, 354, 354, 354, 355, 355, 357, 357, 357, 358,
	358, 359, 359, 325, 325, 386, 386, 194, 194, 194,
	305, 305, 305, 306, 306, 376, 376, 376, 376, 376,
	376, 377, 377, 375, 375, 375, 375, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 409, 410, 410, 307,
	307, 411, 362, 362, 515, 515, 515, 516, 516, 403,
	403, 412, 412, 412, 412, 412, 412, 401, 401, 402,
	402, 418, 419, 419, 338, 338, 338, 338, 336, 336,
	339, 339, 339, 339, 337, 337, 413, 413, 413, 413,
	328, 328, 414, 414, 414, 414, 415, 371, 372, 372,
	425, 425, 425, 425, 427, 304, 304, 304, 304, 304,
	473, 472, 472, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 441, 441, 441, 441, 441, 441, 441, 441,
	442, 442, 442, 442, 442, 442, 442, 428, 428, 428,
	428, 428, 432, 432, 432, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 433, 433, 438, 438,
	439, 439, 439, 434, 435, 440, 440, 440, 440, 561,
	561, 444, 444, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 430, 430, 430, 437, 437, 437, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 346, 346, 348, 348, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 380, 380, 380, 380, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 491, 491, 491, 491, 491, 491, 491, 491, 382,
	382, 494, 494, 495, 495, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 502, 502, 503, 503, 505, 505,
	506, 506, 507, 508, 508, 508, 509, 510, 510, 504,
	504, 511, 511, 511, 511, 512, 512, 513, 513, 513,
	513, 513, 514, 514, 514, 514, 514, 392, 392, 393,
	393, 399, 399, 399, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	229, 229, 229, 229, 229, 317, 317, 315, 315, 315,
	318, 318, 316, 316, 314, 314, 313, 313, 389, 389,
	387, 387, 391, 391, 340, 340, 443, 443, 443, 443,
	443, 443, 443, 443, 341, 341, 341, 349, 342, 342,
	343, 343, 343, 343, 343, 383, 384, 344, 344, 344,
	385, 385, 394, 398, 398, 397, 396, 396, 395, 395,
	373, 373, 374, 374, 324, 324, 562, 562, 320, 320,
	416, 416, 416, 416, 270, 270, 309, 309, 269, 269,
	261, 261, 262, 262, 262, 262, 302, 302, 400, 400,
	445, 445, 446, 446, 447, 447, 448, 448, 449, 450,
	451, 388, 388, 248, 247, 235, 236, 246, 245, 244,
	234, 237, 241, 242, 243, 239, 240, 254, 253, 252,
	259, 250, 251, 421, 233, 263, 263, 264, 264, 264,
	265, 265, 265, 265, 230, 230, 231, 231, 255, 255,
	256, 257, 257, 249, 249, 249, 221, 221, 221, 222,
	222, 223, 223, 459, 459, 456, 456, 456, 457, 457,
	457, 458, 458, 458, 458, 455, 455, 455, 455, 455,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 465, 465, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 467, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 5, 2, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	5, 7, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 1, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	2, 6, 4, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 2, 3,
	2, 2, 8, 11, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	8, 5, 3, 4, 3, 0, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 523, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 96, 77, 146, 121, 129,
	184, 336, 372, 383, 364, 353, -123, -124, 400, -44,
	-56, -117, -116, 70, 122, 359, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 98,
	-498, -78, -81, -109, -549, 134, 153, 202, -99, -100,
	325, -104, -105, 366, -107, -108, 368, 154, -51, -50,
	148, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 404, -153, 458, 47,
	418, 79, 138, 376, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 365, -193, -191, 520, 472, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 490, 498, -196, -194, -195, -203,
	392, 480, 434, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 159, 211, 290, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 65, 70, 71, 76, 77, 78, 79, 80,
	81, 82, 88, 85, 86, 87, 90, 92, 93, 94,
	95, 96, 97, 99, 100, 102, 103, 111, 112, 113,
	114, 116, 121, 122, 125, 120, 124, 127, 128, 129,
	132, 133, 134, 136, 137, 139, 140, 141, 143, 144,
	146, 147, 148, 151, 149, 441, 150, 152, 153, 154,
	155, 165, 166, 167, 172, 174, 178, 179, 182, 183,
	185, 189, 191, 192, 193, 194, 195, 201, 202, 204,
	205, 206, 207, 212, 213, 217, 214, 223, 224, 228,
	229, 230, 232, 236, 237, 238, 239, 240, 241, 243,
	245, 244, 247, 250, 251, 254, 255, 256, 259, 260,
	261, 262, 264, 265, 268, 266, 269, 267, 271, 272,
	273, 270, 276, 274, 278, 279, 280, 288, 286, 283,
	284, 281, 282, 285, 292, 295, 199, 297, 298, 301,
	319, 305, 306, 307, 310, 311, 314, 317, 318, 320,
	321, 322, 323, 324, 325, 326, 327, 329, 330, 334,
	336, 337, 339, 341, 342, 343, 344, 345, 346, 347,
	350, 349, 351, 353, 359, 364, 361, 362, 363, 365,
	366, 367, 368, 370, 371, 372, 374, 375, 376, 377,
	379, 381, 382, 385, 386, 401, 402, 420, 383, 384,
	387, 388, 389, 390, 391, 395, 393, 394, 396, 397,
	398, 400, 403, 404, 406, 407, 408, 409, 410, 411,
	414, 416, 417, 418, 419, 421, 424, 425, 426, 427,
	422, 433, 430, 431, 435, 436, 437, 438, 439, 440,
	442, 444, 452, 453, 455, 458, 459, 460, 450, 462,
	463, 466, 467, 468, 471, 469, 470, 472, 474, 477,
	478, 479, 485, 484, 491, 492, 494, 495, 496, 35,
	48, 49, 52, 54, 56, 66, 67, 68, 72, 117,
	118, 145, 156, 157, 168, 180, 181, 186, 188, 196,
	197, 198, 218, 219, 221, 226, 248, 294, 296, 312,
	316, 331, 332, 333, 335, 348, 378, 412, 423, 428,
	445, 446, 447, 448, 454, 456, 480, 481, 482, 486,
	493, -268, 2, -250, 303, -243, 2, -221, -221, 336,
	27, 2, 27, 330, 394, 436, 438, 2, -524, -303,
	2, 27, -224, -221, 98, 184, 392, -243, 2, -524,
	-303, 24, 2, -221, 2, -225, 2, 383, -221, 265,
	2, 523, 90, 256, 71, 378, 397, -126, 453, -125,
	445, 387, -127, -454, 2, 276, -221, 523, 523, 523,
	27, -233, -221, 434, 211, 113, 431, 523, 2, 434,
	322, 484, 393, 113, 345, 211, 460, 387, -533, 265,
	374, 187, 473, -522, 2, -517, 4, -468, -464, -262,
	-261, 434, 439, 113, -257, -249, 513, -256, 523, 523,
	523, 2, 229, 230, 344, 343, 397, 398, 523, 523,
	523, 385, 2, 26, 63, 89, 94, 119, 155, 175,
	178, 308, -546, 319, 342, 396, 433, 442, 455, -532,
	419, 65, 387, -531, -533, 265, 460, 132, -350, 113,
	256, 183, 467, 438, 436, 465, 125, 217, 470, 469,
	523, 523, 26, 63, 74, 94, 132, 155, 175, 178,
	-548, 319, 342, 381, 396, 433, 442, 455, 2, 484,
	265, 393, 434, 211, 113, 460, 387, -533, 385, 386,
	340, -90, 2, 520, 31, 30, 400, -185, 434, 222,
	2, -221, 523, 523, 2, 229, 230, 385, 386, 523,
	523, 176, -517, 2, 523, 523, 2, 229, 230, 385,
	386, 222, 2, 65, 389, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 2, -160, 397, 419, 193,
	45, 44, 71, 27, 341, 76, 323, 114, 140, 185,
	211, 212, 237, 89, 90, -352, 43, 230, 229, 386,
	-538, 385, -404, 435, 388, 394, 430, 241, 383, 453,
	98, 474, 375, 496, 345, 346, 149, 4, 113, 276,
	399, 445, 256, 382, 326, 81, 523, -555, 2, 434,
	-557, 2, 453, 453, 2, -557, 2, -557, 2, -557,
	2, -558, 453, 493, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, -191, -193, -192, 523, 523, 523, 523, 523, 523,
	523, -160, 397, 2, 71, 27, -296, -298, 464, 220,
	142, 309, -190, -192, 2, -497, -452, 2, -378, -471,
	-380, 511, 512, 504, 432, 64, 289, 497, -392, 119,
	465, 303, -470, -381, -394, 145, 378, -318, 8, 9,
	5, 6, 7, -230, -382, -388, 457, 158, 293, -265,
	524, 10, 520, -494, -192, -393, 36, 188, 62, -456,
	-264, -231, -428, 221, -263, -249, -491, -492, 4, -464,
	-465, -457, -431, -439, -435, -436, -442, -221, -467, 74,
	105, 106, 104, 109, 108, 258, 257, 110, 107, 399,
	473, 63, 35, 196, 197, 226, 294, 198, 72, -493,
	133, -466, 218, 219, 412, 49, 348, 168, 118, 117,
	296, 54, 52, 481, -440, 115, 445, 446, 447, 448,
	180, 181, 56, 156, 157, 316, 333, 428, 454, 456,
	186, 248, 101, 177, 216, 200, 225, 227, 231, 249,
	252, 277, 287, 291, 313, 315, 373, 405, -561, 482,
	423, 66, 67, -499, 349, -500, -243, -499, 523, 523,
	525, 523, -290, -291, -292, 2, 27, 130, 520, 2,
	-408, 2, -409, -413, -192, 242, -412, 520, -410, 518,
	-250, 304, -495, 379, -491, -492, -230, -249, -264, 4,
	-464, -466, 522, -293, 520, 113, 434, 75, 211, -345,
	520, -221, 27, 303, 449, 525, -390, 520, 303, 176,
	306, -221, 484, 2, 2, 401, 2, 520, -126, 68,
	453, 42, 397, -365, 2, -366, -218, -219, -220, -418,
	228, 339, 347, 499, 496, -452, -540, 176, 503, 449,
	-452, -319, 522, 2, 2, 2, 2, 2, -413, 196,
	-250, 2, -247, -455, 4, -464, -468, -465, -469, -467,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 55,
	62, 63, 69, 73, 75, 84, 89, 98, 104, 105,
	107, 106, 108, 109, 110, 119, 123, 126, 130, 131,
	135, 138, 142, 158, 160, 173, 175, 176, 184, 187,
	190, 203, 215, 220, 222, 242, 246, 253, 257, 258,
	289, 293, 299, 303, 304, 308, 309, 328, 338, 352,
	369, 392, 399, 415, 429, 434, 443, 449, 451, 457,
	464, 465, 473, 475, 483, 487, 488, 489, 490, -470,
	74, 2, -413, 196, 2, -252, 196, -413, -255, 2,
	-234, -221, 2, -246, -455, 2, -269, 196, -250, -251,
	-255, -253, 2, -255, -259, 2, -221, -462, 196, 2,
	-459, 10, -458, 5, 4, -464, -468, -465, 484, 222,
	449, 525, -309, -261, -262, -451, 8, -302, -221, 522,
	-378, 2, -115, -101, 2, 173, -378, 196, 2, -115,
	196, 2, -378, 196, 2, -115, 196, 2, -535, 2,
	-462, 2, 2, 455, 2, 94, 196, -221, 434, 112,
	2, 363, -547, 381, 459, 2, 2, 2, 2, 2,
	2, 434, -239, 2, -221, 173, -259, 196, 2, 393,
	-556, 349, -462, 196, 2, 484, -253, 2, -253, 211,
	224, -234, 196, 2, 438, 436, 438, 436, 176, 2,
	222, 2, 222, 2, -414, 2, -415, -409, -250, 518,
	2, 2, 2, 2, 2, 196, -221, 434, 112, 2,
	240, 2, 2, 2, 2, 2, 2, 2, -311, 196,
	2, -250, 484, -311, 196, 2, -311, 196, 2, -351,
	2, 84, -234, 196, 2, -258, 196, 2, -253, -260,
	196, 2, -259, -463, 196, 2, -462, -378, 2, -115,
	2, -422, 2, -421, -458, 480, -90, 520, -90, 520,
	397, 520, -462, -250, -250, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -112, -111, -462, 520, 176, -378,
	2, -115, -101, 2, -378, 2, -115, 2, -185, 173,
	2, 113, 434, -160, 2, 173, 475, 2, 8, 2,
	203, -462, 388, 346, 165, 2, 401, 2, 402, 71,
	-352, 496, 71, 176, 2, 176, 2, -335, 2, 490,
	2, -521, 2, 303, 176, 2, 176, 2, 176, 2,
	176, 2, 176, 2, 343, 398, 230, 2, -115, 487,
	-101, -378, 487, 2, -539, 173, 386, -378, 2, 452,
	239, 150, 176, -335, 2, 176, 2, 176, 2, 5,
	2, 344, 420, 2, 228, 339, 420, 2, -250, -550,
	2, 434, 484, 393, 2, 2, 85, 86, 176, 2,
	176, 2, 176, 496, 2, -328, -413, -364, -365, -364,
	449, -296, -298, -160, 401, 2, -197, -326, -199, 173,
	-354, -355, -200, 253, 160, 299, -201, -334, 27, 130,
	-334, -334, 58, 521, 521, 11, 12, 73, 40, 511,
	512, 513, 514, 171, 515, 516, 509, 510, 508, 501,
	502, 506, 234, 235, 91, 505, 503, 83, 263, 380,
	161, 162, 163, 164, 360, 209, 33, 210, 14, 15,
	16, 32, 308, 252, 497, 200, 405, 504, 17, 18,
	19, 225, 227, 291, 48, 203, -229, -271, -378, -378,
	-378, -378, -378, -378, -378, 315, 520, -324, -373, 518,
	-192, 520, 520, 520, -451, -192, -378, -392, 521, -316,
	520, -192, -392, -387, 520, 378, 518, 520, -395, -378,
	5, 5, 5, 520, 522, -502, 491, 173, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 335, -433, 520, -432, 520, -432, -432,
	485, -430, 520, 498, 492, 520, -430, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	485, 525, -499, -293, 520, -320, -416, -378, 513, -320,
	-320, 303, -313, -378, 101, -338, 231, 277, 177, 249,
	373, 216, -375, 524, -375, -403, 498, -192, -410, -249,
	-192, -412, 520, -408, -403, -91, -451, -75, -88, -96,
	-115, -128, -164, -165, 513, -250, 520, 176, 520, 522,
	-455, 176, -302, -234, -250, -263, -264, -269, 129, -313,
	-517, 460, -302, -224, 37, -389, -425, -426, -473, 524,
	-472, -428, -438, -434, -437, 331, 332, -457, 52, 481,
	-440, 221, 4, -464, -466, 218, 219, 412, 49, 348,
	168, 118, 117, 296, 54, 445, 446, 447, 448, 180,
	181, 56, 482, 423, 66, 67, -517, 460, -302, 173,
	-351, -454, -313, 37, -365, 2, 119, -459, 42, -559,
	525, 251, -273, 262, 288, 192, 304, 494, 297, -461,
	5, 4, -388, -400, 119, 256, 221, -445, -447, 8,
	-446, 9, -448, 511, 512, -453, -452, 103, 522, -455,
	-208, 361, 400, -207, 23, 28, 134, 478, 151, -283,
	213, 318, 322, 145, 416, 468, -528, -529, 384, 440,
	441, 87, 297, 400, 361, 145, -331, -333, 37, 111,
	280, 317, 59, 206, 267, 268, 418, 486, 145, 400,
	361, 318, -529, 95, 361, -529, -210, 416, 468, -528,
	-529, 384, 361, -209, -283, 145, 524, 23, 361, 400,
	318, -543, -544, 134, 28, 361, 318, -525, -496, 490,
	145, -413, 196, -536, -111, 243, 5, 10, -111, -309,
	525, 525, -455, 513, 386, 385, 145, 145, 145, 145,
	173, 2, 2, 289, 2, 2, 2, 178, -531, -548,
	2, 2, -250, 196, -295, 303, -520, -310, 434, -250,
	289, -252, 196, 2, -255, 484, -525, 289, -254, 196,
	-250, 37, 520, 2, -351, 2, 211, -496, 289, -414,
	-266, -250, -409, -266, 400, -243, 37, -375, -375, 145,
	2, 2, 2, -221, -211, 525, 61, 367, 145, -311,
	196, -211, 145, -211, 145, -270, 196, -269, -211, 145,
	-211, 525, 145, -211, 525, 145, 525, 145, 521, 525,
	-422, -422, -462, -173, 490, 176, 98, 520, 520, -185,
	-419, 525, -418, -463, -112, -462, -462, -520, -234, 2,
	-250, 2, 434, 232, -462, -173, 203, -462, -462, -462,
	-454, 27, 402, 2, 343, 398, 86, 402, 2, -250,
	434, 113, 211, 77, -523, 173, -518, 374, -517, -250,
	113, -250, 113, -250, 113, -250, -250, 2, 2, 2,
	2, 82, 82, 2, 44, -539, 173, 2, 452, 2,
	452, 2, -221, -221, -221, 419, 251, -250, 173, 434,
	211, 434, 211, 113, 434, -211, 525, -225, -197, -326,
	-454, -327, -326, -198, -197, -200, 173, 347, 469, 280,
	403, 236, -355, -354, 27, -378, -359, 167, 279, -378,
	-357, -380, 511, 512, -446, -448, -312, 297, -191, -191,
	-191, -299, -405, -378, 338, 211, -427, -425, -425, -248,
	-455, 445, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, 252, 200, 405,
	48, 203, -378, 449, -378, -378, -378, -378, 274, 289,
	293, 457, 158, 466, 130, 297, -562, 429, 39, -385,
	-192, -317, 520, -399, 34, 415, 27, -392, 520, 2,
	-373, -378, -374, -314, -313, -313, 521, 483, 27, 130,
	513, 2, 521, 525, 37, 521, -378, -314, -391, -387,
	-313, -398, -397, 487, -346, -347, 495, 270, 116, 194,
	269, -348, 391, -449, 8, -455, 513, -503, 166, 187,
	520, 521, 2, 521, 2, 521, -378, 2, 521, -378,
	2, 521, -378, 2, 521, -378, 2, 521, 2, -378,
	-378, -378, -378, -378, -378, -378, -313, 8, -449, -449,
	445, 445, -449, -449, -449, -441, 331, 254, 332, 182,
	273, 271, 272, 181, -441, -340, 2, -443, -313, 4,
	495, 270, 116, 194, 269, 391, 5, -340, 2, -341,
	2, -378, -313, -342, -379, -380, 511, 512, 504, -392,
	-343, 2, -378, -314, -378, 55, 246, 451, -344, -378,
	176, -313, -313, 2, -313, 2, -500, 37, -313, -305,
	525, 176, 37, 4, -305, -305, 520, 521, 525, -339,
	191, 266, 261, -339, -408, -338, 231, -336, 313, -336,
	-336, -403, -235, 518, 526, -455, -403, -402, -401, 37,
	-243, 310, -403, -403, 522, 521, -402, 519, -515, 520,
	523, 523, 523, 523, 523, -250, 520, -313, -455, 522,
	421, 521, 225, 225, 225, 225, 379, 521, 449, -519,
	-258, 490, -90, 305, 521, 525, -304, 36, 518, 522,
	-449, 2, 2, -444, 485, 520, 520, -347, 520, 176,
	-519, -303, -254, -540, 521, 453, -366, -272, 347, 414,
	362, 395, 431, 8, 9, 8, 9, 525, -455, 525,
	-541, 89, 449, 75, 387, -369, 196, 75, -474, -237,
	89, -475, -221, 69, 465, 338, 175, 143, -541, 89,
	338, -541, 89, 89, 400, 419, 449, 58, -413, 40,
	40, 27, -115, 247, 176, 496, 434, 211, 387, 449,
	-413, -333, -425, 111, 267, 268, 58, -450, -445, 511,
	512, -450, 58, -450, -450, -450, 490, -252, -413, 387,
	449, 449, 449, 449, 525, 40, 40, 27, -115, 247,
	176, 449, -269, -235, 479, 41, 479, 449, 41, 387,
	449, 525, 41, 41, 449, 449, -526, -226, 100, 284,
	260, 285, 93, 282, 92, 281, 99, 283, -227, -228,
	324, 477, -462, 400, 361, 145, 203, -419, 203, -419,
	-261, -221, 522, -115, -378, -378, -115, -378, -115, 44,
	145, 2, -556, 240, 520, -276, 289, 176, -302, -420,
	222, 525, -310, 145, -332, -331, 289, -254, 196, 2,
	145, -293, 289, 139, 520, 345, 2, -236, 196, -222,
	-221, -351, -214, 437, 145, -330, 475, -360, -115, 520,
	119, 37, -360, -321, -322, -417, -323, -237, 520, -243,
	-221, 2, -250, -311, -211, 145, -311, -311, -211, 525,
	145, -234, -253, -258, -259, -260, -462, -463, -90, -421,
	521, 521, 521, -172, 307, -171, -221, 5, -185, 475,
	-275, -370, -369, -478, -479, -474, 252, 211, 465, 224,
	159, -294, -238, -237, 112, -179, 490, -111, 521, -419,
	203, -173, -173, -419, -419, -250, 173, -462, -173, -173,
	-173, 2, 2, -335, -250, -234, -269, -250, -302, -302,
	-335, -234, -335, -234, -335, -234, -115, -378, 2, 397,
	173, 173, 522, -335, 345, 113, 434, 322, 211, -250,
	-269, -250, -269, -234, -250, -413, -327, -198, 304, 236,
	403, -357, -358, -380, 378, 379, -358, 378, 379, 8,
	9, 8, 9, -202, 407, 292, -311, 525, -205, 38,
	126, 236, -250, 496, 141, -378, -378, 449, -562, 429,
	-385, 141, -378, 274, 293, 457, 158, 466, 130, 297,
	176, 520, -379, -379, 521, -315, -378, -378, 519, 528,
	521, -298, 525, -296, -378, -313, -313, 521, 522, -313,
	-302, 519, 519, 525, 521, -396, -397, 135, -378, 449,
	449, 449, 449, 520, 521, 522, -508, 314, 520, 520,
	-378, 521, 521, 521, 521, 37, 525, 525, 525, 521,
	525, 525, 525, 521, 521, 521, 525, 521, 496, 496,
	521, 521, 521, 521, 525, 521, 525, 521, 176, 521,
	521, -349, 328, 521, 11, 12, 511, 512, 513, 514,
	171, 515, 516, 509, 510, 508, 501, 502, 503, 83,
	263, 380, 14, 15, 16, 225, 203, -379, -379, -379,
	521, -383, -384, 176, 173, 37, -344, -344, -344, 521,
	176, -313, 521, 521, 520, -501, 265, 289, 521, -372,
	-371, 488, -416, -306, 2, -408, -245, -455, -372, -372,
	-313, -378, 231, 231, -337, 475, 303, -339, -408, -402,
	-451, -377, -376, 174, 38, 126, 286, 199, -402, -243,
	-293, -402, -402, -455, -403, -403, -401, 521, -516, -451,
	521, -307, -411, -495, -298, 522, -455, -182, -496, -161,
	5, 293, -161, -161, -161, -302, 449, 24, 329, -425,
	518, 519, 8, -455, 520, -449, -449, -449, -302, 176,
	176, -452, -365, 463, 80, 347, 445, -452, -207, 361,
	-237, -237, -250, -259, 289, -369, 196, -213, 289, -425,
	-244, -221, 520, 520, 236, 236, 475, -237, -244, 236,
	196, -237, 196, -244, -244, -527, 347, 298, -378, -460,
	-459, 110, 399, 255, 345, 290, -208, 361, 400, -115,
	-115, -115, 520, -540, 475, 129, -250, -269, -250, -259,
	-254, 400, 361, 287, -263, -450, -450, -331, 400, 361,
	-259, -252, -460, 387, -234, -209, -115, -115, -115, 520,
	-235, -210, 361, 5, 196, -237, 5, -221, -237, -259,
	-460, -544, 23, -237, 196, -237, -259, -460, -226, -462,
	293, 471, -525, 387, 449, -413, -111, -176, 490, -111,
	-170, 207, 513, -522, -221, 484, -221, -274, -277, -275,
	-237, -188, -189, 492, 490, 145, -267, -250, 518, -173,
	-462, -250, -259, 145, -293, 289, -462, 37, 145, 520,
	2, 2, 303, 289, -236, 196, -215, 136, -560, 503,
	-234, -372, -306, -329, -363, 369, 303, -294, 480, -243,
	-329, -308, 525, 176, 503, 522, -294, 2, -211, -311,
	-211, -211, -269, -270, -211, -211, -211, -90, -90, -173,
	525, 520, 503, 503, 520, -462, -462, 521, 525, -250,
	-236, 211, 211, -242, -222, 521, 525, 522, 520, -181,
	307, -180, 137, 238, 223, 408, 409, 410, 411, 128,
	-179, -112, 176, -52, 490, 434, -173, 524, -335, -335,
	-335, 397, 397, -221, -246, -234, -250, -247, -269, 173,
	173, 469, -358, 304, 259, -405, -206, 295, -250, 524,
	-378, -378, 141, 141, -378, -379, -379, -378, 141, 176,
	520, -378, -389, 32, 32, 521, 525, -374, -378, 521,
	483, -298, -298, 521, 513, -455, 524, 521, -387, 138,
	-378, 443, 270, 194, 269, -348, 269, -348, -348, -449,
	5, -455, 513, -509, -240, 520, -221, 488, -297, 309,
	521, -427, -425, -378, -378, -378, -378, -378, -449, -430,
	-430, -445, -445, -378, -383, -378, -427, -425, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, 130, 289, 297,
	-379, -384, -383, -378, -378, -425, 521, 521, 521, -313,
	-90, 520, 265, -325, 187, -378, -419, 525, -325, -325,
	521, -408, -408, 520, -378, 231, 519, 525, 527, 503,
	-293, 522, -401, -402, 519, 521, 525, 521, 525, -362,
	37, 521, -455, -184, -183, 127, 51, -302, 306, 5,
	8, 518, 519, 522, -449, 521, 521, 521, -302, -302,
	-378, 449, 449, 145, 289, 477, -480, -475, 143, -378,
	-300, -406, -378, 520, 520, 2, -204, 134, 400, -542,
	2, 475, 145, -211, 145, -211, 494, 520, 520, 449,
	387, 490, -313, -378, -174, 119, -454, -529, 524, -529,
	524, 387, 449, 387, 449, 490, 490, -313, 449, -429,
	46, 25, 289, -253, 449, 449, -211, 145, 460, 400,
	-462, 293, -259, -254, 400, 361, -419, -178, 307, -177,
	137, 371, 128, 238, -419, -176, 176, 222, 2, -254,
	2, 521, 521, 525, -481, 37, 301, 301, 520, -250,
	-71, 490, -418, -451, -252, 37, 145, -525, -115, -254,
	-423, -424, 5, -250, 145, 303, 289, -216, 245, -560,
	-459, -496, -298, -329, -320, 290, 88, 521, -372, -322,
	-306, -378, 2, 521, -211, -211, -171, -172, -462, -462,
	-462, -173, -185, -185, -370, -278, 520, -236, -222, 520,
	-185, -238, 2, -463, 525, 520, 503, 503, 503, -419,
	-115, 307, -250, 513, -335, -285, -284, 322, 297, -285,
	378, 378, 304, 167, 241, -205, -235, -378, -378, 141,
	32, 32, -378, -378, -389, 521, -378, -378, -313, 519,
	5, -378, 521, 521, 8, -378, 521, 522, -510, -221,
	-378, 521, 58, 521, 521, 525, 525, 521, 521, 521,
	521, 521, 521, 521, -384, 176, 130, 297, 520, 521,
	521, -90, -386, 190, 58, -408, -386, -386, -337, -302,
	-408, -376, -235, 518, -455, -451, -411, 520, 522, -183,
	503, 519, 2, 518, -455, 521, -237, -237, -369, 145,
	-482, 89, -484, 73, 159, 98, 289, 293, 465, 338,
	69, 119, 352, -552, 37, 500, 521, 521, 525, -205,
	-300, -302, 289, 426, 119, 289, 119, 112, 460, 76,
	-237, -244, -302, -302, -250, -259, 152, 521, 525, 503,
	2, 513, 513, -259, -254, -259, -252, 320, 152, 521,
	-235, 5, 5, 145, -232, 73, 5, -237, -237, -253,
	112, 387, 449, -176, 525, 520, 503, 503, -176, -463,
	-111, -293, -281, 214, -237, -479, -476, -477, 338, -483,
	-485, 159, 338, -115, 2, -187, -186, -221, 5, 520,
	-276, 307, 519, -332, -115, -254, -293, 521, 525, -353,
	475, -235, -250, 145, -217, 244, -560, -459, -214, -356,
	-354, -361, 520, 303, -115, -298, 503, 521, 521, 112,
	112, 205, 144, -300, 520, 520, -302, 112, 521, -180,
	-181, -462, -111, -462, -179, -53, -54, 211, 89, 327,
	-247, 434, 211, 520, 520, -205, -378, -378, -378, 521,
	-298, -455, 513, -504, 322, 521, -405, -378, -378, -379,
	176, 520, -389, 521, -505, 489, -378, -313, -505, -505,
	521, -451, 2, -462, 518, 2, -369, -244, -248, -241,
	-221, 159, 196, 293, 236, 520, -379, -250, 520, 2,
	29, -553, 123, 215, -368, -554, 97, 427, 204, -406,
	-206, 521, 521, 293, 293, -378, -425, 520, -211, -211,
	521, 521, -378, 449, -454, 96, -452, 2, -529, -234,
	-378, 449, 5, -211, -248, -211, -211, -232, 460, -259,
	-254, -177, -178, -462, -111, -176, 37, -282, -283, 203,
	-481, 236, -241, 236, -551, 490, 521, 525, 503, 503,
	-274, -188, -72, -73, 450, -418, -293, 37, 5, 520,
	-221, 303, 520, -235, -560, -459, -215, -329, 131, -302,
	89, -356, -385, -173, 520, 520, -279, 78, 90, 120,
	195, 179, 212, 419, 424, 27, -279, 521, -300, -300,
	521, 520, -173, 521, 525, 27, 520, 27, 520, -250,
	-269, -313, -313, 521, -298, 58, 525, 521, 521, -379,
	-389, 521, -506, -507, -240, 519, 2, -484, -241, 289,
	475, -378, -223, 520, -378, 37, 215, 124, 201, -281,
	520, -367, 475, 352, -232, -300, 520, 520, 520, 503,
	176, 520, -429, -211, -253, 521, -534, 350, -115, -188,
	320, 520, -280, 303, 112, 280, -186, -452, -452, 521,
	37, -73, 9, 37, -115, -300, -250, -300, 303, -459,
	-216, 469, 290, 521, -244, -329, -463, -463, -367, 521,
	521, -463, -54, -302, -302, 521, 521, -511, 345, 379,
	189, -313, -299, 521, 525, 37, 145, 191, 521, -486,
	264, -221, 521, 124, 201, -282, -302, -281, 191, -250,
	-530, 475, 521, -287, -286, -284, -289, -288, -284, -313,
	-452, 96, 320, -313, -232, -537, 177, -536, 5, 10,
	-280, -250, -301, -407, -237, 79, 112, -281, -115, -115,
	521, -353, 521, -250, -217, 400, -371, 521, 521, -368,
	-367, -189, 490, 521, 521, 521, 521, -512, -513, 48,
	462, 103, -378, -512, -512, -507, -509, 159, 490, -487,
	-490, -489, 303, 406, 177, 321, 521, 426, 486, -553,
	521, 490, -293, -378, -367, 521, 525, 480, 521, 525,
	480, 521, 176, 521, -211, -175, 490, 44, 520, 521,
	525, 337, 125, 134, -282, -551, -367, 520, -368, 520,
	-321, -173, -173, -281, -368, -372, -173, -514, 143, -513,
	334, 172, 378, 334, 172, -514, -514, -241, 53, -489,
	303, -490, 303, 469, 125, -372, 53, -486, -281, -286,
	203, -288, 176, 320, 148, -536, 29, -302, -407, 379,
	379, 2, -188, -280, -368, -300, -281, -300, -372, -282,
	-281, 103, 187, 444, 280, 32, 503, -488, 280, 367,
	61, 400, -488, 503, -487, 520, 520, 385, 521, 2,
	-280, -281, 521, -282, 521, -189, -282, 378, 311, -513,
	-378, 22, 293, 119, -378, -553, -313, -313, 307, -212,
	61, 367, -282, -367, -189, -368, -372, -189, 521, 521,
	-172, 520, -189, -368, -372, -281, -372, -282, 449, -172,
	-372, -281, -282, 520, 521, -282, -189, -313, -189, -372,
	521, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 476, 477, 479, 480, 481, 483, 484, 486,
	488, 490, 491, 492, 494, 495, 497, 498, 499, 500,
	501, 503, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 567, 0, 1172,
	1174, 1176, 1178, 0, 701, 0, 32, 33, 0, -2,
	278, 280, 282, 0, 308, 310, 311, 313, 315, -2,
	0, 409, 410, 412, 414, -2, -2, 0, 863, 865,
	0, 554, 556, 0, 868, 870, 0, 0, 576, 577,
	0, 1260, -2, 570, 572, 574, 639, 641, 643, 645,
	647, 649, 651, 653, 654, 656, 658, 660, 662, 664,
	666, 668, 670, 671, 673, 675, 677, 679, 681, 683,
	685, 687, 689, 691, 693, 695, -2, 697, -2, -2,
	0, -2, -2, -2, 1190, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 360, 361, 363, 365, 367, 369,
	372, 374, 376, 1318, 416, 418, 420, 422, 424, 426,
	428, 0, -2, 1330, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1291, 1293, 1295, 1297,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 478, 482, 485, 487, 489, 493, 496,
	502, 504, 506, 463, 464, 467, 1951, 1968, 1969, 1970,
	1973, 1974, 1975, 1976, 1977, 1978, 2361, 2442, 2443, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 465, 466, 1023, 0, 530, 528, 1944, 531, 2181,
	533, 535, 403, 404, 405, 406, 407, 408, 0, 547,
	540, 546, 548, 550, 551, 552, 553, 525, 523, 0,
	547, 2003, 545, 1170, 1171, 1155, 1156, 2219, 1197, 0,
	193, 566, -2, -2, -2, 2327, -2, 598, -2, 605,
	2331, 2221, 610, 0, 612, -2, 615, 1173, 1175, 1177,
	699, 700, 1954, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1072, 1073, 1074, 0, 198, 200, -2, -2, -2, -2,
	0, 0, 2259, 2050, 1912, 1970, 1915, 1910, 279, 281,
	283, 284, 0, 0, 0, 0, 0, 0, 309, 312,
	314, -2, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 910, 911, 1121, 0, 0, 0, 0,
	411, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	340, 468, 469, 0, 1319, 1319, 0, 0, 0, 0,
	253, 244, 864, 866, 867, 0, 0, 0, 0, 555,
	557, 0, 0, 226, 869, 871, 872, 0, 0, 0,
	0, 0, 255, 0, 0, 571, 573, 575, 640, 642,
	644, 646, 648, 650, 652, 655, 657, 659, 661, 663,
	665, 667, 669, 672, 674, 676, 678, 680, 682, 684,
	686, 688, 690, 692, 694, 696, 706, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 788,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 709, 711, 712,
	713, 0, 768, 786, 787, 796, 698, 0, 1063, 1320,
	1199, 1180, 1194, 1199, 1182, 1183, 1184, 1185, 1186, 1191,
	1193, 1187, 1188, 1189, 37, 39, 41, 43, 45, 47,
	49, 51, 53, 362, 364, 366, 368, 370, 373, 375,
	377, -2, 1289, 1290, 417, 419, 421, 423, 425, 427,
	429, 558, 0, 560, 0, 710, -2, 0, 1324, 1324,
	1324, 0, 0, 1290, 1288, 0, 563, 564, 619, 620,
	1555, 0, 0, 0, 0, 0, 0, 0, 1809, 1641,
	0, 621, -2, 1672, 1674, 2302, 2327, 1808, 1676, 1677,
	1678, 1679, 1680, 0, 1682, 1683, 1684, 1685, 1686, 1687,
	0, 1689, 0, 1694, 1695, 1696, 0, 2309, 1889, 1964,
	-2, 0, 0, 2315, 1960, 0, 1775, 1712, -2, -2,
	1987, 1966, 1487, 1488, 1489, 1490, 1491, -2, -2, 2344,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 0, 2290, 2310, 2311, 2316, 2318, 2312, 2299, 1737,
	2062, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1514, 1523, -2, -2, -2, -2,
	-2, -2, -2, 2303, 2304, 2321, 2324, 2330, 2335, 2336,
	2308, 2317, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 1515, -2,
	-2, -2, -2, 1307, 2192, 1310, 1023, 1308, 1292, 1294,
	0, 1296, 0, 0, 0, 1301, 1327, 1325, 0, 1368,
	1305, 1306, 1386, 1386, 1410, 0, 1391, 0, 1410, 1319,
	1436, 0, 1397, 2211, 1713, 1714, 0, 1970, 1965, -2,
	-2, 2342, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 532, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 1120, 568, 569, 0, 593, 0, 597, 2298,
	-2, 2011, 2230, -2, 601, 1200, 1204, 1205, 1206, 1207,
	0, 0, 0, 0, 0, 607, 0, 0, 594, 595,
	613, 616, 0, 702, 703, 704, 705, 63, 0, 2310,
	1436, 65, 0, 1934, 1995, 1996, 1997, 1998, 1999, 2343,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2344, 68, 0, 2310, 72, 0, 2310, 0, -2, 79,
	0, 1940, 82, 0, 1937, 91, 0, 2310, 0, 1909,
	-2, 0, 178, 1948, 0, 889, 1950, -2, 2310, 1071,
	256, 257, 1983, 1984, 1991, 1992, 1993, 1994, 0, 0,
	0, 0, 856, 1906, 1911, 857, 1930, 858, 1916, 0,
	285, 286, 287, 288, 289, 0, 290, 2310, 292, 293,
	0, 295, 296, 2310, 298, 299, 0, 301, 0, 211,
	212, 317, 318, 0, 320, 0, 2310, 0, 0, 0,
	326, -2, 341, 0, 338, 329, 330, 332, 333, 334,
	335, 0, 381, 379, 1945, 0, 884, 2310, 886, 0,
	0, 1100, -2, 2310, 1068, 0, 1106, 1102, 0, -2,
	0, 1317, 2310, 1214, 914, 915, 916, 917, 0, 400,
	0, 1227, 0, 1229, 0, 1250, 1442, 1386, 1386, 0,
	342, 343, 344, 345, 346, 2310, 0, 0, 0, 351,
	0, 353, 354, 355, 356, 357, 358, 359, 167, 2310,
	434, 461, 0, 167, 2310, 437, 167, 2310, 440, 0,
	443, 1119, 167, 2310, 446, 167, 2310, 449, 451, 167,
	2310, 455, 456, 458, 2310, 460, 258, 1166, 1167, 1168,
	1169, 0, -2, 519, 1953, -2, 471, 0, 472, 0,
	-2, 0, 270, 0, 0, 873, 874, 875, 876, 877,
	880, 881, 882, 883, 1423, 229, 227, 0, 0, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 0, 0,
	578, 0, 0, 707, 708, 0, 0, 718, 719, 720,
	0, 270, 2222, 2189, 2082, 727, 0, 730, 733, -2,
	0, 0, 0, 0, 737, 0, 742, 743, 744, 0,
	746, 862, 748, 0, 0, 750, 0, 754, 0, 757,
	0, 759, 0, 761, -2, -2, -2, 772, -2, 0,
	775, 777, 0, 779, -2, 0, 788, 784, 785, 0,
	0, 0, 0, 804, 805, 0, 810, 0, 813, 814,
	815, 0, 817, 818, 0, 820, 821, 822, 823, 0,
	825, 826, -2, -2, 830, 832, 0, 839, 0, 843,
	0, 847, 0, 714, 715, 167, 1440, 1179, -2, 1181,
	0, -2, 0, 559, 0, 562, 1347, 1275, 1272, 0,
	1344, 1345, 1276, 0, 0, 0, 1283, 0, 1322, 1323,
	0, 0, 0, 1262, 1263, 0, 0, 0, 0, 1814,
	1815, 1816, 1817, 1818, 1819, 1822, 1823, 1820, 1821, 1824,
	1825, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	1829, 0, 0, 1831, 0, 1833, 0, 0, 0, 0,
	0, 0, 1620, 1622, 1897, 0, 0, 1830, 1560, 1561,
	1562, 1563, 1564, 1599, 1600, 0, 0, 1673, 1894, 1893,
	1675, 0, 1845, 0, 1688, -2, 0, 1809, 1840, 0,
	0, 1697, 1698, 1699, 0, 0, 1845, 0, 0, 1888,
	1709, 1710, 1552, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1501, 1500, 0, 1502, 0, 1503, 1504,
	1511, 1524, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 0, 1869, -2, 0, 0, 0, 0,
	1516, 0, 1309, 0, 0, 1372, 1898, 1902, 1903, 1372,
	1372, 0, 0, 1846, 1433, 1433, 0, 0, 1429, 1429,
	1429, 1427, 1410, 0, 1410, 1420, 0, 1410, 1410, 0,
	-2, 1391, 0, 0, 1420, 0, 1404, 507, 509, 511,
	513, 514, 515, 517, 1437, 1438, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 2268, 537, 549, 1319, 0, 1848, 1459, 1463, 0,
	1465, 1466, 1467, 1468, 1469, 0, 0, 1460, -2, 1512,
	1514, 1535, 1988, 1989, 1990, 1495, 1496, 1497, 1498, 1499,
	1507, 1494, 1494, 1494, 1505, 1534, 1526, 1534, 1530, 1480,
	1481, 1482, 1517, 1518, 1519, 1520, 0, 2268, 542, 0,
	0, 0, 0, 0, -2, 603, 608, 609, 0, 0,
	1202, 0, 1208, 630, 631, 632, 1210, 1211, 0, 606,
	633, 634, 635, 636, 637, 638, 0, 1918, 1919, 1920,
	1921, 1924, 1925, 0, 0, 604, 623, 611, 0, 617,
	92, 1152, 0, 131, 0, 1152, 1152, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 116, 127, 104,
	105, 0, 0, 0, 0, 0, 73, 1045, 0, 1048,
	0, 0, 0, 0, 0, 0, 0, 1061, 0, 0,
	0, 0, 115, 0, 0, 110, 94, 0, 0, 0,
	117, 129, 0, 158, 160, 0, 0, 0, 0, 0,
	0, 177, 185, 0, 0, 0, 0, 1069, 0, 1316,
	0, 0, 2310, 0, 1423, 2120, -2, -2, 1423, 855,
	0, 0, 1971, 1914, 0, 0, 0, 0, 0, 0,
	0, 319, 321, 0, 323, 324, 325, 0, 1099, 0,
	331, 371, 994, 2310, 0, 0, 398, 393, 0, 395,
	0, 1044, 2310, 1042, 1949, 0, 1066, 0, 1023, 2310,
	1947, 0, 0, 1107, 1980, 1116, 1120, 1216, 0, 402,
	0, 1230, 1232, 0, 0, 1443, 0, 1445, 1446, 0,
	348, 349, 350, 0, 430, 0, 165, 166, 0, 167,
	2310, 435, 0, 438, 0, 167, 2310, 1904, 444, 0,
	447, 0, 0, 453, 0, 0, 0, 0, 1319, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	233, 0, 1422, 0, 1423, 227, 270, 270, 1423, 580,
	1423, 582, 0, 0, 721, 722, 0, 270, 270, 270,
	728, 729, 731, 732, -2, -2, 840, 734, 735, 807,
	0, 0, 0, 806, 747, 0, 849, 2207, 860, 807,
	2050, 807, 2050, 807, 2050, 758, 760, 763, 799, 771,
	776, 0, 0, 781, 789, -2, 0, 791, 0, 793,
	0, 795, 807, 808, 811, 816, 819, 824, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 1192, 1347, 1275,
	561, 1266, 1346, 1267, 1274, 1277, 0, 0, 1279, 0,
	1281, 0, 1342, 1343, 1350, 1351, 0, 1361, 1362, 1354,
	0, -2, 0, 0, 1357, 1358, 1285, 0, 1302, 1303,
	1304, 1331, 1334, 1130, 0, 2442, 1556, 1454, 1557, 1558,
	1933, 0, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, -2, -2, -2, -2, -2, -2, -2, -2,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, -2, -2, -2, 1597, 1598, -2, 1832, 1834, 0,
	1897, 0, -2, 0, -2, -2, -2, -2, 1617, 0,
	1619, 1624, 1626, 1628, 0, 0, 0, 0, 1896, 1638,
	1880, 1881, 0, 0, 1811, 1812, 1813, 1623, 0, 1642,
	1895, 1892, 0, 0, 1844, 1330, 1701, 0, 0, 0,
	0, 1708, 1693, 1842, 0, 1841, 0, 0, 0, 1852,
	0, 1887, 1883, 0, 1931, 1551, 1538, 1539, 1540, 1541,
	1542, 1543, 1553, 0, 1928, 1957, 1963, 1785, 0, 0,
	0, 1738, 1739, 1740, 1741, 1742, 0, 1744, 1745, 0,
	1747, 1748, 0, 1750, 1751, 0, 1753, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 0, 0, 1757, 0, 1855, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1759, 0,
	1761, 1846, 1866, 0, 0, 1643, 0, 0, 0, 1809,
	0, 1764, 1846, 1874, 0, 0, 0, 0, 0, 1846,
	0, 1879, 0, 1771, 0, 1773, 1311, 0, 0, 1449,
	0, 0, 0, 1901, 1449, 1449, 0, 1367, 0, 0,
	1430, 1431, 1432, 0, 0, 1433, 0, 1424, 1428, 1425,
	1426, 1420, 1383, 0, 0, 1935, 1420, 1389, 1419, 0,
	1023, 1409, 1420, 1420, 0, -2, 1393, 1410, 0, 0,
	508, 510, 512, 516, 518, 0, 0, 1330, -2, 0,
	-2, 1022, 0, 0, 0, 0, 527, 529, 0, 0,
	450, 0, 521, 0, 524, 0, 1450, 1453, 0, 0,
	1464, 1470, 1471, 0, -2, 0, 0, 1536, 0, 0,
	0, 0, 192, 0, 596, 0, 1201, 1209, 0, 627,
	0, 629, 0, 1922, 1926, 1923, 1927, 0, 618, 0,
	0, 0, 0, 1151, 0, 135, 2310, 0, 169, 0,
	0, 987, 1941, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 1047, 1049, 1056, 1058, 0, 1052, 1929, 0,
	0, 1053, 0, 1055, 1057, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 107, 0,
	0, 0, 0, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 1093, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	0, 0, -2, 0, 0, 0, 0, 203, 0, 261,
	1907, 1917, 0, 878, 879, 291, 294, 297, 300, 199,
	0, 327, 0, 0, 920, 895, 0, 0, 380, 270,
	0, 0, 394, 0, 1040, 1043, 0, 1023, 2310, 1080,
	0, 0, 0, 0, 0, 0, 1105, 0, 2310, 1936,
	1979, 1980, 1218, 1224, 0, 1449, 0, 1248, 1233, 0,
	0, 0, 1248, 1252, 1253, 1255, 1256, 0, 0, 1444,
	0, 352, 462, 167, 432, 0, 167, 167, 441, 0,
	0, 167, 452, 167, 457, 167, 259, 459, 470, 520,
	1319, 1319, 270, 268, 2164, 266, 263, 265, 0, 0,
	0, 921, 923, 924, 925, 926, 0, 1980, 0, 2109,
	1980, 0, 1236, 1238, 0, 223, 0, 230, 228, 233,
	0, 0, 392, 579, 584, 716, 0, 270, 724, 725,
	726, 765, 801, 736, 738, 739, 740, 0, 861, 859,
	749, 807, 752, 807, 755, 807, 774, 778, 783, 790,
	0, 0, 0, 803, 0, 0, 0, 0, 0, 0,
	0, 844, 845, 846, 848, 1441, 1270, 1271, 1273, 0,
	1282, 0, 0, 1356, -2, -2, 1355, 1359, 1360, -2,
	-2, -2, -2, 1278, 0, 1287, 1284, 0, 1341, 1128,
	1129, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1639, 0, -2, 1618, 1621, 1625, 1627, 1629, 0, 0,
	0, 0, 0, 0, 1835, 0, 1837, 1640, 1890, 1893,
	1807, 0, 0, 1329, 1330, 1330, 0, 1707, 0, 1843,
	0, 1850, 1851, 0, 1700, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1743, 1746, 1749, 1752, 0, 0, 0, 0, 1732,
	0, 0, 0, 1736, 1506, 1492, 0, 1534, 1532, 1533,
	1527, 1534, 1531, 1484, 0, 1483, 0, 1756, 0, 1758,
	1760, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1763, 1872, 1873, 0, 0, 0, 0, 0, 0, 1769,
	0, 1878, 1770, 1772, 1319, 0, 1312, 0, 1369, 1364,
	1448, 0, 1899, 1423, 1371, 1373, 1900, 1938, 1364, 1364,
	0, 1847, 0, 0, 1414, 0, 0, 0, 1416, 1387,
	0, 0, 1381, 0, 1377, 1378, 1379, 1380, 1388, 1023,
	1418, 1390, 1394, 1957, 0, 1420, 0, 1405, 0, 1407,
	1439, 0, 1399, 1402, 0, 0, 1972, 271, 0, 302,
	306, 307, 303, 304, 305, 536, 0, 0, 0, 1849,
	0, 1455, 0, 1461, 0, 0, 0, 0, 541, 0,
	0, 592, -2, 625, 626, 628, 0, 624, 132, 1152,
	0, 0, 1133, 1135, 0, 137, 2310, 146, 0, 961,
	0, 1939, 0, 0, 0, 0, 0, 1154, 0, 0,
	2310, 167, 2310, 167, 149, 152, 0, 157, 154, 155,
	182, 183, 184, 0, 0, 952, 93, 1152, 0, 96,
	100, 108, 0, 0, 0, 114, 0, 0, 0, 1137,
	1143, 0, 0, 1050, 1051, 1054, 1060, 74, 0, 0,
	1141, 1147, 80, 0, 1132, 159, 98, 102, 109, 0,
	1149, 95, 0, 181, 0, 0, 0, 173, 0, 174,
	175, 186, 0, 167, 2310, 0, 887, 888, 1094, 1064,
	1065, 0, 1070, 0, 0, 0, 1423, 195, 0, 1423,
	203, 0, 1913, 0, 0, 0, 0, 0, 0, 919,
	1005, 0, 892, 0, 0, 0, 386, 382, 0, 391,
	397, 396, 885, 0, 0, 0, -2, 0, 0, 1109,
	1103, 1104, 0, 0, 0, 2310, 1220, 1224, 0, 1223,
	1317, 1330, 401, 1225, 1248, 0, 0, 0, 1235, 1231,
	1228, 1449, 0, 0, 0, 0, 0, 347, 431, 167,
	436, 439, 1905, 167, 445, 448, 454, 473, 474, 245,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 930,
	0, 1980, 1980, 0, 1943, 0, 0, 0, 0, 231,
	0, 234, 0, 0, 0, 239, 240, 241, 242, 243,
	224, 1423, 0, 581, 0, 0, 723, 0, 751, 753,
	756, 792, 794, 807, 833, 834, 947, 0, 947, 0,
	0, 1280, 0, 1353, 1286, 1335, 1336, 0, 1130, 0,
	1559, 1602, 0, 0, -2, 0, 0, 1606, 0, 0,
	0, -2, 0, 0, 0, 1836, 1838, 0, 1892, 1702,
	0, 0, 0, 1706, 1690, 1691, 0, 1810, 1853, 1882,
	1886, 0, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 0,
	1932, 1958, 1962, 1783, 1784, 1788, 1946, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 1525,
	1529, 0, 0, 1854, 1865, 1867, 1644, 1645, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, -2, -2,
	-2, 1662, 1663, 1664, -2, -2, -2, 0, 0, 0,
	1868, 1870, 1871, 1875, 1876, 0, 1766, 1767, 1768, 1877,
	0, 1319, 1313, 1366, 0, 1447, 1370, 0, 1366, 1366,
	1326, 1412, 0, 0, 1435, 0, 1384, 0, 1385, 0,
	1417, 0, 1392, 1395, 1396, 1406, 0, 1398, 0, 1401,
	0, 1702, -2, 272, 274, 0, 277, 539, 538, 522,
	0, 0, 1457, 0, 0, 1509, 1513, 1537, 544, 543,
	1421, 0, 0, 0, 0, 168, 959, 986, 0, 0,
	0, 1123, 1130, 0, 0, 992, 139, 0, 0, 0,
	147, 0, 0, 144, 0, 151, 156, 0, 0, 0,
	0, 0, 0, 111, 112, 113, 0, 118, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 1127, 0, 0, 188, 0, 0, 0,
	1097, 1098, 1138, 1144, 0, 0, 203, 201, 0, 204,
	0, 207, 208, 0, 203, 197, 0, 0, 322, 1023,
	328, 941, 993, 0, 995, 0, 893, 0, 0, 994,
	378, 0, 385, 0, 1044, 0, 0, 1067, 1078, 1023,
	0, 1108, 1110, 1118, 0, 0, 0, 1222, 1224, 0,
	1215, 1216, 1349, 1226, 1246, -2, 1245, 0, 1330, 1254,
	1251, 1257, 1258, 0, 433, 442, 267, 0, 262, 264,
	0, 248, 0, 0, 922, 927, 0, 0, 0, 0,
	0, 1237, 1239, 0, 0, 0, 0, 0, 0, 233,
	254, 0, 717, 741, 802, 835, 946, 0, 0, 837,
	0, 0, 1352, 1339, 1340, 1337, 1130, 1604, 1608, 0,
	0, 0, 1610, -2, 0, 1632, -2, -2, 1839, 1891,
	1681, 1330, 1703, 1705, 1692, 1885, 1554, 0, 1790, 1787,
	0, 1774, 0, 1727, 1728, 0, 0, 1731, 1733, 1734,
	1735, 1493, 1486, 1485, 1864, 0, 0, 0, 0, 1765,
	1314, 0, 1779, 0, 0, 1374, 1779, 1779, 1413, 0,
	1415, 1382, 1375, 0, 1958, 1408, 1400, 0, 0, 275,
	0, 1451, 1456, 0, 1462, 1508, 133, 134, 136, 0,
	960, 0, 963, 0, 0, 0, 0, 970, 971, 0,
	0, 0, 0, 0, 980, 0, 1009, 1019, 0, 1341,
	0, 0, 0, 141, 162, 0, 0, 1153, 0, 0,
	167, 167, 0, 0, 1134, 1136, 0, 0, 0, 0,
	121, 0, 0, 1139, 1145, 1142, 1148, 0, 0, 0,
	1150, 179, 180, 0, 167, 0, 172, 167, 167, 1127,
	0, 0, 0, 194, 0, 0, 0, 0, 196, 260,
	203, 0, 949, 0, 1005, 997, 998, 999, 0, 1004,
	1006, 0, 0, 907, 894, 0, 903, 0, 0, 920,
	895, 0, 383, 1041, 1075, 1023, 0, 1101, 0, 0,
	0, 0, 0, 0, 1212, 1224, 0, 1217, 1218, 1248,
	1348, 0, 0, 0, 1234, 1349, 0, 269, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 235,
	0, 236, 237, 238, 225, 583, 585, 0, 0, 591,
	945, 0, 0, 0, 0, 1338, 1612, -2, -2, 1633,
	0, 1959, 1961, 1330, 0, 1776, 1332, 0, 0, -2,
	0, 0, 0, 1315, 1298, 0, 1365, 1363, 1299, 1300,
	1434, 0, 1403, 276, 0, 1458, 138, 0, 964, 965,
	1942, 967, 0, 969, 972, 0, 975, 1982, 0, 979,
	0, 988, 1010, 0, 941, 0, 1015, 1016, 1017, 1124,
	1125, 1021, 0, 140, 142, 161, 1127, 0, 143, 150,
	0, 0, 97, 0, 0, 2042, 124, 122, 120, 1131,
	99, 0, 181, 187, 1126, 176, 189, 167, 0, 1140,
	1146, 205, 0, 206, 209, 0, 0, 895, 948, 0,
	996, 0, 1007, 1008, 897, 0, 896, 0, 0, 0,
	0, 0, 384, 387, 0, 390, 0, 0, 1111, 0,
	1117, 0, 0, 0, 0, 1219, 1220, 399, 0, 0,
	0, 1248, 1259, 247, 0, 0, 928, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 929, 1021, 0, 0,
	985, 0, 252, 232, 0, 587, 0, 589, 0, 836,
	838, 0, 0, 1704, 1794, 0, 0, 1729, 1730, -2,
	0, 1670, 1778, 1780, 0, 1376, 1452, 962, 966, 0,
	0, 0, 1027, 0, 0, 981, 0, 1013, 1014, 949,
	0, 941, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 171, 190, 1127, 202, 219, 0, 1076, 897,
	0, 0, 905, 0, 908, 0, 904, 901, 902, 941,
	0, 388, 389, 0, 1079, 0, 1118, 0, 0, 1221,
	1222, 0, 1241, 1242, 1244, 1249, 0, 0, 1019, 1021,
	895, 0, 586, 0, 0, 841, 842, 0, 0, 0,
	0, 1789, 1333, 1671, 0, 0, 0, 0, 974, 1032,
	0, 0, 0, 1011, 1012, 1009, 0, 990, 0, 1023,
	145, 0, 1021, 0, 953, 0, 0, 956, 0, 0,
	125, 2042, 123, 0, 167, 222, 0, 216, 214, 215,
	890, 0, 0, 1001, 1003, 0, 909, 949, 907, 1077,
	1021, 0, 1019, 0, 1213, 0, 1243, 270, 270, 941,
	1019, 1449, 0, 270, 588, 590, 1786, 1806, 1795, -2,
	2270, 2047, 0, 1806, 1806, 1781, 1782, 0, 0, 976,
	1028, 1029, 0, 1024, 1025, 1026, 1981, 977, 978, 1449,
	1018, 0, 1027, 163, 941, 950, 0, 0, 951, 0,
	0, 128, 0, 130, 191, 210, 0, 0, 0, 1000,
	0, 0, 0, 0, 895, 897, 1019, 0, 941, 0,
	1449, 249, 250, 949, 941, 984, 251, 1791, 0, 0,
	1797, 1798, 1799, 1800, 1801, 1792, 1793, 968, 0, 1030,
	0, 1031, 0, 0, 0, 989, 0, 1032, 148, 954,
	0, 957, 0, 126, 0, 217, 218, 0, 1002, 898,
	0, 900, 897, 906, 941, 0, 949, 0, 1240, 895,
	949, 0, 1803, 1804, 0, 0, 0, 1033, 0, 1036,
	1037, 0, 1034, 0, 1009, 0, 0, 0, 944, 899,
	891, 949, 1021, 895, 1019, 1449, 895, 1802, 1805, 1796,
	973, 1035, 1038, 1039, 1020, 991, 0, 0, 0, 940,
	942, 943, 895, 1019, 1449, 941, 982, 1449, 949, 0,
	220, 0, 1449, 941, 1114, 949, 983, 955, 0, 0,
	1112, 949, 895, 0, 221, 895, 1449, 0, 1449, 1115,
	949, 1113, 958,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 509, 3, 515, 510, 3,
	520, 521, 513, 511, 525, 512, 522, 514, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 528, 3,
	501, 503, 502, 506, 524, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 518, 3, 519, 516, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 526, 508, 527, 504,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 505, 57844, 507,
	57845, 517, 57846, 523, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1211
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1236
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1373
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1377
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1419
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1459
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1499
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1527
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1567
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1582
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1621
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1641
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1650
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1661
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1667
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1698
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1818
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1867
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2032
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2082
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2151
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2159
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2414
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2538
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2547
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2553
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2558
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2568
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2573
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2596
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2604
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2680
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2840
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2864
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2879
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2880
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2881
		{
			return helpWith(sqllex, "CREATE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			return unimplemented(sqllex, "create cast")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2886
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "create operator")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "create publication")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "create rule")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "create server")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2906
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2909
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2910
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2914
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "drop server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3054
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3089
		{

			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3117
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "DROP")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3358
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3418
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3442
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3450
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "INSERT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DELETE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "INSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3527
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3560
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "GRANT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "RESET")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "RESET")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "USE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3754
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return unimplemented(sqllex, "set from current")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3995
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = tree.Low
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = tree.Normal
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = tree.High
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "SHOW")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.str = "client_encoding"
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.str = "timezone"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4230
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4293
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4302
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = true
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = false
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4611
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4763
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4806
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4814
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4851
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4874
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4890
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5082
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "RESUME")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5291
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5306
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{

			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = nil
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5340
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5356
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5388
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5402
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5417
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5502
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5515
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5536
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.str = ""
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5725
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5739
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5750
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5849
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5967
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5968
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6128
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6137
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6176
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = true
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{

			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6264
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6278
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6290
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6302
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6312
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = nil
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6400
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6419
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6421
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6423
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6427
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6465
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6483
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6502
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6519
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = true
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = false
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = false
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6647
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6653
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6723
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6729
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6741
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6747
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6761
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6767
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6789
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6954
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7019
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7023
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.str = ""
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.str = ""
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7131
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7255
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7264
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7484
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7519
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7582
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = true
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = false
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7696
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = nil
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7710
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7740
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7802
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7807
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7929
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7984
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8021
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8073
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8122
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8198
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8231
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = nil
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = true
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = false
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.str = tree.AstFull
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.str = tree.AstRight
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.str = tree.AstInner
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.str = tree.AstHash
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.str = ""
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8442
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8500
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8508
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8537
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8557
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = types.Geography
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8644
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8652
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8686
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = nil
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = types.Int2
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = types.Int
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = types.Float4
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = types.Float
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8737
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = types.Bool
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = types.Float
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8778
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8784
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8806
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = types.String
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = true
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = false
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = types.Date
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8863
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8877
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8894
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8911
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = true
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = false
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = false
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = types.Interval
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8935
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = nil
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9663
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9713
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9743
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9754
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9755
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9845
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10021
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10026
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			return unimplemented(sqllex, "treat")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10062
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10067
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10114
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.str = ""
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10313
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = tree.Any
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = tree.Some
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = tree.All
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = tree.Div
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = tree.LT
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.GT
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = tree.LE
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = tree.GE
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.NE
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = tree.Like
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10675
		{
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10893
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11091
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.str = ""
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
