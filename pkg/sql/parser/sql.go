// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}

//line sql-gen.y:932
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14601

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1728,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 454,
	-2, 0,
	-1, 71,
	8, 903,
	29, 903,
	621, 903,
	622, 903,
	-2, 0,
	-1, 72,
	8, 903,
	29, 903,
	621, 903,
	622, 903,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 92,
	242, 1459,
	256, 1459,
	272, 450,
	410, 450,
	422, 1206,
	463, 450,
	477, 1206,
	527, 1206,
	555, 450,
	582, 1206,
	-2, 0,
	-1, 98,
	137, 1728,
	249, 1728,
	566, 1728,
	567, 1728,
	-2, 0,
	-1, 116,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 1670,
	-1, 158,
	164, 1035,
	271, 1035,
	413, 996,
	482, 996,
	526, 996,
	546, 1035,
	548, 996,
	-2, 0,
	-1, 163,
	4, 1730,
	21, 1730,
	22, 1730,
	23, 1730,
	24, 1730,
	25, 1730,
	26, 1730,
	27, 1730,
	28, 1730,
	30, 1730,
	31, 1730,
	37, 1730,
	41, 1730,
	43, 1730,
	44, 1730,
	46, 1730,
	47, 1730,
	48, 1730,
	49, 1730,
	50, 1730,
	51, 1730,
	52, 1730,
	53, 1730,
	54, 1730,
	56, 1730,
	57, 1730,
	58, 1730,
	59, 1730,
	61, 1730,
	62, 1730,
	63, 1730,
	64, 1730,
	65, 1730,
	66, 1730,
	67, 1730,
	71, 1730,
	72, 1730,
	73, 1730,
	74, 1730,
	76, 1730,
	77, 1730,
	78, 1730,
	82, 1730,
	83, 1730,
	84, 1730,
	85, 1730,
	86, 1730,
	87, 1730,
	88, 1730,
	89, 1730,
	92, 1730,
	93, 1730,
	94, 1730,
	95, 1730,
	96, 1730,
	98, 1730,
	100, 1730,
	101, 1730,
	102, 1730,
	103, 1730,
	104, 1730,
	105, 1730,
	107, 1730,
	108, 1730,
	109, 1730,
	111, 1730,
	112, 1730,
	113, 1730,
	121, 1730,
	122, 1730,
	123, 1730,
	124, 1730,
	125, 1730,
	127, 1730,
	128, 1730,
	129, 1730,
	130, 1730,
	132, 1730,
	133, 1730,
	134, 1730,
	136, 1730,
	137, 1730,
	138, 1730,
	140, 1730,
	141, 1730,
	142, 1730,
	145, 1730,
	146, 1730,
	147, 1730,
	149, 1730,
	150, 1730,
	151, 1730,
	153, 1730,
	154, 1730,
	155, 1730,
	157, 1730,
	158, 1730,
	159, 1730,
	160, 1730,
	161, 1730,
	162, 1730,
	163, 1730,
	164, 1730,
	165, 1730,
	166, 1730,
	167, 1730,
	168, 1730,
	169, 1730,
	170, 1730,
	171, 1730,
	172, 1730,
	173, 1730,
	175, 1730,
	181, 1730,
	182, 1730,
	183, 1730,
	184, 1730,
	188, 1730,
	190, 1730,
	191, 1730,
	192, 1730,
	194, 1730,
	195, 1730,
	198, 1730,
	199, 1730,
	200, 1730,
	201, 1730,
	202, 1730,
	203, 1730,
	204, 1730,
	205, 1730,
	206, 1730,
	207, 1730,
	208, 1730,
	209, 1730,
	210, 1730,
	211, 1730,
	213, 1730,
	214, 1730,
	216, 1730,
	217, 1730,
	219, 1730,
	220, 1730,
	221, 1730,
	222, 1730,
	223, 1730,
	224, 1730,
	225, 1730,
	226, 1730,
	227, 1730,
	228, 1730,
	229, 1730,
	231, 1730,
	232, 1730,
	234, 1730,
	235, 1730,
	236, 1730,
	237, 1730,
	238, 1730,
	242, 1730,
	243, 1730,
	244, 1730,
	245, 1730,
	248, 1730,
	249, 1730,
	250, 1730,
	251, 1730,
	253, 1730,
	255, 1730,
	256, 1730,
	258, 1730,
	260, 1730,
	261, 1730,
	262, 1730,
	264, 1730,
	268, 1730,
	269, 1730,
	270, 1730,
	271, 1730,
	272, 1730,
	273, 1730,
	275, 1730,
	276, 1730,
	277, 1730,
	279, 1730,
	280, 1730,
	282, 1730,
	283, 1730,
	286, 1730,
	287, 1730,
	288, 1730,
	289, 1730,
	290, 1730,
	291, 1730,
	292, 1730,
	295, 1730,
	296, 1730,
	297, 1730,
	298, 1730,
	300, 1730,
	301, 1730,
	302, 1730,
	303, 1730,
	304, 1730,
	305, 1730,
	306, 1730,
	307, 1730,
	308, 1730,
	309, 1730,
	310, 1730,
	311, 1730,
	312, 1730,
	313, 1730,
	314, 1730,
	315, 1730,
	316, 1730,
	317, 1730,
	318, 1730,
	319, 1730,
	320, 1730,
	321, 1730,
	322, 1730,
	324, 1730,
	326, 1730,
	327, 1730,
	328, 1730,
	329, 1730,
	330, 1730,
	331, 1730,
	332, 1730,
	333, 1730,
	334, 1730,
	335, 1730,
	336, 1730,
	337, 1730,
	338, 1730,
	339, 1730,
	340, 1730,
	341, 1730,
	342, 1730,
	344, 1730,
	345, 1730,
	347, 1730,
	349, 1730,
	350, 1730,
	351, 1730,
	352, 1730,
	354, 1730,
	355, 1730,
	356, 1730,
	357, 1730,
	358, 1730,
	361, 1730,
	363, 1730,
	365, 1730,
	366, 1730,
	367, 1730,
	368, 1730,
	371, 1730,
	372, 1730,
	373, 1730,
	375, 1730,
	377, 1730,
	378, 1730,
	379, 1730,
	380, 1730,
	381, 1730,
	382, 1730,
	383, 1730,
	384, 1730,
	385, 1730,
	386, 1730,
	387, 1730,
	388, 1730,
	389, 1730,
	391, 1730,
	392, 1730,
	393, 1730,
	394, 1730,
	395, 1730,
	396, 1730,
	397, 1730,
	398, 1730,
	399, 1730,
	400, 1730,
	401, 1730,
	402, 1730,
	403, 1730,
	404, 1730,
	405, 1730,
	407, 1730,
	408, 1730,
	409, 1730,
	411, 1730,
	412, 1730,
	413, 1730,
	414, 1730,
	415, 1730,
	416, 1730,
	417, 1730,
	418, 1730,
	419, 1730,
	420, 1730,
	421, 1730,
	422, 1730,
	423, 1730,
	424, 1730,
	426, 1730,
	428, 1730,
	429, 1730,
	430, 1730,
	436, 1730,
	437, 1730,
	438, 1730,
	440, 1730,
	441, 1730,
	442, 1730,
	443, 1730,
	444, 1730,
	445, 1730,
	446, 1730,
	447, 1730,
	448, 1730,
	449, 1730,
	451, 1730,
	452, 1730,
	453, 1730,
	455, 1730,
	456, 1730,
	457, 1730,
	458, 1730,
	459, 1730,
	460, 1730,
	461, 1730,
	463, 1730,
	464, 1730,
	465, 1730,
	466, 1730,
	467, 1730,
	468, 1730,
	469, 1730,
	470, 1730,
	471, 1730,
	472, 1730,
	473, 1730,
	474, 1730,
	475, 1730,
	477, 1730,
	478, 1730,
	479, 1730,
	480, 1730,
	481, 1730,
	482, 1730,
	484, 1730,
	485, 1730,
	486, 1730,
	487, 1730,
	488, 1730,
	489, 1730,
	491, 1730,
	492, 1730,
	493, 1730,
	494, 1730,
	495, 1730,
	496, 1730,
	497, 1730,
	498, 1730,
	500, 1730,
	502, 1730,
	503, 1730,
	504, 1730,
	505, 1730,
	506, 1730,
	507, 1730,
	508, 1730,
	509, 1730,
	510, 1730,
	511, 1730,
	512, 1730,
	513, 1730,
	514, 1730,
	515, 1730,
	516, 1730,
	517, 1730,
	518, 1730,
	519, 1730,
	520, 1730,
	522, 1730,
	523, 1730,
	525, 1730,
	526, 1730,
	528, 1730,
	529, 1730,
	530, 1730,
	531, 1730,
	532, 1730,
	533, 1730,
	535, 1730,
	536, 1730,
	538, 1730,
	539, 1730,
	540, 1730,
	541, 1730,
	542, 1730,
	544, 1730,
	546, 1730,
	547, 1730,
	548, 1730,
	549, 1730,
	550, 1730,
	551, 1730,
	552, 1730,
	554, 1730,
	555, 1730,
	556, 1730,
	557, 1730,
	559, 1730,
	560, 1730,
	563, 1730,
	564, 1730,
	565, 1730,
	566, 1730,
	567, 1730,
	568, 1730,
	569, 1730,
	570, 1730,
	572, 1730,
	575, 1730,
	576, 1730,
	577, 1730,
	578, 1730,
	579, 1730,
	580, 1730,
	582, 1730,
	583, 1730,
	584, 1730,
	585, 1730,
	586, 1730,
	587, 1730,
	588, 1730,
	589, 1730,
	594, 1730,
	595, 1730,
	596, 1730,
	597, 1730,
	598, 1730,
	599, 1730,
	-2, 0,
	-1, 164,
	1, 1578,
	135, 1578,
	260, 1578,
	346, 1578,
	408, 1578,
	418, 1578,
	603, 1578,
	634, 1578,
	-2, 0,
	-1, 166,
	1, 1578,
	634, 1578,
	-2, 0,
	-1, 167,
	1, 1578,
	634, 1578,
	-2, 0,
	-1, 168,
	1, 1578,
	543, 1578,
	634, 1578,
	-2, 0,
	-1, 200,
	156, 1698,
	176, 1698,
	189, 1698,
	252, 1698,
	285, 1698,
	359, 1698,
	370, 1698,
	561, 1698,
	-2, 1673,
	-1, 251,
	4, 1737,
	5, 1737,
	6, 1737,
	7, 1737,
	8, 1737,
	9, 1737,
	10, 1737,
	21, 1737,
	22, 1737,
	23, 1737,
	24, 1737,
	25, 1737,
	26, 1737,
	27, 1737,
	28, 1737,
	30, 1737,
	31, 1737,
	37, 1737,
	38, 1737,
	41, 1737,
	43, 1737,
	44, 1737,
	45, 1737,
	46, 1737,
	47, 1737,
	48, 1737,
	49, 1737,
	50, 1737,
	51, 1737,
	52, 1737,
	53, 1737,
	54, 1737,
	56, 1737,
	57, 1737,
	58, 1737,
	59, 1737,
	61, 1737,
	62, 1737,
	63, 1737,
	64, 1737,
	65, 1737,
	66, 1737,
	67, 1737,
	68, 1737,
	69, 1737,
	70, 1737,
	71, 1737,
	72, 1737,
	73, 1737,
	74, 1737,
	76, 1737,
	77, 1737,
	78, 1737,
	80, 1737,
	82, 1737,
	83, 1737,
	84, 1737,
	85, 1737,
	86, 1737,
	87, 1737,
	88, 1737,
	89, 1737,
	92, 1737,
	93, 1737,
	94, 1737,
	95, 1737,
	96, 1737,
	98, 1737,
	100, 1737,
	101, 1737,
	102, 1737,
	103, 1737,
	104, 1737,
	105, 1737,
	107, 1737,
	108, 1737,
	109, 1737,
	110, 1737,
	111, 1737,
	112, 1737,
	113, 1737,
	114, 1737,
	115, 1737,
	116, 1737,
	117, 1737,
	118, 1737,
	119, 1737,
	120, 1737,
	121, 1737,
	122, 1737,
	123, 1737,
	124, 1737,
	125, 1737,
	126, 1737,
	127, 1737,
	128, 1737,
	129, 1737,
	130, 1737,
	131, 1737,
	132, 1737,
	133, 1737,
	134, 1737,
	136, 1737,
	137, 1737,
	138, 1737,
	140, 1737,
	141, 1737,
	142, 1737,
	145, 1737,
	146, 1737,
	147, 1737,
	149, 1737,
	150, 1737,
	151, 1737,
	153, 1737,
	154, 1737,
	155, 1737,
	157, 1737,
	158, 1737,
	159, 1737,
	160, 1737,
	161, 1737,
	162, 1737,
	163, 1737,
	164, 1737,
	165, 1737,
	166, 1737,
	167, 1737,
	168, 1737,
	169, 1737,
	170, 1737,
	171, 1737,
	172, 1737,
	173, 1737,
	174, 1737,
	175, 1737,
	181, 1737,
	182, 1737,
	183, 1737,
	184, 1737,
	188, 1737,
	190, 1737,
	191, 1737,
	192, 1737,
	194, 1737,
	195, 1737,
	197, 1737,
	198, 1737,
	199, 1737,
	200, 1737,
	201, 1737,
	202, 1737,
	203, 1737,
	204, 1737,
	205, 1737,
	206, 1737,
	207, 1737,
	208, 1737,
	209, 1737,
	210, 1737,
	211, 1737,
	213, 1737,
	214, 1737,
	216, 1737,
	217, 1737,
	219, 1737,
	220, 1737,
	221, 1737,
	222, 1737,
	223, 1737,
	224, 1737,
	225, 1737,
	226, 1737,
	227, 1737,
	228, 1737,
	229, 1737,
	230, 1737,
	231, 1737,
	232, 1737,
	234, 1737,
	235, 1737,
	236, 1737,
	237, 1737,
	238, 1737,
	242, 1737,
	243, 1737,
	244, 1737,
	245, 1737,
	247, 1737,
	248, 1737,
	249, 1737,
	250, 1737,
	251, 1737,
	253, 1737,
	255, 1737,
	256, 1737,
	257, 1737,
	258, 1737,
	259, 1737,
	260, 1737,
	261, 1737,
	262, 1737,
	263, 1737,
	264, 1737,
	268, 1737,
	269, 1737,
	270, 1737,
	271, 1737,
	272, 1737,
	273, 1737,
	275, 1737,
	276, 1737,
	277, 1737,
	279, 1737,
	280, 1737,
	281, 1737,
	282, 1737,
	283, 1737,
	284, 1737,
	286, 1737,
	287, 1737,
	288, 1737,
	289, 1737,
	290, 1737,
	291, 1737,
	292, 1737,
	293, 1737,
	294, 1737,
	295, 1737,
	296, 1737,
	297, 1737,
	298, 1737,
	300, 1737,
	301, 1737,
	302, 1737,
	303, 1737,
	304, 1737,
	305, 1737,
	306, 1737,
	307, 1737,
	308, 1737,
	309, 1737,
	310, 1737,
	311, 1737,
	312, 1737,
	313, 1737,
	314, 1737,
	315, 1737,
	316, 1737,
	317, 1737,
	318, 1737,
	319, 1737,
	320, 1737,
	321, 1737,
	322, 1737,
	324, 1737,
	325, 1737,
	326, 1737,
	327, 1737,
	328, 1737,
	329, 1737,
	330, 1737,
	331, 1737,
	332, 1737,
	333, 1737,
	334, 1737,
	335, 1737,
	336, 1737,
	337, 1737,
	338, 1737,
	339, 1737,
	340, 1737,
	341, 1737,
	342, 1737,
	343, 1737,
	344, 1737,
	345, 1737,
	346, 1737,
	347, 1737,
	348, 1737,
	349, 1737,
	350, 1737,
	351, 1737,
	352, 1737,
	353, 1737,
	354, 1737,
	355, 1737,
	356, 1737,
	357, 1737,
	358, 1737,
	361, 1737,
	363, 1737,
	366, 1737,
	367, 1737,
	368, 1737,
	371, 1737,
	372, 1737,
	373, 1737,
	374, 1737,
	375, 1737,
	376, 1737,
	377, 1737,
	378, 1737,
	379, 1737,
	380, 1737,
	381, 1737,
	382, 1737,
	383, 1737,
	384, 1737,
	385, 1737,
	386, 1737,
	387, 1737,
	388, 1737,
	389, 1737,
	391, 1737,
	392, 1737,
	393, 1737,
	394, 1737,
	395, 1737,
	396, 1737,
	397, 1737,
	398, 1737,
	399, 1737,
	400, 1737,
	401, 1737,
	402, 1737,
	403, 1737,
	404, 1737,
	405, 1737,
	407, 1737,
	408, 1737,
	409, 1737,
	411, 1737,
	412, 1737,
	413, 1737,
	414, 1737,
	415, 1737,
	416, 1737,
	417, 1737,
	418, 1737,
	419, 1737,
	420, 1737,
	421, 1737,
	422, 1737,
	423, 1737,
	424, 1737,
	426, 1737,
	428, 1737,
	429, 1737,
	430, 1737,
	436, 1737,
	437, 1737,
	438, 1737,
	440, 1737,
	441, 1737,
	442, 1737,
	443, 1737,
	444, 1737,
	445, 1737,
	446, 1737,
	447, 1737,
	448, 1737,
	449, 1737,
	451, 1737,
	452, 1737,
	453, 1737,
	454, 1737,
	455, 1737,
	456, 1737,
	457, 1737,
	458, 1737,
	459, 1737,
	460, 1737,
	461, 1737,
	463, 1737,
	464, 1737,
	465, 1737,
	466, 1737,
	467, 1737,
	468, 1737,
	469, 1737,
	470, 1737,
	471, 1737,
	472, 1737,
	473, 1737,
	474, 1737,
	475, 1737,
	477, 1737,
	478, 1737,
	479, 1737,
	480, 1737,
	481, 1737,
	482, 1737,
	483, 1737,
	484, 1737,
	485, 1737,
	486, 1737,
	487, 1737,
	488, 1737,
	489, 1737,
	490, 1737,
	491, 1737,
	492, 1737,
	493, 1737,
	494, 1737,
	495, 1737,
	496, 1737,
	497, 1737,
	498, 1737,
	500, 1737,
	502, 1737,
	503, 1737,
	504, 1737,
	505, 1737,
	506, 1737,
	507, 1737,
	508, 1737,
	509, 1737,
	510, 1737,
	511, 1737,
	512, 1737,
	513, 1737,
	514, 1737,
	515, 1737,
	516, 1737,
	517, 1737,
	518, 1737,
	519, 1737,
	520, 1737,
	522, 1737,
	523, 1737,
	524, 1737,
	525, 1737,
	526, 1737,
	528, 1737,
	529, 1737,
	530, 1737,
	531, 1737,
	532, 1737,
	533, 1737,
	535, 1737,
	536, 1737,
	538, 1737,
	539, 1737,
	540, 1737,
	541, 1737,
	542, 1737,
	544, 1737,
	546, 1737,
	547, 1737,
	548, 1737,
	549, 1737,
	550, 1737,
	551, 1737,
	552, 1737,
	553, 1737,
	554, 1737,
	555, 1737,
	556, 1737,
	557, 1737,
	559, 1737,
	560, 1737,
	562, 1737,
	563, 1737,
	564, 1737,
	565, 1737,
	566, 1737,
	567, 1737,
	568, 1737,
	569, 1737,
	570, 1737,
	571, 1737,
	572, 1737,
	575, 1737,
	576, 1737,
	577, 1737,
	578, 1737,
	579, 1737,
	580, 1737,
	582, 1737,
	583, 1737,
	584, 1737,
	585, 1737,
	586, 1737,
	587, 1737,
	588, 1737,
	589, 1737,
	594, 1737,
	595, 1737,
	596, 1737,
	597, 1737,
	598, 1737,
	599, 1737,
	600, 1737,
	614, 1737,
	621, 1737,
	622, 1737,
	623, 1737,
	631, 1737,
	635, 1737,
	-2, 0,
	-1, 796,
	4, 1457,
	21, 1457,
	22, 1457,
	23, 1457,
	24, 1457,
	25, 1457,
	26, 1457,
	27, 1457,
	28, 1457,
	30, 1457,
	31, 1457,
	37, 1457,
	41, 1457,
	43, 1457,
	44, 1457,
	46, 1457,
	47, 1457,
	48, 1457,
	49, 1457,
	50, 1457,
	51, 1457,
	52, 1457,
	53, 1457,
	54, 1457,
	56, 1457,
	57, 1457,
	58, 1457,
	59, 1457,
	61, 1457,
	62, 1457,
	63, 1457,
	64, 1457,
	65, 1457,
	66, 1457,
	67, 1457,
	71, 1457,
	72, 1457,
	73, 1457,
	74, 1457,
	76, 1457,
	77, 1457,
	78, 1457,
	82, 1457,
	83, 1457,
	84, 1457,
	85, 1457,
	86, 1457,
	87, 1457,
	88, 1457,
	89, 1457,
	92, 1457,
	93, 1457,
	94, 1457,
	95, 1457,
	96, 1457,
	98, 1457,
	100, 1457,
	101, 1457,
	102, 1457,
	103, 1457,
	104, 1457,
	105, 1457,
	107, 1457,
	108, 1457,
	109, 1457,
	111, 1457,
	112, 1457,
	113, 1457,
	121, 1457,
	122, 1457,
	123, 1457,
	124, 1457,
	125, 1457,
	127, 1457,
	128, 1457,
	129, 1457,
	130, 1457,
	132, 1457,
	133, 1457,
	134, 1457,
	136, 1457,
	137, 1457,
	138, 1457,
	140, 1457,
	141, 1457,
	142, 1457,
	145, 1457,
	146, 1457,
	147, 1457,
	149, 1457,
	150, 1457,
	151, 1457,
	153, 1457,
	154, 1457,
	155, 1457,
	157, 1457,
	158, 1457,
	159, 1457,
	160, 1457,
	161, 1457,
	162, 1457,
	163, 1457,
	164, 1457,
	165, 1457,
	166, 1457,
	167, 1457,
	168, 1457,
	169, 1457,
	170, 1457,
	171, 1457,
	172, 1457,
	173, 1457,
	175, 1457,
	181, 1457,
	182, 1457,
	183, 1457,
	184, 1457,
	188, 1457,
	190, 1457,
	191, 1457,
	192, 1457,
	194, 1457,
	195, 1457,
	198, 1457,
	199, 1457,
	200, 1457,
	201, 1457,
	202, 1457,
	203, 1457,
	204, 1457,
	205, 1457,
	206, 1457,
	207, 1457,
	208, 1457,
	209, 1457,
	210, 1457,
	211, 1457,
	213, 1457,
	214, 1457,
	216, 1457,
	217, 1457,
	219, 1457,
	220, 1457,
	221, 1457,
	222, 1457,
	223, 1457,
	224, 1457,
	225, 1457,
	226, 1457,
	227, 1457,
	228, 1457,
	229, 1457,
	231, 1457,
	232, 1457,
	234, 1457,
	235, 1457,
	236, 1457,
	237, 1457,
	238, 1457,
	242, 1457,
	243, 1457,
	244, 1457,
	245, 1457,
	248, 1457,
	249, 1457,
	250, 1457,
	251, 1457,
	253, 1457,
	255, 1457,
	256, 1457,
	258, 1457,
	260, 1457,
	261, 1457,
	262, 1457,
	264, 1457,
	268, 1457,
	269, 1457,
	270, 1457,
	271, 1457,
	272, 1457,
	273, 1457,
	275, 1457,
	276, 1457,
	277, 1457,
	279, 1457,
	280, 1457,
	282, 1457,
	283, 1457,
	286, 1457,
	287, 1457,
	288, 1457,
	289, 1457,
	290, 1457,
	291, 1457,
	292, 1457,
	295, 1457,
	296, 1457,
	297, 1457,
	298, 1457,
	300, 1457,
	301, 1457,
	302, 1457,
	303, 1457,
	304, 1457,
	305, 1457,
	306, 1457,
	307, 1457,
	308, 1457,
	309, 1457,
	310, 1457,
	311, 1457,
	312, 1457,
	313, 1457,
	314, 1457,
	315, 1457,
	316, 1457,
	317, 1457,
	318, 1457,
	319, 1457,
	320, 1457,
	321, 1457,
	322, 1457,
	324, 1457,
	326, 1457,
	327, 1457,
	328, 1457,
	329, 1457,
	330, 1457,
	331, 1457,
	332, 1457,
	333, 1457,
	334, 1457,
	335, 1457,
	336, 1457,
	337, 1457,
	338, 1457,
	339, 1457,
	340, 1457,
	341, 1457,
	342, 1457,
	344, 1457,
	345, 1457,
	347, 1457,
	349, 1457,
	350, 1457,
	351, 1457,
	352, 1457,
	354, 1457,
	355, 1457,
	356, 1457,
	357, 1457,
	358, 1457,
	361, 1457,
	363, 1457,
	366, 1457,
	367, 1457,
	368, 1457,
	371, 1457,
	372, 1457,
	373, 1457,
	375, 1457,
	377, 1457,
	378, 1457,
	379, 1457,
	380, 1457,
	381, 1457,
	382, 1457,
	383, 1457,
	384, 1457,
	385, 1457,
	386, 1457,
	387, 1457,
	388, 1457,
	389, 1457,
	391, 1457,
	392, 1457,
	393, 1457,
	394, 1457,
	395, 1457,
	396, 1457,
	397, 1457,
	398, 1457,
	399, 1457,
	400, 1457,
	401, 1457,
	402, 1457,
	403, 1457,
	404, 1457,
	405, 1457,
	407, 1457,
	408, 1457,
	409, 1457,
	411, 1457,
	412, 1457,
	413, 1457,
	414, 1457,
	415, 1457,
	416, 1457,
	417, 1457,
	418, 1457,
	419, 1457,
	420, 1457,
	421, 1457,
	422, 1457,
	423, 1457,
	424, 1457,
	426, 1457,
	428, 1457,
	429, 1457,
	430, 1457,
	436, 1457,
	437, 1457,
	438, 1457,
	440, 1457,
	441, 1457,
	442, 1457,
	443, 1457,
	444, 1457,
	445, 1457,
	446, 1457,
	447, 1457,
	448, 1457,
	449, 1457,
	451, 1457,
	452, 1457,
	453, 1457,
	455, 1457,
	456, 1457,
	457, 1457,
	458, 1457,
	459, 1457,
	460, 1457,
	461, 1457,
	463, 1457,
	464, 1457,
	465, 1457,
	466, 1457,
	467, 1457,
	468, 1457,
	469, 1457,
	470, 1457,
	471, 1457,
	472, 1457,
	473, 1457,
	474, 1457,
	475, 1457,
	477, 1457,
	478, 1457,
	479, 1457,
	480, 1457,
	481, 1457,
	482, 1457,
	484, 1457,
	485, 1457,
	486, 1457,
	487, 1457,
	488, 1457,
	489, 1457,
	491, 1457,
	492, 1457,
	493, 1457,
	494, 1457,
	495, 1457,
	496, 1457,
	497, 1457,
	498, 1457,
	500, 1457,
	502, 1457,
	503, 1457,
	504, 1457,
	505, 1457,
	506, 1457,
	507, 1457,
	508, 1457,
	509, 1457,
	510, 1457,
	511, 1457,
	512, 1457,
	513, 1457,
	514, 1457,
	515, 1457,
	516, 1457,
	517, 1457,
	518, 1457,
	519, 1457,
	520, 1457,
	522, 1457,
	523, 1457,
	525, 1457,
	526, 1457,
	528, 1457,
	529, 1457,
	530, 1457,
	531, 1457,
	532, 1457,
	533, 1457,
	535, 1457,
	536, 1457,
	538, 1457,
	539, 1457,
	540, 1457,
	541, 1457,
	542, 1457,
	544, 1457,
	546, 1457,
	547, 1457,
	548, 1457,
	549, 1457,
	550, 1457,
	551, 1457,
	552, 1457,
	554, 1457,
	555, 1457,
	556, 1457,
	557, 1457,
	559, 1457,
	560, 1457,
	563, 1457,
	564, 1457,
	565, 1457,
	566, 1457,
	567, 1457,
	568, 1457,
	569, 1457,
	570, 1457,
	572, 1457,
	575, 1457,
	576, 1457,
	577, 1457,
	578, 1457,
	579, 1457,
	580, 1457,
	582, 1457,
	583, 1457,
	584, 1457,
	585, 1457,
	586, 1457,
	587, 1457,
	588, 1457,
	589, 1457,
	594, 1457,
	595, 1457,
	596, 1457,
	597, 1457,
	598, 1457,
	599, 1457,
	-2, 0,
	-1, 815,
	196, 2535,
	543, 2535,
	613, 2535,
	633, 2535,
	-2, 0,
	-1, 816,
	196, 2521,
	543, 2521,
	613, 2521,
	633, 2521,
	-2, 0,
	-1, 818,
	196, 2802,
	543, 2802,
	613, 2802,
	633, 2802,
	-2, 0,
	-1, 821,
	196, 2651,
	543, 2651,
	613, 2651,
	633, 2651,
	-2, 0,
	-1, 822,
	196, 2846,
	543, 2846,
	613, 2846,
	633, 2846,
	-2, 0,
	-1, 830,
	196, 2679,
	543, 2679,
	613, 2679,
	633, 2679,
	-2, 769,
	-1, 846,
	8, 902,
	29, 902,
	621, 902,
	622, 902,
	-2, 907,
	-1, 850,
	1, 2589,
	634, 2589,
	-2, 907,
	-1, 851,
	1, 2639,
	634, 2639,
	-2, 907,
	-1, 854,
	1, 2684,
	634, 2684,
	-2, 900,
	-1, 855,
	1, 2740,
	634, 2740,
	-2, 901,
	-1, 856,
	1, 2594,
	634, 2594,
	-2, 904,
	-1, 857,
	1, 2508,
	634, 2508,
	-2, 905,
	-1, 892,
	633, 2467,
	636, 2467,
	-2, 1122,
	-1, 893,
	633, 2469,
	636, 2469,
	-2, 1123,
	-1, 894,
	633, 2468,
	636, 2468,
	-2, 1124,
	-1, 895,
	636, 2391,
	-2, 1125,
	-1, 920,
	189, 287,
	-2, 0,
	-1, 943,
	45, 2440,
	-2, 0,
	-1, 944,
	582, 1435,
	-2, 1207,
	-1, 960,
	4, 1871,
	21, 1871,
	22, 1871,
	23, 1871,
	24, 1871,
	25, 1871,
	26, 1871,
	27, 1871,
	28, 1871,
	30, 1871,
	31, 1871,
	37, 1871,
	41, 1871,
	43, 1871,
	44, 1871,
	46, 1871,
	47, 1871,
	48, 1871,
	49, 1871,
	50, 1871,
	51, 1871,
	52, 1871,
	53, 1871,
	54, 1871,
	56, 1871,
	57, 1871,
	58, 1871,
	59, 1871,
	61, 1871,
	62, 1871,
	63, 1871,
	64, 1871,
	65, 1871,
	66, 1871,
	67, 1871,
	71, 1871,
	72, 1871,
	73, 1871,
	74, 1871,
	76, 1871,
	77, 1871,
	78, 1871,
	82, 1871,
	83, 1871,
	84, 1871,
	85, 1871,
	86, 1871,
	87, 1871,
	88, 1871,
	89, 1871,
	92, 1871,
	93, 1871,
	94, 1871,
	95, 1871,
	96, 1871,
	98, 1871,
	100, 1871,
	101, 1871,
	102, 1871,
	103, 1871,
	104, 1871,
	105, 1871,
	107, 1871,
	108, 1871,
	109, 1871,
	111, 1871,
	112, 1871,
	113, 1871,
	121, 1871,
	122, 1871,
	123, 1871,
	124, 1871,
	125, 1871,
	127, 1871,
	128, 1871,
	129, 1871,
	130, 1871,
	132, 1871,
	133, 1871,
	134, 1871,
	136, 1871,
	137, 1871,
	138, 1871,
	140, 1871,
	141, 1871,
	142, 1871,
	145, 1871,
	146, 1871,
	147, 1871,
	149, 1871,
	150, 1871,
	151, 1871,
	153, 1871,
	154, 1871,
	155, 1871,
	157, 1871,
	158, 1871,
	159, 1871,
	160, 1871,
	161, 1871,
	162, 1871,
	163, 1871,
	164, 1871,
	165, 1871,
	166, 1871,
	167, 1871,
	168, 1871,
	169, 1871,
	170, 1871,
	171, 1871,
	172, 1871,
	173, 1871,
	175, 1871,
	181, 1871,
	182, 1871,
	183, 1871,
	184, 1871,
	188, 1871,
	190, 1871,
	191, 1871,
	192, 1871,
	194, 1871,
	195, 1871,
	198, 1871,
	199, 1871,
	200, 1871,
	201, 1871,
	202, 1871,
	203, 1871,
	204, 1871,
	205, 1871,
	206, 1871,
	207, 1871,
	208, 1871,
	209, 1871,
	210, 1871,
	211, 1871,
	213, 1871,
	214, 1871,
	216, 1871,
	217, 1871,
	219, 1871,
	220, 1871,
	221, 1871,
	222, 1871,
	223, 1871,
	224, 1871,
	225, 1871,
	226, 1871,
	227, 1871,
	228, 1871,
	229, 1871,
	231, 1871,
	232, 1871,
	234, 1871,
	235, 1871,
	236, 1871,
	237, 1871,
	238, 1871,
	242, 1871,
	243, 1871,
	244, 1871,
	245, 1871,
	248, 1871,
	249, 1871,
	250, 1871,
	251, 1871,
	253, 1871,
	255, 1871,
	256, 1871,
	258, 1871,
	260, 1871,
	261, 1871,
	262, 1871,
	264, 1871,
	268, 1871,
	269, 1871,
	270, 1871,
	271, 1871,
	272, 1871,
	273, 1871,
	275, 1871,
	276, 1871,
	277, 1871,
	279, 1871,
	280, 1871,
	282, 1871,
	283, 1871,
	286, 1871,
	287, 1871,
	288, 1871,
	289, 1871,
	290, 1871,
	291, 1871,
	292, 1871,
	295, 1871,
	296, 1871,
	297, 1871,
	298, 1871,
	300, 1871,
	301, 1871,
	302, 1871,
	303, 1871,
	304, 1871,
	305, 1871,
	306, 1871,
	307, 1871,
	308, 1871,
	309, 1871,
	310, 1871,
	311, 1871,
	312, 1871,
	313, 1871,
	314, 1871,
	315, 1871,
	316, 1871,
	317, 1871,
	318, 1871,
	319, 1871,
	320, 1871,
	321, 1871,
	322, 1871,
	324, 1871,
	326, 1871,
	327, 1871,
	328, 1871,
	329, 1871,
	330, 1871,
	331, 1871,
	332, 1871,
	333, 1871,
	334, 1871,
	335, 1871,
	336, 1871,
	337, 1871,
	338, 1871,
	339, 1871,
	340, 1871,
	341, 1871,
	342, 1871,
	344, 1871,
	345, 1871,
	347, 1871,
	349, 1871,
	350, 1871,
	351, 1871,
	352, 1871,
	354, 1871,
	355, 1871,
	356, 1871,
	357, 1871,
	358, 1871,
	361, 1871,
	363, 1871,
	366, 1871,
	367, 1871,
	368, 1871,
	371, 1871,
	372, 1871,
	373, 1871,
	375, 1871,
	377, 1871,
	378, 1871,
	379, 1871,
	380, 1871,
	381, 1871,
	382, 1871,
	383, 1871,
	384, 1871,
	385, 1871,
	386, 1871,
	387, 1871,
	388, 1871,
	389, 1871,
	391, 1871,
	392, 1871,
	393, 1871,
	394, 1871,
	395, 1871,
	396, 1871,
	397, 1871,
	398, 1871,
	399, 1871,
	400, 1871,
	401, 1871,
	402, 1871,
	403, 1871,
	404, 1871,
	405, 1871,
	407, 1871,
	408, 1871,
	409, 1871,
	411, 1871,
	412, 1871,
	413, 1871,
	414, 1871,
	415, 1871,
	416, 1871,
	417, 1871,
	418, 1871,
	419, 1871,
	420, 1871,
	421, 1871,
	422, 1871,
	423, 1871,
	424, 1871,
	426, 1871,
	428, 1871,
	429, 1871,
	430, 1871,
	436, 1871,
	437, 1871,
	438, 1871,
	440, 1871,
	441, 1871,
	442, 1871,
	443, 1871,
	444, 1871,
	445, 1871,
	446, 1871,
	447, 1871,
	448, 1871,
	449, 1871,
	451, 1871,
	452, 1871,
	453, 1871,
	455, 1871,
	456, 1871,
	457, 1871,
	458, 1871,
	459, 1871,
	460, 1871,
	461, 1871,
	463, 1871,
	464, 1871,
	465, 1871,
	466, 1871,
	467, 1871,
	468, 1871,
	469, 1871,
	470, 1871,
	471, 1871,
	472, 1871,
	473, 1871,
	474, 1871,
	475, 1871,
	477, 1871,
	478, 1871,
	479, 1871,
	480, 1871,
	481, 1871,
	482, 1871,
	484, 1871,
	485, 1871,
	486, 1871,
	487, 1871,
	488, 1871,
	489, 1871,
	491, 1871,
	492, 1871,
	493, 1871,
	494, 1871,
	495, 1871,
	496, 1871,
	497, 1871,
	498, 1871,
	500, 1871,
	502, 1871,
	503, 1871,
	504, 1871,
	505, 1871,
	506, 1871,
	507, 1871,
	508, 1871,
	509, 1871,
	510, 1871,
	511, 1871,
	512, 1871,
	513, 1871,
	514, 1871,
	515, 1871,
	516, 1871,
	517, 1871,
	518, 1871,
	519, 1871,
	520, 1871,
	522, 1871,
	523, 1871,
	525, 1871,
	526, 1871,
	528, 1871,
	529, 1871,
	530, 1871,
	531, 1871,
	532, 1871,
	533, 1871,
	535, 1871,
	536, 1871,
	538, 1871,
	539, 1871,
	540, 1871,
	541, 1871,
	542, 1871,
	544, 1871,
	546, 1871,
	547, 1871,
	548, 1871,
	549, 1871,
	550, 1871,
	551, 1871,
	552, 1871,
	554, 1871,
	555, 1871,
	556, 1871,
	557, 1871,
	559, 1871,
	560, 1871,
	563, 1871,
	564, 1871,
	565, 1871,
	566, 1871,
	567, 1871,
	568, 1871,
	569, 1871,
	570, 1871,
	572, 1871,
	575, 1871,
	576, 1871,
	577, 1871,
	578, 1871,
	579, 1871,
	580, 1871,
	582, 1871,
	583, 1871,
	584, 1871,
	585, 1871,
	586, 1871,
	587, 1871,
	588, 1871,
	589, 1871,
	594, 1871,
	595, 1871,
	596, 1871,
	597, 1871,
	598, 1871,
	599, 1871,
	-2, 0,
	-1, 970,
	272, 454,
	-2, 0,
	-1, 1048,
	196, 944,
	-2, 0,
	-1, 1049,
	413, 997,
	482, 997,
	526, 997,
	548, 997,
	-2, 0,
	-1, 1050,
	413, 996,
	482, 996,
	526, 996,
	548, 996,
	-2, 920,
	-1, 1054,
	1, 1049,
	630, 1049,
	632, 1049,
	634, 1049,
	-2, 0,
	-1, 1056,
	1, 971,
	630, 971,
	632, 971,
	634, 971,
	-2, 0,
	-1, 1057,
	1, 975,
	630, 975,
	632, 975,
	634, 975,
	-2, 0,
	-1, 1058,
	1, 1121,
	189, 1121,
	630, 1121,
	632, 1121,
	634, 1121,
	-2, 0,
	-1, 1066,
	1, 1002,
	630, 1002,
	632, 1002,
	634, 1002,
	-2, 0,
	-1, 1073,
	1, 1049,
	630, 1049,
	632, 1049,
	634, 1049,
	-2, 0,
	-1, 1074,
	1, 1051,
	630, 1051,
	632, 1051,
	634, 1051,
	-2, 0,
	-1, 1075,
	1, 1054,
	630, 1054,
	632, 1054,
	634, 1054,
	-2, 0,
	-1, 1083,
	1, 1084,
	630, 1084,
	632, 1084,
	634, 1084,
	-2, 0,
	-1, 1084,
	1, 1086,
	630, 1086,
	632, 1086,
	634, 1086,
	-2, 0,
	-1, 1089,
	1, 1114,
	630, 1114,
	632, 1114,
	634, 1114,
	-2, 0,
	-1, 1144,
	176, 1741,
	189, 1741,
	285, 1741,
	359, 1741,
	-2, 1677,
	-1, 1160,
	176, 1740,
	189, 1740,
	285, 1740,
	359, 1740,
	-2, 1674,
	-1, 1187,
	633, 2466,
	-2, 777,
	-1, 1216,
	5, 2458,
	631, 2456,
	-2, 2447,
	-1, 1224,
	5, 2479,
	631, 2476,
	-2, 2467,
	-1, 1225,
	5, 2480,
	631, 2477,
	-2, 2468,
	-1, 1233,
	633, 2464,
	-2, 2446,
	-1, 1234,
	631, 2934,
	-2, 2465,
	-1, 1257,
	631, 2933,
	-2, 2481,
	-1, 1258,
	5, 1946,
	-2, 2904,
	-1, 1259,
	5, 1947,
	-2, 2905,
	-1, 1260,
	5, 1948,
	-2, 2919,
	-1, 1261,
	5, 1949,
	-2, 2883,
	-1, 1262,
	5, 1950,
	-2, 2917,
	-1, 1263,
	5, 1958,
	-2, 2896,
	-1, 1264,
	5, 1945,
	-2, 2892,
	-1, 1265,
	5, 1945,
	-2, 2891,
	-1, 1266,
	5, 1945,
	-2, 2910,
	-1, 1267,
	5, 1956,
	-2, 2885,
	-1, 1268,
	5, 1961,
	-2, 2884,
	-1, 1269,
	5, 1963,
	-2, 2929,
	-1, 1272,
	5, 1985,
	-2, 2922,
	-1, 1273,
	5, 1977,
	-2, 2923,
	-1, 1274,
	5, 1985,
	-2, 2924,
	-1, 1275,
	5, 1981,
	-2, 2925,
	-1, 1276,
	5, 1931,
	-2, 2897,
	-1, 1277,
	5, 1932,
	-2, 2898,
	-1, 1278,
	5, 1933,
	-2, 2886,
	-1, 1306,
	5, 1968,
	-2, 2930,
	-1, 1307,
	5, 1969,
	-2, 2920,
	-1, 1308,
	5, 1970,
	583, 1970,
	-2, 2887,
	-1, 1309,
	5, 1971,
	583, 1971,
	-2, 2888,
	-1, 1347,
	631, 2476,
	-2, 2467,
	-1, 1348,
	631, 2477,
	-2, 2468,
	-1, 1446,
	196, 2846,
	543, 2846,
	613, 2846,
	633, 2846,
	-2, 0,
	-1, 1451,
	1, 753,
	634, 753,
	-2, 1586,
	-1, 1598,
	379, 2441,
	440, 2441,
	484, 2441,
	623, 2441,
	-2, 2429,
	-1, 1604,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2842,
	-1, 1605,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2580,
	-1, 1606,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2763,
	-1, 1612,
	635, 2441,
	-2, 2443,
	-1, 1636,
	1, 1432,
	445, 1387,
	484, 1387,
	606, 1387,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1726,
	-1, 1642,
	212, 1529,
	233, 1529,
	453, 1529,
	-2, 0,
	-1, 1691,
	422, 1206,
	582, 1206,
	-2, 449,
	-1, 1707,
	45, 2439,
	-2, 1169,
	-1, 1714,
	1, 1432,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1726,
	-1, 1722,
	4, 1457,
	21, 1457,
	22, 1457,
	23, 1457,
	24, 1457,
	25, 1457,
	26, 1457,
	27, 1457,
	28, 1457,
	30, 1457,
	31, 1457,
	37, 1457,
	41, 1457,
	43, 1457,
	44, 1457,
	46, 1457,
	47, 1457,
	48, 1457,
	49, 1457,
	50, 1457,
	51, 1457,
	52, 1457,
	53, 1457,
	54, 1457,
	56, 1457,
	57, 1457,
	58, 1457,
	59, 1457,
	61, 1457,
	62, 1457,
	63, 1457,
	64, 1457,
	65, 1457,
	66, 1457,
	67, 1457,
	71, 1457,
	72, 1457,
	73, 1457,
	74, 1457,
	76, 1457,
	77, 1457,
	78, 1457,
	82, 1457,
	83, 1457,
	84, 1457,
	85, 1457,
	86, 1457,
	87, 1457,
	88, 1457,
	89, 1457,
	92, 1457,
	93, 1457,
	94, 1457,
	95, 1457,
	96, 1457,
	98, 1457,
	100, 1457,
	101, 1457,
	102, 1457,
	103, 1457,
	104, 1457,
	105, 1457,
	107, 1457,
	108, 1457,
	109, 1457,
	111, 1457,
	112, 1457,
	113, 1457,
	121, 1457,
	122, 1457,
	123, 1457,
	124, 1457,
	125, 1457,
	127, 1457,
	128, 1457,
	129, 1457,
	130, 1457,
	132, 1457,
	133, 1457,
	134, 1457,
	136, 1457,
	137, 1457,
	138, 1457,
	140, 1457,
	141, 1457,
	142, 1457,
	145, 1457,
	146, 1457,
	147, 1457,
	149, 1457,
	150, 1457,
	151, 1457,
	153, 1457,
	154, 1457,
	155, 1457,
	157, 1457,
	158, 1457,
	159, 1457,
	160, 1457,
	161, 1457,
	162, 1457,
	163, 1457,
	164, 1457,
	165, 1457,
	166, 1457,
	167, 1457,
	168, 1457,
	169, 1457,
	170, 1457,
	171, 1457,
	172, 1457,
	173, 1457,
	181, 1457,
	182, 1457,
	183, 1457,
	184, 1457,
	188, 1457,
	190, 1457,
	191, 1457,
	192, 1457,
	194, 1457,
	195, 1457,
	198, 1457,
	199, 1457,
	200, 1457,
	201, 1457,
	202, 1457,
	203, 1457,
	204, 1457,
	205, 1457,
	206, 1457,
	207, 1457,
	208, 1457,
	209, 1457,
	210, 1457,
	211, 1457,
	213, 1457,
	214, 1457,
	216, 1457,
	217, 1457,
	219, 1457,
	220, 1457,
	221, 1457,
	222, 1457,
	223, 1457,
	224, 1457,
	225, 1457,
	226, 1457,
	227, 1457,
	228, 1457,
	229, 1457,
	231, 1457,
	232, 1457,
	234, 1457,
	235, 1457,
	236, 1457,
	237, 1457,
	238, 1457,
	243, 1457,
	244, 1457,
	245, 1457,
	248, 1457,
	249, 1457,
	250, 1457,
	251, 1457,
	253, 1457,
	255, 1457,
	256, 1457,
	258, 1457,
	260, 1457,
	261, 1457,
	262, 1457,
	264, 1457,
	268, 1457,
	269, 1457,
	270, 1457,
	271, 1457,
	272, 1457,
	273, 1457,
	275, 1457,
	276, 1457,
	277, 1457,
	279, 1457,
	280, 1457,
	282, 1457,
	283, 1457,
	286, 1457,
	287, 1457,
	288, 1457,
	289, 1457,
	290, 1457,
	291, 1457,
	292, 1457,
	295, 1457,
	296, 1457,
	297, 1457,
	298, 1457,
	300, 1457,
	301, 1457,
	302, 1457,
	303, 1457,
	304, 1457,
	305, 1457,
	306, 1457,
	307, 1457,
	308, 1457,
	309, 1457,
	310, 1457,
	311, 1457,
	312, 1457,
	313, 1457,
	314, 1457,
	315, 1457,
	316, 1457,
	317, 1457,
	318, 1457,
	319, 1457,
	320, 1457,
	321, 1457,
	322, 1457,
	324, 1457,
	326, 1457,
	327, 1457,
	328, 1457,
	329, 1457,
	330, 1457,
	331, 1457,
	332, 1457,
	333, 1457,
	334, 1457,
	335, 1457,
	336, 1457,
	337, 1457,
	338, 1457,
	339, 1457,
	340, 1457,
	341, 1457,
	342, 1457,
	344, 1457,
	345, 1457,
	349, 1457,
	350, 1457,
	351, 1457,
	352, 1457,
	354, 1457,
	355, 1457,
	356, 1457,
	357, 1457,
	358, 1457,
	361, 1457,
	363, 1457,
	364, 1457,
	366, 1457,
	367, 1457,
	368, 1457,
	371, 1457,
	372, 1457,
	373, 1457,
	375, 1457,
	377, 1457,
	378, 1457,
	379, 1457,
	380, 1457,
	381, 1457,
	382, 1457,
	383, 1457,
	384, 1457,
	385, 1457,
	386, 1457,
	387, 1457,
	388, 1457,
	389, 1457,
	391, 1457,
	392, 1457,
	393, 1457,
	394, 1457,
	395, 1457,
	396, 1457,
	397, 1457,
	398, 1457,
	399, 1457,
	400, 1457,
	401, 1457,
	402, 1457,
	403, 1457,
	404, 1457,
	405, 1457,
	407, 1457,
	408, 1457,
	409, 1457,
	411, 1457,
	412, 1457,
	413, 1457,
	414, 1457,
	415, 1457,
	416, 1457,
	417, 1457,
	418, 1457,
	419, 1457,
	420, 1457,
	421, 1457,
	422, 1457,
	423, 1457,
	424, 1457,
	426, 1457,
	428, 1457,
	429, 1457,
	430, 1457,
	436, 1457,
	437, 1457,
	438, 1457,
	440, 1457,
	441, 1457,
	442, 1457,
	443, 1457,
	444, 1457,
	445, 1457,
	446, 1457,
	447, 1457,
	448, 1457,
	449, 1457,
	451, 1457,
	452, 1457,
	453, 1457,
	455, 1457,
	456, 1457,
	457, 1457,
	458, 1457,
	459, 1457,
	460, 1457,
	461, 1457,
	463, 1457,
	464, 1457,
	465, 1457,
	466, 1457,
	467, 1457,
	468, 1457,
	469, 1457,
	470, 1457,
	471, 1457,
	472, 1457,
	473, 1457,
	474, 1457,
	475, 1457,
	477, 1457,
	478, 1457,
	479, 1457,
	480, 1457,
	481, 1457,
	482, 1457,
	484, 1457,
	485, 1457,
	486, 1457,
	487, 1457,
	488, 1457,
	489, 1457,
	491, 1457,
	492, 1457,
	493, 1457,
	494, 1457,
	495, 1457,
	496, 1457,
	497, 1457,
	498, 1457,
	500, 1457,
	502, 1457,
	503, 1457,
	504, 1457,
	505, 1457,
	506, 1457,
	507, 1457,
	508, 1457,
	509, 1457,
	510, 1457,
	511, 1457,
	512, 1457,
	513, 1457,
	514, 1457,
	515, 1457,
	516, 1457,
	517, 1457,
	518, 1457,
	519, 1457,
	520, 1457,
	522, 1457,
	523, 1457,
	525, 1457,
	526, 1457,
	528, 1457,
	529, 1457,
	530, 1457,
	531, 1457,
	532, 1457,
	533, 1457,
	535, 1457,
	536, 1457,
	538, 1457,
	539, 1457,
	540, 1457,
	541, 1457,
	542, 1457,
	544, 1457,
	546, 1457,
	547, 1457,
	548, 1457,
	549, 1457,
	550, 1457,
	551, 1457,
	552, 1457,
	554, 1457,
	555, 1457,
	556, 1457,
	557, 1457,
	559, 1457,
	560, 1457,
	563, 1457,
	564, 1457,
	565, 1457,
	566, 1457,
	567, 1457,
	568, 1457,
	569, 1457,
	570, 1457,
	572, 1457,
	575, 1457,
	576, 1457,
	577, 1457,
	578, 1457,
	579, 1457,
	580, 1457,
	582, 1457,
	583, 1457,
	584, 1457,
	585, 1457,
	586, 1457,
	587, 1457,
	588, 1457,
	589, 1457,
	594, 1457,
	595, 1457,
	596, 1457,
	597, 1457,
	598, 1457,
	599, 1457,
	-2, 0,
	-1, 1745,
	1, 588,
	630, 588,
	632, 588,
	634, 588,
	-2, 1697,
	-1, 1748,
	4, 2928,
	11, 2928,
	12, 2928,
	14, 2928,
	15, 2928,
	16, 2928,
	17, 2928,
	18, 2928,
	19, 2928,
	21, 2928,
	22, 2928,
	23, 2928,
	24, 2928,
	25, 2928,
	26, 2928,
	27, 2928,
	28, 2928,
	30, 2928,
	31, 2928,
	34, 2928,
	35, 2928,
	37, 2928,
	39, 2928,
	41, 2928,
	43, 2928,
	44, 2928,
	46, 2928,
	47, 2928,
	48, 2928,
	49, 2928,
	50, 2928,
	51, 2928,
	52, 2928,
	53, 2928,
	54, 2928,
	56, 2928,
	57, 2928,
	58, 2928,
	59, 2928,
	61, 2928,
	62, 2928,
	63, 2928,
	64, 2928,
	65, 2928,
	66, 2928,
	67, 2928,
	70, 2928,
	71, 2928,
	72, 2928,
	73, 2928,
	74, 2928,
	76, 2928,
	77, 2928,
	78, 2928,
	79, 2928,
	82, 2928,
	83, 2928,
	84, 2928,
	85, 2928,
	86, 2928,
	87, 2928,
	88, 2928,
	89, 2928,
	90, 2928,
	92, 2928,
	93, 2928,
	94, 2928,
	95, 2928,
	96, 2928,
	98, 2928,
	99, 2928,
	100, 2928,
	101, 2928,
	102, 2928,
	103, 2928,
	104, 2928,
	105, 2928,
	107, 2928,
	108, 2928,
	109, 2928,
	110, 2928,
	111, 2928,
	112, 2928,
	113, 2928,
	121, 2928,
	122, 2928,
	123, 2928,
	124, 2928,
	125, 2928,
	127, 2928,
	128, 2928,
	129, 2928,
	130, 2928,
	132, 2928,
	133, 2928,
	134, 2928,
	136, 2928,
	137, 2928,
	138, 2928,
	140, 2928,
	141, 2928,
	142, 2928,
	145, 2928,
	146, 2928,
	147, 2928,
	149, 2928,
	150, 2928,
	151, 2928,
	153, 2928,
	154, 2928,
	155, 2928,
	157, 2928,
	158, 2928,
	159, 2928,
	160, 2928,
	161, 2928,
	162, 2928,
	163, 2928,
	164, 2928,
	165, 2928,
	166, 2928,
	167, 2928,
	168, 2928,
	169, 2928,
	170, 2928,
	171, 2928,
	172, 2928,
	173, 2928,
	177, 2928,
	178, 2928,
	179, 2928,
	180, 2928,
	181, 2928,
	182, 2928,
	183, 2928,
	184, 2928,
	187, 2928,
	188, 2928,
	190, 2928,
	191, 2928,
	192, 2928,
	194, 2928,
	195, 2928,
	197, 2928,
	198, 2928,
	199, 2928,
	200, 2928,
	201, 2928,
	202, 2928,
	203, 2928,
	204, 2928,
	205, 2928,
	206, 2928,
	207, 2928,
	208, 2928,
	209, 2928,
	210, 2928,
	211, 2928,
	213, 2928,
	214, 2928,
	216, 2928,
	217, 2928,
	219, 2928,
	220, 2928,
	221, 2928,
	222, 2928,
	223, 2928,
	224, 2928,
	225, 2928,
	226, 2928,
	227, 2928,
	228, 2928,
	229, 2928,
	230, 2928,
	231, 2928,
	232, 2928,
	233, 2928,
	234, 2928,
	235, 2928,
	236, 2928,
	237, 2928,
	238, 2928,
	240, 2928,
	241, 2928,
	243, 2928,
	244, 2928,
	245, 2928,
	247, 2928,
	248, 2928,
	249, 2928,
	250, 2928,
	251, 2928,
	253, 2928,
	255, 2928,
	256, 2928,
	257, 2928,
	258, 2928,
	259, 2928,
	260, 2928,
	261, 2928,
	262, 2928,
	263, 2928,
	264, 2928,
	266, 2928,
	267, 2928,
	268, 2928,
	269, 2928,
	270, 2928,
	271, 2928,
	272, 2928,
	273, 2928,
	275, 2928,
	276, 2928,
	277, 2928,
	279, 2928,
	280, 2928,
	281, 2928,
	282, 2928,
	283, 2928,
	284, 2928,
	286, 2928,
	287, 2928,
	288, 2928,
	289, 2928,
	290, 2928,
	291, 2928,
	292, 2928,
	295, 2928,
	296, 2928,
	297, 2928,
	298, 2928,
	299, 2928,
	300, 2928,
	301, 2928,
	302, 2928,
	303, 2928,
	304, 2928,
	305, 2928,
	306, 2928,
	307, 2928,
	308, 2928,
	309, 2928,
	310, 2928,
	311, 2928,
	312, 2928,
	313, 2928,
	314, 2928,
	315, 2928,
	316, 2928,
	317, 2928,
	318, 2928,
	319, 2928,
	320, 2928,
	321, 2928,
	322, 2928,
	324, 2928,
	325, 2928,
	326, 2928,
	327, 2928,
	328, 2928,
	329, 2928,
	330, 2928,
	331, 2928,
	332, 2928,
	333, 2928,
	334, 2928,
	335, 2928,
	336, 2928,
	337, 2928,
	338, 2928,
	339, 2928,
	340, 2928,
	341, 2928,
	342, 2928,
	344, 2928,
	345, 2928,
	348, 2928,
	349, 2928,
	350, 2928,
	351, 2928,
	352, 2928,
	354, 2928,
	355, 2928,
	356, 2928,
	357, 2928,
	358, 2928,
	361, 2928,
	363, 2928,
	366, 2928,
	367, 2928,
	368, 2928,
	369, 2928,
	371, 2928,
	372, 2928,
	373, 2928,
	375, 2928,
	377, 2928,
	378, 2928,
	379, 2928,
	380, 2928,
	381, 2928,
	382, 2928,
	383, 2928,
	384, 2928,
	385, 2928,
	386, 2928,
	387, 2928,
	388, 2928,
	389, 2928,
	391, 2928,
	392, 2928,
	393, 2928,
	394, 2928,
	395, 2928,
	396, 2928,
	397, 2928,
	398, 2928,
	399, 2928,
	400, 2928,
	401, 2928,
	402, 2928,
	403, 2928,
	404, 2928,
	405, 2928,
	407, 2928,
	408, 2928,
	409, 2928,
	411, 2928,
	412, 2928,
	413, 2928,
	414, 2928,
	415, 2928,
	416, 2928,
	417, 2928,
	418, 2928,
	419, 2928,
	420, 2928,
	421, 2928,
	422, 2928,
	423, 2928,
	424, 2928,
	426, 2928,
	428, 2928,
	429, 2928,
	430, 2928,
	436, 2928,
	437, 2928,
	438, 2928,
	439, 2928,
	440, 2928,
	441, 2928,
	442, 2928,
	443, 2928,
	444, 2928,
	445, 2928,
	446, 2928,
	447, 2928,
	448, 2928,
	449, 2928,
	451, 2928,
	452, 2928,
	453, 2928,
	454, 2928,
	455, 2928,
	456, 2928,
	457, 2928,
	458, 2928,
	459, 2928,
	460, 2928,
	461, 2928,
	462, 2928,
	463, 2928,
	464, 2928,
	465, 2928,
	466, 2928,
	467, 2928,
	468, 2928,
	469, 2928,
	470, 2928,
	471, 2928,
	472, 2928,
	473, 2928,
	474, 2928,
	475, 2928,
	477, 2928,
	478, 2928,
	479, 2928,
	480, 2928,
	481, 2928,
	482, 2928,
	484, 2928,
	485, 2928,
	486, 2928,
	487, 2928,
	488, 2928,
	489, 2928,
	490, 2928,
	491, 2928,
	492, 2928,
	493, 2928,
	494, 2928,
	495, 2928,
	496, 2928,
	497, 2928,
	498, 2928,
	500, 2928,
	502, 2928,
	503, 2928,
	504, 2928,
	505, 2928,
	506, 2928,
	507, 2928,
	508, 2928,
	509, 2928,
	510, 2928,
	511, 2928,
	512, 2928,
	513, 2928,
	514, 2928,
	515, 2928,
	516, 2928,
	517, 2928,
	518, 2928,
	519, 2928,
	520, 2928,
	522, 2928,
	523, 2928,
	524, 2928,
	525, 2928,
	526, 2928,
	528, 2928,
	529, 2928,
	530, 2928,
	531, 2928,
	532, 2928,
	533, 2928,
	535, 2928,
	536, 2928,
	538, 2928,
	539, 2928,
	540, 2928,
	541, 2928,
	542, 2928,
	544, 2928,
	546, 2928,
	547, 2928,
	548, 2928,
	549, 2928,
	550, 2928,
	551, 2928,
	552, 2928,
	554, 2928,
	555, 2928,
	556, 2928,
	557, 2928,
	559, 2928,
	560, 2928,
	563, 2928,
	564, 2928,
	565, 2928,
	566, 2928,
	567, 2928,
	568, 2928,
	569, 2928,
	570, 2928,
	572, 2928,
	575, 2928,
	576, 2928,
	577, 2928,
	578, 2928,
	579, 2928,
	580, 2928,
	582, 2928,
	583, 2928,
	584, 2928,
	585, 2928,
	586, 2928,
	587, 2928,
	588, 2928,
	589, 2928,
	594, 2928,
	595, 2928,
	596, 2928,
	597, 2928,
	598, 2928,
	599, 2928,
	600, 2928,
	602, 2928,
	611, 2928,
	612, 2928,
	613, 2928,
	614, 2928,
	615, 2928,
	616, 2928,
	618, 2928,
	619, 2928,
	620, 2928,
	621, 2928,
	622, 2928,
	623, 2928,
	624, 2928,
	625, 2928,
	626, 2928,
	629, 2928,
	632, 2928,
	633, 2928,
	635, 2928,
	636, 2928,
	-2, 0,
	-1, 1753,
	196, 2802,
	543, 2802,
	613, 2802,
	633, 2802,
	-2, 0,
	-1, 1801,
	196, 945,
	-2, 2794,
	-1, 1802,
	196, 946,
	-2, 2587,
	-1, 1803,
	196, 947,
	-2, 2749,
	-1, 1808,
	413, 997,
	482, 997,
	526, 997,
	548, 997,
	-2, 0,
	-1, 1819,
	1, 1529,
	233, 1529,
	630, 1529,
	632, 1529,
	634, 1529,
	-2, 0,
	-1, 1836,
	1, 992,
	630, 992,
	632, 992,
	634, 992,
	-2, 0,
	-1, 1837,
	1, 1036,
	630, 1036,
	632, 1036,
	634, 1036,
	-2, 0,
	-1, 1838,
	1, 1044,
	630, 1044,
	632, 1044,
	634, 1044,
	-2, 0,
	-1, 1841,
	1, 1001,
	630, 1001,
	632, 1001,
	634, 1001,
	-2, 0,
	-1, 1843,
	1, 1007,
	630, 1007,
	632, 1007,
	634, 1007,
	-2, 0,
	-1, 1846,
	1, 1003,
	630, 1003,
	632, 1003,
	634, 1003,
	-2, 0,
	-1, 1851,
	1, 1017,
	630, 1017,
	632, 1017,
	634, 1017,
	-2, 0,
	-1, 1885,
	1, 2784,
	630, 2784,
	632, 2784,
	633, 2784,
	634, 2784,
	-2, 0,
	-1, 1889,
	1, 1095,
	630, 1095,
	632, 1095,
	634, 1095,
	-2, 0,
	-1, 1907,
	1, 1581,
	634, 1581,
	-2, 1586,
	-1, 1910,
	176, 1740,
	189, 1740,
	285, 1740,
	359, 1740,
	-2, 1678,
	-1, 2010,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 2150,
	-1, 2071,
	632, 2325,
	-2, 0,
	-1, 2107,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 1832,
	-1, 2146,
	543, 2799,
	633, 2799,
	636, 2799,
	-2, 0,
	-1, 2163,
	631, 1973,
	-2, 1961,
	-1, 2195,
	196, 2799,
	633, 2799,
	636, 2799,
	-2, 0,
	-1, 2238,
	1, 755,
	634, 755,
	-2, 1586,
	-1, 2413,
	233, 282,
	-2, 2475,
	-1, 2414,
	233, 283,
	-2, 341,
	-1, 2525,
	1, 994,
	630, 994,
	632, 994,
	634, 994,
	-2, 0,
	-1, 2526,
	1, 1038,
	630, 1038,
	632, 1038,
	634, 1038,
	-2, 0,
	-1, 2527,
	1, 1046,
	630, 1046,
	632, 1046,
	634, 1046,
	-2, 0,
	-1, 2528,
	1, 1097,
	630, 1097,
	632, 1097,
	634, 1097,
	-2, 0,
	-1, 2569,
	1, 1019,
	630, 1019,
	632, 1019,
	634, 1019,
	-2, 0,
	-1, 2591,
	1, 1080,
	630, 1080,
	632, 1080,
	634, 1080,
	-2, 0,
	-1, 2639,
	460, 1767,
	461, 1767,
	-2, 2006,
	-1, 2670,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2026,
	-1, 2671,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2027,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2028,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2029,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2030,
	-1, 2675,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2031,
	-1, 2676,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2032,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2033,
	-1, 2689,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2045,
	-1, 2690,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2046,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2047,
	-1, 2695,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2054,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2058,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2066,
	-1, 2704,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2067,
	-1, 2705,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2068,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2069,
	-1, 2880,
	5, 2479,
	196, 2336,
	631, 2476,
	-2, 2467,
	-1, 2881,
	196, 2337,
	-2, 2879,
	-1, 2882,
	196, 2338,
	-2, 2677,
	-1, 2883,
	196, 2339,
	-2, 2553,
	-1, 2884,
	196, 2340,
	-2, 2615,
	-1, 2885,
	196, 2341,
	-2, 2662,
	-1, 2886,
	196, 2342,
	-2, 2797,
	-1, 2887,
	196, 2343,
	-2, 2133,
	-1, 2959,
	1, 1833,
	2, 1833,
	110, 1833,
	156, 1833,
	176, 1833,
	189, 1833,
	197, 1833,
	215, 1833,
	218, 1833,
	247, 1833,
	252, 1833,
	263, 1833,
	281, 1833,
	285, 1833,
	325, 1833,
	359, 1833,
	364, 1833,
	370, 1833,
	450, 1833,
	454, 1833,
	561, 1833,
	573, 1833,
	591, 1833,
	592, 1833,
	593, 1833,
	603, 1833,
	630, 1833,
	632, 1833,
	634, 1833,
	636, 1833,
	-2, 1832,
	-1, 2972,
	631, 2448,
	-2, 2462,
	-1, 2974,
	1, 358,
	591, 358,
	-2, 1726,
	-1, 3004,
	631, 1972,
	-2, 1962,
	-1, 3219,
	1, 1432,
	445, 1387,
	484, 1387,
	606, 1387,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1726,
	-1, 3403,
	365, 1770,
	-2, 2918,
	-1, 3404,
	365, 1771,
	-2, 2781,
	-1, 3408,
	460, 2402,
	461, 2402,
	-2, 2131,
	-1, 3409,
	460, 2406,
	461, 2406,
	-2, 2132,
	-1, 3410,
	460, 2403,
	461, 2403,
	-2, 2131,
	-1, 3411,
	460, 2407,
	461, 2407,
	-2, 2132,
	-1, 3424,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2056,
	-1, 3425,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2060,
	-1, 3431,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2062,
	-1, 3658,
	1, 750,
	630, 750,
	632, 750,
	634, 750,
	-2, 1586,
	-1, 3857,
	45, 2439,
	-2, 1170,
	-1, 3862,
	1, 1432,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1726,
	-1, 3972,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2064,
	-1, 3979,
	257, 0,
	259, 0,
	348, 0,
	-2, 2083,
	-1, 4047,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2112,
	-1, 4048,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2113,
	-1, 4049,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2114,
	-1, 4053,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2118,
	-1, 4054,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2119,
	-1, 4055,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2120,
	-1, 4103,
	631, 2449,
	-2, 2463,
	-1, 4318,
	633, 3035,
	-2, 1652,
	-1, 4378,
	257, 0,
	259, 0,
	348, 0,
	-2, 2084,
	-1, 4381,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2087,
	-1, 4382,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2089,
	-1, 4505,
	633, 2464,
	-2, 1467,
	-1, 4664,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2088,
	-1, 4665,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2090,
	-1, 4676,
	257, 0,
	-2, 2123,
	-1, 4869,
	257, 0,
	-2, 2124,
	-1, 5089,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2882,
}

const sqlPrivate = 57344

const sqlLast = 147345

var sqlAct = [...]int{
	291, 3292, 5023, 5022, 5280, 3562, 4910, 4737, 1427, 5207,
	5151, 4918, 3173, 5088, 5073, 4962, 5135, 5221, 3844, 3143,
	4978, 5101, 3843, 1216, 5056, 5034, 5037, 5013, 5102, 5160,
	5103, 2410, 3855, 4787, 1483, 4816, 4836, 4361, 4803, 5099,
	4012, 5087, 1652, 4622, 2298, 3075, 1351, 4873, 4611, 4617,
	4501, 4583, 4556, 4685, 2487, 1419, 4652, 2113, 4120, 3685,
	4947, 4742, 3262, 3964, 3879, 2649, 4302, 4310, 4822, 2499,
	3688, 4482, 755, 1424, 1223, 1622, 2912, 1417, 2497, 4227,
	894, 4502, 3314, 3417, 3076, 2718, 3873, 4627, 1161, 1919,
	3828, 4277, 4258, 2460, 3817, 3158, 4260, 2150, 2657, 1170,
	2307, 827, 3691, 3748, 3833, 3907, 3281, 894, 3909, 1502,
	3251, 3278, 3832, 3276, 3835, 3672, 4681, 3810, 3674, 3673,
	2986, 1771, 3809, 3608, 3615, 3568, 2650, 2949, 4106, 766,
	3585, 3545, 3577, 4360, 3345, 2399, 972, 1595, 3309, 3226,
	2082, 1769, 2397, 5136, 3566, 2386, 3293, 3174, 2319, 3712,
	1340, 2335, 2952, 1169, 190, 4073, 4417, 4874, 2220, 3544,
	285, 968, 4, 891, 2018, 2796, 284, 2057, 2951, 2654,
	1988, 2731, 3401, 115, 2364, 963, 3308, 2954, 1709, 2448,
	2398, 889, 1422, 2798, 3188, 2384, 823, 2151, 1331, 2376,
	2357, 2286, 3263, 1816, 1220, 2290, 1907, 1396, 2218, 1466,
	2083, 2932, 2787, 2715, 1225, 1227, 1481, 2621, 2987, 1485,
	2102, 2638, 2619, 800, 3286, 1746, 1410, 2447, 895, 1712,
	896, 3100, 2379, 3677, 1624, 3101, 2909, 4979, 1043, 742,
	3836, 3061, 1453, 764, 3015, 2790, 1334, 2941, 2052, 2922,
	900, 2092, 2099, 200, 1313, 2876, 903, 1188, 2768, 2002,
	2620, 2842, 190, 1921, 1348, 1920, 808, 2622, 1851, 1407,
	201, 2407, 1330, 819, 2473, 1737, 1646, 900, 1744, 843,
	989, 119, 1222, 903, 2388, 105, 1836, 1346, 1603, 5152,
	1478, 5208, 1199, 2643, 759, 46, 1201, 45, 43, 756,
	34, 768, 884, 944, 783, 32, 30, 1336, 1658, 1311,
	1926, 3454, 1906, 1064, 3448, 4087, 945, 4088, 2209, 1651,
	3564, 4121, 5291, 1781, 2209, 2209, 2931, 5097, 2209, 2209,
	5283, 2209, 4710, 5271, 3790, 5270, 1672, 2931, 1343, 2931,
	5240, 1762, 5238, 5181, 4741, 4707, 4741, 2419, 5137, 836,
	839, 5127, 5138, 5125, 5122, 2931, 5119, 2931, 5123, 5085,
	5120, 4704, 5084, 2419, 2230, 3888, 2419, 1165, 5081, 2495,
	5071, 1842, 3319, 1165, 4741, 3515, 3516, 964, 5069, 5060,
	5059, 5032, 4741, 4741, 4741, 4741, 1166, 4999, 4992, 1328,
	4991, 2995, 2931, 4983, 2931, 4961, 4958, 2419, 4940, 2419,
	4741, 3625, 4573, 1462, 4453, 78, 4871, 967, 966, 4850,
	2995, 4818, 4760, 4336, 4759, 4154, 2419, 4748, 2419, 3257,
	4747, 2419, 2207, 79, 4741, 4740, 4692, 4666, 4638, 4741,
	2419, 2995, 3319, 1314, 1314, 4635, 2496, 1154, 4551, 3790,
	84, 4529, 2931, 1462, 1145, 2931, 4380, 2230, 4326, 4320,
	2995, 4274, 3902, 3902, 2227, 4275, 4185, 3017, 4153, 4098,
	4186, 1144, 4154, 4099, 4096, 4080, 3996, 3992, 4097, 2931,
	2419, 2931, 2488, 3901, 3790, 2419, 4077, 3902, 3889, 98,
	3561, 92, 1366, 3556, 2931, 3643, 3640, 2931, 3555, 3506,
	3463, 3504, 2931, 3507, 2227, 3505, 3464, 2991, 3496, 2230,
	1934, 1935, 3497, 1967, 1968, 1969, 1978, 1979, 1980, 2924,
	1660, 3416, 3494, 1160, 3465, 3256, 2931, 3318, 2931, 2931,
	1374, 3319, 970, 1971, 1965, 3303, 3302, 3040, 1660, 2483,
	2483, 2931, 1937, 2793, 2994, 51, 1342, 114, 2995, 5000,
	2230, 2984, 1984, 98, 111, 2931, 1344, 4875, 2976, 2930,
	2230, 3521, 2419, 2931, 4866, 1317, 1315, 1318, 1660, 1990,
	1671, 2744, 2745, 2746, 2763, 2764, 2765, 2482, 1936, 4854,
	3319, 2483, 4077, 2923, 4615, 1367, 4573, 2227, 4530, 1956,
	4336, 4276, 2766, 3150, 3060, 2244, 2312, 2208, 1953, 2224,
	3256, 1367, 2418, 3168, 3051, 2078, 1645, 4203, 3515, 3516,
	3967, 3936, 2100, 2369, 3890, 1818, 2968, 99, 2967, 2966,
	2965, 2964, 1319, 1316, 251, 1934, 1935, 1990, 1153, 1152,
	1151, 251, 1150, 1149, 3891, 5112, 1148, 1934, 1935, 1147,
	2794, 2825, 1143, 2931, 1142, 1141, 1140, 2756, 1139, 3453,
	1138, 1137, 3515, 3516, 1136, 3371, 2752, 1937, 1135, 1134,
	1133, 1965, 1132, 1131, 1130, 3515, 3516, 1129, 1128, 1937,
	1127, 1126, 1125, 3531, 1124, 253, 1959, 1960, 1961, 1962,
	1106, 1270, 253, 1041, 1040, 1039, 1942, 3530, 1038, 1037,
	1036, 1035, 1034, 1936, 1033, 3289, 1990, 3515, 3516, 1032,
	3533, 3534, 3535, 1031, 1030, 1936, 1029, 1028, 2210, 1027,
	41, 1026, 1025, 1024, 2210, 2210, 1956, 1023, 2210, 2210,
	4376, 2210, 2795, 1022, 2792, 1953, 252, 1021, 1020, 1975,
	1019, 1018, 1985, 252, 2757, 2758, 2759, 2760, 1017, 1964,
	1966, 245, 1016, 1015, 2751, 1014, 1013, 1012, 1011, 1010,
	246, 1009, 1008, 1007, 1987, 1006, 1981, 1005, 1982, 994,
	1666, 993, 992, 987, 986, 1951, 1952, 979, 978, 977,
	962, 103, 961, 919, 918, 4435, 3530, 2227, 917, 202,
	4392, 4374, 2227, 1973, 3521, 916, 202, 907, 906, 2823,
	905, 904, 866, 1651, 865, 2227, 834, 251, 1957, 833,
	832, 1942, 814, 1959, 1960, 1961, 1962, 251, 2561, 4629,
	158, 3256, 1785, 1942, 1659, 279, 278, 277, 276, 275,
	251, 1429, 1225, 2761, 2762, 251, 274, 273, 3521, 272,
	198, 106, 271, 270, 110, 269, 3532, 268, 267, 266,
	1766, 3521, 265, 264, 1435, 263, 262, 1983, 253, 1225,
	1225, 1225, 261, 260, 259, 251, 2754, 258, 253, 257,
	256, 251, 255, 254, 4130, 3068, 1964, 1966, 1972, 971,
	4092, 253, 3940, 3521, 158, 3903, 253, 3611, 3476, 1987,
	3459, 3559, 3450, 3348, 3236, 3068, 2999, 2973, 1168, 2103,
	1505, 2797, 1951, 1952, 1225, 2958, 3531, 2230, 3271, 252,
	1225, 1627, 1225, 3027, 2208, 1429, 253, 2227, 2224, 252,
	2614, 2060, 253, 1636, 245, 2611, 2271, 2809, 2059, 1933,
	2807, 1457, 252, 246, 245, 1957, 3560, 252, 3888, 2229,
	1225, 2126, 1225, 246, 1225, 1367, 2227, 245, 1963, 163,
	3531, 1627, 245, 3537, 2029, 1901, 246, 2063, 1470, 1471,
	1472, 246, 202, 3531, 5111, 203, 5108, 252, 1654, 2923,
	1474, 1958, 202, 252, 4857, 1350, 1429, 5086, 5068, 1844,
	1367, 4966, 245, 1613, 1714, 202, 1649, 1987, 245, 4863,
	202, 246, 4855, 4878, 1665, 3531, 1627, 246, 4732, 1976,
	4680, 199, 4636, 1627, 3525, 3517, 3518, 3519, 3520, 3522,
	3523, 1660, 1225, 4614, 1225, 4459, 1987, 4415, 4414, 1627,
	202, 4287, 1401, 1404, 2791, 2060, 965, 1503, 1225, 2755,
	1225, 1987, 2059, 1989, 4408, 4407, 4406, 1414, 1449, 4631,
	4399, 1218, 4398, 4396, 1987, 4391, 2020, 4388, 4387, 1451,
	251, 4273, 4134, 4133, 4191, 1718, 1721, 3008, 2027, 4132,
	4102, 2058, 1327, 1608, 4068, 4067, 3515, 3516, 4066, 3532,
	3988, 3983, 3606, 3552, 3066, 1963, 1987, 3543, 3514, 1627,
	3511, 3510, 3508, 3503, 3502, 1488, 1489, 1498, 900, 1592,
	1597, 1989, 3501, 3498, 903, 3495, 1634, 3475, 1958, 1225,
	3458, 253, 1225, 3515, 3516, 3451, 3449, 3304, 2959, 1974,
	2780, 1933, 1443, 3532, 2463, 2426, 2424, 1932, 5286, 1600,
	1948, 1949, 1955, 1977, 1954, 1950, 3532, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 5229, 3515, 3516, 2022,
	3632, 4402, 5228, 4880, 1477, 4401, 1648, 4201, 1647, 5150,
	190, 190, 252, 5148, 2020, 1352, 1707, 1480, 3532, 1630,
	1989, 1490, 1491, 4014, 5024, 4288, 4945, 245, 1786, 1166,
	4930, 3273, 1749, 1751, 4926, 4925, 246, 4924, 2741, 2742,
	2743, 2767, 2753, 2747, 4904, 2749, 2750, 2748, 2735, 2736,
	2737, 2738, 2739, 2740, 4903, 4901, 4877, 1724, 1738, 4876,
	4848, 2721, 4834, 4831, 4830, 3288, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 3065, 2021, 4814, 2019, 4813, 1457,
	1747, 3557, 1457, 4756, 4727, 3526, 3524, 3525, 3517, 3518,
	3519, 3520, 3522, 3523, 3065, 4678, 4661, 4660, 4879, 1225,
	4603, 4599, 3521, 4596, 251, 1225, 4574, 1940, 1941, 1943,
	1944, 1954, 1950, 1740, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 1911, 4434, 4413, 4337, 4705, 4189, 3526,
	3524, 3525, 3517, 3518, 3519, 3520, 3522, 3523, 4188, 3521,
	4606, 2824, 4455, 3524, 3525, 3517, 3518, 3519, 3520, 3522,
	3523, 4288, 251, 4169, 2009, 253, 251, 1860, 251, 4168,
	4166, 3065, 4083, 1791, 4071, 3978, 4630, 3527, 3528, 3529,
	2007, 1761, 3904, 3521, 3526, 3524, 3525, 3517, 3518, 3519,
	3520, 3522, 3523, 3898, 251, 2727, 1905, 1780, 251, 3865,
	3770, 3723, 3690, 3634, 3480, 3479, 3474, 3440, 3250, 3093,
	2066, 2065, 2064, 253, 2061, 2053, 252, 253, 2051, 253,
	3006, 1225, 1225, 1225, 3531, 3005, 2970, 1225, 2963, 2929,
	2805, 245, 2006, 2125, 1348, 2081, 1348, 2075, 2074, 2073,
	246, 2072, 251, 2071, 2070, 253, 2069, 2068, 2067, 253,
	2048, 1505, 2047, 2046, 1809, 2045, 3272, 1346, 2044, 1346,
	2043, 2080, 2042, 1225, 252, 1845, 894, 1429, 252, 202,
	252, 2041, 2168, 894, 2040, 1429, 2039, 1429, 2038, 245,
	2134, 2037, 1166, 245, 1912, 245, 2036, 2035, 246, 2034,
	2033, 2022, 246, 253, 246, 2129, 252, 3603, 4384, 2822,
	252, 2008, 2005, 2089, 2000, 1987, 1442, 1371, 1343, 1362,
	1343, 245, 1916, 1145, 4129, 245, 1908, 202, 4095, 1915,
	246, 202, 2997, 202, 246, 4086, 3462, 2961, 1743, 2136,
	1144, 4457, 4128, 2021, 3630, 2003, 3894, 1429, 4532, 2141,
	2147, 3144, 2062, 1225, 252, 3726, 1910, 1484, 2197, 202,
	2199, 3515, 3516, 202, 2121, 5220, 4934, 4927, 1467, 245,
	4634, 2110, 2086, 2087, 1929, 1930, 1484, 1225, 246, 4577,
	4576, 1469, 4575, 4531, 1484, 1505, 1987, 4437, 2127, 1484,
	1934, 1935, 4344, 4343, 4342, 4341, 4340, 3532, 4339, 4338,
	1314, 190, 4155, 1434, 4090, 1482, 4089, 202, 3906, 3905,
	2262, 2301, 3119, 3794, 2054, 2055, 3792, 3791, 5104, 1166,
	2232, 5177, 1937, 5175, 4823, 1462, 2135, 2347, 4291, 2236,
	5100, 2103, 3965, 4218, 1903, 1457, 900, 2808, 1462, 2142,
	2806, 1743, 903, 900, 3500, 3499, 2191, 2131, 2060, 903,
	1808, 1468, 2235, 3422, 3104, 2059, 4858, 2111, 1936, 1465,
	3760, 2133, 2250, 4184, 3692, 1122, 3186, 2043, 2043, 4896,
	3846, 4281, 3845, 2031, 4856, 4149, 2269, 4150, 2400, 2516,
	2130, 4897, 2108, 1462, 2101, 2488, 4817, 2162, 5133, 4897,
	4612, 1861, 3315, 3818, 4563, 1817, 2256, 2255, 1818, 2401,
	1484, 2264, 4270, 4224, 4215, 4194, 3932, 4731, 2212, 3656,
	2582, 1657, 2272, 1664, 1123, 1670, 1342, 2493, 1342, 2432,
	4682, 2366, 2079, 3564, 3004, 4016, 1344, 3102, 1344, 2788,
	2076, 3468, 5109, 2120, 4516, 2119, 2118, 2056, 2116, 3826,
	2457, 2105, 4513, 2115, 2114, 4751, 4723, 1717, 1641, 1438,
	1400, 4160, 5124, 2238, 1627, 1627, 3517, 3518, 3519, 3520,
	3522, 3523, 2148, 5121, 2028, 1505, 4544, 4542, 3884, 2312,
	4919, 1326, 4618, 1795, 3165, 3162, 5031, 3695, 3160, 1774,
	3347, 4179, 3285, 1760, 957, 1765, 2464, 3801, 2346, 2380,
	5212, 3228, 2356, 5178, 5157, 3519, 3520, 3522, 3523, 1779,
	4754, 1784, 1742, 2793, 5110, 5179, 4750, 4729, 2234, 3959,
	4237, 2343, 3146, 2351, 3660, 2591, 4782, 4518, 2588, 2361,
	1685, 3041, 5282, 2259, 1120, 1858, 2353, 3517, 3518, 3519,
	3520, 3522, 3523, 1693, 4935, 4775, 4762, 4566, 1840, 1118,
	3662, 2310, 3631, 2575, 3078, 2573, 1643, 1116, 4565, 4235,
	1114, 1111, 4234, 4226, 4209, 1934, 1935, 4208, 2276, 2265,
	2277, 1627, 2257, 1627, 1102, 1627, 4206, 1843, 4205, 2838,
	2284, 2285, 2278, 2279, 2589, 2411, 2416, 2356, 4193, 2282,
	2283, 4152, 4236, 1627, 1627, 1859, 1840, 1937, 3064, 2306,
	4151, 2356, 2420, 3807, 2251, 3806, 958, 1627, 2318, 3762,
	2794, 3624, 3473, 2590, 3062, 1742, 3472, 2526, 3471, 1627,
	1164, 2381, 1627, 1627, 1627, 1469, 900, 2629, 3470, 3426,
	3184, 3183, 903, 1936, 2214, 1694, 4163, 2216, 3167, 3156,
	2403, 2404, 1857, 2221, 3148, 2837, 894, 2223, 2340, 2354,
	2405, 3138, 2226, 3137, 3129, 2261, 3128, 3127, 3064, 3109,
	3108, 1839, 4497, 3069, 2985, 1837, 1469, 4512, 1225, 2453,
	1793, 2239, 3081, 2702, 3062, 2517, 806, 2458, 4987, 1909,
	2470, 2659, 1452, 2527, 1648, 4514, 1647, 806, 1788, 2627,
	4752, 4724, 2795, 2260, 2792, 1468, 3725, 2077, 4490, 3282,
	2339, 2352, 2336, 2438, 2603, 4464, 1225, 2360, 1730, 1839,
	1729, 754, 3012, 2533, 2491, 1728, 1163, 1727, 2989, 5213,
	4659, 3933, 2390, 5158, 1689, 2390, 2389, 2521, 2393, 2389,
	2609, 1838, 2417, 1108, 3692, 2501, 1468, 2478, 749, 2512,
	2514, 1942, 1899, 1225, 1166, 1225, 1166, 2355, 2401, 2488,
	1702, 3758, 1225, 3106, 4491, 2168, 2168, 1505, 5215, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1747, 1225, 1747, 1225, 1225,
	1225, 1225, 2467, 2480, 1463, 2439, 900, 2440, 1463, 2546,
	1789, 2600, 903, 2629, 1740, 1463, 2475, 2472, 2475, 3048,
	2476, 1386, 2602, 2311, 1225, 2507, 2508, 2717, 1225, 1225,
	2631, 2534, 2355, 2998, 1165, 2618, 1225, 1443, 2349, 2484,
	1225, 2485, 1225, 1225, 4474, 1644, 2355, 2628, 2117, 3136,
	1505, 2717, 2308, 2165, 3322, 1875, 1225, 1225, 1225, 1225,
	5216, 2797, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	2975, 3123, 1871, 3515, 3516, 2627, 3533, 3534, 3535, 4533,
	1486, 1487, 1810, 2788, 2658, 3080, 3523, 2304, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 3366, 1225, 1486,
	1487, 2536, 1225, 3092, 2769, 2770, 2525, 1486, 1487, 4515,
	3132, 4473, 1486, 1487, 1348, 1944, 805, 1856, 2769, 2785,
	2309, 1505, 3759, 960, 959, 2626, 2580, 805, 4792, 1459,
	1348, 3399, 2569, 1459, 1987, 863, 4510, 1346, 3130, 3437,
	1459, 1902, 2655, 2656, 5178, 2833, 1225, 1505, 1877, 4912,
	2305, 2530, 3530, 1346, 2642, 2725, 2567, 1441, 2382, 2312,
	2162, 2162, 2723, 2625, 2879, 2879, 2893, 5244, 2769, 4486,
	3435, 2913, 2915, 5214, 5106, 5218, 4487, 2800, 2921, 1806,
	3091, 2713, 2617, 3164, 2791, 2524, 2615, 4492, 1343, 2616,
	1145, 2623, 1818, 1145, 1145, 2630, 1818, 2733, 3659, 1166,
	3133, 2391, 2320, 3379, 1343, 4658, 2784, 2646, 2121, 1166,
	2647, 2648, 2711, 1166, 1914, 1464, 2946, 3163, 3161, 1464,
	2988, 3159, 2971, 2266, 2267, 1162, 1464, 2324, 3131, 4489,
	4176, 2310, 807, 2628, 3414, 955, 2477, 954, 3105, 2938,
	2392, 3079, 2383, 807, 3945, 3944, 3368, 3044, 4493, 3521,
	1356, 1429, 1429, 861, 1794, 2110, 2394, 2835, 2797, 3035,
	4190, 4887, 2836, 2699, 4564, 2839, 1358, 2840, 2841, 3011,
	3046, 2729, 1713, 4207, 2972, 2370, 1314, 1460, 4914, 1112,
	2377, 1460, 4002, 4204, 4137, 2321, 4124, 1461, 1460, 3014,
	2782, 1461, 1505, 1353, 1112, 3538, 2599, 2574, 1461, 2572,
	2960, 750, 1112, 1166, 3033, 1113, 1112, 2601, 3047, 3937,
	1003, 2626, 4250, 1872, 2937, 3813, 2532, 3805, 3432, 3537,
	3063, 3382, 3030, 190, 3756, 3036, 3166, 1711, 1688, 3045,
	2945, 2992, 2950, 3010, 2888, 2956, 2957, 2613, 2875, 1359,
	2904, 2168, 1457, 2919, 3742, 2917, 2927, 2928, 3038, 3433,
	3126, 4508, 4174, 3438, 2943, 2944, 2939, 3055, 3000, 5107,
	2707, 3531, 4005, 3107, 4003, 3734, 2108, 1360, 1853, 4511,
	2062, 3665, 5190, 4251, 3413, 1938, 1939, 1940, 1941, 1943,
	1944, 2423, 2422, 5217, 2708, 4488, 1342, 751, 4793, 2610,
	1505, 2709, 3406, 3407, 995, 2714, 1344, 2371, 5199, 2325,
	5198, 4791, 1342, 2156, 4996, 3743, 1627, 4789, 5224, 2983,
	5246, 1357, 1344, 1790, 5165, 4366, 3070, 4249, 3223, 3052,
	4365, 996, 3007, 1429, 2332, 1385, 3735, 4498, 4499, 3021,
	3032, 3219, 3938, 3024, 2095, 3025, 2054, 2055, 1183, 752,
	2697, 753, 1987, 2700, 1225, 1225, 3177, 1225, 2367, 3741,
	980, 3814, 3067, 3016, 3031, 3039, 3811, 4788, 1109, 3029,
	3881, 1873, 3381, 289, 3375, 1691, 2326, 2327, 5105, 3142,
	3733, 1897, 1462, 1429, 2315, 2209, 1462, 985, 2091, 3224,
	3882, 3261, 862, 1462, 2098, 2333, 4790, 3111, 3124, 5075,
	4942, 5076, 5008, 2322, 2696, 3378, 3042, 3054, 4920, 4715,
	2940, 2367, 2396, 2311, 1627, 2363, 3428, 3313, 3679, 3254,
	2291, 3755, 3096, 3754, 3751, 2292, 3145, 1627, 2096, 1627,
	4509, 3305, 1713, 3222, 3532, 1627, 3110, 3269, 3112, 2331,
	2716, 2797, 2362, 2797, 864, 2316, 1627, 1627, 860, 3125,
	3312, 2323, 3073, 3296, 3083, 3086, 2162, 3157, 3135, 3434,
	3178, 3117, 3118, 3120, 3121, 3122, 3310, 2562, 3773, 3436,
	4913, 1874, 1429, 2395, 1429, 2095, 3881, 2358, 3056, 3057,
	3185, 3265, 3058, 3059, 3707, 3220, 3221, 2974, 1870, 2314,
	3661, 3325, 3326, 1792, 1869, 1094, 1225, 908, 804, 3134,
	1819, 2710, 2350, 3333, 3334, 3335, 3140, 1642, 3147, 900,
	2309, 2712, 3154, 4994, 1369, 903, 3380, 4593, 3064, 2049,
	1158, 2568, 5143, 5164, 915, 2098, 2165, 2165, 3171, 3172,
	3351, 3170, 5144, 4263, 3084, 1174, 3628, 2724, 3798, 2374,
	2359, 2093, 2293, 4261, 3706, 3349, 2529, 3350, 3316, 2091,
	1354, 1440, 3229, 2367, 2348, 3022, 3307, 4362, 4995, 2096,
	2297, 3026, 1876, 997, 998, 1225, 190, 1648, 3332, 3234,
	3317, 1225, 1225, 1805, 1807, 3037, 3323, 1187, 2328, 2302,
	2523, 5222, 4654, 3527, 3528, 3529, 3713, 3298, 3300, 3248,
	3526, 3524, 3525, 3517, 3518, 3519, 3520, 3522, 3523, 4175,
	2372, 2097, 4671, 2094, 5188, 5042, 1355, 3812, 1913, 2391,
	2698, 4545, 5242, 773, 1999, 1095, 4263, 2779, 3478, 981,
	982, 3291, 1004, 3343, 2942, 4497, 4261, 1225, 1225, 3301,
	4265, 5247, 2955, 1225, 1165, 4018, 2095, 3680, 1747, 2294,
	2299, 5231, 3579, 3715, 2373, 4605, 1225, 1225, 2392, 4446,
	4351, 4702, 1225, 1225, 3299, 3340, 4447, 4569, 1225, 3280,
	2329, 4490, 4264, 4367, 4125, 4483, 1375, 1373, 4286, 3961,
	3397, 3356, 4963, 3358, 4956, 3360, 5048, 3362, 3363, 1824,
	3342, 3229, 4783, 4481, 3355, 4977, 2098, 4833, 4568, 3384,
	4567, 3386, 4485, 4308, 3869, 3357, 3141, 3359, 5223, 3361,
	3372, 3231, 2093, 1225, 1225, 1225, 3233, 3642, 2982, 1225,
	2446, 2088, 3714, 4265, 1372, 1365, 3429, 4491, 4445, 1225,
	2096, 741, 1924, 1923, 2579, 2295, 4363, 4653, 4411, 4948,
	4057, 2645, 2097, 3394, 2313, 5225, 1225, 5163, 1923, 2252,
	5252, 3405, 4749, 4949, 3616, 4264, 4699, 4842, 4594, 3686,
	3387, 1918, 3461, 3389, 4894, 3396, 909, 910, 4309, 3395,
	4259, 4484, 4230, 4210, 2094, 2210, 4161, 1100, 1099, 4159,
	999, 1000, 2895, 3415, 2642, 2249, 3400, 4950, 2302, 3870,
	3456, 3457, 3861, 3181, 3682, 3460, 3270, 3264, 3252, 3452,
	5142, 3320, 2471, 2465, 2459, 2451, 2431, 2430, 3327, 1682,
	3328, 2635, 4964, 3113, 4001, 4827, 1377, 4145, 3587, 4072,
	5014, 3962, 2933, 813, 3068, 1096, 1923, 4980, 2581, 2245,
	4311, 4623, 3249, 1388, 4368, 1166, 983, 984, 1225, 1225,
	1225, 1225, 1922, 3427, 4809, 3667, 4807, 1225, 1225, 1225,
	2300, 4726, 1225, 3085, 4262, 4952, 4085, 1922, 3698, 2936,
	3694, 3578, 2247, 4119, 1225, 1348, 1505, 3693, 3420, 3398,
	1225, 2513, 1225, 3571, 3572, 3576, 3575, 1094, 1847, 1846,
	4951, 1348, 2505, 4655, 2494, 2428, 2156, 2156, 1346, 3668,
	2981, 1841, 2980, 2979, 2978, 2977, 4269, 1163, 4953, 1505,
	2935, 1722, 1158, 2097, 1346, 2934, 2275, 1736, 1734, 2248,
	3919, 1348, 1002, 4907, 1505, 1723, 1924, 3588, 912, 911,
	4738, 4584, 2165, 3917, 4369, 3089, 1429, 4282, 3554, 3467,
	4167, 1924, 2469, 3910, 1346, 1922, 2168, 4262, 3821, 1343,
	1505, 3596, 4486, 4058, 4156, 3583, 3573, 5185, 4811, 4487,
	1429, 852, 4412, 4713, 4059, 1343, 1097, 2636, 1429, 4711,
	4492, 3605, 3346, 1156, 1999, 1094, 3644, 2387, 3227, 3586,
	3593, 3934, 5251, 3929, 3641, 3626, 3321, 3232, 3230, 2498,
	1225, 2296, 5020, 2400, 1098, 1343, 913, 914, 853, 1798,
	1158, 4908, 1225, 3570, 3114, 3115, 4734, 1095, 3774, 3623,
	3610, 4733, 4489, 2301, 4468, 4418, 3581, 3592, 5028, 4467,
	1429, 4721, 5011, 4074, 2804, 4703, 2168, 4450, 3681, 4965,
	3921, 4493, 4826, 3638, 4146, 4810, 3599, 1894, 2595, 5050,
	1896, 4739, 4795, 1225, 5189, 1893, 5187, 3912, 1157, 2301,
	1101, 3612, 4466, 3618, 3619, 3620, 3621, 3669, 3670, 1429,
	3614, 1825, 3911, 3237, 3582, 3602, 3240, 3731, 3242, 3594,
	1457, 3609, 4722, 5126, 3565, 3597, 3598, 3633, 1429, 3696,
	1429, 3595, 3700, 3549, 3550, 3551, 3745, 5021, 3747, 3657,
	2134, 3580, 4938, 4928, 4709, 1095, 4909, 1891, 4677, 1225,
	1225, 3663, 1865, 2366, 4461, 3697, 4410, 1505, 3702, 4268,
	2366, 3704, 3617, 1863, 3287, 3761, 3547, 3287, 1429, 3920,
	3600, 3546, 3601, 2274, 4157, 1835, 3784, 3683, 3589, 3590,
	3591, 3977, 812, 3629, 1833, 1429, 3650, 1831, 3930, 3635,
	3636, 1829, 3637, 3796, 3927, 1827, 3763, 1342, 1821, 1815,
	3639, 2162, 1813, 3732, 1732, 3509, 3776, 1344, 3778, 1100,
	1099, 3782, 3710, 1342, 3439, 3788, 3253, 1627, 4488, 1735,
	1733, 3647, 4954, 1344, 1001, 3155, 3789, 3651, 4955, 3149,
	1429, 1627, 3103, 1627, 3009, 2385, 3752, 1505, 3658, 2608,
	2604, 2515, 2504, 1342, 894, 1627, 2489, 2128, 2124, 3956,
	1898, 3364, 3771, 1344, 1773, 3955, 3666, 1096, 1627, 3947,
	4498, 4499, 2803, 3689, 2571, 3728, 3746, 1918, 2538, 1429,
	3370, 2409, 1187, 1187, 1187, 2597, 3369, 3862, 3330, 3775,
	2624, 2162, 2596, 1852, 1895, 4450, 1348, 2541, 3716, 1892,
	3877, 2429, 2198, 2196, 2032, 1787, 3831, 1100, 1099, 1706,
	1632, 1310, 3875, 3815, 3724, 5098, 3854, 3259, 1627, 1346,
	3851, 3737, 3860, 1589, 4546, 4217, 4216, 3740, 4550, 4528,
	1627, 5010, 1627, 4621, 4555, 3766, 3738, 4541, 1110, 4479,
	3739, 3730, 2156, 4478, 3310, 3918, 3913, 3914, 3915, 3916,
	4307, 1890, 2337, 3310, 5161, 1096, 1864, 2342, 3772, 4298,
	3744, 4233, 3816, 3868, 3819, 3757, 3886, 1862, 3785, 3897,
	1343, 1927, 3803, 4212, 3612, 3793, 4182, 4180, 4158, 1834,
	3864, 3859, 3797, 3135, 3847, 3922, 3283, 3275, 1832, 1505,
	3268, 1830, 1505, 3260, 3245, 1828, 3244, 3935, 1097, 1826,
	3783, 3225, 1820, 1814, 3871, 3028, 1812, 3023, 1731, 2427,
	3804, 2425, 2402, 3925, 900, 2368, 2330, 3795, 2317, 2303,
	903, 2312, 3111, 2231, 3808, 2228, 1098, 1225, 3948, 2225,
	2344, 4616, 2222, 1225, 1225, 3823, 2217, 1225, 1225, 1225,
	3878, 1225, 2215, 2211, 3646, 3802, 3852, 3648, 3649, 3858,
	1225, 2168, 3652, 3857, 3653, 2202, 3654, 3998, 3874, 1225,
	5156, 2570, 5080, 1323, 1225, 2537, 190, 190, 2408, 5179,
	1505, 3786, 1166, 3926, 2338, 3883, 2377, 2140, 3885, 1225,
	3418, 2253, 1101, 4906, 3892, 1928, 1097, 1505, 3895, 3896,
	1324, 3390, 2241, 2242, 3391, 3388, 3218, 2168, 2168, 1225,
	1225, 3953, 1225, 1225, 1225, 1115, 1117, 1119, 2607, 5062,
	3876, 4971, 1155, 4637, 1098, 4562, 3950, 4465, 3311, 1503,
	1225, 3664, 2270, 1687, 1225, 4844, 2168, 2168, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 3980, 1225,
	4030, 3954, 4031, 3963, 3990, 3991, 2605, 1225, 1225, 2168,
	3090, 3941, 4837, 3942, 1225, 3943, 3064, 4319, 1342, 2312,
	1101, 2528, 3064, 1888, 1889, 1225, 2468, 1409, 1344, 3419,
	1408, 2565, 3062, 3960, 2560, 5061, 1348, 1348, 3087, 2535,
	1225, 4519, 4557, 3787, 1934, 1935, 3182, 3994, 1157, 1811,
	3094, 841, 4865, 2606, 1325, 1479, 3951, 1934, 1935, 1346,
	1346, 4736, 4419, 4397, 4010, 3957, 3711, 3095, 3958, 2240,
	3116, 1931, 1505, 1436, 1376, 5173, 1937, 5134, 1476, 4104,
	3985, 3987, 280, 4229, 3095, 1429, 1429, 2012, 3243, 3997,
	4069, 2017, 4295, 2452, 1447, 3162, 4013, 4004, 4006, 4007,
	1429, 1429, 4091, 894, 1429, 3160, 2162, 4228, 3169, 3151,
	1343, 1343, 1936, 3097, 1868, 1409, 4020, 2165, 4008, 1409,
	5019, 283, 5001, 1225, 858, 1936, 4028, 844, 844, 4970,
	4029, 738, 4033, 3153, 2655, 4021, 4061, 3923, 4967, 4905,
	3099, 4027, 4852, 3928, 4828, 4035, 4802, 3152, 4714, 4305,
	4735, 1225, 2162, 2162, 3098, 4297, 2334, 4285, 4122, 4123,
	4101, 4081, 4082, 2655, 4036, 4062, 2348, 3863, 3290, 2920,
	2237, 190, 2149, 4135, 4136, 5219, 3139, 4142, 1640, 4070,
	1639, 2162, 2162, 2350, 1225, 1225, 5052, 4078, 4079, 1633,
	1159, 5053, 3627, 2387, 5250, 4969, 4065, 2165, 1651, 4103,
	3515, 3516, 1934, 1935, 5052, 2281, 3050, 3393, 4389, 5053,
	2280, 3049, 5192, 4093, 2162, 5083, 2799, 2345, 4127, 1651,
	1797, 1650, 2347, 1225, 1225, 1651, 1796, 3373, 2834, 2281,
	4094, 1225, 2280, 4162, 1867, 4304, 4829, 1866, 4776, 4559,
	4554, 4553, 4448, 4444, 4443, 4385, 4359, 4126, 3720, 3721,
	4009, 3722, 1627, 1627, 1589, 1627, 3780, 3777, 3376, 1627,
	4195, 2341, 1627, 900, 2026, 2025, 4138, 1429, 2612, 903,
	5235, 5200, 5066, 5005, 5004, 4247, 5003, 4937, 4131, 4936,
	4883, 4881, 4805, 4766, 4706, 4701, 4700, 4199, 4200, 4202,
	4698, 4697, 2168, 4695, 4601, 4581, 2349, 4517, 4456, 4442,
	4441, 4440, 3767, 3768, 4332, 3769, 4325, 4225, 1342, 1342,
	4272, 4178, 4170, 3867, 4231, 3866, 3703, 3645, 1344, 1344,
	3377, 4187, 4192, 3367, 3339, 4219, 3338, 3337, 3336, 4255,
	3274, 3247, 3246, 3088, 3019, 3013, 1627, 3002, 3001, 2990,
	2728, 2598, 1225, 2566, 4252, 4253, 2559, 4294, 2558, 3111,
	1348, 1225, 2557, 4321, 4312, 2556, 4278, 2555, 2466, 2441,
	1627, 4248, 2437, 2436, 2435, 1627, 1627, 1627, 4293, 2434,
	1187, 4327, 2433, 1346, 2205, 4267, 4241, 2204, 1589, 2203,
	4271, 2201, 2139, 2346, 2138, 1887, 4076, 4292, 1627, 1886,
	1627, 1822, 1701, 1700, 3296, 1627, 1699, 1505, 4238, 3178,
	1698, 1697, 1696, 1695, 1690, 4316, 1686, 1684, 3310, 1683,
	1617, 4313, 4280, 4284, 4256, 4329, 4245, 1616, 4301, 1615,
	1496, 1495, 1494, 1493, 1343, 1492, 4315, 1439, 1505, 1395,
	1394, 1225, 1225, 1393, 4333, 1233, 1392, 1225, 1225, 2168,
	1391, 1390, 1225, 1225, 1389, 1225, 1387, 1382, 1381, 1380,
	1225, 1379, 1378, 969, 8, 1305, 2243, 4296, 1121, 1107,
	4911, 1225, 4496, 4495, 4494, 4299, 4345, 2156, 2594, 97,
	1692, 4348, 4314, 932, 91, 2375, 4177, 1225, 4851, 3689,
	1070, 5049, 4317, 287, 287, 287, 4941, 744, 745, 4246,
	760, 744, 760, 771, 4323, 4322, 811, 2162, 4330, 1675,
	831, 4331, 940, 5030, 3705, 838, 838, 838, 838, 4347,
	4370, 3187, 2540, 1823, 2542, 287, 4353, 3604, 2962, 4993,
	4143, 4383, 4393, 4371, 4144, 3477, 4872, 4670, 2802, 2030,
	3558, 4349, 93, 4356, 1209, 976, 4379, 1255, 1348, 4592,
	4591, 4480, 287, 4164, 3834, 4588, 1348, 2156, 4364, 4587,
	1505, 1505, 2153, 1505, 2155, 1173, 1508, 5074, 1589, 2254,
	1348, 1346, 2165, 5241, 1215, 2268, 2263, 3003, 2878, 1346,
	1232, 1627, 1627, 4181, 1229, 4183, 2157, 2159, 1231, 1230,
	2158, 2050, 1228, 1346, 2152, 4303, 4424, 3255, 3294, 3893,
	1741, 1505, 1739, 1072, 2258, 2722, 2786, 3466, 2023, 1189,
	4358, 1211, 2783, 1370, 1200, 3584, 3563, 3880, 2165, 2165,
	4100, 2634, 1343, 949, 3512, 4432, 1225, 2789, 1361, 2901,
	1343, 4355, 1342, 2894, 2890, 4409, 3655, 1348, 3284, 1348,
	1904, 4684, 1344, 2001, 1343, 3295, 4257, 2165, 2165, 4266,
	4454, 4451, 4452, 1900, 2162, 4427, 4429, 1473, 1193, 2720,
	1346, 4232, 1346, 4460, 1429, 2014, 4463, 4469, 4470, 3444,
	2644, 3887, 4527, 4420, 1505, 3607, 1429, 2996, 5055, 1429,
	2165, 4425, 4507, 4017, 4536, 4423, 3374, 4539, 4426, 4506,
	4431, 744, 744, 4433, 1225, 190, 4520, 1505, 2445, 287,
	1322, 4523, 4524, 4416, 4436, 4421, 4422, 1321, 1368, 1320,
	5036, 1343, 5033, 1343, 4449, 2365, 4595, 3829, 3830, 2246,
	3609, 3043, 2732, 4521, 3848, 4472, 1205, 3352, 4458, 3353,
	4462, 4475, 1611, 4477, 2586, 3949, 3569, 4283, 1703, 1627,
	1627, 4743, 1217, 1986, 4471, 3214, 3213, 4900, 1458, 4558,
	1456, 4560, 1455, 1454, 5209, 3180, 4346, 2378, 4173, 4172,
	4171, 250, 3412, 1925, 1917, 247, 1429, 249, 248, 3709,
	4537, 4105, 3613, 1799, 4607, 4522, 5132, 4197, 1505, 3820,
	25, 845, 846, 1627, 4561, 847, 4543, 4503, 4582, 4503,
	3053, 4585, 4552, 2273, 1475, 4148, 24, 23, 22, 21,
	120, 4624, 44, 20, 162, 160, 137, 157, 4579, 1627,
	1627, 1627, 1627, 1627, 1627, 1627, 156, 4540, 4613, 129,
	1342, 155, 4572, 154, 153, 152, 151, 159, 1342, 4608,
	1344, 4578, 150, 1505, 149, 144, 148, 147, 1344, 146,
	145, 143, 1342, 141, 4571, 1225, 1225, 1225, 142, 4570,
	1589, 136, 1344, 140, 139, 138, 135, 134, 4625, 4590,
	4586, 4580, 4610, 1505, 4598, 4597, 133, 132, 1225, 131,
	4604, 1225, 1225, 4619, 4602, 4628, 130, 128, 4656, 161,
	4633, 1225, 127, 126, 2168, 4526, 204, 125, 2726, 1225,
	1225, 4626, 124, 123, 122, 121, 824, 825, 4535, 4648,
	63, 4538, 62, 117, 2012, 118, 1505, 19, 1627, 1342,
	42, 1342, 14, 4640, 67, 4639, 68, 18, 13, 1344,
	37, 1344, 2156, 96, 109, 4662, 108, 107, 38, 104,
	1418, 4642, 1429, 36, 17, 4646, 16, 15, 102, 101,
	100, 35, 4657, 1589, 2415, 4667, 33, 11, 9, 39,
	2112, 12, 5, 195, 1505, 194, 4693, 197, 4694, 1632,
	1503, 193, 1225, 2165, 196, 95, 1632, 192, 2156, 2156,
	191, 94, 31, 10, 187, 1225, 4821, 4290, 87, 189,
	188, 4679, 186, 185, 1225, 184, 88, 4720, 85, 2168,
	4668, 183, 90, 182, 4673, 86, 89, 2156, 2156, 1225,
	2639, 29, 1225, 1598, 6, 4708, 1612, 1418, 4690, 4691,
	66, 7, 4651, 3931, 1589, 112, 113, 40, 1225, 83,
	4717, 1225, 4718, 82, 4300, 81, 80, 28, 1505, 65,
	2156, 27, 179, 4668, 228, 227, 1429, 4746, 226, 225,
	1589, 224, 223, 222, 4785, 221, 1627, 1627, 1627, 216,
	220, 218, 4719, 4716, 217, 4769, 2301, 4770, 219, 215,
	241, 4725, 240, 239, 238, 237, 231, 1348, 230, 236,
	235, 234, 4794, 233, 232, 229, 244, 76, 214, 1418,
	1418, 2658, 213, 212, 4781, 210, 206, 209, 211, 2162,
	1346, 4350, 1505, 208, 207, 1627, 4808, 4820, 4804, 205,
	243, 4765, 4763, 242, 77, 4767, 177, 178, 75, 176,
	2165, 175, 4815, 4838, 174, 4768, 173, 4812, 172, 3831,
	171, 170, 74, 181, 180, 26, 4778, 4825, 2, 1,
	4786, 1225, 1225, 0, 0, 0, 0, 4797, 0, 0,
	4796, 1343, 0, 4843, 0, 4801, 2896, 4806, 1225, 2168,
	0, 0, 0, 0, 4824, 2658, 0, 0, 0, 0,
	0, 4847, 4841, 4849, 4819, 0, 0, 0, 4799, 4800,
	4839, 0, 0, 0, 0, 1429, 4755, 4649, 1429, 4650,
	1429, 1429, 0, 4840, 0, 1589, 0, 4835, 0, 0,
	4846, 4845, 1363, 4628, 2162, 0, 0, 0, 1225, 0,
	1225, 0, 1225, 4853, 0, 0, 0, 4861, 4862, 0,
	0, 0, 1348, 0, 0, 4895, 0, 4503, 0, 0,
	0, 0, 0, 0, 4893, 1225, 1384, 1348, 0, 4864,
	0, 0, 4771, 0, 0, 1346, 0, 0, 287, 0,
	287, 287, 0, 1413, 287, 1423, 4870, 0, 4882, 0,
	1346, 4884, 0, 4885, 4886, 0, 1437, 0, 4784, 0,
	4892, 0, 0, 0, 831, 0, 0, 831, 0, 0,
	0, 0, 4891, 0, 0, 0, 0, 4923, 4922, 0,
	0, 0, 0, 1589, 1348, 1348, 1343, 4888, 4860, 0,
	838, 0, 0, 4915, 0, 0, 4944, 4916, 4946, 0,
	0, 1343, 1348, 0, 0, 1348, 0, 1346, 1346, 1627,
	0, 0, 0, 2156, 287, 0, 287, 287, 1413, 1627,
	287, 287, 0, 0, 0, 1346, 4931, 0, 1346, 1423,
	4933, 0, 0, 0, 4959, 4960, 1225, 1225, 4939, 1342,
	0, 0, 4957, 287, 0, 1653, 1225, 0, 0, 1344,
	0, 0, 4974, 0, 2162, 4976, 0, 0, 1343, 1343,
	4968, 1673, 4503, 0, 0, 0, 0, 4973, 1680, 4989,
	4824, 4990, 0, 0, 0, 0, 1343, 4503, 4982, 1343,
	4985, 4988, 0, 4548, 4981, 4984, 0, 1705, 4986, 1423,
	0, 0, 0, 287, 287, 0, 1413, 1225, 1225, 5002,
	0, 1225, 4998, 4757, 4758, 1627, 1429, 5027, 0, 1429,
	0, 5006, 4997, 5007, 0, 0, 0, 831, 0, 287,
	287, 5009, 0, 0, 0, 0, 0, 0, 0, 0,
	5054, 1767, 5035, 5038, 4503, 4503, 5017, 5018, 0, 4777,
	5058, 4779, 1775, 4780, 5051, 0, 4600, 976, 0, 5026,
	5025, 0, 4503, 0, 0, 4503, 5044, 0, 4609, 5079,
	2156, 5057, 0, 0, 0, 1225, 1225, 1225, 0, 0,
	5077, 3515, 3516, 5039, 3533, 3534, 3535, 5043, 0, 5046,
	0, 4632, 5047, 0, 1342, 0, 0, 0, 5063, 1612,
	0, 5067, 0, 0, 1344, 5070, 5078, 5040, 0, 1342,
	5113, 0, 1225, 0, 0, 0, 0, 5093, 5094, 1344,
	0, 0, 5096, 0, 5118, 5082, 0, 0, 5095, 0,
	0, 0, 0, 1632, 0, 0, 5045, 0, 287, 0,
	0, 0, 0, 0, 5141, 5139, 2301, 5114, 5115, 1612,
	0, 5140, 0, 0, 0, 2165, 5116, 0, 5149, 0,
	3530, 5147, 5131, 287, 0, 0, 1342, 1342, 0, 0,
	1225, 0, 0, 0, 5153, 0, 1344, 1344, 1429, 0,
	5146, 0, 5145, 5162, 1342, 5129, 0, 1342, 4804, 0,
	0, 0, 5154, 0, 1344, 5155, 0, 1344, 5172, 5180,
	0, 0, 0, 5168, 5169, 0, 0, 0, 0, 0,
	0, 5171, 5176, 5174, 1632, 1632, 5159, 5183, 0, 0,
	0, 0, 0, 5195, 5182, 0, 5184, 5196, 0, 1348,
	5186, 1348, 0, 5205, 5203, 0, 5193, 4712, 5035, 0,
	5197, 5038, 5202, 5194, 0, 0, 5191, 0, 5201, 0,
	0, 5170, 1346, 0, 1346, 0, 5211, 3521, 0, 0,
	2165, 0, 0, 0, 5057, 0, 0, 0, 0, 0,
	1429, 0, 0, 0, 4932, 0, 5210, 5226, 0, 5204,
	5233, 5206, 0, 5234, 5227, 0, 0, 5237, 0, 0,
	0, 0, 0, 0, 5232, 0, 5245, 5236, 0, 0,
	1225, 1225, 0, 1343, 5239, 1343, 5243, 0, 0, 1225,
	1225, 0, 0, 5248, 0, 5253, 0, 0, 5259, 0,
	3402, 0, 0, 0, 5257, 5264, 5268, 5265, 0, 0,
	5263, 5269, 5260, 5261, 5267, 0, 5262, 0, 0, 0,
	3296, 0, 5266, 5230, 0, 0, 5273, 1429, 5274, 5276,
	5275, 5272, 0, 5281, 5279, 5277, 0, 5278, 0, 5284,
	0, 0, 0, 0, 0, 0, 0, 1225, 744, 3531,
	3296, 5288, 0, 5290, 5281, 5285, 5292, 0, 0, 4503,
	0, 4503, 0, 5287, 0, 5254, 5255, 0, 0, 287,
	0, 287, 0, 0, 0, 287, 1632, 1632, 1632, 1632,
	0, 2896, 2896, 0, 0, 0, 0, 0, 1653, 1413,
	1423, 287, 0, 287, 2137, 0, 0, 0, 0, 0,
	2165, 287, 0, 760, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 1620, 0, 0, 0, 0,
	2291, 1934, 1935, 5289, 2206, 2292, 0, 0, 0, 1589,
	1987, 0, 0, 2456, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 287, 0, 1965, 3919, 0, 0, 0,
	0, 0, 0, 1937, 0, 1677, 0, 0, 0, 3917,
	1934, 1935, 1589, 1967, 1968, 1969, 1978, 1979, 1980, 3910,
	0, 0, 0, 0, 0, 0, 831, 1589, 0, 0,
	1990, 1342, 0, 1342, 1965, 2156, 0, 0, 0, 1936,
	0, 1344, 1937, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 1589, 0, 0, 0, 1755, 0, 0,
	0, 0, 3532, 0, 838, 0, 838, 5128, 0, 1990,
	5130, 0, 0, 1770, 4929, 0, 838, 838, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 2293, 1187, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 4943, 0, 1187, 3921, 0, 0, 0,
	2297, 0, 0, 2896, 2896, 2896, 2896, 0, 0, 0,
	0, 0, 0, 3912, 0, 0, 0, 0, 0, 4972,
	0, 0, 0, 1800, 0, 0, 0, 0, 3911, 0,
	2156, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 2587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3441, 3442,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	2291, 0, 0, 0, 0, 2292, 1942, 0, 0, 2294,
	2299, 0, 0, 0, 0, 3920, 0, 0, 0, 0,
	1964, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 3527, 3528, 3529, 0, 0, 0, 0, 3526, 3524,
	3525, 3517, 3518, 3519, 3520, 3522, 3523, 287, 0, 1975,
	0, 287, 1985, 0, 0, 0, 3908, 0, 0, 1964,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5256, 0, 0, 1981, 0, 1982, 1957,
	0, 0, 0, 0, 0, 1951, 1952, 0, 5064, 0,
	0, 5065, 0, 0, 0, 2295, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 287, 0,
	1589, 0, 287, 0, 0, 0, 0, 287, 1957, 0,
	2156, 0, 2293, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	2297, 287, 0, 0, 3719, 744, 0, 287, 2302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	1987, 4108, 0, 976, 0, 0, 0, 1983, 0, 0,
	3539, 3540, 3541, 3542, 0, 0, 0, 0, 0, 0,
	0, 3918, 3913, 3914, 3915, 3916, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 1413, 287, 0, 0, 1987,
	0, 0, 0, 0, 0, 3717, 0, 0, 0, 0,
	2300, 831, 0, 0, 0, 0, 4109, 0, 287, 2294,
	2299, 3922, 0, 0, 1934, 1935, 2539, 0, 0, 0,
	0, 287, 287, 0, 287, 1418, 287, 0, 287, 0,
	287, 0, 1958, 4110, 0, 4107, 0, 0, 1965, 3718,
	0, 0, 1589, 0, 4118, 1589, 1937, 0, 1963, 0,
	4116, 0, 0, 0, 0, 2576, 0, 0, 2577, 0,
	2578, 0, 0, 0, 0, 0, 1632, 1632, 0, 0,
	0, 1958, 0, 1990, 1418, 287, 287, 287, 287, 0,
	0, 0, 1936, 0, 0, 4117, 0, 0, 0, 0,
	4113, 0, 0, 1956, 1989, 2295, 0, 0, 0, 1976,
	0, 0, 1953, 0, 0, 811, 1418, 1418, 0, 831,
	0, 0, 0, 0, 0, 4114, 0, 0, 0, 0,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 0,
	0, 2296, 0, 1989, 0, 0, 0, 0, 0, 0,
	1589, 0, 0, 0, 2289, 0, 0, 0, 2302, 0,
	0, 0, 0, 0, 0, 0, 1632, 1632, 1632, 1632,
	1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632,
	1632, 1632, 1632, 1632, 1632, 1632, 0, 1632, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 2734, 0, 0, 2287, 0, 0, 0, 1974,
	2300, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 4111, 2288,
	1612, 0, 0, 2896, 2896, 0, 4112, 0, 0, 0,
	0, 78, 0, 3515, 3516, 0, 3533, 3534, 3535, 1951,
	1952, 0, 0, 0, 744, 1589, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 4375, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 84, 0, 744, 0,
	0, 0, 1957, 0, 0, 287, 0, 744, 0, 0,
	4115, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 287,
	1423, 2296, 3530, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 0, 2896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 970, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 287, 1423,
	0, 51, 760, 114, 760, 0, 0, 0, 3018, 98,
	111, 78, 0, 0, 287, 0, 0, 287, 0, 0,
	0, 287, 0, 287, 0, 0, 1612, 0, 1413, 79,
	287, 287, 0, 1423, 1423, 3034, 0, 1418, 0, 0,
	287, 0, 0, 0, 0, 0, 84, 0, 0, 3521,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 2486,
	0, 0, 0, 0, 0, 0, 0, 3515, 3516, 0,
	3533, 3534, 3535, 99, 0, 1958, 0, 2500, 2502, 0,
	0, 0, 0, 0, 838, 838, 0, 92, 838, 838,
	3982, 2506, 1612, 0, 1612, 0, 0, 3077, 0, 0,
	3973, 3974, 0, 0, 0, 0, 2518, 2519, 2520, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3537,
	0, 0, 0, 287, 0, 0, 0, 0, 970, 0,
	0, 0, 0, 0, 0, 0, 287, 1989, 0, 0,
	0, 0, 0, 114, 0, 0, 3530, 831, 0, 98,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3531, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 3175, 1653,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046,
	4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056,
	1589, 4060, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 3235, 0, 103, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 1589, 1987, 3521, 0, 0, 0, 0, 0, 0,
	0, 0, 1653, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3077, 0, 744, 198, 106, 0, 0,
	110, 0, 0, 0, 3175, 976, 3077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3537, 0, 0, 0, 251, 287, 0,
	0, 0, 0, 0, 3532, 971, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 287, 1413,
	287, 0, 0, 0, 0, 0, 0, 2993, 0, 0,
	3354, 287, 0, 0, 1413, 3531, 1413, 0, 1413, 0,
	0, 0, 0, 1589, 1589, 0, 1589, 103, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 287, 287, 287, 287, 1413,
	0, 203, 1413, 0, 0, 287, 0, 0, 0, 252,
	287, 0, 0, 0, 0, 0, 198, 106, 0, 1187,
	110, 0, 0, 0, 245, 0, 1987, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 199, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 251, 0, 287,
	0, 0, 0, 0, 0, 971, 0, 0, 0, 0,
	158, 0, 202, 3527, 3528, 3529, 0, 1589, 0, 0,
	3526, 3524, 3525, 3517, 3518, 3519, 3520, 3522, 3523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3532, 1612,
	1612, 0, 0, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1965,
	0, 203, 0, 0, 0, 0, 0, 1937, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 1589, 0, 246, 1990, 1653, 0, 199, 0, 0,
	0, 0, 0, 1936, 1934, 1935, 0, 0, 1612, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 202, 1953, 0, 0, 0, 0, 1965, 0,
	2456, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 1632,
	0, 0, 1936, 0, 0, 0, 1589, 3527, 3528, 3529,
	0, 0, 0, 0, 3526, 3524, 3525, 3517, 3518, 3519,
	3520, 3522, 3523, 0, 0, 0, 0, 0, 0, 0,
	3179, 1959, 1960, 1961, 1962, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 1975, 0, 287, 1985, 0, 0,
	0, 744, 0, 0, 1964, 1966, 744, 1589, 0, 744,
	0, 0, 744, 744, 0, 0, 0, 1418, 744, 0,
	1942, 1981, 0, 1982, 0, 0, 287, 0, 0, 0,
	1951, 1952, 1934, 1935, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 1187, 1965, 0, 0, 3324,
	0, 0, 0, 1957, 1937, 0, 0, 0, 0, 0,
	3331, 0, 0, 1964, 1966, 0, 0, 0, 0, 287,
	0, 1589, 0, 287, 287, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 2896, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1983, 0, 0, 0, 0, 3077, 3077, 287,
	0, 3675, 3678, 0, 1612, 0, 0, 0, 3077, 0,
	2137, 0, 1957, 1972, 0, 0, 0, 0, 0, 3077,
	2137, 0, 3077, 2137, 1987, 1589, 2137, 0, 0, 3675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 287, 3678, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 2896, 0, 0,
	0, 0, 3678, 0, 287, 0, 3750, 0, 3750, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 1963, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 1987, 0, 0, 3077, 0, 3077, 0,
	3781, 3077, 3678, 0, 0, 3077, 1958, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3678,
	0, 0, 831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 1976, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 287,
	0, 3825, 0, 0, 0, 3827, 3077, 0, 0, 287,
	0, 0, 287, 0, 0, 3856, 1423, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 4676, 0, 0, 3279, 0, 0, 1413,
	0, 287, 0, 0, 3077, 0, 744, 0, 0, 0,
	0, 0, 0, 3077, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 2896, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 1934, 1935, 0, 3490, 0, 0, 0,
	3491, 1987, 0, 0, 3939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4728, 2896, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 3946, 0, 0,
	0, 1653, 0, 0, 0, 1413, 287, 0, 287, 0,
	2896, 0, 0, 0, 1413, 0, 0, 1413, 0, 0,
	0, 1187, 1990, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	1963, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 287, 0, 0, 0,
	0, 1953, 0, 1958, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1971,
	1965, 0, 0, 0, 84, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 4015, 0, 0, 3976, 1984, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 1936, 92, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	4869, 2456, 0, 0, 0, 0, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 114, 1964, 1966, 0, 0, 0, 98, 111, 0,
	0, 287, 287, 0, 0, 0, 0, 0, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 1951, 1952,
	0, 0, 4899, 0, 0, 0, 744, 744, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 4921, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 287, 0,
	3515, 3516, 0, 3533, 3534, 3535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 1985, 0,
	0, 0, 0, 3981, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 1973,
	0, 3799, 0, 0, 0, 0, 0, 0, 0, 3530,
	0, 831, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3824,
	0, 0, 0, 0, 0, 0, 0, 4211, 0, 0,
	4213, 4214, 3853, 0, 0, 0, 0, 3750, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 103, 3175, 0, 0, 0,
	0, 0, 0, 1970, 1972, 0, 0, 0, 0, 0,
	0, 3678, 3900, 287, 0, 1987, 0, 760, 760, 1423,
	0, 0, 0, 0, 3924, 0, 3521, 0, 0, 0,
	0, 1418, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 3279, 0, 0, 3279, 2137, 0,
	0, 0, 0, 287, 198, 106, 1989, 0, 110, 0,
	3856, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	287, 0, 0, 0, 1963, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 971, 3077, 287, 3537, 1958, 158, 0,
	0, 2456, 0, 0, 3175, 0, 0, 976, 3077, 0,
	1934, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 1418, 0,
	0, 0, 0, 0, 1965, 0, 253, 0, 3531, 287,
	0, 0, 1937, 3678, 0, 0, 3034, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 1989,
	0, 0, 0, 163, 0, 0, 0, 0, 78, 1990,
	0, 0, 0, 1970, 0, 0, 0, 0, 1936, 203,
	0, 0, 0, 0, 0, 0, 79, 252, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 84, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 199, 0, 0, 0, 1987,
	4394, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 1970, 0, 0, 1974, 0, 0, 1970, 0,
	1752, 0, 0, 0, 92, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 2777, 0, 0,
	0, 2778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 970, 1942, 0, 0, 1653,
	0, 287, 0, 0, 0, 0, 0, 0, 51, 0,
	114, 3532, 0, 0, 0, 287, 98, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1423, 0, 0, 0, 1970, 0, 0, 0, 0, 1964,
	1966, 0, 0, 1423, 0, 287, 1423, 0, 1970, 0,
	0, 0, 0, 1970, 0, 0, 0, 3077, 3077, 0,
	3675, 0, 0, 3750, 3077, 0, 0, 0, 0, 0,
	99, 0, 4505, 0, 4505, 1653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3077, 0, 2137, 0,
	0, 0, 3675, 0, 1653, 1653, 287, 3678, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3678, 0, 287, 3678, 0, 287, 1934, 1935, 3750, 1970,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3077,
	1965, 3077, 287, 0, 0, 0, 0, 0, 1937, 0,
	3527, 3528, 3529, 0, 0, 0, 0, 3526, 3524, 3525,
	3517, 3518, 3519, 3520, 3522, 3523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1987,
	0, 3077, 3077, 0, 1936, 0, 0, 3279, 3279, 0,
	0, 0, 0, 0, 3675, 0, 4239, 4240, 0, 0,
	0, 0, 0, 4242, 287, 0, 4243, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 1958, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 198, 106, 0, 0, 110, 0, 0,
	0, 0, 1942, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 4328, 0, 0, 0, 0, 2500,
	4334, 4335, 0, 92, 251, 0, 0, 0, 0, 0,
	0, 0, 971, 1989, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2900, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 970, 1970, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 253, 0, 0, 0, 114,
	0, 0, 0, 0, 1418, 98, 111, 0, 0, 0,
	0, 0, 0, 0, 3077, 2137, 0, 2137, 0, 0,
	3856, 0, 163, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 1957, 1934, 1935, 0, 203, 4744,
	0, 4744, 0, 0, 0, 0, 252, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 1965,
	0, 245, 0, 0, 0, 0, 831, 1937, 0, 99,
	246, 0, 0, 0, 199, 0, 0, 3750, 1653, 0,
	1653, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1750,
	3678, 0, 287, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1987, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 3856,
	0, 0, 4505, 0, 0, 1653, 0, 0, 0, 3077,
	0, 0, 0, 0, 0, 4438, 4439, 0, 0, 0,
	0, 0, 0, 0, 4832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1221, 3971,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 0, 1958, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 4015, 0,
	0, 0, 0, 103, 0, 0, 286, 286, 286, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3750,
	4890, 0, 0, 1965, 0, 0, 0, 3856, 901, 1989,
	0, 1937, 0, 0, 1964, 1966, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 4505, 0, 0,
	0, 0, 198, 106, 0, 901, 110, 0, 1990, 0,
	1951, 1952, 4505, 0, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 2500, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 251, 0, 0, 0, 1953, 287, 0,
	0, 971, 0, 1957, 0, 0, 158, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4505,
	4505, 0, 0, 0, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 253, 0, 0, 4505, 0, 287,
	4505, 0, 0, 4641, 0, 4643, 4644, 4645, 0, 4647,
	2137, 0, 0, 0, 0, 0, 0, 0, 1172, 0,
	0, 163, 1653, 0, 1653, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 1987, 1942, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	245, 0, 1345, 0, 0, 0, 0, 5015, 0, 246,
	0, 0, 0, 199, 0, 0, 0, 0, 1975, 0,
	0, 1985, 0, 4744, 0, 0, 287, 0, 1964, 1966,
	0, 0, 0, 1963, 1970, 0, 0, 0, 202, 0,
	0, 0, 4696, 0, 0, 0, 0, 0, 0, 0,
	0, 3077, 0, 0, 1951, 1952, 1958, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 4015, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	1653, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 0, 1987, 0,
	0, 0, 1970, 0, 1970, 1970, 1970, 1970, 0, 0,
	4798, 0, 0, 0, 0, 0, 2900, 2900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 3515, 3516, 3856, 3533, 3534, 3535, 0, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3077, 0, 0, 0, 0, 0,
	1958, 0, 1970, 0, 4505, 0, 4505, 0, 0, 1653,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 3530, 1970, 0, 0, 1970, 1971, 1965, 1970, 0,
	0, 1970, 0, 0, 0, 1937, 0, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 0, 1984, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	3077, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 3175, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	3077, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 3175, 0, 3536, 0, 2900, 2900,
	2900, 2900, 0, 0, 1970, 0, 1970, 0, 3521, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 3537, 0,
	0, 0, 0, 2500, 0, 0, 0, 0, 0, 0,
	0, 0, 3205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 1985, 0, 0, 0, 0,
	3531, 0, 1964, 1966, 0, 0, 3195, 3193, 0, 0,
	0, 0, 0, 3197, 3199, 3189, 0, 0, 0, 1981,
	0, 1982, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 286, 0, 286, 286, 0, 3215, 286, 0, 0,
	0, 1957, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 1172, 1172, 0, 878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 286,
	286, 1972, 0, 286, 286, 0, 0, 0, 1602, 0,
	879, 0, 1987, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 0, 0,
	0, 0, 0, 3532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 1661, 0, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 0,
	888, 1963, 3191, 0, 0, 0, 286, 286, 0, 0,
	0, 0, 0, 3207, 877, 0, 0, 0, 0, 1970,
	1970, 0, 1970, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 286, 286, 0, 0, 0, 3206, 3196, 3194,
	3198, 3200, 3190, 3192, 3208, 3210, 1758, 0, 1763, 0,
	0, 0, 1976, 0, 0, 3202, 3204, 3212, 0, 0,
	0, 0, 1777, 0, 1782, 0, 0, 876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 0, 1989, 0, 0, 0,
	0, 3216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 3527, 3528, 3529, 0, 0, 0, 0, 3526,
	3524, 3525, 3517, 3518, 3519, 3520, 3522, 3523, 0, 0,
	0, 0, 0, 1848, 0, 0, 1854, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 286, 0, 0, 0,
	887, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4400, 0,
	0, 0, 0, 0, 0, 1970, 1970, 0, 2900, 2900,
	3209, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3536, 3536, 0, 0, 1970, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 0, 0,
	1970, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 2024,
	0, 3217, 0, 0, 0, 873, 0, 0, 0, 0,
	3201, 3203, 3211, 0, 0, 0, 0, 0, 2900, 2900,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 0, 2900,
	3536, 3536, 3536, 3536, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	883, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 0, 2084, 2084, 2084, 0, 0,
	0, 1937, 2106, 0, 1345, 0, 868, 0, 286, 0,
	0, 1984, 881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 2106, 286, 0, 1990, 0,
	0, 0, 0, 0, 901, 875, 0, 1936, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 0, 1956, 0,
	807, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 886, 0, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 1172, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 1970, 0, 0, 2871,
	2872, 2873, 2874, 2867, 2868, 2869, 2870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 2847, 2848, 2849, 2850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2859, 2860, 2861,
	2862, 2855, 2856, 2857, 2858, 2863, 2864, 2865, 2866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	286, 0, 0, 0, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2843, 2844, 2845, 2846, 2851, 2852, 2853, 2854, 0, 1970,
	1970, 0, 0, 1970, 3536, 3536, 1970, 0, 0, 0,
	1970, 286, 0, 0, 0, 286, 0, 1970, 0, 0,
	286, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 286, 0, 286, 0, 0, 0, 0, 0,
	286, 0, 0, 1970, 1970, 1970, 1970, 1970, 0, 0,
	1958, 0, 0, 1970, 0, 1970, 0, 0, 3536, 3536,
	3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536,
	3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 1976, 0,
	0, 3536, 0, 0, 1970, 1970, 286, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 286, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 901, 286, 0, 286, 0, 286,
	0, 286, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 286,
	286, 286, 0, 0, 0, 0, 1970, 0, 1974, 0,
	2592, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 3984, 0, 0, 2633, 0, 2637,
	0, 0, 0, 0, 0, 0, 2651, 0, 0, 0,
	0, 1970, 1970, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 0,
	2701, 0, 2703, 2704, 2705, 2706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 2781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2811, 2814, 2817, 2820, 0, 1970, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 2892, 0, 2903, 2905, 2910, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 1345, 1970, 1970, 0, 0, 0, 1970, 1970,
	0, 0, 1970, 1970, 0, 0, 0, 1970, 1345, 0,
	0, 1970, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 286, 0, 1349, 0, 0, 0, 0, 0,
	0, 2900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	286, 0, 2900, 0, 286, 0, 286, 0, 0, 0,
	0, 0, 0, 286, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	1970, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 282, 740, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 286,
	0, 0, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	286, 0, 0, 0, 1970, 1970, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 1970, 3536, 2900, 0,
	0, 0, 0, 0, 1970, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3238, 3239,
	0, 3241, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 286, 3536,
	2900, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 1970, 2900, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 0, 1970, 0, 1970, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 286, 0, 286, 0, 0, 0, 1349, 0, 1349,
	0, 1973, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3365, 0, 1934, 1935, 0, 2169, 0, 0, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3536, 0, 0, 0, 0, 0, 1965, 0, 286, 286,
	286, 286, 0, 0, 1937, 1983, 0, 0, 286, 0,
	0, 0, 0, 286, 1984, 0, 0, 0, 0, 1970,
	3536, 0, 0, 1970, 0, 0, 1972, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 1987, 0, 0,
	1936, 0, 3536, 0, 286, 1991, 1992, 0, 0, 0,
	0, 1956, 286, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 3424, 3425, 0, 0, 0, 0, 3431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 3445, 3446, 0, 0,
	0, 0, 2781, 0, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 1976, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3455, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 3469, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	3481, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 1973, 0, 1349, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1349, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2910, 2910, 2910, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 1934, 1935, 0, 3574, 0, 0, 1345,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1349, 1965, 1349, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 2106,
	1970, 0, 0, 0, 0, 0, 1349, 1349, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	1963, 1936, 1349, 0, 0, 1349, 1349, 1349, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 286, 1958, 0, 0, 286, 286, 0, 0,
	1399, 0, 1399, 1399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3970, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3708, 0, 1959,
	1960, 1961, 1962, 0, 286, 286, 1500, 0, 286, 1942,
	0, 0, 1610, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2169, 2169,
	1349, 0, 0, 0, 0, 0, 774, 0, 0, 0,
	0, 775, 0, 3764, 3765, 0, 0, 0, 0, 0,
	0, 1974, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 1951, 1952,
	0, 0, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 777, 0, 0, 0, 0, 0, 0,
	0, 1756, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 286, 778, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 0, 0, 0, 797, 0, 0,
	0, 0, 286, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 780, 0, 0, 0, 1349, 0, 0,
	0, 0, 1987, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 781, 0, 0, 0,
	1878, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 286, 0, 0, 1958, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 286,
	1937, 2651, 0, 0, 793, 0, 0, 3968, 3969, 0,
	1984, 3972, 0, 0, 0, 3975, 0, 0, 0, 0,
	0, 0, 0, 0, 3979, 0, 1989, 1990, 0, 0,
	0, 0, 0, 3986, 0, 0, 1936, 0, 3574, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 3999, 0, 1349, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4022, 4023, 0, 4024, 4025, 4026, 0,
	0, 803, 0, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4032, 0, 0, 0, 4034, 0,
	0, 0, 0, 0, 2169, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 785, 0, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 4063, 4064, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 4075,
	0, 0, 0, 1349, 1345, 1345, 0, 2122, 805, 0,
	0, 0, 0, 0, 4084, 0, 786, 0, 0, 1349,
	0, 801, 802, 2132, 799, 1610, 0, 0, 0, 0,
	794, 0, 0, 787, 0, 0, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 1399, 0,
	0, 901, 0, 1951, 1952, 1610, 0, 0, 788, 0,
	795, 0, 0, 1934, 1935, 0, 0, 0, 0, 789,
	0, 1973, 0, 0, 0, 0, 0, 4147, 0, 0,
	0, 0, 0, 0, 790, 0, 1957, 1965, 0, 798,
	0, 0, 0, 0, 0, 1937, 0, 1349, 0, 0,
	0, 0, 0, 0, 807, 4165, 0, 0, 0, 0,
	1349, 0, 1349, 0, 0, 792, 0, 0, 1349, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 1349,
	1349, 1936, 0, 0, 0, 1983, 0, 0, 0, 4196,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4220, 4221, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 286, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 286, 0, 0, 0, 1976, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1966, 0, 0, 2084, 0, 1345, 0,
	0, 0, 0, 0, 0, 4324, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	2443, 1957, 0, 0, 2450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 0, 2474, 0, 4372, 4373, 1974, 0, 2481,
	0, 4377, 4378, 0, 0, 0, 4381, 4382, 1948, 1949,
	1955, 1977, 1954, 1950, 4386, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 4390, 0, 0, 0, 0,
	0, 0, 0, 3492, 0, 0, 0, 0, 0, 0,
	0, 4395, 1987, 1210, 116, 2450, 0, 0, 2510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2547, 0, 2549, 0, 2551, 0,
	2553, 0, 2554, 0, 0, 0, 1345, 0, 0, 0,
	0, 1963, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2583, 2584, 2585,
	0, 0, 116, 0, 0, 0, 0, 0, 1349, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 1349, 0, 0, 2106, 1989, 2106, 1234, 0,
	0, 0, 0, 0, 1349, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2169,
	0, 0, 0, 1349, 0, 286, 0, 0, 286, 0,
	0, 0, 0, 0, 1146, 0, 288, 288, 288, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 4549, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 288, 0, 1332, 0, 2169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	1349, 2969, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 4663,
	4664, 4665, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2651, 0, 0, 4674, 4675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 4683, 4686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1349, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 3020, 0, 1349, 1399,
	0, 0, 0, 1399, 0, 1399, 0, 0, 0, 0,
	0, 1349, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 2462, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4745,
	0, 1349, 0, 0, 0, 0, 0, 1975, 4753, 0,
	1985, 0, 0, 1349, 0, 1349, 0, 1964, 1966, 0,
	0, 0, 0, 4761, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 4772, 1951, 1952, 4774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 1349, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2450, 2450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 2169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 286, 286, 0,
	0, 0, 0, 1349, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 3258, 0, 0,
	2169, 2169, 0, 0, 0, 2462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2169,
	2169, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 4898, 0, 0, 0, 4902, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	3329, 0, 2169, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3341, 0, 3344, 0, 0, 0, 0, 1976, 0, 1349,
	1349, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 2106, 2106, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	2106, 0, 286, 2106, 0, 0, 0, 3383, 1610, 3385,
	1610, 0, 0, 0, 0, 0, 0, 3392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2651, 0, 0, 0, 0, 0, 0, 0, 0,
	4686, 0, 0, 1399, 0, 0, 0, 1974, 0, 0,
	0, 3421, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 3489, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 116, 0, 116, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 288, 288, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	116, 116, 0, 0, 0, 1349, 1349, 0, 1349, 5092,
	5092, 5092, 1349, 0, 0, 1349, 116, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 0, 116, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2169, 5117, 288, 1509, 288,
	288, 0, 1965, 288, 288, 0, 0, 0, 0, 1509,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1349,
	0, 292, 0, 0, 0, 0, 1936, 0, 0, 1509,
	116, 0, 0, 1349, 5092, 0, 0, 1956, 0, 0,
	0, 0, 0, 1349, 0, 0, 1953, 0, 1349, 1349,
	1349, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 1349, 1509, 0, 0, 0, 1349, 0,
	1349, 1509, 288, 288, 0, 0, 0, 2106, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 893, 3423, 0, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 0, 1959, 1960, 1961, 1962, 893, 0,
	0, 0, 0, 1146, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 1509, 0, 0,
	3622, 0, 0, 0, 5092, 5249, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1399, 0, 0, 0, 1610, 1610, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 288, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 1349, 1349, 0, 1349, 0, 0, 0,
	0, 3671, 0, 1349, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 1349, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 1349, 0, 78, 0, 48, 47,
	0, 0, 0, 3727, 3729, 0, 0, 2462, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 2104, 164, 2107,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 84, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 1987, 0, 50,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	49, 0, 92, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	70, 0, 0, 0, 0, 0, 1963, 0, 53, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 114, 1958,
	0, 0, 1349, 1349, 98, 111, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 3849, 0, 0, 2450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 1349, 0, 0, 0, 0, 1349, 0, 54, 1509,
	0, 0, 0, 0, 288, 288, 288, 0, 0, 0,
	0, 1989, 0, 0, 288, 0, 0, 0, 99, 0,
	0, 288, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 72, 0, 2169, 3952, 0,
	1610, 0, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 1349,
	0, 1349, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 0, 0, 0, 0, 3966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 774, 0, 0, 0, 0, 775,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 1226, 0, 0, 0, 0, 0, 0,
	776, 0, 2169, 0, 0, 0, 0, 58, 0, 0,
	0, 777, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	60, 198, 106, 778, 0, 110, 0, 0, 0, 56,
	0, 1349, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 0, 1167, 797, 1167, 0, 0, 1349,
	1349, 1349, 251, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 158, 779, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 165, 1509, 1509, 288, 0, 0, 0, 0, 0,
	0, 780, 0, 1509, 0, 1349, 0, 0, 1349, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 0, 0, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 806, 0, 0, 0,
	116, 288, 0, 0, 0, 288, 203, 0, 0, 0,
	288, 0, 2169, 0, 252, 0, 288, 0, 0, 0,
	0, 0, 0, 796, 0, 0, 0, 0, 0, 245,
	0, 0, 288, 0, 288, 0, 0, 0, 246, 0,
	288, 0, 199, 0, 0, 0, 0, 0, 0, 1509,
	0, 1509, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	3, 1509, 1509, 0, 0, 1349, 0, 0, 0, 0,
	1146, 1506, 793, 1146, 1146, 1509, 288, 0, 0, 288,
	1349, 0, 1628, 0, 0, 0, 0, 1509, 0, 0,
	1509, 1509, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 288, 0, 288, 0, 288,
	0, 288, 1628, 288, 0, 0, 0, 0, 0, 2719,
	0, 0, 0, 0, 0, 0, 0, 1349, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 784, 0, 0, 0, 1349, 0, 0, 1349, 2010,
	0, 0, 1349, 2010, 0, 2462, 0, 1628, 288, 288,
	288, 288, 1349, 0, 1628, 0, 0, 0, 0, 0,
	0, 804, 0, 785, 2462, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 4279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2462, 0, 0, 1509, 805, 4306, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 1332, 0, 801,
	802, 0, 799, 0, 0, 0, 0, 0, 794, 0,
	1628, 787, 0, 2107, 0, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4352, 0, 116, 0, 0, 788, 0, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 790, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 1349, 0, 1349, 1984, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 288, 0, 0,
	288, 1936, 0, 0, 288, 0, 288, 0, 0, 0,
	0, 0, 1956, 288, 288, 0, 0, 0, 0, 0,
	0, 1953, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4525, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 2462, 0, 116, 893, 0, 116,
	0, 116, 0, 0, 893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 288, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 288,
	116, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 1985, 2462, 288, 1509, 0,
	0, 0, 1964, 1966, 0, 0, 4620, 0, 0, 288,
	288, 0, 0, 0, 1509, 0, 1506, 0, 0, 1981,
	0, 1982, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 116, 0, 1973, 288, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 1509, 0, 0,
	0, 1972, 0, 1509, 0, 0, 0, 0, 0, 1629,
	0, 288, 1987, 0, 1509, 1509, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 921, 0, 0, 0,
	0, 288, 1629, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 923, 0, 0,
	0, 0, 924, 0, 2719, 1628, 1628, 0, 0, 0,
	0, 4730, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 1963, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 925, 1958, 942, 0, 0, 288, 288,
	288, 288, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 926, 1976, 0, 0, 0, 927, 0, 0, 0,
	0, 0, 0, 0, 2462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 950, 0,
	0, 0, 288, 0, 0, 928, 1989, 0, 0, 0,
	0, 0, 1628, 0, 1628, 0, 1628, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 1628, 1628, 1628, 0, 929, 0, 0,
	0, 0, 930, 0, 0, 0, 4859, 1610, 0, 0,
	0, 0, 1974, 0, 952, 0, 0, 893, 0, 806,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 1507, 0, 0, 0, 0, 0,
	0, 4975, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 116, 0, 116, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 805,
	0, 288, 0, 0, 0, 0, 0, 0, 5029, 0,
	0, 0, 920, 0, 0, 943, 0, 0, 1509, 0,
	0, 0, 0, 0, 935, 116, 116, 0, 116, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 288, 0, 0, 0, 288, 288, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 5072, 0, 0, 0, 936,
	0, 0, 0, 937, 955, 0, 954, 0, 0, 0,
	938, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 956, 0, 953, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 288, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 1167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 116, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 1509,
	0, 1509, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 288, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 288, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 1629, 1509, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 1629, 1629, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 288,
	1509, 288, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1965, 1628, 0,
	1628, 116, 0, 0, 0, 1937, 1628, 0, 0, 288,
	0, 0, 0, 0, 0, 1984, 0, 1628, 1628, 1332,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 1509, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 1985, 0, 0, 0, 0,
	1509, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 1982, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 288, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	1509, 1509, 0, 1509, 0, 0, 0, 1509, 0, 0,
	1509, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 1963, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 288, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 1976, 288, 0, 0, 0, 0, 288, 0,
	1506, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 1509, 0,
	0, 0, 0, 1509, 1509, 1509, 0, 0, 0, 0,
	0, 1506, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 1509, 0, 1509, 1629,
	0, 1332, 288, 1509, 0, 1509, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 3487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 0, 0, 0, 1629, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1984, 1629, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 1629,
	1629, 0, 0, 0, 0, 0, 0, 1936, 1506, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1509, 1509,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 116,
	0, 0, 1628, 0, 1628, 0, 0, 0, 1506, 0,
	0, 116, 0, 0, 0, 893, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 1628,
	0, 0, 0, 0, 116, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 288, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 1628,
	0, 1985, 0, 0, 0, 1509, 0, 0, 1964, 1966,
	0, 1628, 0, 1628, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 1509, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	1506, 0, 0, 1506, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 288, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 1509, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 2719, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 1509, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	1509, 0, 0, 1509, 2778, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 288, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1628, 1628, 0, 1628, 0, 0, 0,
	1628, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 0, 0, 0,
	1507, 288, 0, 0, 0, 0, 0, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 1628, 1628, 1628, 0,
	0, 116, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1509, 0, 1628,
	0, 1628, 0, 0, 0, 0, 1628, 1509, 1506, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 1507, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1506, 1506, 1507, 1506, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	1507, 0, 1628, 1628, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 1628, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 1628, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 1628, 1628, 1628, 1628, 1628, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1629, 0, 1629, 0,
	0, 0, 1629, 0, 0, 1629, 0, 1506, 0, 1628,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1984, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 1976, 1936, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 1629, 1629,
	1629, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1629, 0, 1629, 0, 0, 0, 0, 1629, 0,
	1507, 0, 0, 0, 0, 0, 0, 1628, 1628, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 1974, 0, 0,
	0, 0, 0, 1506, 0, 0, 1628, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 5016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 1982, 0,
	0, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1507, 0, 1507, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1934, 1935,
	1628, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1971, 1965, 0, 0, 0, 0, 0, 1963, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 1629, 1629, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 1976,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 1975, 0, 0,
	1985, 5012, 0, 0, 0, 0, 0, 1964, 1966, 1507,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 1629,
	1629, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4917,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 1510, 304,
	305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517,
	306, 1518, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 1519,
	691, 318, 319, 320, 321, 322, 323, 1520, 1521, 0,
	324, 692, 693, 694, 1522, 325, 326, 695, 1523, 1590,
	1524, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1525, 336, 337, 338, 335, 339, 1526, 340, 1629, 341,
	342, 343, 344, 345, 346, 1527, 347, 348, 349, 1289,
	350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	1535, 363, 359, 361, 1536, 364, 362, 365, 1537, 366,
	367, 368, 1538, 1539, 369, 370, 371, 1540, 372, 373,
	374, 1541, 375, 376, 377, 1542, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 1543, 293, 1544, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 1545, 396,
	397, 398, 1546, 399, 400, 1547, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1548, 413, 704, 1549, 705, 414, 1550, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 1551, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 1552, 1291, 511, 432, 709,
	710, 1553, 711, 1554, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1555, 445, 447, 446, 1556, 448, 713,
	1296, 449, 450, 1297, 1557, 451, 452, 453, 454, 455,
	456, 459, 1558, 1559, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1560, 295, 1300, 505, 506,
	507, 508, 1561, 714, 509, 715, 512, 513, 1562, 0,
	514, 0, 515, 1563, 1564, 517, 518, 519, 1565, 1566,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 1567,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 1568, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 1569, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 1570,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 1571, 604, 605, 603, 606,
	607, 608, 1572, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	1573, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	1574, 639, 640, 0, 635, 626, 1575, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 1576, 649, 727, 728,
	729, 730, 1577, 659, 1578, 650, 651, 652, 653, 731,
	654, 732, 1579, 655, 656, 657, 658, 0, 660, 661,
	1580, 1581, 662, 663, 665, 667, 668, 664, 666, 669,
	1582, 670, 1583, 0, 671, 672, 673, 733, 734, 735,
	1584, 675, 674, 676, 677, 678, 736, 679, 680, 1585,
	1586, 1587, 1588, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 2947, 0,
	0, 0, 0, 0, 0, 0, 2948, 296, 297, 299,
	298, 300, 301, 302, 303, 1510, 304, 305, 1511, 1512,
	1513, 0, 1514, 686, 1515, 1516, 1517, 306, 1518, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1519, 691, 318, 319,
	320, 321, 322, 323, 1520, 1521, 0, 324, 692, 693,
	694, 1522, 325, 326, 695, 1523, 1590, 1524, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1525, 336, 337,
	338, 335, 339, 1526, 340, 0, 341, 342, 343, 344,
	345, 346, 1527, 347, 348, 349, 1289, 350, 351, 352,
	1528, 1529, 1531, 1530, 1532, 1533, 1534, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1535, 363, 359,
	361, 1536, 364, 362, 365, 1537, 366, 367, 368, 1538,
	1539, 369, 370, 371, 1540, 372, 373, 374, 1541, 375,
	376, 377, 1542, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1543, 293, 1544, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1545, 396, 397, 398, 1546,
	399, 400, 1547, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1548, 413,
	704, 1549, 705, 414, 1550, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 1551,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1552, 1291, 511, 432, 709, 710, 1553, 711,
	1554, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1555, 445, 447, 446, 1556, 448, 713, 1296, 449, 450,
	1297, 1557, 451, 452, 453, 454, 455, 456, 459, 1558,
	1559, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1560, 295, 1300, 505, 506, 507, 508, 1561,
	714, 509, 715, 512, 513, 1562, 0, 514, 0, 515,
	1563, 1564, 517, 518, 519, 1565, 1566, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1567, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1568, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1569, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1570, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1571, 604, 605, 603, 606, 607, 608, 1572,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1573, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1574, 639, 640,
	0, 635, 626, 1575, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1576, 649, 727, 728, 729, 730, 1577,
	659, 1578, 650, 651, 652, 653, 731, 654, 732, 1579,
	655, 656, 657, 658, 0, 660, 661, 1580, 1581, 662,
	663, 665, 667, 668, 664, 666, 669, 1582, 670, 1583,
	0, 671, 672, 673, 733, 734, 735, 1584, 675, 674,
	676, 677, 678, 736, 679, 680, 1585, 1586, 1587, 1588,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 3993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3995, 296, 297, 299, 298, 300, 301, 302, 303,
	1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515,
	1516, 1517, 306, 1518, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1519, 691, 318, 319, 320, 321, 322, 323, 1520,
	1521, 0, 324, 692, 693, 694, 1522, 325, 326, 695,
	1523, 1590, 1524, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1525, 336, 337, 338, 335, 339, 1526, 340,
	0, 341, 342, 343, 344, 345, 346, 1527, 347, 348,
	349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532,
	1533, 1534, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1535, 363, 359, 361, 1536, 364, 362, 365,
	1537, 366, 367, 368, 1538, 1539, 369, 370, 371, 1540,
	372, 373, 374, 1541, 375, 376, 377, 1542, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1543, 293, 1544, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1545, 396, 397, 398, 1546, 399, 400, 1547, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1548, 413, 704, 1549, 705, 414, 1550,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 1551, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1552, 1291, 511,
	432, 709, 710, 1553, 711, 1554, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1555, 445, 447, 446, 1556,
	448, 713, 1296, 449, 450, 1297, 1557, 451, 452, 453,
	454, 455, 456, 459, 1558, 1559, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1560, 295, 1300,
	505, 506, 507, 508, 1561, 714, 509, 715, 512, 513,
	1562, 0, 514, 0, 515, 1563, 1564, 517, 518, 519,
	1565, 1566, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1567, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1568, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1569, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1570, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1571, 604, 605,
	603, 606, 607, 608, 1572, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1573, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1574, 639, 640, 0, 635, 626, 1575, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1576, 649,
	727, 728, 729, 730, 1577, 659, 1578, 650, 651, 652,
	653, 731, 654, 732, 1579, 655, 656, 657, 658, 0,
	660, 661, 1580, 1581, 662, 663, 665, 667, 668, 664,
	666, 669, 1582, 670, 1583, 0, 671, 672, 673, 733,
	734, 735, 1584, 675, 674, 676, 677, 678, 736, 679,
	680, 1585, 1586, 1587, 1588, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4430, 296, 297, 299, 298, 300, 301, 302, 303, 1510,
	304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516,
	1517, 306, 1518, 307, 308, 1288, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	1519, 691, 318, 319, 320, 321, 322, 323, 1520, 1521,
	0, 324, 692, 693, 694, 1522, 325, 326, 695, 1523,
	1590, 1524, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1525, 336, 337, 338, 335, 339, 1526, 340, 0,
	341, 342, 343, 344, 345, 346, 1527, 347, 348, 349,
	1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533,
	1534, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 1535, 363, 359, 361, 1536, 364, 362, 365, 1537,
	366, 367, 368, 1538, 1539, 369, 370, 371, 1540, 372,
	373, 374, 1541, 375, 376, 377, 1542, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 1543, 293, 1544, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 1545,
	396, 397, 398, 1546, 399, 400, 1547, 1290, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1548, 413, 704, 1549, 705, 414, 1550, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1292, 422, 423, 1551, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1552, 1291, 511, 432,
	709, 710, 1553, 711, 1554, 433, 434, 1293, 712, 1294,
	435, 436, 437, 1295, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1555, 445, 447, 446, 1556, 448,
	713, 1296, 449, 450, 1297, 1557, 451, 452, 453, 454,
	455, 456, 459, 1558, 1559, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1298, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1299, 503, 491, 1560, 295, 1300, 505,
	506, 507, 508, 1561, 714, 509, 715, 512, 513, 1562,
	0, 514, 0, 515, 1563, 1564, 517, 518, 519, 1565,
	1566, 520, 521, 716, 1301, 522, 1302, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1567, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 1568, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 1569, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	1570, 578, 579, 580, 1303, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 1571, 604, 605, 603,
	606, 607, 608, 1572, 609, 610, 592, 593, 611, 612,
	1304, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 1573, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 1574, 639, 640, 0, 635, 626, 1575, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 1576, 649, 727,
	728, 729, 730, 1577, 659, 1578, 650, 651, 652, 653,
	731, 654, 732, 1579, 655, 656, 657, 658, 0, 660,
	661, 1580, 1581, 662, 663, 665, 667, 668, 664, 666,
	669, 1582, 670, 1583, 0, 671, 672, 673, 733, 734,
	735, 1584, 675, 674, 676, 677, 678, 736, 679, 680,
	1585, 1586, 1587, 1588, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4428,
	296, 297, 299, 298, 300, 301, 302, 303, 1510, 304,
	305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517,
	306, 1518, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 1519,
	691, 318, 319, 320, 321, 322, 323, 1520, 1521, 0,
	324, 692, 693, 694, 1522, 325, 326, 695, 1523, 1590,
	1524, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1525, 336, 337, 338, 335, 339, 1526, 340, 0, 341,
	342, 343, 344, 345, 346, 1527, 347, 348, 349, 1289,
	350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	1535, 363, 359, 361, 1536, 364, 362, 365, 1537, 366,
	367, 368, 1538, 1539, 369, 370, 371, 1540, 372, 373,
	374, 1541, 375, 376, 377, 1542, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 1543, 293, 1544, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 1545, 396,
	397, 398, 1546, 399, 400, 1547, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1548, 413, 704, 1549, 705, 414, 1550, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 1551, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 1552, 1291, 511, 432, 709,
	710, 1553, 711, 1554, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1555, 445, 447, 446, 1556, 448, 713,
	1296, 449, 450, 1297, 1557, 451, 452, 453, 454, 455,
	456, 459, 1558, 1559, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1560, 295, 1300, 505, 506,
	507, 508, 1561, 714, 509, 715, 512, 513, 1562, 0,
	514, 0, 515, 1563, 1564, 517, 518, 519, 1565, 1566,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 1567,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 1568, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 1569, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 1570,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 1571, 604, 605, 603, 606,
	607, 608, 1572, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	1573, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	1574, 639, 640, 0, 635, 626, 1575, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 1576, 649, 727, 728,
	729, 730, 1577, 659, 1578, 650, 651, 652, 653, 731,
	654, 732, 1579, 655, 656, 657, 658, 0, 660, 661,
	1580, 1581, 662, 663, 665, 667, 668, 664, 666, 669,
	1582, 670, 1583, 0, 671, 672, 673, 733, 734, 735,
	1584, 675, 674, 676, 677, 678, 736, 679, 680, 1585,
	1586, 1587, 1588, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4669, 296, 297, 299, 298, 300, 301, 302,
	303, 1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686,
	1515, 1516, 1517, 306, 1518, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1519, 691, 318, 319, 320, 321, 322, 323,
	1520, 1521, 0, 324, 692, 693, 694, 1522, 325, 326,
	695, 1523, 1590, 1524, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1525, 336, 337, 338, 335, 339, 1526,
	340, 0, 341, 342, 343, 344, 345, 346, 1527, 347,
	348, 349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530,
	1532, 1533, 1534, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1535, 363, 359, 361, 1536, 364, 362,
	365, 1537, 366, 367, 368, 1538, 1539, 369, 370, 371,
	1540, 372, 373, 374, 1541, 375, 376, 377, 1542, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1543, 293, 1544, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1545, 396, 397, 398, 1546, 399, 400, 1547, 1290,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1548, 413, 704, 1549, 705, 414,
	1550, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1292, 422, 423, 1551, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1552, 1291,
	511, 432, 709, 710, 1553, 711, 1554, 433, 434, 1293,
	712, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1555, 445, 447, 446,
	1556, 448, 713, 1296, 449, 450, 1297, 1557, 451, 452,
	453, 454, 455, 456, 459, 1558, 1559, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 1560, 295,
	1300, 505, 506, 507, 508, 1561, 714, 509, 715, 512,
	513, 1562, 0, 514, 0, 515, 1563, 1564, 517, 518,
	519, 1565, 1566, 520, 521, 716, 1301, 522, 1302, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1567, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1568, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1569, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1570, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1571, 604,
	605, 603, 606, 607, 608, 1572, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1573, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1574, 639, 640, 0, 635, 626, 1575,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1576,
	649, 727, 728, 729, 730, 1577, 659, 1578, 650, 651,
	652, 653, 731, 654, 732, 1579, 655, 656, 657, 658,
	0, 660, 661, 1580, 1581, 662, 663, 665, 667, 668,
	664, 666, 669, 1582, 670, 1583, 0, 671, 672, 673,
	733, 734, 735, 1584, 675, 674, 676, 677, 678, 736,
	679, 680, 1585, 1586, 1587, 1588, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4534, 296, 297, 299, 298,
	300, 301, 302, 303, 1510, 304, 305, 1511, 1512, 1513,
	0, 1514, 686, 1515, 1516, 1517, 306, 1518, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 1519, 691, 318, 319, 320,
	321, 322, 323, 1520, 1521, 0, 324, 692, 693, 694,
	1522, 325, 326, 695, 1523, 1590, 1524, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1525, 336, 337, 338,
	335, 339, 1526, 340, 0, 341, 342, 343, 344, 345,
	346, 1527, 347, 348, 349, 1289, 350, 351, 352, 1528,
	1529, 1531, 1530, 1532, 1533, 1534, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 1535, 363, 359, 361,
	1536, 364, 362, 365, 1537, 366, 367, 368, 1538, 1539,
	369, 370, 371, 1540, 372, 373, 374, 1541, 375, 376,
	377, 1542, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 1543,
	293, 1544, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 1545, 396, 397, 398, 1546, 399,
	400, 1547, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 1548, 413, 704,
	1549, 705, 414, 1550, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1292, 422, 423, 1551, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 1552, 1291, 511, 432, 709, 710, 1553, 711, 1554,
	433, 434, 1293, 712, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 1555,
	445, 447, 446, 1556, 448, 713, 1296, 449, 450, 1297,
	1557, 451, 452, 453, 454, 455, 456, 459, 1558, 1559,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1560, 295, 1300, 505, 506, 507, 508, 1561, 714,
	509, 715, 512, 513, 1562, 0, 514, 0, 515, 1563,
	1564, 517, 518, 519, 1565, 1566, 520, 521, 716, 1301,
	522, 1302, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 1567, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 1568, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	1569, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 1570, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 1571, 604, 605, 603, 606, 607, 608, 1572, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 1573, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 1574, 639, 640, 0,
	635, 626, 1575, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 1576, 649, 727, 728, 729, 730, 1577, 659,
	1578, 650, 651, 652, 653, 731, 654, 732, 1579, 655,
	656, 657, 658, 0, 660, 661, 1580, 1581, 662, 663,
	665, 667, 668, 664, 666, 669, 1582, 670, 1583, 0,
	671, 672, 673, 733, 734, 735, 1584, 675, 674, 676,
	677, 678, 736, 679, 680, 1585, 1586, 1587, 1588, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4354, 296,
	297, 299, 298, 300, 301, 302, 303, 1510, 304, 305,
	1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517, 306,
	1518, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1519, 691,
	318, 319, 320, 321, 322, 323, 1520, 1521, 0, 324,
	692, 693, 694, 1522, 325, 326, 695, 1523, 1590, 1524,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1525,
	336, 337, 338, 335, 339, 1526, 340, 0, 341, 342,
	343, 344, 345, 346, 1527, 347, 348, 349, 1289, 350,
	351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1535,
	363, 359, 361, 1536, 364, 362, 365, 1537, 366, 367,
	368, 1538, 1539, 369, 370, 371, 1540, 372, 373, 374,
	1541, 375, 376, 377, 1542, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1543, 293, 1544, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1545, 396, 397,
	398, 1546, 399, 400, 1547, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1548, 413, 704, 1549, 705, 414, 1550, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1292, 422,
	423, 1551, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1552, 1291, 511, 432, 709, 710,
	1553, 711, 1554, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1555, 445, 447, 446, 1556, 448, 713, 1296,
	449, 450, 1297, 1557, 451, 452, 453, 454, 455, 456,
	459, 1558, 1559, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 1560, 295, 1300, 505, 506, 507,
	508, 1561, 714, 509, 715, 512, 513, 1562, 0, 514,
	0, 515, 1563, 1564, 517, 518, 519, 1565, 1566, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1567, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1568, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1569, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1570, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1571, 604, 605, 603, 606, 607,
	608, 1572, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1573,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1574,
	639, 640, 0, 635, 626, 1575, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1576, 649, 727, 728, 729,
	730, 1577, 659, 1578, 650, 651, 652, 653, 731, 654,
	732, 1579, 655, 656, 657, 658, 0, 660, 661, 1580,
	1581, 662, 663, 665, 667, 668, 664, 666, 669, 1582,
	670, 1583, 0, 671, 672, 673, 733, 734, 735, 1584,
	675, 674, 676, 677, 678, 736, 679, 680, 1585, 1586,
	1587, 1588, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4011, 296, 297, 299, 298, 300, 301, 302, 303,
	1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515,
	1516, 1517, 306, 1518, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1519, 691, 318, 319, 320, 321, 322, 323, 1520,
	1521, 0, 324, 692, 693, 694, 1522, 325, 326, 695,
	1523, 1590, 1524, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1525, 336, 337, 338, 335, 339, 1526, 340,
	0, 341, 342, 343, 344, 345, 346, 1527, 347, 348,
	349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532,
	1533, 1534, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1535, 363, 359, 361, 1536, 364, 362, 365,
	1537, 366, 367, 368, 1538, 1539, 369, 370, 371, 1540,
	372, 373, 374, 1541, 375, 376, 377, 1542, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1543, 293, 1544, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1545, 396, 397, 398, 1546, 399, 400, 1547, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1548, 413, 704, 1549, 705, 414, 1550,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 1551, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1552, 1291, 511,
	432, 709, 710, 1553, 711, 1554, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1555, 445, 447, 446, 1556,
	448, 713, 1296, 449, 450, 1297, 1557, 451, 452, 453,
	454, 455, 456, 459, 1558, 1559, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1560, 295, 1300,
	505, 506, 507, 508, 1561, 714, 509, 715, 512, 513,
	1562, 0, 514, 0, 515, 1563, 1564, 517, 518, 519,
	1565, 1566, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1567, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1568, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1569, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1570, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1571, 604, 605,
	603, 606, 607, 608, 1572, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1573, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1574, 639, 640, 0, 635, 626, 1575, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1576, 649,
	727, 728, 729, 730, 1577, 659, 1578, 650, 651, 652,
	653, 731, 654, 732, 1579, 655, 656, 657, 658, 0,
	660, 661, 1580, 1581, 662, 663, 665, 667, 668, 664,
	666, 669, 1582, 670, 1583, 0, 671, 672, 673, 733,
	734, 735, 1584, 675, 674, 676, 677, 678, 736, 679,
	680, 1585, 1586, 1587, 1588, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3822, 296, 297, 299, 298, 300,
	301, 302, 303, 1510, 304, 305, 1511, 1512, 1513, 0,
	1514, 686, 1515, 1516, 1517, 306, 1518, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 1519, 691, 318, 319, 320, 321,
	322, 323, 1520, 1521, 0, 324, 692, 693, 694, 1522,
	325, 326, 695, 1523, 1590, 1524, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1525, 336, 337, 338, 335,
	339, 1526, 340, 0, 341, 342, 343, 344, 345, 346,
	1527, 347, 348, 349, 1289, 350, 351, 352, 1528, 1529,
	1531, 1530, 1532, 1533, 1534, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 1535, 363, 359, 361, 1536,
	364, 362, 365, 1537, 366, 367, 368, 1538, 1539, 369,
	370, 371, 1540, 372, 373, 374, 1541, 375, 376, 377,
	1542, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 1543, 293,
	1544, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 1545, 396, 397, 398, 1546, 399, 400,
	1547, 1290, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1548, 413, 704, 1549,
	705, 414, 1550, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1292, 422, 423, 1551, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1552, 1291, 511, 432, 709, 710, 1553, 711, 1554, 433,
	434, 1293, 712, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1555, 445,
	447, 446, 1556, 448, 713, 1296, 449, 450, 1297, 1557,
	451, 452, 453, 454, 455, 456, 459, 1558, 1559, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	1560, 295, 1300, 505, 506, 507, 508, 1561, 714, 509,
	715, 512, 513, 1562, 0, 514, 0, 515, 1563, 1564,
	517, 518, 519, 1565, 1566, 520, 521, 716, 1301, 522,
	1302, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1567, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	1568, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 1569,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 1570, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	1571, 604, 605, 603, 606, 607, 608, 1572, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 1573, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 1574, 639, 640, 0, 635,
	626, 1575, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 1576, 649, 727, 728, 729, 730, 1577, 659, 1578,
	650, 651, 652, 653, 731, 654, 732, 1579, 655, 656,
	657, 658, 0, 660, 661, 1580, 1581, 662, 663, 665,
	667, 668, 664, 666, 669, 1582, 670, 1583, 0, 671,
	672, 673, 733, 734, 735, 1584, 675, 674, 676, 677,
	678, 736, 679, 680, 1585, 1586, 1587, 1588, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2801, 296, 297,
	299, 298, 300, 301, 302, 303, 1510, 304, 305, 1511,
	1512, 1513, 0, 1514, 686, 1515, 1516, 1517, 306, 1518,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1519, 691, 318,
	319, 320, 321, 322, 323, 1520, 1521, 0, 324, 692,
	693, 694, 1522, 325, 326, 695, 1523, 1590, 1524, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1525, 336,
	337, 338, 335, 339, 1526, 340, 0, 341, 342, 343,
	344, 345, 346, 1527, 347, 348, 349, 1289, 350, 351,
	352, 1528, 1529, 1531, 1530, 1532, 1533, 1534, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1535, 363,
	359, 361, 1536, 364, 362, 365, 1537, 366, 367, 368,
	1538, 1539, 369, 370, 371, 1540, 372, 373, 374, 1541,
	375, 376, 377, 1542, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1543, 293, 1544, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1545, 396, 397, 398,
	1546, 399, 400, 1547, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1548,
	413, 704, 1549, 705, 414, 1550, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	1551, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1552, 1291, 511, 432, 709, 710, 1553,
	711, 1554, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1555, 445, 447, 446, 1556, 448, 713, 1296, 449,
	450, 1297, 1557, 451, 452, 453, 454, 455, 456, 459,
	1558, 1559, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1560, 295, 1300, 505, 506, 507, 508,
	1561, 714, 509, 715, 512, 513, 1562, 0, 514, 0,
	515, 1563, 1564, 517, 518, 519, 1565, 1566, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1567, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1568, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1569, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1570, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1571, 604, 605, 603, 606, 607, 608,
	1572, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1573, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1574, 639,
	640, 0, 635, 626, 1575, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1576, 649, 727, 728, 729, 730,
	1577, 659, 1578, 650, 651, 652, 653, 731, 654, 732,
	1579, 655, 656, 657, 658, 0, 660, 661, 1580, 1581,
	662, 663, 665, 667, 668, 664, 666, 669, 1582, 670,
	1583, 0, 671, 672, 673, 733, 734, 735, 1584, 675,
	674, 676, 677, 678, 736, 679, 680, 1585, 1586, 1587,
	1588, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 1501, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2421, 296, 297, 299, 298, 300, 301, 302, 303, 1510,
	304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516,
	1517, 306, 1518, 307, 308, 1288, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	1519, 691, 318, 319, 320, 321, 322, 323, 1520, 1521,
	0, 324, 692, 693, 694, 1522, 325, 326, 695, 1523,
	1590, 1524, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1525, 336, 337, 338, 335, 339, 1526, 340, 0,
	341, 342, 343, 344, 345, 346, 1527, 347, 348, 349,
	1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533,
	1534, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 1535, 363, 359, 361, 1536, 364, 362, 365, 1537,
	366, 367, 368, 1538, 1539, 369, 370, 371, 1540, 372,
	373, 374, 1541, 375, 376, 377, 1542, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 1543, 293, 1544, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 1545,
	396, 397, 398, 1546, 399, 400, 1547, 1290, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1548, 413, 704, 1549, 705, 414, 1550, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1292, 422, 423, 1551, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1552, 1291, 511, 432,
	709, 710, 1553, 711, 1554, 433, 434, 1293, 712, 1294,
	435, 436, 437, 1295, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1555, 445, 447, 446, 1556, 448,
	713, 1296, 449, 450, 1297, 1557, 451, 452, 453, 454,
	455, 456, 459, 1558, 1559, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1298, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1299, 503, 491, 1560, 295, 1300, 505,
	506, 507, 508, 1561, 714, 509, 715, 512, 513, 1562,
	0, 514, 0, 515, 1563, 1564, 517, 518, 519, 1565,
	1566, 520, 521, 716, 1301, 522, 1302, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1567, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 1568, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 1569, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	1570, 578, 579, 580, 1303, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 1571, 604, 605, 603,
	606, 607, 608, 1572, 609, 610, 592, 593, 611, 612,
	1304, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 1573, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 1574, 639, 640, 0, 635, 626, 1575, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 1576, 649, 727,
	728, 729, 730, 1577, 659, 1578, 650, 651, 652, 653,
	731, 654, 732, 1579, 655, 656, 657, 658, 0, 660,
	661, 1580, 1581, 662, 663, 665, 667, 668, 664, 666,
	669, 1582, 670, 1583, 0, 671, 672, 673, 733, 734,
	735, 1584, 675, 674, 676, 677, 678, 736, 679, 680,
	1585, 1586, 1587, 1588, 681, 682, 737, 683, 684, 685,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1510, 304, 305, 1511, 1512,
	1513, 0, 1514, 686, 1515, 1516, 1517, 306, 1518, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1519, 691, 318, 319,
	320, 321, 322, 323, 1520, 1521, 0, 324, 692, 693,
	694, 1522, 325, 326, 695, 1523, 1590, 1524, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1525, 336, 337,
	338, 335, 339, 1526, 340, 0, 341, 342, 343, 344,
	345, 346, 1527, 347, 348, 349, 1289, 350, 351, 352,
	1528, 1529, 1531, 1530, 1532, 1533, 1534, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1535, 363, 359,
	361, 1536, 364, 362, 365, 1537, 366, 367, 368, 1538,
	1539, 369, 370, 371, 1540, 372, 373, 374, 1541, 375,
	376, 377, 1542, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1543, 293, 1544, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1545, 396, 397, 398, 1546,
	399, 400, 1547, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1548, 413,
	704, 1549, 705, 414, 1550, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 1551,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1552, 1291, 511, 432, 709, 710, 1553, 711,
	1554, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1555, 445, 447, 446, 1556, 448, 713, 1296, 449, 450,
	1297, 1557, 451, 452, 453, 454, 455, 456, 459, 1558,
	1559, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1560, 295, 1300, 505, 506, 507, 508, 1561,
	714, 509, 715, 512, 513, 1562, 0, 514, 0, 515,
	1563, 1564, 517, 518, 519, 1565, 1566, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1567, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1568, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1569, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1570, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1571, 604, 605, 603, 606, 607, 608, 1572,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1573, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1574, 639, 640,
	0, 635, 626, 1575, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1576, 649, 727, 728, 729, 730, 1577,
	659, 1578, 650, 651, 652, 653, 731, 654, 732, 1579,
	655, 656, 657, 658, 0, 660, 661, 1580, 1581, 662,
	663, 665, 667, 668, 664, 666, 669, 1582, 670, 1583,
	0, 671, 672, 673, 733, 734, 735, 1584, 675, 674,
	676, 677, 678, 736, 679, 680, 1585, 1586, 1587, 1588,
	681, 682, 737, 683, 684, 685, 2776, 0, 1224, 1196,
	1197, 1198, 1194, 1195, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 2773, 304, 305, 0, 0, 0, 0,
	0, 1248, 1212, 0, 0, 306, 0, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 1261, 0,
	316, 1268, 317, 1267, 0, 1278, 318, 319, 320, 321,
	322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0,
	325, 326, 1254, 0, 1235, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 1238, 1236,
	1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356, 357,
	1271, 358, 360, 1265, 1264, 1184, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 2774, 0, 369,
	1256, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1190, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1279, 1280, 391, 1203, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1263, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 1276, 1277, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1286, 0,
	1213, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1249, 1250, 1253, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1291, 511, 432, 1258, 1259, 0, 1219, 0, 433,
	434, 1293, 1251, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1287, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 1242, 1241, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	1181, 295, 1300, 505, 506, 507, 508, 1204, 1252, 509,
	1266, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1301, 522,
	1302, 1281, 523, 524, 1191, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1282, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1262, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 1192, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1245, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 1260, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1307, 629, 630, 631,
	632, 1283, 636, 637, 638, 0, 639, 640, 1178, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1272, 1273, 1274, 1275, 0, 659, 0,
	650, 651, 652, 653, 1284, 654, 1285, 1202, 655, 656,
	657, 658, 0, 660, 661, 0, 1185, 662, 663, 665,
	667, 668, 664, 666, 669, 1246, 670, 0, 0, 671,
	672, 673, 733, 1269, 1306, 2772, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1177, 0,
	0, 0, 0, 0, 0, 1175, 1176, 2775, 0, 0,
	0, 0, 0, 0, 0, 1208, 2771, 0, 1168, 1206,
	1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1248, 1212, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	1261, 0, 316, 1268, 317, 1267, 0, 1278, 318, 319,
	320, 321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309,
	694, 0, 325, 326, 1254, 0, 1235, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355,
	356, 357, 1271, 358, 360, 1265, 1264, 1184, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1256, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1190, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1279, 1280, 391,
	1203, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1263, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 1276, 1277, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1286, 0, 1213, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1249, 1250, 1253, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1291, 511, 432, 1258, 1259, 0, 1219,
	0, 433, 434, 1293, 1251, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1287, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 1242,
	1241, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1181, 295, 1300, 505, 506, 507, 508, 1204,
	1252, 509, 1266, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 1281, 523, 524, 1191, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1282, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1262, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 1192, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 1245,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 1260, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1307, 629,
	630, 631, 632, 1283, 636, 637, 638, 0, 639, 640,
	1178, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1272, 1273, 1274, 1275, 0,
	659, 0, 650, 651, 652, 653, 1284, 654, 1285, 1202,
	655, 656, 657, 658, 0, 660, 661, 0, 1185, 662,
	663, 665, 667, 668, 664, 666, 669, 1246, 670, 0,
	0, 671, 672, 673, 1748, 1269, 1306, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 1182, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 0, 0, 0, 0, 1175, 1176, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 2015, 2013, 0,
	0, 1206, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 251, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 253, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 1748, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 245, 681,
	682, 737, 683, 684, 685, 1182, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 1224, 1196,
	1197, 1198, 1194, 1195, 1207, 0, 2015, 3443, 0, 0,
	1206, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1248, 1212, 0, 0, 306, 0, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 1261, 0,
	316, 1268, 317, 1267, 0, 1278, 318, 319, 320, 321,
	322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0,
	325, 326, 1254, 0, 1235, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 1238, 1236,
	1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356, 357,
	1271, 358, 360, 1265, 1264, 1184, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1256, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1190, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1279, 1280, 391, 1203, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1263, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 1276, 1277, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1286, 0,
	1213, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1249, 1250, 1253, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1291, 511, 432, 1258, 1259, 0, 1219, 0, 433,
	434, 1293, 1251, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1287, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 1242, 1241, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	1181, 295, 1300, 505, 506, 507, 508, 1204, 1252, 509,
	1266, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1301, 522,
	1302, 1281, 523, 524, 1191, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1282, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1262, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 1192, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	251, 604, 605, 603, 606, 607, 608, 1245, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 1260, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1307, 629, 630, 631,
	632, 1283, 636, 637, 638, 0, 639, 640, 1178, 635,
	626, 253, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1272, 1273, 1274, 1275, 0, 659, 0,
	650, 651, 652, 653, 1284, 654, 1285, 1202, 655, 656,
	657, 658, 0, 660, 661, 0, 1185, 662, 663, 665,
	667, 668, 664, 666, 669, 1246, 670, 0, 0, 671,
	672, 673, 1748, 1269, 1306, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 245, 681, 682,
	737, 683, 684, 685, 1182, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1177, 0,
	0, 0, 0, 0, 0, 1175, 1176, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 2015, 2013, 0, 0, 1206,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 2906, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 2911,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 2907, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 2908, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 2821, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 2819, 0, 2818,
	1206, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 2816,
	0, 2815, 1206, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 2813, 0, 2812, 1206, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 2810, 0, 1850, 1206, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1849, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 1171, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 1186,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 5041, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 1186, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 2653, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 2652, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 4764, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 1186, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 1186, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 4318, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 2085, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 1208, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 3989, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	2085, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 1208, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 2911, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 2013, 0, 2916, 1206, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 2914, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 2902, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 2891,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 2889, 0, 2880, 2887, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 2883, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 2884, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 2885, 469, 2882, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 2886, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 2881, 685, 1182,
	0, 0, 0, 2877, 0, 2880, 2887, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 2883, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 2884, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 2885, 469, 2882,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 2886, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 2881,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 0, 0, 0, 0,
	0, 0, 2021, 0, 1208, 0, 0, 0, 1206, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 2632, 304, 305, 0, 0, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 2593,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 2564, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 1855, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 1783, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 1778, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 1764,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 1759, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 1669, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1668, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 1663, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1662,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 1656, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 1619,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 1601, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 1605, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 1606, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 1604, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 1433, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 5091, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 5090, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	5089, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	5091, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 5090, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 4688, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 4689, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 4687, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 3410,
	3411, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 3408, 3409, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 2640, 2641, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 0, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 2899, 0, 0, 0, 0, 0, 0, 2897, 2898,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 0,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 3403,
	3404, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	2266, 2267, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 0, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 5091, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 0, 1251,
	0, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 0,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	5090, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 2918, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 0, 1247, 0, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 1631, 0, 1224, 1196, 1197, 1198,
	1194, 1195, 1207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 1208, 0, 0, 0, 1206, 1248,
	1212, 0, 0, 306, 0, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 1261, 0, 316, 1268,
	317, 1267, 0, 1278, 318, 319, 320, 321, 322, 323,
	0, 1247, 0, 324, 1308, 1309, 694, 0, 325, 326,
	1254, 0, 1235, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244,
	1240, 1239, 1243, 353, 354, 355, 356, 357, 1271, 358,
	360, 1265, 1264, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1256, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1279, 1280, 391, 1203, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1263, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1290,
	401, 402, 403, 1276, 1277, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1286, 0, 1213, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1249, 1250,
	1253, 510, 1292, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1291,
	511, 432, 1258, 1259, 0, 1219, 0, 433, 434, 1293,
	1251, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1287, 1296, 449, 450, 1297, 0, 451, 452,
	453, 454, 455, 456, 459, 1242, 1241, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 0, 295,
	1300, 505, 506, 507, 508, 1204, 1252, 509, 1266, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1301, 522, 1302, 1281,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1282, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1262, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 1192, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1245, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	1260, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1307, 629, 630, 631, 632, 1283,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1272, 1273, 1274, 1275, 0, 659, 0, 650, 651,
	652, 653, 1284, 654, 1285, 1202, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 1246, 670, 0, 0, 671, 672, 673,
	733, 1269, 1306, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 1168, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 1208, 0, 0, 0, 1206, 1248, 0,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	1247, 0, 324, 692, 693, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1333, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 295, 1300,
	505, 506, 507, 508, 0, 1252, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 1339, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 1341, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 251, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 253, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 1748,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 245, 681, 682, 737, 683, 684,
	685, 1347, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	1337, 0, 2109, 0, 1248, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 1247, 0, 324, 692,
	693, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1333, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 295, 1300, 505, 506, 507, 508,
	0, 1252, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1339, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 1341, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 251, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 253, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 1748, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	245, 681, 682, 737, 683, 684, 685, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3567, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 2109, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 306,
	0, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 1247, 0, 324,
	692, 693, 694, 0, 325, 326, 1254, 0, 1235, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1279,
	1280, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1286, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1249, 1250, 1253, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1291, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1293, 1251, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1333, 445, 447, 446, 0, 448, 1287, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 1242, 1241, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 0, 295, 1300, 505, 506, 507,
	508, 0, 1252, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1339, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 1281, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1282,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 1341,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1245, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 1283, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 1284, 654,
	1285, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1246,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 1329,
	0, 1347, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 0, 0, 1337, 306, 1335,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 1247, 0, 324, 692,
	693, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1333, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 295, 1300, 505, 506, 507, 508,
	0, 1252, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1339, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 1341, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	1347, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1248, 0, 0, 1337, 306, 1335, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 1247, 0, 324, 692, 693,
	694, 0, 325, 326, 1254, 0, 1235, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1279, 1280, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1286, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1249, 1250, 1253, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1291, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1293, 1251, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1333, 445, 447, 446, 0, 448, 1287, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 1242,
	1241, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 0, 295, 1300, 505, 506, 507, 508, 0,
	1252, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 1339, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 1281, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1282, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 1341, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1245,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 1283, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 1284, 654, 1285, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 1246, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 1347,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 0, 0, 1337, 306, 1335, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 1247, 0, 324, 692, 693, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 295, 1300, 505, 506, 507, 508, 0, 1252,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 1347, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 306, 4504, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 1247, 0, 324, 692, 693, 694, 0,
	325, 326, 1254, 0, 1235, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 1238, 1236,
	1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1279, 1280, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1286, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1249, 1250, 1253, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1291, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1293, 1251, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1287, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 1242, 1241, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	0, 295, 1300, 505, 506, 507, 508, 0, 1252, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1301, 522,
	1302, 1281, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1282, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 723, 1341, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1245, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 1283, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 1284, 654, 1285, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1246, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 2744, 2745, 2746, 2763, 2764, 2765,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 2766, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 2005, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	1990, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	2756, 0, 336, 337, 338, 335, 339, 0, 340, 2752,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 2757, 2758, 2759,
	2760, 392, 393, 394, 701, 0, 0, 2751, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 2761, 2762, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 2754,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 2755, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 1989, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	1626, 2741, 2742, 2743, 2767, 2753, 2747, 0, 2749, 2750,
	2748, 2735, 2736, 2737, 2738, 2739, 2740, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1590, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1291, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 0, 0, 1300, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 1748, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 0, 1745, 246, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 202, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1590, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 712, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 0, 1300, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 251, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 253, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 1748, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 245, 681,
	682, 737, 683, 684, 685, 1626, 1625, 246, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 202, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1590, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1291, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 0, 1300,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1626, 1625, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 1772, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1590, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 0, 1300, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1626, 1625, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 3899, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1590, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1291, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	0, 1300, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 2503, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1626, 2413, 0, 0, 0, 0, 2414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 1772, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 1590,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1291, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 2412, 447, 446, 0, 448, 713,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 0, 1300, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1626,
	1625, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	1772, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1590, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 712, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 0, 1300, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 1168, 0, 290, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 1754, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	251, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 253, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 1748, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 245, 681, 682,
	737, 683, 684, 685, 0, 0, 246, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 202, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 3176, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 2123, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 5258, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 290, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 3850, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	290, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 1742, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 1347,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 306, 3297, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 1247, 0, 324, 692, 693, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 295, 1300, 505, 506, 507, 508, 0, 1252,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 4014, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 991, 0,
	892, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 2490, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	899, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 988, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 990,
	0, 635, 626, 897, 641, 642, 643, 644, 645, 898,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 2167, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 902,
	0, 0, 0, 306, 0, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 0, 2173, 0, 316, 2163,
	317, 2179, 0, 2186, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 2189, 2190, 0, 0, 325, 326,
	0, 0, 1590, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1289, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 1271, 358,
	360, 2177, 2176, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1256, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 0, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 2175, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1290,
	401, 402, 403, 2184, 2185, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 0, 0,
	0, 510, 1292, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1291,
	511, 432, 2170, 2171, 0, 2166, 0, 433, 434, 1293,
	0, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 0, 1296, 449, 450, 1297, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 0, 0,
	1300, 505, 506, 507, 508, 0, 0, 509, 2178, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 0, 1301, 522, 1302, 0,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 2160, 536, 537, 538, 2161,
	539, 540, 541, 0, 542, 0, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 2174, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 0, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	2172, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 2188, 629, 630, 631, 632, 0,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 2180, 2181, 2182, 2183, 0, 659, 0, 650, 651,
	652, 653, 0, 654, 0, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	0, 2164, 2187, 0, 675, 674, 676, 677, 678, 0,
	679, 680, 0, 0, 0, 0, 681, 682, 0, 683,
	684, 685, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 4141, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 2154, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 899, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 4140,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 897, 641, 642, 643, 644,
	645, 898, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 4139, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 892,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 2194, 304, 305, 0, 0, 0,
	0, 902, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 899,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 2193, 599, 600, 601,
	602, 0, 2195, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 897, 641, 642, 643, 644, 645, 898, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 2192, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 892, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2145, 304, 305, 0, 0, 0, 0, 902, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 899, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 2144, 599, 600, 601, 602, 0, 2146,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 897,
	641, 642, 643, 644, 645, 898, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 2143, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 890, 0, 892, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 902, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 899, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 897, 641, 642,
	643, 644, 645, 898, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 892, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 902, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 899, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 897, 641, 642, 643, 644, 645,
	898, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 892, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	902, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 899, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 2543,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 2544, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 897, 641, 642, 643, 644, 645, 898, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	2545, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 290, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 902, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 290, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 902, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 1626, 1625, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4357, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1590, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1291, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 0, 1300,
	505, 506, 507, 508, 4244, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1626, 1625, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1590, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 0, 1300, 505, 506, 507, 508,
	3800, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1804, 0, 1626,
	1625, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1590, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 1802, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 712, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 0, 1300, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 1803, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 1801, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1676, 0, 1626, 1625, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1590, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1678,
	707, 708, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1291, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	0, 1300, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1621, 0, 1626, 1625, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1590, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1291, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 0, 1300,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1626, 1625, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1590, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 0, 1300, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1626, 1625, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1590, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1291, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	0, 1300, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1626, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 1590,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1291, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 0, 1300, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	3078, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 3842, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 3082, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	3841, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 3081, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 3838, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 3840, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 3837,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 3080, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 3839, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 3078, 325, 326, 695,
	0, 0, 3072, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 3074, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 3082, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 3081, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3071, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 3080, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 3079, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1884, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 1883, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 1882, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 1885, 590, 591,
	598, 599, 600, 601, 602, 0, 1881, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 1879, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 1880, 674, 676, 677, 678, 736, 679, 680, 1594,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1596, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1339, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1591, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1593, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	1339, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1497, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1499,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1339, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 770, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 769, 302, 303,
	758, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 767, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 757, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 758, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 761, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 762, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 763, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 758, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 761, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 762, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 763, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	758, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 4254, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 2449, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1339, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 3736, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 3267,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3266, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 2511, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 2455, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 2454,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 2442, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2444, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 2406, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1339, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1720, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1719, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1614, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1607, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1609, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1416, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1415, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1406,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1405, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1403, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1402, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1398, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1397,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 739, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 281, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 762, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 2552, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 2550, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 2548, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 2461, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2219, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 2213, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 975, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 974,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 973, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 859, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 848, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 857, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 850, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 856, 400, 852,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 853, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 851, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 854, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	855, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	849, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 842, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 848, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 857, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 850, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 856, 400, 852, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 853, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 851, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	854, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 855, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 849, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 3841, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 4589, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1444, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1447, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 1445,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 830,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	829, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 828, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 1448, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 826, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1444, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1447, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 1445, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 830, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 829, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 828, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 1448, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 826, 728, 729, 730, 0, 659, 0, 650,
	1446, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 837, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	835, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 748, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 747, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 746, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	3176, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 4889, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 3676, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 4476,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	4198, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 2953, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 3176, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 3306,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 2350, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2522, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 2509, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1776, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1768,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 820, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 816, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 821, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 830,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	829, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 828, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 1753, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 826, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1726, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1725,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1710, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1708, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1704, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1681,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1679, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1674, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1635, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1599, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1450, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 829, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	828, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 826, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1421,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1420, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1412, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1411, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	1364, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 840, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 820,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 816, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 815, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 821, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 830, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 817, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 818, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 822, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 809, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	810, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 772, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 765, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 743, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3872, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3779,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3753, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3749, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3701, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3699, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3687,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3684, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3277, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 810, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 2479, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 0, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1383,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 1312, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 0, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 0, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 0, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1716, 0, 1428, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 317, 0, 0, 0, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 0, 0, 0, 0, 325,
	326, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 1430, 353, 354, 355, 356, 357, 0,
	358, 360, 0, 0, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 0, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1715,
	0, 0, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 0, 0, 0, 0, 0, 433, 434,
	0, 0, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 509, 0,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 0, 522, 0,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 0, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1431, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 0, 629, 630, 631, 632,
	0, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 0, 0, 0, 0, 0, 659, 0, 650,
	651, 652, 653, 0, 654, 0, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 0, 0, 0, 0, 675, 674, 676, 677, 678,
	0, 679, 680, 1638, 0, 1428, 0, 681, 682, 0,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 317,
	0, 0, 0, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 0, 0, 0, 0, 325, 326, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 1430, 353, 354, 355, 356, 357, 0, 358, 360,
	0, 0, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	0, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 0, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1637, 0, 0,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 0, 0, 0, 0, 0, 433, 434, 0, 0,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 0, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 509, 0, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 0, 0, 522, 0, 0, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 0, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 0, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1431, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 0, 629, 630, 631, 632, 0, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	0, 0, 0, 0, 0, 659, 0, 650, 651, 652,
	653, 0, 654, 0, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 0,
	0, 0, 0, 675, 674, 676, 677, 678, 0, 679,
	680, 1426, 0, 1428, 0, 681, 682, 0, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1430,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1425, 0, 0, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 0,
	0, 0, 0, 0, 433, 434, 0, 0, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 0,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 509, 0, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 0, 0, 522, 0, 0, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 0, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 0,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1431, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 0, 629, 630, 631, 632, 0, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 0, 0,
	0, 0, 0, 659, 0, 650, 651, 652, 653, 0,
	654, 0, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 0, 0, 0,
	0, 675, 674, 676, 677, 678, 0, 679, 680, 2233,
	0, 1428, 0, 681, 682, 0, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 317, 0, 0, 0, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 0,
	0, 0, 0, 325, 326, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 1430, 353, 354,
	355, 356, 357, 0, 358, 360, 0, 0, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 0, 0, 0, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 0, 0, 0,
	0, 0, 433, 434, 0, 0, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 0, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 509, 0, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	0, 0, 522, 0, 0, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	0, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 0, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1431, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 0,
	629, 630, 631, 632, 0, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 0, 0, 0, 0,
	0, 659, 0, 650, 651, 652, 653, 0, 654, 0,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 0, 0, 0, 0, 675,
	674, 676, 677, 678, 0, 679, 680, 2200, 0, 1428,
	0, 681, 682, 0, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1430, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 0, 0, 0, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 0, 0, 0, 0, 0,
	433, 434, 0, 0, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 0, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	509, 0, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 0, 0,
	522, 0, 0, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 0, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 0, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1431, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 0, 629, 630,
	631, 632, 0, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 0, 0, 0, 0, 0, 659,
	0, 650, 651, 652, 653, 0, 654, 0, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 0, 0, 0, 0, 675, 674, 676,
	677, 678, 1428, 679, 680, 0, 0, 0, 0, 681,
	682, 0, 683, 684, 685, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 0, 317, 0, 0, 0,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	0, 0, 0, 0, 325, 326, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 1430, 353,
	354, 355, 356, 357, 0, 358, 360, 0, 0, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 0, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 0, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 0, 0, 0, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 0, 0,
	0, 0, 0, 433, 434, 0, 0, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 0, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 509, 0, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 0, 0, 522, 0, 0, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 0, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 0, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1431, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	0, 629, 630, 631, 632, 0, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 0, 0, 0,
	0, 0, 659, 0, 650, 651, 652, 653, 0, 654,
	0, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 0, 0, 0, 0,
	675, 674, 676, 677, 678, 0, 679, 680, 0, 0,
	0, 0, 681, 682, 0, 683, 684, 685, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 1934, 1935,
	1937, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 0, 0, 0, 1990, 0, 0,
	1937, 0, 0, 0, 0, 0, 1936, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 1975, 0, 0,
	1985, 0, 0, 1951, 1952, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 1963, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 1958,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 1989, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 1974, 0, 4868,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 1948, 1949,
	1955, 1977, 1954, 1950, 1942, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4672,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 4500, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 4405, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 4404, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 4403, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4019,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 3485, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 3484, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 3483, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 1975, 1963, 0,
	1985, 0, 2380, 0, 0, 0, 0, 1964, 1966, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 1981, 0, 1982, 0, 0, 0,
	1984, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 1973, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 2381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 3482, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 1963, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 1958,
	0, 0, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 1976, 0, 0,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 2312,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 2310, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 1974, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 3447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 2382, 0, 0, 0, 0, 0, 1976, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 2383, 0, 0, 0, 0,
	1936, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 1987, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2311, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 5167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 0, 0, 1985, 0, 0, 0, 0, 1989,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	2309, 0, 1937, 0, 0, 0, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 3547, 0,
	0, 0, 0, 5166, 0, 3546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 3418, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3419, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 2926,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 2925, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 4773, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 4222, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 1987, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 3553, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1975,
	0, 0, 1985, 0, 0, 0, 0, 1989, 0, 1964,
	1966, 0, 0, 1971, 1965, 0, 0, 0, 3548, 0,
	4000, 0, 1937, 0, 0, 0, 1981, 0, 1982, 0,
	0, 0, 1984, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1973, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 1963, 1975,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 0, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 3486, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 3513, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 1958, 0, 0, 1981, 0,
	1982, 0, 0, 0, 1984, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 1976, 0, 1973, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 2492, 0, 1959, 1960,
	1961, 1962, 0, 1974, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 1975, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 0, 0, 1042, 0, 1094,
	0, 0, 0, 1958, 0, 0, 0, 0, 1981, 0,
	1982, 0, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 1065, 0, 1048, 1047, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 1067, 0, 0, 0,
	0, 0, 1049, 0, 0, 0, 0, 1052, 0, 0,
	0, 0, 1105, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 1983,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	1054, 0, 0, 0, 0, 0, 1055, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 1056,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 1092, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 1958, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 1060, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1068, 1066, 0, 0,
	0, 0, 0, 0, 1061, 0, 0, 0, 1078, 0,
	0, 1100, 1099, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 1053,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 1086, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 1084, 0, 0, 0, 0, 0, 0, 0, 1103,
	1079, 0, 0, 1071, 1069, 0, 0, 1074, 0, 0,
	0, 0, 0, 1075, 0, 0, 1044, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 1088, 0, 1076, 0, 0,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 1081, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1085,
}

var sqlPact = [...]int{
	13926, -1000, -1000, -1000, -1000, 209, -1000, -1000, 208, 206,
	205, 203, 200, 199, 198, 192, 191, 189, 188, -1000,
	-1000, 185, 184, 183, 181, -1000, -1000, 179, -1000, -1000,
	178, -1000, 175, 173, 172, -1000, -1000, 165, -1000, 164,
	-1000, -1000, -1000, -1000, 163, 162, 161, 99349, 98761, 99935,
	2427, 126359, 108739, 1889, 88189, 125771, 87601, 125183, 2305, 11743,
	124595, 2881, 148, -1000, 124007, 146, 145, 142, -1000, 108151,
	123419, 105801, 105213, 1991, -1000, 140, 138, -1000, 9429, 76380,
	137, 136, 134, 133, 2565, 131, -1000, 124, 120, -1000,
	119, -1000, 15314, 1537, -1000, 118, 116, -1000, 365, 104625,
	115, 114, 113, 2428, 110, 109, 73436, 108, 107, 105,
	2372, 2970, -1000, -1000, 2219, -1000, -1000, 103, 101, 99,
	98, 97, 95, 94, 93, 92, 91, 89, 88, 84,
	-1000, 77, 76, 74, 73, 69, -1000, 63, 59, 58,
	-1000, 57, -1000, 55, 53, 52, 50, 49, 45, 40,
	38, 37, 36, 35, 34, 31, 30, 29, 146745, -1000,
	-1000, 26, -1000, 1911, 1739, 1738, 1735, 1727, 1712, 1008,
	20, 18, 17, 16, 14, 13, 10, 9, 8, 6,
	5, 4, 0, -3, -4, -6, -8, -9, -10, -12,
	135, -15, -18, -21, -22, -24, -25, -26, 3021, 3701,
	-1000, 1644, 866, 33255, 3112, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 135149, 126945, -31, -89, -32,
	-1000, 3451, 1030, 61027, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 312, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	494, 2149, 778, -1000, -1000, -1000, 122831, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2421, -71, -1000, 2175, -1000,
	-1000, -1000, -1000, -1000, 776, -1000, 2420, 2370, 314, 2369,
	-1000, -1000, -1000, 3551, 2571, 3990, 3989, 3987, 3986, 3985,
	134563, 1878, 3984, 2621, 3982, 3979, 3978, 3974, 3971, 3968,
	3967, -1000, 98173, 1058, 97585, 96997, 3568, 122245, 96409, 121657,
	137499, 51411, 822, 3550, -1000, -1000, -1000, -1000, -1000, -1000,
	126945, -1000, 1057, -1000, -1000, 3965, 2135, 775, 107563, -1000,
	-1000, 121069, 1860, -1000, -1000, -1000, 950, 1262, 35663, 35663,
	35663, 307, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3562,
	-1000, -1000, -1000, -1000, 126945, 2815, 2815, 1466, 1471, 1471,
	2815, 2815, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3963, 3961, 3960, 3959, 3958, -1000, -1000, -1000, 87013, 25840,
	86425, 85837, 120481, 50809, 95821, 95233, 3957, 3955, 3948, 50207,
	81721, 58632, 3700, 119893, 136911, 3691, 3689, 1056, 2168, 1482,
	-1000, -1000, -1000, -1000, -1000, -1000, -50, 78141, 3757, 126945,
	-1000, 305, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49605,
	792, 49003, 738, 48401, 324, 119305, -1000, -1000, -1000, -1000,
	81123, -1000, 118717, 2564, 3947, 3945, 1159, 3944, 3411, 1781,
	3942, 2003, 1260, 3941, 3940, 3939, 3938, 3934, 3931, 3930,
	1403, 118129, 3110, 117541, 1830, 136323, 1055, 94645, 99935, 2719,
	116953, 1365, 1358, -1000, -1000, -1000, -1000, 3202, 2966, 2965,
	1166, -1000, -1000, -1000, -1000, 64585, 7908, 7379, -1000, -1000,
	14271, 116365, 67565, 99935, 99935, -1000, -1000, -1000, -1000, -1000,
	-1000, 47799, 329, 47197, 818, 115777, -1000, -1000, 65181, 3058,
	1097, -1000, -1000, -1000, -1000, -1000, 115189, 46595, 311, 45993,
	790, 126945, -1000, 3106, 1866, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2561, 1661, 3758, 2816, 80525, 2157,
	1463, 3512, 3200, 3197, 1583, 2161, 3196, 3929, 2747, 3193,
	3189, 3185, 3182, 3173, 1363, 2689, 359, 2677, 32653, 3094,
	1879, 45391, 1551, 1579, 3161, 3150, 3772, 3611, 2150, 2050,
	2033, 2126, 85249, 3927, 3923, 3471, 3145, 3093, 2876, 3088,
	2021, -1000, 3054, 1395, 292, -1000, -1000, -1000, -1000, -1000,
	-1000, 1522, -1000, -1000, -1000, -1000, -1000, 90533, -1000, -1000,
	1853, -1000, -1000, 1853, -1000, -1000, -1000, -1000, -1000, 1316,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1644, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2933, -1000, 2192, -1000, -1000,
	-1000, 2632, 3332, 3332, 3332, 3548, 455, 449, -1000, 135,
	-1000, -1000, 146291, -1000, -1000, 52013, 52013, 52013, 52013, 52013,
	52013, 52013, 52013, 2308, -1000, 773, -1000, -1000, 806, -1000,
	771, 701, 649, -1000, -1000, -1000, -1000, -1000, -1000, 770,
	-1000, -1000, -1000, -1000, -1000, -1000, 3730, -1000, 28904, -1000,
	-1000, -1000, 556, 760, 52013, -1000, -1000, 3800, 3799, 1023,
	-1000, 291, 969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3105, 759, 758, -1000, 756,
	755, 750, 747, 745, -1000, 743, -1000, 740, 731, 729,
	727, 724, 722, 721, 719, -1000, 2186, -1000, -1000, -1000,
	-1000, -1000, -1000, 687, 684, 684, 684, -1000, 1044, -1000,
	-1000, -1000, 400, 683, 296, 681, 680, 679, -1000, 717,
	716, 715, 713, 712, 710, 708, 707, 706, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1037, -1000, -1000, -1000, -1000,
	1344, -51, 126945, -1000, 494, -51, -1000, -1000, 704, -1000,
	37487, 37487, 37487, -1000, -1000, 2417, 52013, -1000, 2509, -1000,
	-43, -43, 919, 62794, -1000, 59827, 919, 301, 831, 68740,
	-1000, 3052, -1000, -1000, 702, 278, -1000, -1000, -1000, -1000,
	26436, 3051, 126945, 126945, 126945, 99935, 99935, 99935, 126945, 3922,
	3920, 3325, 52013, -1000, -1000, 75792, 139258, 100521, -1000, -1000,
	3673, 74022, 75205, 3104, 139258, 3103, 138675, 3919, -1000, -1000,
	-1000, -1000, -1000, 3286, 3917, 3915, 3912, -1000, 126945, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 248, 3274, -1000, -1000,
	104037, 248, 3273, -1000, 248, 3267, -1000, 103451, -1000, -1000,
	2388, 3263, -1000, -1000, 252, 3260, -1000, -1000, -1000, 251,
	3256, -1000, -1000, 276, -147, 3254, -1000, -1000, -1000, -1000,
	-1000, -1000, 146291, -1000, -1000, -1000, 138087, -1000, 3476, -1000,
	126945, -1000, 52013, -1000, -1000, 3671, 1849, 3478, 3589, -1000,
	-1000, -61, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2606,
	2624, 1187, 2452, -1000, 3336, 1582, 35663, 3399, -1000, -1000,
	-1000, -1000, -1000, 263, 26436, 2925, -1000, -1000, 126945, -1000,
	126945, 2815, 2815, -1000, -1000, -1000, 3764, 3761, 2815, 2815,
	126945, 126945, -1000, -1000, -1000, -1000, -1000, -1000, 5545, 3250,
	1565, -1000, 2447, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2075, 3249, -1000, 2143, 3247, 2025, -1000, -1000,
	3317, -1000, 142805, 1437, -1000, -1000, -1000, -1000, 2045, 3246,
	-42, -1000, -1000, 2230, -1000, -1000, -1000, -1000, 142597, -1000,
	3002, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1736, -1000, -1000, 2234, 2103, -1000, 1335, 3243, -1000, 2810,
	2810, 94057, 3269, 66969, 65181, 78141, -54, -1000, -1000, -1000,
	-1000, -1000, -171, -1000, 25237, 146291, -1000, -1000, -1000, -1000,
	1893, 146291, 927, -1000, -1000, 3242, -1000, 146291, 926, -1000,
	-1000, 3240, -1000, 2683, -1000, 3102, -1000, -1000, 2521, 2520,
	1016, -1000, 3910, -1000, -1000, 3907, -1000, 3902, 3901, 3900,
	-1000, 1685, 2158, 3897, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 93471, 2416, -1000, -1000, 89947, -1000, 2519, 3588,
	-1000, 92883, 1048, -1000, 996, 2518, -1000, 102865, 1045, 2517,
	-1000, 3896, 3564, 2750, 996, 2516, -1000, -1000, -1000, -1000,
	-1000, 1063, -1000, 70499, -1000, 70499, -1000, 1732, -1000, 133977,
	-43, 99935, 3730, -1000, -75, -1000, -1000, -1000, 1030, -1000,
	63986, -1000, 63986, 106975, 82317, 982, 3050, 72847, 146083, -1000,
	1014, -1000, -1000, 146291, -1000, -1000, -1000, 2682, -1000, -210,
	2806, -1000, 82317, 66373, 3046, 2680, -1000, 146291, -1000, -1000,
	-1000, -1000, 146291, -1000, -1000, -1000, 82317, 89947, -1000, 114601,
	92295, -1000, -1000, 1392, 2667, -1000, -1000, -1000, 65181, 3045,
	1336, 82317, 82317, 82317, -1000, 114013, -1000, -1000, 2163, 1315,
	3468, 2129, 99935, -1000, 1769, -1000, -1000, -1000, 3496, 3266,
	126945, -1000, -1000, 3098, -1000, 77554, 102279, -1000, 101693, -1000,
	101107, -1000, 99935, -1000, 99935, -1000, 3895, 3893, 3890, -1000,
	-1000, 3886, -1000, 3884, 3486, -1000, 786, 44789, 146291, 3483,
	-1000, 3881, 2088, 3094, 146291, -1000, 3262, 1733, 1731, 126945,
	-1000, -1000, 126945, -1000, 126945, -1000, -1000, -1000, 2435, 1599,
	-1000, -1000, 2605, -1000, -1000, -1000, 1007, -1000, -1000, 99935,
	99935, 99935, 99935, 1236, -1000, 44187, -1000, -1000, 3086, 3879,
	1749, -1000, 1760, -1000, 3044, 3469, -1000, 3043, 1383, 1903,
	262, 3804, -1000, -1000, 254, -1000, -1000, -61, -1000, 133391,
	-1000, 2632, -1000, 126945, -1000, 2617, 3078, 3091, 1725, 2433,
	2710, -1000, 43585, 2688, 55625, 2444, 135, -1000, -1000, 135,
	135, 34459, -1000, -1000, 74022, 74022, 26436, 1322, 52013, 52013,
	52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013,
	52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013,
	52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013,
	52013, 52013, 52013, 52013, 2190, 52013, 1310, 52013, 52013, 52013,
	52013, 2018, -1000, -1000, 1989, 540, 2106, 701, -1000, -1000,
	-1000, 3731, 3731, 3731, 1734, 1734, 1734, 5389, 5389, 664,
	3878, 806, -1000, 52013, -1000, 128, 63380, 52013, 27034, -1000,
	449, 7405, 2648, -1000, 448, 27666, -1000, -1000, -1000, 28904,
	649, 42953, 52013, 1029, 146291, -1000, -1000, 1566, 3748, 24634,
	3080, 2859, 699, 898, 895, 32021, 31389, 30757, 30125, 767,
	619, 52013, 52013, 52013, 52013, 52013, 52013, 52013, 52013, -1000,
	-1000, 3760, -1000, 3748, -1000, -1000, -1000, -1000, 3748, 1286,
	1220, 3748, -1000, 3748, 3748, 9907, 9907, 42351, 41749, 41147,
	56227, 40545, 52013, 29523, 39943, 39341, -1000, 58033, 126945, -51,
	3670, 52013, 303, -1000, 143715, -1000, 303, 303, 698, -93,
	146291, 2663, 2663, 61616, 2217, 2320, 2320, 2320, -1000, 919,
	19169, 919, 112255, 2331, 919, 919, 242, 267, 446, 59231,
	2509, 112255, 797, 697, -33, -34, -35, -1000, -1000, -36,
	-38, -1000, -1000, 99935, 695, 27034, 26436, 234, 2048, -94,
	2698, 2697, 2696, 2695, -1000, 2693, 2414, -1000, -1000, -1000,
	1928, -101, 1301, 99935, 126945, 1370, 3877, -106, -1000, 6151,
	-108, -1000, 1384, 233, 3748, -1000, -1000, -1000, -1000, -1000,
	3876, 3875, -1000, 1031, 694, 689, 396, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 687, 684, 684, 684, -1000,
	400, 683, 296, 681, 680, 679, -1000, -1000, -1000, -1000,
	-1000, 3038, 99935, 126945, 1364, 3873, 88775, -147, 100521, -96,
	-1000, -1000, 126945, -1000, -1000, -1000, 3872, -1000, 99935, -1000,
	-1000, 99935, 248, 3238, -1000, 99935, -1000, 99935, 247, 3236,
	-1000, -1000, 126945, -1000, 99935, 99935, -1000, 126945, 126945, 126945,
	139258, 139258, 241, -1000, 99935, 928, -115, 1164, -61, -1000,
	-1000, -1000, -1000, 1853, -1000, 1809, -1000, -1000, -1000, -1000,
	-1000, -1000, 1476, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1023, -1000, -1000, -1000, -1000, 3742, 3737, -52, -1000,
	-1000, 26436, -1000, 2007, -1000, -1000, -1000, -1000, 126945, 126945,
	-1000, -1000, 126945, 126945, -1000, -1000, -62, 1757, 573, 1300,
	-1000, 84661, 2507, 3481, 3871, 2741, 3453, 1676, -1000, 1576,
	678, -1000, 3561, 90533, 3610, 3651, 1338, -1000, 3036, -1000,
	-1000, -1000, 945, 1691, 1872, 1297, 1296, 90533, 2143, -1000,
	74022, -1000, 2751, 3547, 1471, 1439, 1471, 1471, 1458, -1000,
	90533, 1859, 1294, 1293, 1291, -1000, -1000, 1690, 1662, -1000,
	-1000, 113427, 1511, -1000, 1290, 1288, 3687, 2933, 2318, 828,
	2068, -1000, 1423, 1281, 3033, -1000, -1000, -63, 3606, 3644,
	1338, -1000, 3029, 1276, -1000, -1000, -1000, 3544, 99935, 26436,
	1624, 1621, 1620, 1835, 1275, -53, -1000, 3604, 1654, -1000,
	89947, 89947, 109325, 126945, 3708, 82317, -1000, 2525, -1000, -1000,
	-1000, 3511, 3509, -1000, -1000, 1268, 1267, -1000, 1072, 9266,
	3362, -1000, 139258, 1072, 1072, 2019, 3232, 2795, 1652, -1000,
	2805, 912, 2804, -1000, -1000, -1000, 912, -54, 78141, 126945,
	231, -1000, 128, 52013, 52013, 128, 52013, 128, -1000, 3580,
	3227, 3225, 3870, -1000, -1000, -1000, -1000, -1000, 3869, 2080,
	2620, -1000, -1000, 677, 2512, 3020, 126945, 155, -1000, 99935,
	3132, 3224, 139258, 2143, 2511, -1000, -1000, 91707, -1000, 3221,
	494, 2510, -1000, 725, 3868, 3218, -1000, 132805, -1000, 3476,
	1348, 3217, 1099, 544, 3669, -1000, 544, 71086, -1000, 126945,
	-1000, -43, 6011, 83489, -116, -117, 445, -1000, 112841, 126945,
	126945, 3385, 2100, 2067, -1000, 989, 65181, -1000, 65181, -125,
	-1000, -210, 2803, 1524, 65181, -1000, 982, -131, 912, -1000,
	912, -1000, 99935, 3089, -1000, 82317, 65181, -1000, 982, 982,
	982, -1000, -1000, -1000, -1000, 3866, 3865, 3864, 3862, -1000,
	-1000, 995, 99935, 126945, 99935, -1000, 2789, 1641, -1000, 230,
	-1000, 139258, -1000, 139258, 126945, 99935, -1000, 995, 126945, 995,
	126945, 995, 126945, 995, 995, -1000, -1000, -1000, -1000, -1000,
	128, -1000, -1000, 146291, -1000, 52013, -1000, -1000, 1570, 3861,
	1745, -1000, 3087, -1000, 3081, -1000, 2, -1000, -1000, 3759,
	1994, -1000, 3793, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3858, 146291, -1000, 2059, -1000, -1000, -1000, -1000, 99935,
	99935, 99935, 99935, 126945, 3361, -1000, 126945, 3356, 3360, 99935,
	-1000, 3743, -1000, -1000, 90533, -1000, 2617, 3078, -1000, -1000,
	-1000, -1000, -1000, -1000, 1539, 2375, -1000, 2661, -1000, 1623,
	-1000, -1000, -1000, 146291, 56829, -1000, -1000, 146291, 1912, -1000,
	55023, 54421, -1000, -1000, 1862, 99935, 2705, -1000, 2705, -135,
	-1000, 143507, 2660, 99935, -1000, -1000, -1000, -1000, -1000, 944,
	594, 594, 1469, 1469, 1469, 1469, 3573, 6753, 5350, 8175,
	11181, 11181, 6941, 6941, 6941, 6941, 6941, 11181, 7869, 1734,
	1734, 7869, 7869, 7869, 7869, 7869, 1734, 1734, 1734, 11181,
	11181, 11181, 1734, 5389, 146501, 13627, 52013, 52013, 1266, 1965,
	540, 12262, 52013, 5783, 5783, 5783, 5783, -1000, 1976, -1000,
	-1000, -1000, -1000, 3018, 676, 56227, 56227, -1000, -1000, -1000,
	-1000, 28285, 52013, -1000, -1000, -1000, -1000, 38709, -1000, -1000,
	142387, -335, 444, -1000, 229, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 443, -127,
	-7, -1000, 52013, 52013, 52013, 438, -1000, 227, 52013, 126945,
	-1000, 16778, 796, -150, -1000, -128, 1473, -1000, 52013, -1000,
	-1000, 1265, -1000, 1255, 1253, 1249, -1000, 675, 435, -1000,
	225, -1000, 2313, 674, 673, 52013, -1000, -1000, -1000, -1000,
	-1000, 142179, -1000, -1000, 141971, -1000, -1000, 141763, -1000, -1000,
	141555, -1000, -1000, -1000, -1000, -1000, 145875, 16162, 14922, 12907,
	6684, 11997, 10877, -130, 433, -144, 431, 936, 935, 430,
	422, 421, -151, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -153, 420, -1000, 3009, -127,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 419, -1000,
	418, -1000, 145667, -127, 416, 2042, -1000, 56227, 56227, 56227,
	56227, 415, -1000, 143299, -1000, 145459, 38107, 38107, 38107, 411,
	145249, 52013, -127, -154, -1000, -159, -1000, -1000, -1000, -1000,
	560, -162, 1022, 37487, 60438, 26436, -1000, 1022, 1022, 52013,
	-1000, 52013, 2673, -1000, -1000, -1000, -1000, 2672, 2348, 2663,
	61616, -1000, -1000, -1000, -1000, 112255, -1000, 3730, 2838, -1000,
	112255, -1000, -1000, 126945, 494, -1000, 112255, 112255, 26436, 919,
	-1000, 919, 112255, 765, -1000, -1000, -1000, -1000, -1000, 410,
	71675, -7, 224, 26436, 996, -1000, -1000, 2809, 2809, 2809,
	2809, 2809, 99935, -1000, -1000, 139258, 1248, -57, -152, 2802,
	-1000, 3706, -1000, 2215, -1000, 74022, -1000, 805, 1102, 26436,
	-1000, -1000, -1000, 672, -1000, 3748, 3748, -1000, 3748, 139258,
	3004, 280, 2801, -1000, 2413, -55, 279, 139258, 3855, -1000,
	-1000, 248, -1000, 99935, 248, 248, -1000, 99935, 99935, 2388,
	-1000, 252, -1000, 251, -1000, -1000, -147, -1000, 1006, 35663,
	-1000, 1853, -1000, -1000, 1618, -1000, 2142, -1000, 1191, -1000,
	-1000, 35663, -1000, 3390, -1000, 1881, -1000, -1000, -1000, -1000,
	2465, 126945, 126945, 99935, -1000, 110497, 126945, -1000, 2278, 139258,
	-1000, 2508, 132219, 2473, 131633, 74022, -1000, -1000, 671, 959,
	2659, 2652, 1094, 126945, 126945, 2650, 131047, 130461, -1000, 3854,
	126945, 2196, 52013, 110497, 3543, 2366, 5335, 128, 128, -1000,
	128, -1000, -1000, 670, 1303, 99935, 99935, 126945, 139258, 99935,
	1966, -1000, -1000, -1000, -1000, -1000, 91119, -1000, -1000, 1471,
	-1000, -1000, -1000, 1471, 2143, 1945, 126945, 139258, 99935, 139258,
	129875, 2066, 129289, 2065, -1000, -1000, 2063, 1833, 126945, -1000,
	-1000, -1000, -1000, 1503, -1000, 828, 1246, 3000, 52013, 52013,
	2240, 128, 128, -1000, 128, 669, 26436, 2098, -1000, 3053,
	126945, 3792, 128703, 3791, 126945, 126945, 126945, 139258, 3436, 126945,
	-1000, -131, -56, -172, -1000, 894, 893, -171, -1000, 3708,
	-1000, 890, 2135, 126945, 139258, -1000, 128117, 9266, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2223, 79927, 1108, 126945, 1335,
	-1000, -1000, 1826, 1242, 1240, 90533, 2224, 1824, 1975, 139258,
	65181, 990, 65181, 2761, -1000, -1000, 24031, -1000, 146291, 146291,
	-1000, 146291, -1000, 76967, 82317, 126945, -1000, -1000, 1047, 126945,
	84075, 967, 3215, 69912, -171, 982, 89947, 82317, 3131, 126945,
	126945, -1000, -1000, 2143, 3212, 494, 2506, -1000, 139258, 3668,
	3211, 668, 3853, 3851, -1000, 99935, 2400, 2503, -1000, -1000,
	127531, 3299, 828, 126945, 1022, 61616, 2096, -1000, 68154, 1080,
	126945, 1990, 272, -1000, -1000, -1000, -19, 126945, -1000, 813,
	-1000, -1000, 6011, 6011, 982, -172, 662, 65777, -169, -1000,
	222, 651, 886, 885, -1000, 5258, -1000, -210, -1000, 82317,
	989, 65181, 2998, -210, 2800, 2992, -1000, -1000, 1003, -1000,
	1374, 2798, 982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -44, -1000, 1818, 1956, 126945, -147,
	-147, -69, -1000, -1000, 219, -57, -1000, 995, -1000, 995,
	-1000, 995, -1000, -1000, -1000, 146291, -1000, -1000, -1000, 1744,
	1743, 126945, -1000, 3070, -1000, 126945, -1000, -1000, 26436, 126945,
	99935, 26436, 99935, 3066, 3060, -1000, -1000, -1000, 126945, -1000,
	-1000, 126945, -1000, -1000, -1000, -1000, -1000, -1000, 1133, -1000,
	1912, 2374, -1000, 649, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2586, -1000, -59, 34459, 921, -1000, -1000,
	99935, -45, 52013, 52013, 11542, 8464, 52013, 56227, 56227, -1000,
	52013, 7302, -1000, -1000, -1000, -1000, -1000, 2985, 644, 52013,
	74022, 7609, 6226, -1000, 409, 9908, 7869, -1000, 52013, -1000,
	537, -1000, 408, 36885, -1000, 144131, -13, -175, -1000, 19786,
	-127, -176, -1000, -1000, 804, -1000, 3295, -1000, 52013, 144963,
	2566, 2038, 2036, 1763, 3748, 3785, 23428, -1000, 72261, 1024,
	2335, 141347, -1000, -1000, -1000, -1000, 74022, 74022, 52013, 52013,
	-1000, 52013, 52013, 52013, -1000, -1000, -1000, 3748, 943, -1000,
	-1000, -1000, 943, -1000, -1000, 1471, -1000, 1471, -1000, 52013,
	-1000, -1000, 2975, 52013, -1000, 74022, 74022, 56227, 56227, 56227,
	56227, 56227, 56227, 56227, 56227, 56227, 56227, 56227, 56227, 56227,
	56227, 56227, 56227, 56227, 56227, 56227, 56227, 2657, 56227, 3729,
	3729, 3729, 1096, -1000, 2977, 2975, 52013, 52013, 74022, 406,
	403, 402, -1000, 52013, -127, -1000, -1000, 8277, 643, -1000,
	2578, -1000, 2858, -1000, 52013, -1000, -170, -1000, 2509, -1000,
	-1000, 2858, 2858, -177, 146291, 61616, 61616, -1000, 641, 52013,
	2653, -1000, -1000, 795, -331, -1000, 883, -1000, -1000, -1000,
	-1000, -1000, -1000, 881, -1000, 494, -1000, -1000, -1000, 217,
	112255, 112255, 788, -1000, -178, -1000, -1000, -183, -1000, 3661,
	398, 26436, -1000, 1022, 5675, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2666, -282, 139258, 139258, 1795, 2367, 3782, -1000,
	3750, 803, 784, 211, 3748, 397, 391, 390, -147, 139258,
	139258, 1793, 74618, 139258, -1000, -1000, -1000, 248, -1000, -1000,
	-1000, 247, -1000, -1000, -1000, -1000, 2754, -1000, -61, -1000,
	-1000, -1000, 52013, -1000, 972, -1000, -1000, 3475, 640, 1237,
	1228, -1000, -184, -1000, 879, -1000, -1000, -1000, -1000, -1000,
	2941, -1000, 3209, -1000, 2493, -1000, 1066, 2490, 1659, -1000,
	52013, 639, 2748, 638, 632, 3850, 2185, 3849, 1098, 3208,
	2388, 3207, 2388, -1000, -1000, -1000, 956, -1000, 146291, -186,
	-1000, 2366, -1000, 617, 607, -1000, -62, 1697, 553, 1225,
	1002, -1000, -1000, 52013, 52013, 111669, -1000, 482, 3465, -48,
	-1000, -1000, -1000, 1792, 1215, 1213, -1000, -1000, -1000, -1000,
	2143, 1782, 1204, 1201, -1000, -1000, -1000, -1000, -1000, 2487,
	-1000, 126945, -1000, 3204, 126945, 126945, 1001, -1000, 3143, 3142,
	924, 126945, 52013, 52013, 144755, 144547, -1000, 1000, -1000, -1000,
	52013, -1000, -63, 1200, 3596, 2486, 99935, -1000, 2388, 3192,
	1199, -1000, 1196, -1000, -1000, -1000, 3601, 3591, 1216, -1000,
	109325, 82317, 82317, 3708, 65181, -1000, -1000, -1000, 82317, -1000,
	-1000, 79331, -1000, -1000, 1072, 126945, 139258, 99935, 1913, -1000,
	-1000, 88775, 89361, 126945, 2795, -147, 912, -1000, 2462, 912,
	990, 2963, -1000, 2702, -1000, 999, 99935, 3848, 389, -191,
	-65, 74022, -1000, -1000, -1000, -1000, 2473, 99935, 126945, 1319,
	2745, 126945, 126945, 3658, -1000, 2377, 630, 99935, 925, -1000,
	3730, -1000, -1000, -1000, 126945, -1000, -1000, -1000, 3587, 99935,
	3656, 3190, 996, 128, 99935, 3770, -1000, -1000, 3650, 99935,
	3181, 2399, 2482, 2613, 828, 82903, 996, 2334, -74, -1000,
	1990, 36265, 3462, -193, -1000, -1000, -1000, 1022, 71086, 61616,
	52013, 3844, -194, -1000, -1000, -1000, -1000, -1000, 109325, 82317,
	982, 126945, 126945, 3842, 82317, 82317, 82317, -66, 605, -1000,
	876, 875, 873, -1000, -1000, -1000, -1000, -1000, -1000, 872,
	871, 870, 869, 989, -1000, -1000, -210, 65181, 989, 65181,
	128, -1000, 2352, 99935, 65181, -1000, 22825, 126945, 2789, -1000,
	78728, -1000, -1000, -1000, -1000, -1000, 995, 3781, -171, -1000,
	-1000, -1000, 2244, 2439, 2244, 1940, 1935, -1000, -1000, -1000,
	2368, -1000, -1000, -1000, -1000, 2711, 3430, 26436, 3586, 5783,
	52013, 52013, 606, 6032, 666, 5783, 52013, 52013, 74022, 8658,
	-196, 52013, 52013, -1000, 52013, 768, 146291, -1000, 3780, 52013,
	386, 385, -1000, -1000, -1000, 3740, -1000, -1000, -1000, 146291,
	52013, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 383, -1000,
	127, -1000, -1000, -1000, 135735, -1000, 52013, 381, 3540, -1000,
	380, 378, 9122, 479, 141139, 140931, 140723, 374, -1000, -1000,
	373, 372, 146291, 2977, 146291, -1000, -1000, 1062, 1062, 1440,
	1440, 1440, 1440, 3729, 354, 1025, 634, 577, 577, 577,
	621, 1096, 1096, 577, 577, 577, 1096, 2960, 2655, 604,
	9061, -1000, -1000, 146291, 146291, 356, -1000, -1000, -1000, -127,
	355, 8277, -1000, 2847, 3539, 146291, -1000, 61616, 2847, 2847,
	-1000, -1000, 2348, 126945, 146291, 61616, -1000, 2838, -1000, 21010,
	20401, -1000, 26436, -1000, -1000, -1000, -1000, 3730, -1000, 71675,
	-1000, 603, -1000, 122, -1000, 5675, -1000, 864, -1000, -1000,
	82317, 82317, 3839, 3838, 3837, 3779, 3778, 2373, 3777, 2809,
	-1000, 2865, -282, -199, 126945, -1000, -1000, 622, 3836, 802,
	26436, 353, -1000, -1000, -1000, -147, -147, 126945, 2958, 99935,
	126945, 1357, -147, -1000, -1000, -1000, 3384, 146291, 2913, 2846,
	2841, 126945, 126945, -1000, 110497, 35663, 1564, 111083, 126945, 3174,
	-1000, 3170, -1000, 1094, 2656, 140515, 62205, -1000, 62205, 126945,
	-1000, -1000, -1000, -1000, 1985, 1501, 3835, 1151, -1000, 3499,
	126945, -1000, 126945, -1000, -1000, -1000, 110497, -1000, 126945, 126945,
	99935, 126945, -1000, 139258, 3152, -201, 146291, -68, -1000, 860,
	-1000, 1436, -1000, 22222, 126945, 139258, 99935, 126945, 139258, 99935,
	3168, 1079, 126945, -1000, 1078, 2300, -1000, -1000, 3141, -1000,
	146291, 144339, 128, 52013, 3151, -204, 26436, -1000, 3776, 3775,
	3165, 3503, -1000, 126945, 3774, 126945, 99935, 3382, -1000, -1000,
	-1000, 991, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1773,
	1195, 1184, 2396, 2394, 2360, -69, 2224, 990, -70, 585,
	-1000, 859, -1000, -1000, 857, 856, 990, -1000, 82317, 65181,
	3833, 494, -1000, 2737, -1000, 106387, 84075, 2412, -1000, -1000,
	582, 126945, 126945, 580, -1000, 128, -1000, 3832, 110497, 579,
	-1000, 2347, -1000, 620, -1000, 139258, 2143, 128, 99935, -1000,
	987, 494, 351, -72, -1000, 3268, 1089, 26436, 99935, 3164,
	2615, 828, 82903, -1000, 1348, 2710, -1000, -73, -1000, 645,
	128, 2334, -1000, -74, 146291, -1000, 847, -207, 340, -1000,
	3380, -1000, -1000, -214, -1000, -1000, 2842, 2842, 82317, 65181,
	82317, 82317, 82317, 65181, 82317, -1000, 989, 912, -1000, -210,
	-1000, 2555, -1000, 982, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26436, 1658, -1000, 576, 575, -1000, -1000, -1000,
	-1000, 3430, 5783, 5783, 52013, 52013, 52013, 5783, 8658, -215,
	-1000, 5783, 5783, -127, -1000, -1000, 144131, -1000, -1000, -1000,
	146291, -1000, 21619, 2289, -1000, 140307, -1000, 34459, -1000, -1000,
	52013, 52013, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56227, 2952, 574, 74022, -1000, -1000, 338, 1018, 52013, 53819,
	2509, 1018, 1018, -1000, -216, -1000, -1000, -1000, 3730, -1000,
	3730, 122, -1000, -1000, 3831, 26436, -1000, 82317, -1000, -1000,
	-1000, -1000, -1000, -1000, 3829, 3828, 2463, 3824, 3823, -1000,
	2354, -1000, -1000, 3073, -192, 608, -1000, 3822, -1000, -1000,
	139, 139258, 2948, 126, 2786, -1000, 128, -1000, -1000, -1000,
	-1000, -1000, -1000, 2780, 3649, -1000, 2051, -1000, 126945, 126945,
	-1000, 126945, -1000, 26436, 126945, 2896, 1283, -1000, 959, 2643,
	563, 56227, 1131, 99935, 966, 2836, 2831, -1000, 3659, 3538,
	2845, -217, -1000, 126945, 52013, 126945, -222, -225, 2459, -1000,
	-1000, 1130, 1282, 52013, 1124, -1000, -1000, -1000, 74022, 562,
	2388, 2388, -1000, -228, -230, -1000, -1000, -1000, 52013, 1183,
	126945, 35061, -1000, 3821, 3465, -1000, -1000, -1000, -1000, -1000,
	-1000, 126945, 126945, -1000, 126945, 126945, -1000, 52013, -1000, 143923,
	52013, 1182, -1000, -1000, -1000, 3773, 2388, 26436, 2388, -1000,
	2388, 3503, 1150, 2389, 126945, 139258, 99935, 1909, 1909, 2903,
	-1000, -1000, -1000, 2545, 2545, 82317, 65181, 65181, -1000, -76,
	990, -1000, 3647, 2266, 3820, -1000, -1000, -1000, -1000, 2638,
	-1000, -1000, -1000, 126945, 2636, 2850, 62205, 557, 555, 126945,
	983, -1000, -231, 84075, 967, 970, -1000, -1000, -1000, -1000,
	494, -1000, 2752, 3645, -1000, 3771, 543, 542, 126945, 2393,
	541, 26436, 3456, 828, 82903, -1000, 3299, 1990, -1000, 2470,
	126945, 3418, -1000, 2710, 540, -1000, 982, 539, 982, -1000,
	-233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3643,
	989, -77, -1000, 933, 915, -1000, -1000, -1000, 99935, 99935,
	52013, 52013, -1000, 5783, 5783, 5783, -1000, 327, -1000, -1000,
	2334, 3529, -1000, -92, 139877, 139847, 4990, 56227, 74022, -236,
	-1000, -1000, 126945, 146291, -99, -1000, 146291, 538, 535, 478,
	-1000, -1000, -1000, 578, 483, -1000, -1000, -1000, -1000, 3819,
	-1000, -1000, -1000, -1000, 139258, 3818, -1000, 139258, -147, 139258,
	139258, 1770, -1000, 109911, 126945, -1000, -1000, 1659, 1803, -1000,
	-1000, 126945, 2478, -1000, -1000, -1000, 986, 52013, 9061, 56227,
	534, 52013, -1000, 533, 523, 3640, 3342, -1000, 2727, 2915,
	2024, 62205, -1000, 3430, -1000, 18527, -1000, 1087, 2053, -1000,
	-1000, -1000, -1000, 146291, 56227, 3503, 62205, -1000, -1000, 516,
	514, 146291, 513, 844, 2947, -1000, -1000, -1000, -1000, -171,
	-171, -1000, 146291, 128, 146291, 509, 3596, -1000, -1000, -1000,
	-1000, 2388, 99935, 843, -1000, -1000, -1000, 1181, -1000, -1000,
	-1000, -1000, 3817, 3815, 2946, 88775, -1000, -244, -1000, -1000,
	-1000, 2047, 128, 967, -1000, -1000, 2412, 505, -1000, 978,
	2715, 2715, -246, 62205, 62205, -247, 2378, 2749, -1000, 319,
	3639, 970, -1000, 3726, -1000, 3630, 3378, -1000, 128, -1000,
	3770, 62205, -1000, 99935, 62205, 2391, 2166, 2602, 82903, -1000,
	2613, -1000, -1000, -249, 126945, 1990, -1000, -1000, 82317, -1000,
	-1000, -1000, 1325, -1000, 2555, -1000, 126945, -1000, 126945, -1000,
	-1000, -252, -254, -1000, 2167, 52013, 34459, -1000, -1000, 4990,
	-255, -1000, -107, -1000, 3623, 53819, 3814, 3812, 3811, -1000,
	-1000, -1000, -282, -1000, -147, -147, -147, 126945, -1000, 2044,
	-1000, 2473, -1000, -1000, 3162, -1000, 2853, 504, 18129, 9061,
	2580, 126945, 17717, 2143, 2143, -1000, 3621, 2906, -1000, -1000,
	2240, 503, -1000, -1000, -1000, -1000, 921, 126945, 978, 2849,
	99935, 9061, 1093, -261, 2244, 2244, 52013, 33857, 2294, -1000,
	52013, -1000, -1000, 3503, 65181, 139258, -1000, -1000, 139258, 2382,
	-1000, 2892, 3739, -1000, 2378, 126945, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1087, -262,
	-263, -1000, -1000, 3490, -1000, 3376, 2737, 128, -1000, -1000,
	128, 3810, 987, 316, -264, 1089, -272, 99935, 2041, -1000,
	828, -1000, 2615, 1022, 3308, -1000, -274, 3751, -1000, -280,
	-283, -1000, -1000, 315, 53217, 53217, 53217, -127, -135, -1000,
	126945, 502, -1000, -1000, -1000, -1000, -1000, 121, -1000, -1000,
	3130, 918, -1000, 899, 1957, 304, 1107, 302, -17, -1000,
	-1000, -1000, 2845, -1000, 126945, -1000, -1000, -1000, 918, 494,
	-1000, 52013, 1087, -286, -1000, 1075, -288, -1000, 1064, -289,
	-1000, 2927, -1000, -291, 2388, -1000, -282, 241, 1909, 985,
	3569, -1000, -1000, -1000, 2592, -294, -1000, -1000, 2024, 1087,
	2240, 2455, -1000, 2266, 983, -1000, -1000, -1000, -1000, 1087,
	492, 2024, 488, 1499, 828, -1000, -1000, 1471, 3456, 3306,
	1337, 982, -1000, -1000, -1000, -1000, -1000, 3187, -1000, 57431,
	2405, 1934, 143091, 3187, 3187, -1000, -1000, 139258, 126945, 978,
	3557, -1000, 904, 902, 1558, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1022, -299, -1000, 2580, 146291, 978, -1000,
	2244, 2774, -1000, 2244, 2900, -1000, 2293, -1000, -1000, -1000,
	-1000, 2898, -1000, 1884, 3721, -1000, -1000, 978, 126945, 2240,
	2024, 978, 1919, 1917, 3809, 967, 2378, 2024, 62205, 2240,
	62205, 2235, -1000, 126945, -1000, 2166, 1333, -1000, 1669, -1000,
	-1000, 1825, 3681, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-147, -1000, -1000, 842, -1000, 3322, -1000, 1117, 2321, 2321,
	-1000, -1000, 899, -1000, -1000, 481, -1000, 475, -1000, 139258,
	2343, -1000, -1000, -1000, -1000, 978, 2240, 1022, -1000, 3808,
	-1000, 2378, -1000, 2240, -300, 978, -302, 2303, -1000, -1000,
	-171, 2041, -1000, 1663, 71086, 1930, -1000, -1000, 2329, 52615,
	52013, -1000, 3710, -1000, -1000, 2679, -1000, 2845, 52013, 52013,
	241, 69326, 1022, 978, -1000, -1000, 2592, 978, 1087, 1022,
	2024, -1000, 828, 1499, 71086, -281, -1000, -1000, -1000, 146291,
	-1000, -1000, -1000, -1000, -307, -309, -1000, -172, 109325, -1000,
	1022, -1000, 1022, 2024, -1000, 2240, 139258, 2235, -281, -1000,
	2240, 1169, -312, -1000, -1000, 2240, 978, -1000, -1000, -1000,
	-1000, -1000, 457, -1000, 978, 1022, 52013, 1022, -1000, -320,
	-1000, 2240, -1000,
}

var sqlPgo = [...]int{
	0, 4659, 4658, 4655, 4654, 4653, 4652, 4651, 4650, 4648,
	4646, 4644, 4641, 4639, 4638, 151, 4637, 4636, 4634, 4633,
	4630, 4629, 4624, 4623, 4618, 4617, 4616, 4615, 4613, 4612,
	4608, 4607, 4606, 4605, 4604, 4603, 4601, 4600, 4599, 4598,
	4596, 4595, 4594, 4593, 4592, 4590, 4589, 4588, 4584, 4581,
	4580, 4579, 4575, 4573, 4572, 4571, 4569, 4568, 4565, 4564,
	4562, 4561, 4559, 4557, 4556, 4555, 4553, 4549, 4547, 4546,
	4545, 4543, 4542, 56, 4541, 4540, 4534, 4531, 4526, 4525,
	4523, 4522, 4521, 4518, 4516, 4515, 4513, 4512, 4510, 4509,
	4508, 4507, 4506, 68, 4504, 296, 4503, 4502, 4501, 4500,
	4497, 4495, 4494, 4491, 4487, 4485, 4483, 4482, 295, 4481,
	161, 175, 4480, 4479, 3993, 4478, 4477, 290, 4476, 4471,
	4470, 4469, 4468, 298, 4467, 4466, 4464, 4463, 4459, 275,
	4458, 4457, 4456, 4454, 4453, 4450, 121, 141, 4448, 4447,
	690, 4446, 4444, 4442, 4440, 4437, 4435, 4433, 271, 274,
	4432, 4430, 4427, 263, 186, 4426, 288, 4425, 4424, 4423,
	4422, 4417, 4416, 4413, 4412, 4409, 4407, 4406, 4399, 4397,
	4396, 4387, 4386, 4385, 4384, 4383, 4381, 4378, 4373, 4371,
	4370, 4369, 4367, 4366, 4365, 4364, 4362, 4357, 4356, 4355,
	4354, 4353, 4351, 4349, 4346, 4337, 4336, 4335, 4334, 276,
	228, 124, 4333, 4332, 287, 285, 4330, 4329, 4328, 4327,
	4326, 3591, 4325, 4324, 4323, 4320, 4315, 4312, 4311, 4310,
	4309, 147, 12, 54, 4307, 4306, 94, 96, 92, 82,
	108, 105, 4303, 4302, 128, 4301, 136, 118, 4299, 119,
	115, 22, 18, 173, 260, 12643, 243, 4298, 4297, 4295,
	257, 207, 4294, 253, 4293, 4292, 4291, 4290, 4289, 4288,
	83, 63, 222, 4287, 4285, 145, 185, 195, 191, 174,
	190, 412, 59, 106, 86, 67, 43, 14, 103, 227,
	20, 9, 281, 4284, 279, 10, 143, 16, 36, 4283,
	4282, 4280, 4278, 3975, 111, 4277, 284, 256, 184, 4276,
	4275, 4273, 282, 4272, 4271, 52, 269, 216, 95, 113,
	45, 138, 4268, 157, 180, 32, 4267, 177, 70, 4266,
	4265, 109, 98, 8618, 10857, 4264, 4262, 137, 77, 93,
	3661, 166, 160, 208, 223, 134, 182, 178, 4259, 55,
	4257, 220, 218, 194, 23, 4256, 264, 4254, 3622, 158,
	198, 170, 6340, 4252, 4251, 4249, 90, 4248, 110, 4247,
	4246, 60, 15, 4, 2, 149, 38, 44, 3, 4245,
	37, 133, 51, 25, 4242, 26, 4240, 4239, 4238, 4237,
	48, 4230, 46, 176, 4228, 4216, 301, 4213, 88, 65,
	50, 4208, 42, 234, 4207, 239, 144, 4205, 4201, 266,
	197, 4200, 76, 248, 4199, 4195, 4189, 4188, 4187, 4183,
	140, 1, 146, 4175, 4173, 155, 4171, 53, 250, 212,
	4170, 64, 4168, 4166, 192, 62, 148, 300, 193, 237,
	132, 241, 201, 245, 4164, 4163, 4159, 226, 4158, 4157,
	235, 165, 4154, 4153, 259, 303, 102, 49, 89, 255,
	87, 211, 172, 4151, 214, 4150, 4147, 302, 196, 232,
	39, 11, 6, 104, 112, 4146, 5, 249, 171, 242,
	130, 4145, 8624, 2842, 2605, 247, 4144, 159, 131, 85,
	156, 164, 286, 97, 4143, 4142, 2418, 4141, 4139, 4138,
	4137, 202, 4136, 4135, 4134, 152, 168, 210, 4133, 126,
	81, 61, 24, 125, 262, 297, 123, 236, 188, 265,
	4132, 4130, 4129, 200, 4128, 78, 359, 4127, 215, 268,
	66, 4125, 187, 4124, 169, 1011, 79, 167, 4122, 238,
	4121, 4120, 4119, 4118, 4117, 4116, 4114, 661, 251, 4110,
	4108, 4107, 34, 209, 4106, 283, 183, 206, 57, 99,
	4105, 101, 127, 4104, 205, 224, 75, 8, 4103, 73,
	4099, 4474, 69, 4097, 0, 14333, 9823, 12788, 13701, 4096,
	2443, 4095, 4094, 4092, 230, 84, 4089, 4085, 4084, 114,
	4083, 91, 4081, 4080, 71, 4079, 27, 21, 17, 30,
	28, 272, 74, 4077, 4074, 150, 135, 153, 4072, 299,
	244, 4070, 4069, 4068, 4067, 116, 4066, 47, 4065, 40,
	4062, 4059, 41, 13, 29, 4058, 4057, 163, 4054, 120,
	217, 179, 4053, 181, 4052, 72, 142, 4051, 4044, 278,
	221, 225, 100, 4043, 293, 4042, 213, 4039, 4026, 31,
	4021, 4020, 258, 122, 117, 58, 261, 139, 33, 4018,
	199, 231, 4016, 4015, 189, 4014, 4013, 4010, 294, 4009,
	3595, 280, 4008, 35, 4004, 4003, 4002, 7, 4000, 3999,
	219, 3328, 3998, 3996, 19, 3995, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 628, 628, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 526, 526, 526, 557, 557, 557, 557, 559,
	559, 653, 653, 654, 654, 654, 654, 654, 139, 139,
	423, 423, 423, 61, 61, 61, 61, 61, 623, 623,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 649, 649, 649, 229,
	229, 229, 231, 231, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 236, 18, 18,
	18, 118, 118, 118, 118, 118, 118, 118, 113, 113,
	561, 561, 562, 562, 220, 220, 221, 221, 221, 221,
	222, 222, 223, 223, 223, 76, 76, 233, 233, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 67, 67, 74, 74, 74, 74, 74, 74, 74,
	74, 201, 201, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 81, 81, 81, 81, 81,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 656,
	656, 657, 657, 658, 658, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 90, 90, 384, 384, 347, 347, 91, 91, 91,
	92, 92, 93, 93, 78, 78, 620, 620, 621, 621,
	621, 621, 517, 517, 95, 95, 422, 422, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 105, 105, 105, 105, 105,
	106, 106, 106, 103, 103, 103, 100, 100, 100, 99,
	99, 99, 104, 104, 104, 619, 333, 333, 102, 102,
	102, 101, 101, 101, 400, 400, 107, 107, 107, 107,
	348, 108, 108, 108, 108, 108, 108, 108, 108, 111,
	111, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 519, 519, 4, 4, 263, 263,
	262, 262, 262, 262, 5, 5, 5, 266, 266, 265,
	264, 109, 109, 109, 484, 484, 114, 114, 114, 438,
	438, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 625, 625, 393,
	393, 296, 296, 296, 296, 127, 127, 127, 127, 128,
	128, 128, 128, 129, 129, 206, 206, 145, 145, 145,
	145, 144, 144, 144, 144, 144, 144, 144, 144, 68,
	68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
	73, 73, 73, 73, 73, 148, 148, 31, 31, 31,
	31, 149, 149, 650, 650, 151, 147, 147, 147, 147,
	147, 146, 146, 150, 150, 150, 150, 152, 154, 154,
	154, 154, 154, 153, 153, 153, 153, 153, 155, 155,
	551, 551, 408, 408, 549, 549, 571, 571, 550, 550,
	354, 354, 354, 354, 354, 355, 355, 355, 560, 560,
	560, 560, 560, 560, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	207, 207, 207, 208, 208, 213, 213, 214, 214, 214,
	215, 215, 215, 212, 212, 212, 209, 209, 210, 210,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	218, 218, 216, 216, 217, 217, 661, 661, 660, 660,
	219, 219, 219, 219, 219, 182, 182, 182, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 409,
	409, 185, 185, 185, 169, 169, 157, 157, 157, 157,
	157, 157, 157, 157, 232, 232, 232, 232, 162, 162,
	162, 162, 162, 162, 162, 162, 163, 163, 163, 158,
	158, 171, 171, 171, 171, 171, 164, 164, 165, 165,
	165, 166, 166, 166, 166, 193, 193, 168, 168, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 159, 159,
	159, 159, 173, 173, 173, 173, 445, 445, 445, 199,
	199, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 196, 196, 196,
	196, 196, 196, 641, 641, 642, 642, 642, 189, 189,
	189, 189, 189, 189, 498, 498, 183, 183, 183, 183,
	188, 188, 188, 188, 191, 191, 191, 191, 428, 428,
	180, 180, 180, 181, 181, 181, 186, 186, 198, 187,
	385, 385, 184, 184, 190, 190, 190, 190, 192, 192,
	192, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	161, 161, 161, 161, 194, 194, 179, 179, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 662,
	662, 175, 175, 175, 174, 174, 174, 174, 177, 177,
	178, 178, 178, 178, 178, 178, 178, 176, 167, 197,
	622, 622, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 618, 618, 618, 618, 618, 624, 624, 119, 119,
	119, 119, 119, 119, 119, 130, 130, 130, 130, 130,
	130, 130, 133, 133, 120, 120, 120, 120, 120, 120,
	120, 123, 123, 121, 121, 121, 121, 122, 122, 85,
	85, 85, 85, 85, 17, 17, 17, 86, 86, 287,
	287, 241, 241, 241, 372, 372, 242, 242, 362, 362,
	362, 362, 237, 237, 238, 238, 239, 240, 240, 87,
	87, 663, 663, 663, 634, 634, 634, 635, 635, 635,
	635, 635, 635, 356, 356, 357, 357, 464, 464, 464,
	464, 464, 360, 360, 360, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 370, 371, 371, 363, 363, 369,
	368, 368, 367, 367, 366, 366, 364, 365, 365, 365,
	374, 374, 373, 376, 376, 375, 463, 580, 580, 582,
	582, 582, 582, 582, 582, 582, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 446, 446, 664, 664, 665, 666, 578,
	578, 578, 579, 574, 574, 575, 575, 575, 575, 575,
	358, 358, 359, 359, 359, 359, 576, 577, 391, 391,
	502, 581, 581, 583, 583, 585, 667, 667, 667, 667,
	667, 667, 668, 668, 668, 462, 462, 461, 461, 460,
	460, 382, 382, 586, 586, 586, 586, 587, 587, 587,
	587, 587, 590, 589, 588, 588, 588, 588, 588, 89,
	89, 89, 425, 425, 424, 424, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 203, 203, 299, 299, 299, 83, 83, 83, 14,
	14, 14, 14, 14, 14, 14, 314, 314, 15, 15,
	15, 636, 636, 636, 88, 88, 88, 88, 88, 88,
	380, 380, 380, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 627,
	627, 626, 626, 300, 300, 670, 670, 94, 94, 94,
	94, 94, 94, 94, 94, 520, 520, 521, 521, 82,
	82, 82, 82, 82, 447, 447, 444, 444, 443, 443,
	390, 390, 500, 500, 500, 501, 304, 304, 305, 305,
	260, 260, 260, 34, 33, 24, 24, 28, 28, 29,
	29, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	30, 30, 54, 54, 54, 54, 55, 55, 55, 55,
	58, 58, 59, 59, 53, 53, 53, 53, 56, 56,
	50, 50, 60, 60, 60, 60, 60, 643, 645, 645,
	644, 644, 648, 648, 648, 648, 648, 648, 646, 646,
	335, 335, 647, 647, 651, 651, 652, 652, 126, 126,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 134,
	134, 134, 134, 143, 143, 202, 202, 202, 202, 202,
	202, 202, 62, 62, 62, 62, 75, 75, 75, 75,
	141, 672, 672, 672, 142, 142, 142, 671, 671, 297,
	297, 457, 457, 458, 458, 673, 673, 459, 459, 459,
	459, 459, 290, 289, 291, 291, 292, 292, 80, 80,
	80, 280, 280, 279, 281, 281, 282, 282, 277, 277,
	563, 563, 284, 284, 284, 285, 285, 273, 273, 274,
	274, 275, 275, 276, 276, 288, 288, 558, 558, 674,
	674, 117, 117, 117, 205, 205, 346, 346, 346, 454,
	454, 454, 383, 383, 311, 311, 456, 456, 456, 456,
	456, 421, 421, 421, 204, 204, 398, 398, 411, 411,
	412, 412, 514, 514, 413, 124, 124, 125, 125, 140,
	140, 245, 245, 243, 243, 243, 243, 243, 243, 243,
	243, 250, 250, 251, 251, 252, 252, 253, 254, 254,
	254, 254, 401, 401, 255, 255, 255, 244, 244, 244,
	246, 246, 246, 246, 246, 246, 246, 249, 249, 249,
	249, 256, 256, 256, 248, 248, 597, 597, 597, 599,
	599, 601, 601, 600, 600, 596, 596, 598, 598, 669,
	669, 427, 427, 427, 379, 381, 377, 377, 378, 378,
	388, 388, 386, 387, 387, 389, 389, 499, 499, 499,
	261, 261, 261, 418, 418, 418, 418, 419, 419, 450,
	450, 448, 448, 448, 448, 449, 449, 451, 451, 451,
	452, 452, 453, 453, 415, 415, 416, 416, 417, 417,
	417, 417, 480, 480, 247, 247, 247, 395, 395, 395,
	396, 396, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 471, 471, 469, 469, 469, 469, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 504, 505,
	505, 397, 397, 506, 455, 455, 615, 615, 615, 616,
	616, 497, 497, 507, 507, 507, 507, 507, 507, 495,
	495, 496, 496, 515, 516, 516, 431, 431, 431, 431,
	429, 429, 432, 432, 432, 432, 432, 430, 430, 508,
	508, 508, 508, 420, 420, 509, 509, 509, 509, 510,
	511, 511, 512, 512, 465, 466, 466, 522, 522, 522,
	522, 524, 394, 394, 394, 394, 394, 573, 572, 572,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 539, 539, 539, 539, 539, 539, 539, 525, 525,
	525, 525, 525, 529, 529, 529, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 530, 530, 535,
	535, 536, 536, 536, 531, 532, 537, 537, 537, 537,
	675, 675, 541, 541, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 527, 527, 527, 534, 534, 534, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 439, 439, 441, 441, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 474, 474, 474,
	474, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 591, 591, 591, 591,
	591, 591, 591, 591, 476, 476, 594, 594, 595, 595,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 602, 602, 603, 603, 605, 605, 606, 606, 607,
	608, 608, 608, 609, 610, 610, 604, 604, 611, 611,
	611, 611, 612, 612, 613, 613, 613, 613, 613, 614,
	614, 614, 614, 614, 486, 486, 487, 487, 493, 493,
	493, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 353, 353, 352, 301,
	301, 301, 301, 301, 301, 406, 406, 404, 404, 404,
	407, 407, 405, 405, 403, 403, 402, 402, 483, 483,
	481, 481, 485, 485, 433, 433, 540, 540, 540, 540,
	540, 540, 540, 540, 434, 434, 434, 442, 435, 435,
	436, 436, 436, 436, 436, 477, 478, 437, 437, 437,
	479, 479, 488, 492, 492, 491, 490, 490, 489, 489,
	467, 467, 468, 468, 414, 414, 676, 676, 410, 410,
	513, 513, 513, 513, 350, 350, 399, 399, 349, 349,
	341, 341, 342, 342, 342, 342, 392, 392, 494, 494,
	542, 542, 543, 543, 544, 544, 545, 545, 546, 547,
	548, 482, 482, 322, 321, 308, 309, 320, 319, 318,
	307, 310, 315, 316, 317, 312, 313, 329, 328, 327,
	278, 283, 334, 336, 336, 339, 339, 340, 338, 337,
	337, 324, 325, 326, 518, 306, 343, 343, 344, 344,
	344, 345, 345, 345, 345, 302, 302, 303, 303, 330,
	330, 331, 332, 332, 323, 323, 323, 293, 293, 293,
	294, 294, 295, 295, 556, 556, 553, 553, 553, 554,
	554, 554, 555, 555, 555, 555, 552, 552, 552, 552,
	552, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 565, 565, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 567, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 570, 570,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	9, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 2, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 3, 2, 1,
	4, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	3, 2, 2, 2, 4, 6, 3, 1, 2, 2,
	7, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 5, 2, 6, 9, 4, 7, 7,
	10, 7, 10, 10, 13, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 1,
	2, 2, 2, 9, 2, 1, 0, 1, 1, 0,
	1, 2, 0, 2, 2, 0, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 3, 0, 1, 1, 1, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 5, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 14, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -150, -151, 484, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -655, 106, -598, -98, -101, -134, -659, 168, 232,
	-120, -121, -122, 386, -128, -129, 446, -131, -132, -133,
	449, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 489, -187,
	-197, -165, -198, 554, 52, 505, 85, 152, 457, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-597, -99, -100, -103, -105, -106, -102, -104, 445, 606,
	-246, -244, 631, 570, -162, -21, -26, -22, -23, -25,
	-27, -24, -28, -29, -30, -46, -51, -48, -49, -47,
	-50, -52, -53, -54, -55, -56, -57, -58, -59, -33,
	-39, -40, -34, -35, -36, -37, -38, -41, -42, -43,
	-44, -45, -19, -20, -32, 593, 602, -249, -247, -248,
	-256, 476, 578, 527, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	-348, 2, -324, -330, -331, -332, -323, -293, -567, -570,
	4, -564, -568, 175, 242, 347, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	195, 198, 199, 200, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 213, 217, 219, 220, 221, 222, 223,
	224, 225, 231, 232, 234, 235, 236, 237, 238, 243,
	244, 245, 249, 255, 256, 260, 261, 262, 264, 268,
	269, 270, 271, 272, 273, 275, 277, 276, 279, 282,
	283, 286, 287, 288, 289, 290, 291, 295, 296, 292,
	297, 298, 300, 301, 304, 302, 305, 306, 303, 307,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 308, 309, 324, 322, 326, 327, 328, 329,
	330, 345, 340, 341, 342, 334, 335, 331, 336, 332,
	333, 337, 338, 344, 339, 349, 350, 351, 352, 355,
	229, 248, 357, 358, 361, 363, 380, 366, 367, 368,
	371, 372, 375, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 391, 392, 394, 395, 396, 398,
	399, 400, 402, 404, 405, 407, 408, 409, 411, 412,
	413, 414, 415, 416, 417, 418, 420, 421, 423, 422,
	424, 426, 428, 429, 430, 436, 437, 444, 438, 440,
	441, 442, 443, 445, 446, 447, 448, 449, 451, 452,
	453, 455, 456, 457, 458, 459, 461, 463, 464, 468,
	469, 470, 486, 487, 508, 465, 466, 467, 471, 472,
	473, 474, 475, 479, 477, 478, 480, 481, 482, 484,
	485, 488, 489, 491, 492, 493, 494, 495, 496, 497,
	500, 502, 503, 504, 505, 506, 526, 507, 509, 513,
	514, 515, 516, 510, 511, 525, 518, 519, 520, 522,
	523, 528, 529, 530, 531, 532, 533, 535, 536, 538,
	546, 547, 548, 549, 551, 554, 555, 556, 557, 544,
	559, 560, 563, 564, 568, 565, 569, 566, 567, 570,
	572, 575, 576, 577, 583, 582, 584, 585, 586, 588,
	589, 594, 595, 597, 598, 599, 37, 53, 54, 57,
	59, 61, 72, 73, 74, 78, 129, 130, 159, 171,
	172, 184, 201, 202, 214, 216, 226, 227, 228, 250,
	251, 253, 258, 280, 354, 356, 373, 377, 393, 397,
	401, 403, 419, 460, 498, 512, 517, 539, 540, 541,
	542, 550, 552, 578, 579, 580, 587, 596, -348, 2,
	-324, 364, -317, 2, -293, -293, 404, 29, 2, 29,
	392, 478, 530, 532, 2, -625, -393, 2, 29, -296,
	-293, 106, 212, 476, -317, 2, -625, 212, -393, 26,
	2, -293, 2, 378, 23, 28, 69, 80, 102, 145,
	170, 193, 198, -658, 380, 412, 463, 480, 525, 536,
	551, 2, 582, 301, 477, 527, 242, 124, 556, 471,
	-636, 468, 469, 378, 410, 455, 215, 571, -297, 2,
	465, -293, 301, 2, 634, 98, 77, 460, 481, -153,
	2, 291, 547, -154, -155, -152, 539, -551, 471, 455,
	324, -293, 634, 634, 634, 29, -306, 2, -293, -306,
	2, -211, 2, -306, -660, -218, -217, -216, 22, 437,
	183, 273, 196, 233, 329, 407, 194, 50, -211, 2,
	527, 242, 471, 124, 523, 634, 634, 2, 527, 383,
	582, 477, 124, 416, 242, 556, 198, 145, 28, 71,
	48, 533, 610, 471, -636, 607, 608, 301, 131, -623,
	2, -617, 4, -568, -564, -342, -341, 527, 533, 124,
	-332, -323, 623, -331, 634, 634, 634, 634, 2, 261,
	262, 414, 413, 481, 482, 29, 634, 634, 634, 634,
	468, 2, 170, 23, 28, 69, 97, 102, 131, 193,
	198, 369, -656, 380, 412, 480, 525, 529, 536, 551,
	-635, 507, 71, 471, -634, -636, 301, 556, 145, -443,
	124, 291, 210, 564, 532, 530, 562, 137, 249, 567,
	566, 634, 634, -111, 2, 631, 33, 32, -110, -114,
	147, 484, -236, 527, 254, 2, -293, 634, 634, 634,
	2, 261, 262, 468, 469, 29, 634, 634, 196, -617,
	523, 2, 634, 634, 634, 2, 29, 261, 262, 468,
	469, 254, 2, 71, 473, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 2, -200, 481, 507, 222, 49, 48, 77,
	29, 411, 82, 384, 125, 131, 154, 557, 213, 242,
	243, 269, 97, 98, -445, 46, 262, 71, 261, 469,
	-641, 468, -498, 528, 472, 478, 522, 89, 273, 465,
	547, 549, 106, 572, 456, 599, 416, 417, 520, 430,
	518, 292, 163, 197, 4, 124, 324, 455, 483, 277,
	276, 539, 291, 464, 387, 87, 634, -669, 2, 527,
	-671, 2, 547, 547, 2, -671, 2, -671, 2, -671,
	2, -672, 547, 596, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, -244, -246, -245, 634, 634, 634,
	634, 634, 634, 634, -200, 481, 2, 77, 29, 29,
	-386, -388, 561, 252, 156, 370, -243, -245, 2, -597,
	-549, 2, -472, -571, -474, 621, 622, 614, 524, 70,
	-352, 346, 600, -486, 131, 562, 364, -570, -475, -488,
	159, 380, 460, -407, 8, 9, 5, 6, 7, -302,
	-476, -482, 553, 174, 353, -345, 635, 10, 631, -594,
	-245, -487, 38, 216, 68, -553, -344, -303, -525, 253,
	-343, -323, -591, -592, 4, -564, -565, -554, -528, -536,
	-532, -533, -539, -293, -567, 80, 115, 116, 114, 119,
	118, 294, 293, 120, 117, 483, 571, 69, 37, 226,
	227, 258, 354, 228, 78, -593, 146, -566, 250, 251,
	498, 54, 419, 184, 130, 129, 356, 59, 57, 579,
	-537, 126, 539, 540, 541, 542, 201, 202, 61, 171,
	172, 377, 401, 517, 550, 552, 214, 280, 45, 110,
	197, 247, 230, 257, 259, 263, 281, 284, 325, 343,
	348, 374, 376, 454, 490, -675, 580, 512, 72, 73,
	189, -599, 422, -600, -317, -599, 634, 634, 636, 634,
	-377, -379, -381, 2, 29, 143, 631, 2, -503, 2,
	-504, -508, -245, 274, -507, 631, -505, 629, -324, 365,
	-595, 461, -591, -592, -302, -323, -344, 4, -564, -566,
	633, -382, 631, 124, 471, 527, 81, 242, 97, 170,
	198, -438, 631, -293, 29, 364, 543, 636, -378, 409,
	-484, 631, 364, 367, 196, 367, 63, 305, 2, 2,
	2, 2, 2, 226, -293, 527, 123, 2, 272, 2,
	2, 2, 2, 2, 2, 2, -400, 226, 2, -324,
	582, -400, 226, 2, -400, 226, 2, -444, 2, 91,
	-307, 226, 2, -293, -333, 226, 2, -328, -330, -339,
	226, 2, -336, -293, -559, 226, 2, -557, 4, -564,
	120, 483, -472, 2, -140, 2, 63, -293, 582, 2,
	486, 2, 631, -153, 2, 74, 547, 45, 481, -154,
	2, -458, 2, -459, -289, -290, -291, -515, -292, 260,
	408, 418, 603, 135, 346, 599, -650, 196, 613, 543,
	-549, -549, -549, -408, 633, -213, 56, -306, -661, -660,
	-661, -547, 29, -542, 8, -543, 621, 622, -547, -547,
	-661, -661, 2, 2, 2, 2, 2, 2, -508, 226,
	-324, 2, -321, -552, 4, -564, -568, -565, -569, -567,
	29, 32, 33, 34, 36, 38, 39, 40, 42, 60,
	68, 69, 75, 79, 81, 91, 97, 106, 114, 115,
	117, 116, 118, 119, 120, 131, 135, 139, 143, 144,
	148, 152, 156, 174, 176, 189, 193, 196, 212, 215,
	218, 233, 246, 252, 254, 274, 278, 285, 293, 294,
	346, 353, 359, 364, 365, 369, 370, 390, 406, 425,
	450, 476, 483, 501, 521, 527, 537, 543, 545, 553,
	561, 562, 571, 573, 581, 590, 591, 592, 593, -570,
	80, 2, -508, 226, 2, -327, 226, -508, -330, 2,
	-307, 2, -472, -629, 535, 166, 438, 2, -349, 226,
	-324, -326, -330, -328, 2, 2, 2, 2, -472, 2,
	-561, 2, -556, 10, -555, 5, 4, -564, -568, -565,
	-475, 2, -486, 29, -336, 2, -557, 226, 2, 29,
	29, 582, 409, 254, 543, 636, -399, -341, -342, -548,
	4, 8, -392, -293, 633, -472, 2, -140, -123, 2,
	189, -472, 226, 2, -140, 226, 2, -472, 226, 2,
	-140, 226, 2, -293, 2, -637, 2, -561, 226, 226,
	-293, 2, 305, 2, 2, 551, 2, 102, 527, 123,
	2, 442, -657, 463, 555, 2, 2, 2, 2, 2,
	2, 2, 527, -312, 2, -293, 189, -336, 226, -337,
	2, 477, -670, 422, -557, 226, 2, 582, -328, 226,
	2, -328, 242, 256, -307, 226, 2, 532, 530, 532,
	530, 196, 2, 254, 2, 254, 2, -509, 2, -510,
	-504, -511, 629, 365, -519, 2, -518, -555, 578, -111,
	631, -111, 631, 481, 631, -561, -324, -324, -472, 2,
	-140, -123, 2, -472, 2, -140, 2, -293, 2, -137,
	-561, -136, 631, 196, 572, -293, 2, -472, 2, -140,
	-123, 2, -472, 2, -140, 2, -236, 189, 2, 124,
	527, -200, 2, 189, 573, 2, 8, 2, 233, -232,
	-561, 472, 181, 417, 2, 486, 2, 487, 77, -445,
	599, 77, 196, 2, 196, 2, -428, 2, 593, 409,
	196, 2, 2, -622, 2, 364, 196, 2, 196, 2,
	196, 2, 196, 2, 196, 2, -199, 482, 548, 526,
	413, 262, 2, -140, 590, -123, 262, 261, -472, 590,
	2, -642, 189, 469, -472, 2, 546, 271, 164, 196,
	-428, 2, 196, 2, 196, 2, 5, 2, 43, 414,
	508, 2, 260, 408, 508, 2, 506, 2, -324, 527,
	582, 477, 124, 29, 2, 468, 2, 2, 92, 93,
	196, 2, 196, 2, 211, 196, 2, 430, 196, 527,
	-409, 633, 599, 2, -420, -508, -457, -458, -457, 543,
	-386, -388, -200, 486, 2, -250, -418, -252, 189, -448,
	-449, -253, 285, 176, 359, -254, -427, 29, 143, -427,
	-427, 63, 632, 632, 11, 12, 79, 43, 621, 622,
	623, 624, 187, 625, 626, 619, 620, 618, 611, 612,
	616, 266, 267, 99, 615, 613, 90, 299, 462, 177,
	178, 179, 180, 439, 240, 35, 241, 14, 15, 16,
	-352, 34, 369, 284, 600, 230, 490, 614, 17, 18,
	19, 257, 259, 348, 53, 233, -301, 380, -351, 524,
	70, -472, -472, -472, -472, -472, -472, -472, -472, 376,
	631, -414, -467, 629, -245, 631, 631, 631, 631, -548,
	-245, -472, -486, 632, -405, 631, -245, -486, -481, 631,
	460, 629, 631, -489, -472, 5, 5, 5, 631, 633,
	-602, 594, 189, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 403,
	-530, 631, -529, 631, -529, -529, 583, -527, 631, 602,
	595, 631, -527, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 583, 533, 636, -599,
	-382, 631, -410, -513, -472, 623, -410, -410, 364, -402,
	-472, 110, -431, 263, 325, 197, 281, 454, 247, -469,
	635, -469, -497, 602, -245, -505, -323, -245, -507, 631,
	-503, -497, -112, -548, -95, -108, -117, -140, -156, -204,
	-205, 623, -324, 631, 196, 631, 633, -552, 196, -392,
	-307, -336, -324, -343, -344, -349, -318, -293, 2, 2,
	142, -402, -617, 556, 471, 29, 477, -559, -296, 39,
	-483, -522, -523, -573, 635, -572, -525, -535, -531, -534,
	393, 397, -554, 57, 579, -537, 253, 4, -564, -566,
	250, 251, 498, 54, 419, 184, 130, 129, 356, 59,
	539, 540, 541, 542, 201, 202, 61, 580, 512, 72,
	73, -617, 556, 471, 29, 477, 189, -559, 189, -559,
	2, 2, 159, 2, 2, 2, -293, -271, 636, 67,
	447, 159, -400, 226, -271, 159, -271, 159, -350, 226,
	-349, -271, 159, -271, 636, 159, -271, 636, 159, 633,
	636, 159, -559, 2, -444, -551, -402, 39, -458, 2,
	131, 4, 5, -673, 636, 283, -355, 298, 345, 221,
	365, 597, 357, 135, -560, 5, 4, -482, -494, 131,
	291, 253, -542, -544, 9, -545, 621, 622, -550, -549,
	113, 633, -552, -214, 248, 41, -306, -306, -661, -661,
	8, 8, -661, -661, -306, -306, -268, 440, 484, 379,
	-267, 25, 30, 147, 244, 330, 576, 165, -367, 245,
	445, -364, 383, 159, 502, 565, -629, -632, 467, 535,
	166, 438, 94, 357, 484, 379, 440, 159, -424, -426,
	39, 122, 330, 378, 64, 236, 303, 304, 505, 587,
	159, 484, 379, 440, 379, -15, -282, 25, 147, -284,
	-279, 484, 30, -632, 103, 440, 606, 445, 389, 519,
	406, -632, -629, 279, -631, 589, 344, -270, 502, 565,
	-629, -632, 467, 440, -269, -369, -364, 383, 159, 635,
	25, 147, 440, 484, 379, -653, -654, 30, -263, -262,
	25, 147, 484, 568, -266, 233, -265, 25, -149, -129,
	-148, 445, 484, -149, 2, 440, 379, -626, -314, -596,
	233, 593, 159, -314, -314, -508, 226, -646, 189, 2,
	-639, -136, 275, 5, 10, -561, -136, -399, 636, 636,
	-552, 623, 469, 468, 159, 159, 159, 159, 262, 189,
	346, 346, 593, 2, 2, 2, 2, 2, 198, -634,
	-658, 2, 2, -324, 226, -384, 364, -620, -621, 527,
	-324, 346, 45, -327, 226, 2, -330, 582, -626, 346,
	-329, 226, -324, 39, 631, 346, 2, -444, 2, 242,
	-596, 346, -509, -346, -324, -504, -346, 484, -317, 39,
	-469, -324, 632, 636, -519, -519, -561, -223, 593, 196,
	631, -236, 593, 593, 262, -516, 636, -515, 233, -562,
	-561, -137, -561, 443, 196, 262, -561, -620, -307, 2,
	-324, 2, 527, 264, -136, 196, 233, -223, -561, -561,
	-561, -551, 29, 487, 2, -199, 482, 548, 93, 487,
	2, -324, 527, 124, 242, 83, -646, 189, 2, -293,
	-624, 189, -618, 455, 471, 556, -617, -324, 124, -324,
	124, -324, 124, -324, -324, 2, 2, 2, 2, 2,
	88, 2, -140, -472, 2, 88, 2, 48, 503, -642,
	189, 2, 546, 2, 546, 2, -293, -293, -293, 359,
	507, 283, 593, -324, -324, -324, -325, -330, 472, 528,
	557, 469, -472, 2, -662, 2, 196, 189, 2, 527,
	242, 527, 242, 124, 196, 77, 124, 29, 196, 527,
	466, 633, 4, -271, 636, -297, -250, -418, -551, -419,
	-418, -251, -250, -253, 189, 418, 566, 330, 488, 268,
	-449, -448, 29, -472, -453, 183, 329, -472, -451, -474,
	621, 622, -543, -545, -401, 357, -244, -244, -244, -389,
	-499, -472, 406, 242, -524, -522, -522, -322, -552, 539,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, 284, 230, 490, 53,
	233, -472, 543, -472, -472, -472, -472, 322, 346, 353,
	553, 174, 563, 143, 357, -676, 521, 42, -479, -245,
	-406, 631, -493, 36, 501, 29, -486, 631, 2, -467,
	-472, -468, -353, -351, -293, 621, 622, 623, 624, 625,
	626, 611, 612, 613, 14, 15, 16, 616, 620, 618,
	619, 187, 99, 615, 299, 462, 90, 177, 178, 179,
	180, 266, 267, 17, 18, 19, 35, 614, -403, -402,
	-402, 632, 581, 29, 143, 623, 2, 632, 636, 39,
	632, -472, -403, -485, -481, -402, -492, -491, 590, -439,
	-440, 598, 308, 127, 224, 306, -441, 475, -546, 8,
	-552, 623, -603, 182, 215, 631, 632, 2, 632, 2,
	632, -472, 2, 632, -472, 2, 632, -472, 2, 632,
	-472, 2, 632, 2, 632, 2, -472, -472, -472, -472,
	-472, -472, -472, -402, 8, -546, -546, 539, 539, -546,
	-546, -546, -538, 393, 394, 395, 396, 286, 287, 288,
	289, 397, 398, 399, 400, 314, 315, 316, 317, 310,
	311, 312, 313, 318, 319, 320, 321, 206, 207, 208,
	209, 202, 203, 204, 205, -538, -433, 2, -540, -402,
	4, 598, 308, 127, 224, 306, 475, 5, -433, 2,
	-434, 2, -472, -402, -435, -473, -474, 621, 622, 614,
	-352, -436, 2, -472, -403, -472, 60, 278, 545, -437,
	-472, 196, -402, -402, 2, -402, 2, -475, 2, -600,
	39, -402, -395, 636, 196, 39, 4, -395, -395, 631,
	632, 636, -432, 219, 302, 297, 256, -432, -503, -431,
	263, -429, 374, -429, -429, -497, -308, 629, 637, -552,
	-497, -496, -495, 39, -317, 371, -497, -497, 633, 632,
	-496, 630, -615, 631, 634, 634, 634, 634, 634, -324,
	631, -402, -552, 633, 509, 2, 632, 257, 257, 257,
	257, 257, 364, 461, 632, 543, -619, -333, -339, 528,
	2, 593, -110, 366, 632, 636, -394, 38, 629, 633,
	-546, 2, 2, -541, 583, 631, 631, -440, 631, 196,
	-619, -339, 528, 2, -625, -393, -393, 543, -293, 2,
	-324, -400, -271, 159, -400, -400, -271, 636, 159, -307,
	-328, -333, -336, -339, -293, -557, -559, -271, -329, -650,
	632, 547, -459, -354, 418, 500, 441, 479, 523, 9,
	9, 636, -552, -215, 470, 330, -306, -306, -306, -306,
	636, -651, 97, 543, 81, 631, 471, -286, 292, 543,
	-463, 226, 81, -574, 97, -310, -575, -293, 75, 562,
	406, 193, 157, -651, 97, 406, -651, 97, 2, 244,
	97, 484, 507, 631, 29, 63, -508, 43, 43, 29,
	-630, -631, 279, 196, 599, 527, 242, 471, 543, 543,
	-508, -426, -522, 122, 303, 304, 63, -547, -547, 63,
	-547, -547, -547, 593, -327, -508, 471, 543, 543, 543,
	428, 518, 428, 518, -279, -154, 518, 543, 543, 29,
	-200, 448, 131, -674, 613, 428, 279, -631, 543, 196,
	636, 43, 43, 29, -630, 196, 543, -349, -308, 577,
	44, 577, 44, 577, 543, 44, 471, 543, 636, 44,
	-262, -620, -620, -222, -221, -293, 5, -392, -265, -561,
	-264, 328, 77, 543, 543, -15, 484, -627, -298, 109,
	336, 296, 337, 101, 333, 100, 332, 107, 334, 108,
	335, 584, 349, 585, 350, 66, 331, 307, 338, 504,
	339, 586, 351, -299, -300, 150, 385, 575, 124, -557,
	-15, -15, 484, 379, 440, 159, -647, 233, 29, -636,
	233, -516, 233, -516, -341, -293, 633, -140, -472, -472,
	-140, -472, -140, 48, 159, 159, 2, 2, -670, 272,
	631, -358, 346, 196, -392, -517, 636, 254, -324, 175,
	159, -557, -425, -424, 346, -329, 226, 2, 159, -382,
	346, 153, 631, 416, 2, 159, -309, 226, -294, -293,
	-444, -273, 531, 159, -422, 573, -454, -140, 631, 131,
	39, -454, -411, -412, -514, -413, -310, 631, -317, -469,
	-111, -518, 632, 632, 632, -222, 368, -236, -383, -311,
	-310, 123, 420, 420, -229, 593, -136, -137, 632, 636,
	-516, 233, 510, -137, -561, -223, -223, -516, -516, -324,
	189, -561, -136, -223, -223, -223, 2, 2, 2, 2,
	-428, -324, -307, -349, -324, -335, 233, 29, 633, -559,
	-559, -339, -340, -338, -293, -333, -428, -307, -428, -307,
	-428, -307, -428, -428, -140, -472, 507, 2, 481, 189,
	189, 633, -428, 8, -385, 450, 5, 2, 416, 124,
	527, 383, 242, -324, -349, -324, -349, -307, 124, -307,
	125, 124, -324, 4, -508, -419, -251, 365, 268, 488,
	-451, -452, -474, 460, 461, -452, 460, 461, 8, 9,
	8, 9, -255, 492, 352, -400, 636, -260, 40, 139,
	268, -324, 599, 155, -472, -472, 543, -676, 521, -479,
	155, -472, 322, 353, 553, 174, 563, 143, 357, 196,
	631, -473, -473, 632, -404, -472, -472, 630, 639, 632,
	633, 632, -388, 636, -386, -472, -402, -402, 632, 633,
	-402, -392, 630, 630, 636, 632, -490, -491, 148, -472,
	543, 543, 543, 543, 631, 632, 633, -608, 375, 631,
	631, -472, 632, 632, 632, 632, 39, 636, 636, 636,
	632, 636, 636, 636, 632, 632, 632, 636, 632, 599,
	599, 632, 632, 632, 632, 636, 632, 636, 632, 196,
	632, 632, -442, 390, 632, 11, 12, 621, 622, 623,
	624, 187, 625, 626, 619, 620, 618, 611, 612, 613,
	90, 299, 462, 14, 15, 16, -352, 257, 233, -473,
	-473, -473, -473, 632, -477, -478, 196, 189, 39, -437,
	-437, -437, 632, 196, -402, 632, 632, 631, -601, 301,
	346, 632, -466, -465, 591, -513, -396, 2, -503, -319,
	-552, -466, -466, -402, -472, 263, 263, -430, 573, 364,
	-432, -503, -496, -548, -471, -470, 191, 40, 139, 340,
	341, 342, 229, 192, -496, -317, -382, -496, -496, -552,
	-497, -497, -495, 632, -616, -548, 632, -397, -506, -595,
	-388, 633, -552, -233, -596, -201, 5, 353, -201, -201,
	-201, -201, -324, -559, 543, 543, 233, 26, 391, -522,
	629, 630, 8, -552, 631, -546, -546, -546, -559, 196,
	196, 233, 364, 196, -557, 2, -271, -400, -271, -271,
	-349, -350, -271, -271, -271, -423, 593, -549, -458, 560,
	86, 418, 539, -549, 121, 470, -267, 440, 484, -310,
	-310, -324, -240, -239, -237, -293, 5, -334, -293, 210,
	429, -557, 346, -463, 226, -272, 346, 226, -318, -522,
	631, -446, 595, 268, 268, 573, -310, -318, 268, 226,
	-310, 226, -318, 2, -318, -628, 418, 358, -472, -238,
	-237, 63, -365, 290, 416, 347, -268, 440, 484, 379,
	-140, -140, -140, 631, -650, 573, 142, -324, -349, -324,
	-334, -557, -329, 484, 379, 440, 343, -343, -547, -547,
	-424, 484, 379, 440, -334, -557, -327, -557, -278, 226,
	-293, 428, -278, 226, 428, 428, 471, -307, 428, 599,
	47, -674, 543, 196, -472, -472, -269, -140, -140, -140,
	631, -308, -270, 440, 5, 226, -310, 5, -310, 226,
	5, -293, -310, -334, -557, -654, 25, 147, -310, -223,
	636, 613, 613, -266, 613, -334, -557, -298, 385, -561,
	353, 569, -307, -626, -314, 471, 543, 543, -508, -643,
	-644, 212, 453, 471, 456, -559, -136, -226, 593, -136,
	-220, 237, 623, -623, -561, -293, 582, -293, -356, -359,
	-357, -310, -464, -463, -578, -579, -574, 284, 242, 562,
	256, 175, 97, -241, -242, 595, 593, 159, -347, -324,
	629, -223, -621, -561, 175, -315, -293, -336, -337, 159,
	-382, 346, -557, 39, 159, 631, 2, 2, -328, 364,
	346, -309, 226, -274, 149, -674, -307, -466, -396, -421,
	-456, 450, 364, -383, 578, -317, -421, -398, 636, 196,
	613, 633, -383, -512, 623, -111, -111, -223, 631, 631,
	-561, 632, 636, 633, 631, 613, 613, -231, 368, -230,
	151, 270, 255, 494, 495, 496, 497, 141, 493, 128,
	327, 238, 533, -516, -561, -229, -137, 196, -516, 233,
	196, -71, 593, 527, 233, -223, 635, 471, 456, -293,
	633, -428, -428, -428, 481, 481, -293, 189, -392, -320,
	-552, -307, -324, -321, -349, 189, 189, -307, -307, 566,
	-452, 365, 295, -499, -261, 601, -324, 635, -472, -472,
	155, 155, -472, -473, -473, -472, 155, 196, 631, -472,
	-483, 34, 34, 632, 636, -468, -472, -351, 632, 581,
	-388, -388, 632, 623, -552, 635, 632, -481, 152, -472,
	537, 308, 224, 306, -441, 306, -441, -441, -546, 5,
	-552, 623, -609, -313, 631, -293, 591, -387, 370, 632,
	-524, -522, -472, -472, -472, -472, -472, -546, -527, -527,
	-542, -542, -472, -477, -472, -524, -522, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, 143, 346, 357,
	-473, -478, -477, -472, -472, -522, 632, 632, 632, -402,
	-110, 631, 301, -415, 215, -472, -516, 636, -415, -415,
	632, -503, -503, 631, -472, 263, 630, 636, 638, 613,
	613, -382, 633, -495, -496, 630, 632, 636, 632, 636,
	-455, 39, 632, -552, -466, -235, -234, 140, 56, 111,
	138, 353, 361, 195, 220, 415, 155, 190, 149, 257,
	-645, 593, -559, -559, 471, 367, 5, 8, 629, 630,
	633, -546, 632, 632, 632, -559, -559, 471, -617, 556,
	471, 29, -559, -271, -271, 123, 330, -472, -212, 593,
	595, 543, 543, 632, 636, 613, 63, 233, 159, 346,
	575, 346, -575, 157, -580, -472, 631, 242, 631, 631,
	2, -257, -258, -259, 147, 484, 25, -652, 2, 573,
	159, -271, 159, -271, 597, 632, 636, -365, 631, 631,
	543, 471, -286, 543, 593, -402, -472, -224, 131, -551,
	-632, 635, -632, 635, 471, 543, 543, 471, 543, 543,
	346, -293, 159, -293, -293, 593, 173, 173, 599, -278,
	-472, -472, 189, 543, 593, -402, 543, -526, 51, 27,
	346, -328, -271, 159, 543, 543, 556, 484, -221, -561,
	-561, -136, -561, -561, 353, -15, -334, -557, -329, 484,
	379, 440, -625, -625, 212, -339, -647, -516, -228, 368,
	-227, 151, 452, 141, 270, 238, -516, -226, 196, 254,
	593, -329, 2, 632, 632, 636, 636, -581, -272, -324,
	-309, 242, 242, -316, -294, 39, 361, 361, 631, -324,
	-91, 593, -515, -548, -315, 45, -327, 39, 159, -626,
	-140, -329, -520, -521, 5, 39, -324, 159, 364, 346,
	-275, 277, -674, -556, -596, -388, -421, -410, 347, 95,
	632, -466, -412, -396, -472, 2, 632, -222, -561, -223,
	-236, -311, 2, -562, -561, -561, 636, 631, 613, 613,
	613, 613, 613, 613, 613, -229, -516, -136, -229, -137,
	-140, 368, -324, -136, 623, -334, -335, 623, -428, 5,
	-371, -370, 383, 357, -371, 460, 460, 365, 183, 273,
	-260, -308, -472, -472, 155, 34, 34, -472, -472, -483,
	632, -472, -472, -402, 630, 5, -472, 632, 632, 8,
	-472, 632, 633, -610, -293, -472, 632, 63, 632, 632,
	636, 636, 632, 632, 632, 632, 632, 632, 632, -478,
	196, 143, 357, 631, 632, 632, -110, -480, 218, 63,
	-503, -480, -480, -430, -392, -503, -470, -308, 629, -308,
	629, -552, -548, -506, 631, 633, -234, 613, -561, -561,
	2, 2, 2, 5, 5, 415, 346, 353, 5, -201,
	212, -645, -645, 593, -339, 630, 2, 629, -552, 632,
	-339, 196, -619, -339, 528, 123, 189, 223, 223, -310,
	-310, -239, -549, 527, 460, -278, 406, -463, 159, 159,
	-582, 97, -584, 79, 175, 106, 346, 353, 562, 406,
	75, 131, 364, 425, -664, -665, -666, 39, 604, 605,
	632, -390, -500, -595, 631, -293, -390, -392, 346, 515,
	131, 364, 346, 131, 364, 588, 123, 2, 556, 82,
	-310, -318, -237, -392, -392, -324, -334, -557, 167, 632,
	636, 613, 2, 623, 623, -334, -557, -329, -334, -557,
	-327, 159, 578, -278, 578, 381, 173, 543, -140, -472,
	167, 632, -308, 5, 5, 159, -305, 79, -310, 5,
	-310, -328, 123, 593, 471, 543, 543, 364, 364, 367,
	-643, -644, -226, 636, 631, 613, 613, 613, -226, -562,
	-136, 2, -382, -372, 244, -310, -579, -576, -577, 406,
	-464, -583, -585, 175, 406, -360, 631, -309, -294, 631,
	-140, 2, -240, 631, -358, 368, 630, -557, -425, -140,
	-329, -380, 593, -382, 632, 636, 153, -447, 573, -308,
	-324, 159, -276, 276, -674, -556, -273, -450, -448, 144,
	631, 364, -140, -388, 613, 632, 632, 123, 632, -230,
	-231, -561, -136, -561, -561, -561, -136, -561, -229, -516,
	-516, -72, -73, 242, 97, 388, -223, -321, 527, 242,
	631, 631, -260, -472, -472, -472, 632, -388, -552, 623,
	-604, 383, 632, -499, -472, -472, -473, 196, 631, -483,
	632, -605, 592, -472, -416, -417, -472, 458, 112, 216,
	-605, -605, 632, -548, -548, 2, -561, 2, 2, 353,
	2, 2, 367, 2, 543, 629, 2, 196, -559, 196,
	196, 233, -140, 233, 39, 428, -463, -318, -318, -322,
	-315, 175, 226, 353, 588, -446, 268, 631, -473, 566,
	-324, 631, 2, 225, 225, 31, 63, -667, 135, 246,
	632, 636, -501, -304, -293, -472, -501, 632, 632, 353,
	566, 353, 588, -472, 566, -522, 631, -271, -271, 632,
	632, -472, 543, -551, 104, -549, 2, -632, -278, -392,
	-392, -307, -472, 189, -472, 543, 5, -271, -322, -271,
	-271, -305, 556, 363, -334, -557, -329, -648, 528, 478,
	557, 472, 199, 459, -648, 189, -227, -228, -561, -136,
	-136, -226, 39, -366, -367, 2, -581, 268, -315, 268,
	235, 158, -390, 631, 631, -392, -663, 593, 632, -356,
	-241, -92, -93, 544, -515, -382, 330, 123, 39, 5,
	631, 631, -293, 364, 631, -308, -288, 96, -674, -556,
	-274, -421, 347, -392, 97, -450, -479, -223, 631, -223,
	632, -649, 39, -229, 636, 29, 631, 29, 631, -324,
	-349, -402, -402, 632, -388, 63, 636, 632, 632, -473,
	-483, 632, -606, -607, -313, 636, 631, 631, 485, 630,
	630, 2, -559, 2, -559, -559, -559, 471, -278, 406,
	-293, -575, -584, -315, 346, -242, 573, 593, -472, -473,
	-295, 631, -472, 631, 631, 39, 131, 246, 136, 231,
	-462, -668, 105, 516, 234, -500, -260, 632, -461, 573,
	425, -473, -305, -390, 631, 631, 631, 613, 196, -140,
	631, -526, -271, -328, 613, 543, 2, 2, 196, -625,
	632, -638, 423, -140, -241, 631, -242, -361, 84, 98,
	132, 225, 200, 243, 507, 513, 29, -361, 632, -390,
	-390, 632, -362, 364, 123, 330, 632, 39, -93, 9,
	39, 123, -140, -520, -390, -324, -390, 364, -280, -279,
	285, -556, -275, 632, -318, -421, -562, 533, -73, -392,
	-392, 632, 632, -611, 416, 461, 217, -402, -389, 632,
	636, 39, -417, 2, 2, 2, -645, -339, 428, -272,
	159, 219, 632, -586, 300, -293, 632, -425, -425, 39,
	136, 231, -368, -364, 631, -261, -501, -242, 219, -324,
	-633, 573, 632, -374, -373, -370, -376, -375, -370, -402,
	-549, 104, 381, -402, -305, -136, -559, -559, 364, -640,
	197, -639, 5, 10, -362, -391, -502, -310, -461, 632,
	632, 85, 123, -372, -140, -140, 2, -380, 632, 632,
	-447, 632, -324, -277, -563, 428, 430, -674, -276, -466,
	144, 632, -548, 4, 632, 632, 632, -612, -613, 53,
	559, 113, -472, -612, -612, -607, -609, 196, 175, -460,
	602, -587, -590, -589, 609, 491, 197, 382, 632, 515,
	587, 632, 632, -667, -392, -460, -382, -472, -461, 632,
	636, 578, 632, 636, 578, 632, 196, 632, -271, -645,
	-271, -648, -225, 593, 48, -287, -286, 632, 636, -462,
	-461, -368, 405, 137, 147, -366, -663, -461, 631, -462,
	631, -285, -284, -674, -542, -288, 144, 347, 566, -223,
	-614, 157, -613, 402, 188, 460, 402, 188, -614, -614,
	-559, -315, -242, 58, -589, 609, -590, 609, 566, 137,
	-466, 632, -586, -242, -373, 233, -375, 196, 381, 196,
	468, -639, 31, -242, -502, -368, -462, -242, 461, 461,
	2, -241, -362, -462, -390, -368, -390, -281, -282, -283,
	-392, -280, 347, 566, 484, 113, 215, 538, 330, 34,
	613, -588, 330, 447, 67, 484, -588, -587, 631, 631,
	-559, 368, -242, -368, -466, 2, -362, -368, 632, -242,
	632, -558, 379, -277, 484, -411, 460, 372, -613, -472,
	24, 353, 131, -667, -402, -402, -271, -222, 631, -466,
	-242, -287, -242, -461, -466, -462, -674, -285, -411, -466,
	632, 632, -222, -466, -466, -462, -368, -557, -281, -466,
	-363, -364, 543, 632, -368, -242, 631, -242, -466, -402,
	-466, 632, -363,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 591, 592, 594, 595,
	596, 598, 599, 601, 603, 605, 606, 607, 609, 610,
	612, 613, 614, 615, 616, 618, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 707, 709, 0, 1555, 1557, 1559, 1561, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	375, 377, 379, 381, 0, 413, 415, 416, 418, 420,
	421, 423, -2, 0, 524, 525, 527, 529, -2, 0,
	1138, 1140, 1142, 0, 695, 697, 0, 1145, 1147, 1149,
	0, 0, 719, 720, 0, 1669, -2, 711, 713, 715,
	717, 794, 796, 798, 800, 802, 804, 806, 808, 810,
	812, 813, 815, 817, 819, 821, 823, 824, 826, 828,
	830, 831, 833, 834, 836, 838, 840, 842, 844, 846,
	848, 850, 852, 854, 856, 858, 860, 862, -2, 865,
	866, 867, 869, -2, -2, 0, -2, -2, -2, 1573,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 474, 476, 478, 480, 482, 485, 487, 489,
	1727, 531, 533, 535, 537, 539, 541, 543, 0, 0,
	-2, 1741, 0, 0, 956, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 82, 127, 128, 129, 130, 131,
	132, 133, 86, 87, 88, 90, 91, 92, 93, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 124, 125, 84, 0, 0, 1700, 1702, 1704,
	1706, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	593, 597, 600, 602, 604, 608, 611, 617, 619, 621,
	576, 577, 580, 2441, 2459, 2460, 2461, 2464, 2465, 2466,
	2467, 2468, 2469, 2953, 3034, 3035, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894,
	2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914,
	2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 578, 579,
	1332, 0, 660, 658, 2424, 661, 2738, 663, 665, 518,
	519, 520, 521, 522, 523, 0, 688, 674, 1739, 689,
	691, 692, 693, 694, 655, 653, 0, 693, 688, 2496,
	686, 1553, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 453, 1391, 1392, 1393, 1538, 1539,
	2790, 1580, 0, 259, 708, -2, -2, 2918, -2, 748,
	749, -2, -2, 763, 767, 758, 2922, 0, 2793, 2776,
	-2, 770, 1556, 1558, 1560, 870, 871, 872, 2445, 876,
	874, 886, 887, 890, 0, 907, -2, 0, 2492, 2761,
	-2, -2, 908, 909, -2, -2, -2, -2, 888, 889,
	0, 0, 0, 0, 0, 44, 46, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 269, -2, -2, -2, -2, 0, 0, 2841, 2551,
	2392, 2461, 2395, 2390, 376, 378, 380, 382, 383, 0,
	0, 0, 0, 0, 0, 0, 414, 417, 419, 422,
	-2, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1212, 1204, 1205, 1458, 0, 0, 0,
	-2, 526, 528, 581, 582, 0, 1728, 1728, 589, 590,
	-2, 0, 0, 0, 0, 337, 327, 1139, 1141, 1143,
	1144, 0, 0, 0, 0, 0, 696, 698, 0, 0,
	2835, 301, 1146, 1148, 1150, 1151, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 712, 714, 716, 718, 795,
	797, 799, 801, 803, 805, 807, 809, 811, 814, 816,
	818, 820, 822, 825, 827, 829, 832, 835, 837, 839,
	841, 843, 845, 847, 849, 851, 853, 855, 857, 859,
	861, 863, 864, 915, 0, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1025,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1117, 0, 0, 918, 921, 922, 923, 924, 925,
	926, 0, 998, 1023, 1024, 1034, 868, 0, 1372, 1729,
	1582, 1563, 1577, 1582, 1565, 1566, 1567, 1568, 1569, 1574,
	1576, 1570, 1571, 1572, 50, 52, 54, 56, 58, 60,
	62, 64, 66, 68, 70, 72, 475, 477, 479, 481,
	483, 486, 488, 490, -2, 1698, 1699, 532, 534, 536,
	538, 540, 542, 544, 699, 0, 702, 0, 920, 701,
	-2, 0, 1733, 1733, 1733, 0, 0, 1699, 1697, 0,
	705, 706, 774, 775, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 2266, 2094, 0, 776, -2, 2127, 2129,
	2893, 2711, 2918, 2265, 2131, 2132, 2133, 2134, 2135, 0,
	2137, 2138, 2139, 2140, 2141, 2142, 0, 2144, 0, 2149,
	2150, 2151, 0, 2900, 2369, 2455, -2, 0, 0, 2906,
	2451, 0, 2232, 2167, -2, -2, 2478, 2457, 1938, 1939,
	1940, 1941, 1942, -2, -2, 2936, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 0, 2881, 2901,
	2902, 2907, 2909, 2903, 2890, 2192, 2565, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1965, 1974, -2, -2, -2, -2, -2, -2, -2, 2894,
	2895, 2912, 2915, 2921, 2926, 2927, 2899, 2908, 2935, 2937,
	2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947,
	2948, 2949, 2950, 2951, 2952, 1966, -2, -2, -2, -2,
	0, 1716, 2754, 1719, 1332, 1717, 1701, 1703, 0, 1705,
	0, 0, 0, 1710, 1736, 1734, 0, 1785, 1714, 1715,
	1808, 1808, 1832, 0, 1813, 0, 1832, 1728, 1859, 0,
	1819, 2781, 2168, 2169, 0, 2461, 2456, -2, -2, 2933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 662, 664, 0, 0, 0, 687, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 457,
	458, 459, 460, 2901, 0, 0, 0, 465, 0, 467,
	468, 469, 470, 471, 472, 473, 229, 2901, 549, 574,
	0, 229, 2901, 552, 229, 2901, 555, 0, 558, 1456,
	229, 2901, 561, 2420, 229, 2901, 564, 566, 2428, 229,
	2901, 570, 2435, 2433, 571, 0, 573, 249, 245, 246,
	247, 248, 1549, 1550, 1551, 1552, 0, 1579, 1457, 710,
	0, 736, 0, 746, 747, 2889, -2, 0, 2802, 751,
	752, -2, 754, 1583, 1587, 1588, 1589, 1590, 1591, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 743, 744,
	761, 762, 768, 771, 0, 879, 875, 891, 0, 906,
	0, 907, 907, 2409, 2400, 2401, 0, 0, 907, 907,
	0, 0, 910, 911, 912, 913, 914, 83, 0, 2901,
	1859, 85, 0, 2414, 2486, 2487, 2488, 2489, 2490, 2934,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	2936, 89, 0, 2901, 94, 0, 2901, 0, -2, 110,
	0, 126, 0, 153, -2, -2, -2, 134, 0, 2901,
	0, 2389, -2, 0, 241, 328, 329, 330, 0, 637,
	0, 646, 340, 341, 2474, 2475, 2482, 2483, 2484, 2485,
	0, 739, 2266, 0, 0, 1176, -2, 0, 1385, 1387,
	1387, 0, -2, 0, 0, 0, 1127, 2386, 2391, 1128,
	1129, 2410, 1130, 2396, 0, 384, 385, 386, 387, 388,
	0, 389, 2901, 391, 392, 0, 394, 395, 2901, 397,
	398, 0, 400, 0, 402, 0, 281, 285, 2901, 2901,
	426, 429, 0, 431, 432, 0, 434, 0, 0, 0,
	438, -2, 454, 0, 451, 441, 442, 444, 445, 446,
	447, 448, 0, 494, 492, 2425, 0, -2, 2901, 0,
	1173, 0, 0, 1436, -2, 0, 1378, 0, 1443, 2901,
	1439, 0, -2, 0, 1726, 2901, 1600, 1208, 1209, 1210,
	1211, 1871, 515, 0, 1633, 0, 1635, 0, 1655, 1865,
	1808, 0, 0, 1870, 0, -2, 634, 2444, -2, 584,
	0, 585, 0, -2, 0, 354, 0, 0, 1154, 1156,
	1157, 1159, 1160, 1163, 1164, 1165, 1166, 0, 1168, 1845,
	302, 304, 0, 0, 0, 0, 1153, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 0, 0, 721, 0,
	0, 916, 917, 0, 0, 933, 934, 935, 0, 0,
	354, -2, -2, -2, 943, 0, 950, 953, -2, 0,
	0, 0, 0, 960, 0, 965, 966, 967, 0, -2,
	0, 974, 976, 1137, 978, 0, 0, 980, 0, 984,
	0, 987, 0, 989, 0, 991, -2, -2, -2, 999,
	1000, -2, 1005, -2, 0, 1009, -2, 0, 1012, 0,
	1015, -2, 0, 1025, 1021, 1022, 0, 0, 0, 0,
	1042, 1043, 0, 1052, 0, 1055, 1056, 1057, 0, 0,
	1062, 1063, 0, 1065, 1066, 1067, 1069, 1070, 1071, 0,
	2870, 2799, 2551, 0, 1079, -2, 1085, 1087, 0, -2,
	0, 1103, 0, 1107, 0, 0, 1116, 0, 0, 0,
	919, 0, 927, 928, 229, 1863, 1562, -2, 1564, 0,
	-2, 0, 700, 0, 704, 1758, 1684, 1681, 0, 1755,
	1756, 1685, 0, 0, 0, 1692, 0, 1731, 1732, 0,
	0, 0, 1671, 1672, 0, 0, 0, 0, 2271, 2272,
	2273, 2274, 2287, 2275, 2276, 2286, 2284, 2285, 2277, 2278,
	2283, 2297, 2298, 2288, 2289, 2279, 2292, 2290, 2291, 2293,
	2294, 2295, 2296, 0, 0, 2302, 0, 2280, 2281, 2282,
	2310, 0, 0, 2311, 0, 2313, 0, 2303, 2299, 2300,
	2301, 0, 2073, 2075, 2377, 0, 0, 0, 2309, 2304,
	2305, 2011, 2012, 2013, 2014, 2015, 2048, 2052, 2053, 0,
	0, 2128, 2374, 2373, 2130, 0, 0, 2325, 0, 2143,
	-2, 0, 2266, 2320, 0, 0, 2152, 2153, 2154, 0,
	0, 2325, 0, 0, 2368, 2164, 2165, 2003, 0, 0,
	2234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1951, 0, 1953, 0, 1954, 1955, 1962, 1975, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	2349, -2, 0, 0, 0, 0, 1967, 0, 0, 1718,
	0, 0, 1789, 2378, 2382, 2383, 1789, 1789, 0, 0,
	2326, 1856, 1856, 0, 0, 1851, 1851, 1851, 1849, 1832,
	0, 1832, 1842, 0, 1832, 1832, 0, -2, 1813, 0,
	0, 1842, 0, 1826, 622, 624, 626, 628, 629, 630,
	632, 1860, 1861, 0, 0, 0, 0, 2462, 0, 0,
	0, 0, 0, 0, 2447, 0, 0, 2419, 409, 410,
	0, 0, 0, 2852, 2793, 0, -2, 667, 690, 1728,
	0, 2328, 1886, 1890, 0, 1892, 1893, 1894, 1895, 1896,
	0, 0, 1887, -2, 1963, 1965, 1986, 2479, 2480, 2481,
	1946, 1947, 1948, 1949, 1950, 1958, 1945, 1945, 1945, 1956,
	1985, 1977, 1985, 1981, 1931, 1932, 1933, 1968, 1969, 1970,
	1971, 0, 2852, 2793, 0, -2, 0, 677, 0, 0,
	1666, 455, 0, 462, 463, 464, 0, 545, 0, 227,
	228, 0, 229, 2901, 550, 0, 553, 0, 229, 2901,
	2384, 559, 0, 562, 0, 0, 568, 0, 0, 0,
	0, 0, 229, 1668, 0, 0, 0, 0, -2, 756,
	764, 765, 766, 0, 1585, 0, 1592, 785, 786, 787,
	1594, 1595, 0, 1597, 759, 788, 789, 790, 791, 792,
	793, 0, 2398, 2399, 2404, 2405, 0, 0, 757, 778,
	760, 0, 772, 882, 877, 878, 892, 893, 0, 0,
	2402, 2403, 0, 0, 898, 899, 135, 1535, 0, 0,
	182, 0, 1535, 1535, 0, 0, 0, 0, 210, 0,
	0, 1242, 0, 0, 0, 0, 153, 167, 178, 147,
	148, 149, 0, 0, 0, 0, 0, 0, 95, 1354,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 1370,
	0, 0, 0, 0, 0, 112, 113, 0, 0, 118,
	119, 0, 0, 166, 0, 0, 0, 0, 0, 1630,
	0, 157, 153, 0, 0, 152, 154, 137, 0, 0,
	153, 168, 180, 0, 216, 218, 1239, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 251, 0, 636, 638,
	0, 0, 0, 0, 644, 0, 647, 0, 737, 741,
	742, 0, 0, 738, 740, 0, 0, 1379, 0, 0,
	0, 1725, 0, 0, 0, 0, 2901, 1533, 0, 1516,
	0, 1845, 2640, -2, -2, 302, 1845, 1126, 0, 0,
	2462, 2394, 0, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 430, 433, 435, 436, 437, 0, 1435,
	0, 443, 484, 1301, 2901, 0, 0, 513, 506, 0,
	509, 0, 0, 1353, 2901, 1351, 2429, 0, 1376, 0,
	1332, 2901, 2427, 0, 0, 0, 1444, 2471, 1453, 1457,
	1618, 0, 517, 0, 1636, 1638, 0, 0, 1866, 0,
	1868, 1808, 1728, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 1167, 311, 0, 1844, 0, 0,
	342, 1845, 302, 2767, 0, 1152, 354, 354, 1845, 723,
	1845, 725, 0, 0, 936, 0, 0, 939, 354, 354,
	354, 948, 949, 951, 952, -2, -2, -2, -2, 954,
	955, 1049, 0, 0, 0, 1048, 1531, 0, 970, 973,
	977, 0, 1120, 2776, 2793, 2852, 1135, 1049, 2551, 1049,
	2551, 1049, 2551, 1049, 1049, 993, 1037, 1045, 1004, 1011,
	0, 1006, 1010, 1013, 1016, 0, 1018, 1026, 0, -2,
	0, 1029, 0, 1031, 0, 1033, 1049, 1050, 1053, 0,
	1061, 1064, 0, 1072, 1073, 1074, 1075, 2442, 1076, 1077,
	1078, -2, 1082, 1083, 0, 1094, 1099, 1100, 1096, 0,
	0, 0, 0, 0, 0, 1110, 1111, 0, 0, 0,
	1119, 0, 929, 1371, 0, 1575, 1758, 1684, 703, 1675,
	1757, 1676, 1683, 1686, 0, 0, 1688, 0, 1690, 0,
	1753, 1754, 1761, 1762, 0, 1772, 1773, 1765, 0, -2,
	0, 0, 1768, 1769, 1694, 0, 1711, 1712, 1713, 1742,
	1745, 1472, 0, 3034, 2007, 1881, 2008, 2009, 2413, 0,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	-2, -2, -2, -2, -2, -2, -2, -2, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, -2,
	-2, -2, 2049, 2050, 2051, -2, 2312, 2314, 0, 2377,
	0, -2, 0, -2, -2, -2, -2, 2070, 0, 2072,
	2077, 2079, 2081, 0, 0, 0, 0, 2376, 2091, 2360,
	2361, 0, 0, 2268, 2269, 2270, 2076, 0, 2095, 2375,
	2372, 0, 0, 2306, 0, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 0, 2324,
	1741, 2156, 0, 0, 0, 0, 2163, 2148, 2322, 0,
	2321, 0, 0, 0, 2332, 0, 2367, 2363, 0, 2411,
	2002, 1989, 1990, 1991, 1992, 1993, 1994, 2004, 0, 2408,
	2448, 2454, 2242, 0, 0, 0, 2193, 2194, 2195, 2196,
	2197, 0, 2199, 2200, 0, 2202, 2203, 0, 2205, 2206,
	0, 2208, 2209, 2210, 2211, 2212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 0, 0, 2214, 0, 2335,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2216,
	0, 2218, 2326, 2346, 0, 0, 2096, 0, 0, 0,
	0, 0, 2221, 2326, 2354, 0, 0, 0, 0, 0,
	2326, 0, 2359, 0, 2228, 0, 2230, 957, 958, 1720,
	0, 0, 1876, 0, 0, 0, 2381, 1876, 1876, 0,
	1784, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 1856,
	0, 1846, 1850, 1847, 1848, 1842, 1805, 0, 0, 2415,
	1842, 1811, 1841, 0, 1332, 1831, 1842, 1842, 0, -2,
	1815, 1832, 0, 0, 623, 625, 627, 631, 633, 0,
	0, 1741, -2, 0, -2, 356, 1331, 0, 0, 0,
	0, 0, 0, 657, 659, 0, 0, 565, 0, 0,
	673, 0, 651, 0, 654, 0, 1877, 1880, 0, 0,
	1891, 1897, 1898, 0, -2, 0, 0, 1987, 0, 0,
	0, 0, 0, 685, 0, 688, 0, 0, 0, 466,
	575, 229, 547, 0, 229, 229, 556, 0, 0, 229,
	567, 229, 2436, 229, 2434, 250, 572, 1667, 262, 0,
	745, 0, 1584, 1593, 0, 782, 0, 784, 0, 2406,
	2407, 0, 773, 0, 880, 0, 894, 895, 896, 897,
	0, 0, 0, 0, 1534, 0, 0, 1479, 0, 0,
	186, 2901, 0, 231, 0, 0, 1294, 2421, 0, 1284,
	0, 0, 2573, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 150, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 1356, 1358, 1365, 1367, 0, 1361, 1362, 0,
	1364, 1366, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 1388, 0, 0, 0, 1389,
	1390, 1606, 1607, 0, 1629, 1630, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 2388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 354, 641, 642, 350, 347, 349, 643, 648, 0,
	649, 0, 0, 0, 0, 1381, 0, 1431, 1429, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 0, 0, 0, 0, -2,
	1383, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 345, 2387, 2397, 0, 1161, 1162, 390,
	393, 396, 399, 268, 0, 0, 428, 439, 0, 0,
	1214, 1186, 0, 0, 493, 354, 0, 0, 508, 0,
	2440, 1171, 1349, 1352, 0, 1332, 2901, 1399, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 2901, 2416, 2470,
	2471, 1620, 1630, 0, 1876, 0, 1653, 1639, 0, 0,
	0, 1653, 1657, 1658, 1660, 1661, 0, 0, 1867, 1873,
	583, 635, 1728, 1728, 354, 352, 2714, 0, 0, 1642,
	1644, 0, 0, 0, 294, 0, 305, 1845, 303, 0,
	311, 0, 0, 1845, 302, 0, 505, 722, 727, 931,
	0, 0, 354, 940, 941, 942, 995, 1039, 1047, 1098,
	959, 961, 962, 963, 0, 968, 0, 0, 0, 1136,
	1131, 1132, 1133, 2437, 2433, 1134, 979, 1049, 982, 1049,
	985, 1049, 988, 990, 1008, 1014, 1027, 1020, 1028, 0,
	0, 0, 1041, 0, 1059, 0, 1068, 1081, 0, 0,
	0, 0, 0, 0, 0, 1104, 1105, 1106, 1108, 1113,
	1112, 0, 1118, 930, 1864, 1679, 1680, 1682, 0, 1691,
	0, 0, 1767, -2, -2, 1766, 1770, 1771, -2, -2,
	-2, -2, 1687, 0, 1696, 1693, 0, 1752, 1470, 1471,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 2092,
	0, -2, 2071, 2074, 2078, 2080, 2082, 0, 0, 0,
	0, 0, 0, 2315, 0, 2317, 2093, 2370, 2373, 2308,
	0, 2264, 0, 0, 1740, 1741, 1741, 0, 2162, 0,
	2323, 0, 2330, 2331, 0, 2155, 0, 2364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2166, 0, 0,
	0, 0, 2198, 2201, 2204, 2207, 0, 0, 0, 0,
	2187, 0, 0, 0, 2191, 1957, 1943, 0, 1985, 1983,
	1984, 1978, 1985, 1982, 1935, 0, 1934, 0, 2213, 0,
	2215, 2217, 0, 0, 2219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	2100, 2101, 2121, 2220, 2352, 2353, 0, 0, 0, 0,
	0, 0, 2226, 0, 2358, 2227, 2229, 1728, 0, 1721,
	0, 1786, 1775, 1875, 0, 2379, 1845, 1788, 1790, 2380,
	2418, 1775, 1775, 0, 2327, 0, 0, 1836, 0, 0,
	0, 1838, 1809, 0, 0, 1803, 0, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1810, 1332, 1840, 1812, 1816, 2448,
	0, 1842, 0, 1827, 0, 1829, 1862, 0, 1821, 1824,
	0, 0, 2463, 1876, 0, 403, 411, 412, 404, 405,
	406, 407, 0, 1519, 0, 0, 0, 0, 0, 2329,
	0, 1882, 0, 1888, 0, 0, 0, 0, 675, 0,
	0, 0, 0, 0, 1665, 461, 546, 229, 551, 554,
	2385, 229, 560, 563, 569, 258, 0, 735, -2, 780,
	781, 783, 0, 779, 885, 881, 183, 1535, 0, 0,
	0, 1475, 0, 1197, 0, 1192, 1193, 1477, 2432, 1481,
	1487, 1490, 0, 188, 2901, 200, 0, 2901, 0, 1258,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 2901,
	229, 2901, 229, 204, 206, 209, 0, 215, 211, 0,
	1194, 0, 1246, 0, 0, 1249, 136, 1535, 0, 0,
	139, 143, 155, 0, 0, 0, 165, 0, 0, 0,
	1492, 1496, 1504, 0, 0, 0, 1359, 1360, 1363, 1369,
	96, 0, 0, 0, 1500, 1502, 1508, 111, 114, 2901,
	2430, 0, 116, 2901, 0, 0, 0, 1474, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 141, 145, 156,
	0, 1510, 138, 0, 244, 0, 0, 234, 229, 2901,
	0, 236, 0, 237, 238, 252, 0, 0, 0, 640,
	0, 0, 0, 645, 0, 1174, 1175, 1430, 0, 1374,
	1375, 0, 1386, 1380, 0, 0, 0, 0, 0, 1512,
	1513, 0, 0, 0, 1533, 1528, 1845, 264, 0, 1845,
	272, 0, 2393, 0, 286, 425, 0, 0, 0, 0,
	1213, 1312, 1215, 1217, 1218, 1219, 231, 0, 2471, 1284,
	2629, 2471, 0, 0, 1181, 0, 0, 0, 499, 495,
	0, 504, 507, 512, 0, 511, 2422, -2, 0, 0,
	0, 0, -2, 0, 0, 1446, 1440, 1441, 0, 0,
	0, 0, 2901, 1622, 1630, 0, 1726, 1741, 516, 1631,
	1653, 0, 0, 0, 1641, 1637, 1634, 1876, 0, 0,
	0, 0, 0, 1869, 1872, 586, 587, 331, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 309, 0, 312,
	0, 0, 0, 317, 318, 319, 320, 321, 322, 0,
	0, 0, 0, 311, 343, 296, 1845, 0, 311, 0,
	0, 724, 0, 0, 0, 938, 0, 0, 1531, 972,
	0, 981, 983, 986, 1030, 1032, 1049, 0, 1060, 1088,
	2417, 1089, 1236, 0, 1236, 0, 0, 1109, 1115, 1689,
	0, 1764, 1695, 1746, 1747, 0, 1472, 0, 2010, 2055,
	0, 0, -2, 0, 0, 2059, 0, 0, 0, -2,
	0, 0, 0, 2316, 2318, 0, 2372, 2307, 2157, 0,
	0, 0, 2161, 2145, 2146, 0, 2267, 2333, 2362, 2366,
	0, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 0, 2412,
	2449, 2453, 2240, 2241, 2245, 2426, 0, 0, 0, 2170,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 1980,
	0, 0, 2334, 2345, 2347, 2097, 2098, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, -2, -2, -2,
	2115, 2116, 2117, -2, -2, -2, 2122, 0, 0, 0,
	2348, 2350, 2351, 2355, 2356, 0, 2223, 2224, 2225, 2357,
	0, 1728, 1722, 1783, 0, 1874, 1787, 0, 1783, 1783,
	1735, 1834, 0, 0, 1858, 0, 1806, 0, 1807, 0,
	0, 1839, 0, 1814, 1817, 1818, 1828, 0, 1820, 0,
	1823, 0, 2157, -2, 355, 357, 359, 0, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 1519, 1519, 0, 668, 652, 0, 0, 1884,
	0, 0, 1960, 1964, 1988, 679, 681, 0, 0, 2852,
	2793, 0, 678, 548, 557, 260, 0, 1843, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	230, 0, 1293, 0, 1256, 0, 0, 1283, 0, 0,
	1299, 190, 191, 192, 0, 0, 0, 0, 202, 0,
	0, 198, 0, 208, 214, 213, 0, 1243, 0, 0,
	0, 0, 1480, 0, 0, 0, 162, 163, 164, 0,
	169, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 1612, 1613, 0, 1603,
	159, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 1469, 254, 0, 0, 0, 0, 0, 351, 346,
	348, 0, 1373, 1433, 1434, 1382, 1493, 1497, 1505, 0,
	0, 0, 0, 0, 693, 1532, 0, 272, 270, 0,
	273, 0, 276, 277, 0, 0, 272, 266, 0, 0,
	0, 1332, 440, 1184, 1300, 0, 0, 1302, 1220, 1224,
	0, 2471, 2471, 0, 2423, 0, 1182, 0, 0, 1301,
	491, 0, 498, 0, 510, 0, 1353, 0, 0, 1377,
	1402, 1332, 0, 1445, 1447, 0, 1455, 0, 0, 0,
	1624, 1630, 0, 1617, 1618, 1760, 1632, 1651, -2, 0,
	0, 1741, 1659, 1656, 1662, 1663, 0, 0, 0, 334,
	0, 1643, 1645, 0, 1155, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 311, 1845, 298, 1845,
	338, 0, 932, 354, 964, 1530, 969, 2438, 1040, 1058,
	1090, 1235, 0, 0, 1092, 0, 0, 1763, 1750, 1751,
	1748, 1472, 2057, 2061, 0, 0, 0, 2063, -2, 0,
	2085, -2, -2, 2319, 2371, 2136, 1741, 2158, 2160, 2147,
	2365, 2005, 0, 2247, 2244, 0, 2231, 0, 2182, 2183,
	0, 0, 2186, 2188, 2189, 2190, 1944, 1937, 1936, 2344,
	0, 0, 0, 0, 2222, 1723, 0, 2236, 0, 0,
	1791, 2236, 2236, 1835, 0, 1837, 1804, 1792, 0, 1801,
	0, 2449, 1830, 1822, 0, 0, 360, 0, 364, 365,
	366, 367, 368, 369, 0, 0, 0, 0, 0, 408,
	0, 669, 670, 0, 0, 1878, 1883, 0, 1889, 1959,
	0, 0, 0, 0, 0, 261, 0, 883, 884, 184,
	185, 1198, 1196, 1484, 1488, 1485, 0, 187, 0, 0,
	1257, 0, 1260, 0, 0, 0, 0, 1267, 1284, 0,
	0, 0, 0, 0, 0, 1286, 0, 1285, 0, 0,
	1316, 0, 1460, 1467, 0, -2, 0, 0, 0, 194,
	220, 0, 0, 0, 0, 223, 1536, 196, 0, 0,
	229, 229, 1195, 0, 0, 1476, 1478, 1491, 0, 0,
	0, 0, 172, 0, 0, 1494, 1498, 1506, 1501, 1503,
	1509, 0, 0, 117, 0, 0, 1614, 0, 158, 0,
	0, 0, 1511, 242, 243, 0, 229, 0, 229, 235,
	229, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1515, 263, 0, 0, 0, 0, 0, 265, 344,
	272, 427, 0, 1245, 0, 1312, 1304, 1305, 1306, 0,
	1216, 1311, 1313, 0, 0, 1221, 0, 0, 0, 0,
	1201, 1183, 0, 1214, 1186, 0, 496, 1172, 1350, 1394,
	1332, 1397, 0, 0, 1437, 0, 0, 0, 0, 0,
	0, 0, 1626, 1630, 0, 1619, 1620, 1653, 1759, 0,
	0, 0, 1640, 1760, 0, 353, 354, 0, 354, 313,
	0, 314, 315, 316, 323, 324, 325, 326, 297, 308,
	311, 726, 728, 0, 0, 734, 937, 1234, 0, 0,
	0, 0, 1749, 2065, -2, -2, 2086, 0, 2450, 2452,
	1741, 0, 2233, 1743, 0, 0, -2, 0, 0, 0,
	1724, 1707, 0, 1782, 1774, 1776, 1778, 2779, 2546, 2900,
	1708, 1709, 1857, 0, 0, 1825, 361, 370, 371, 0,
	373, 374, 1518, 671, 0, 0, 1885, 0, 676, 0,
	0, 0, 873, 0, 0, 1486, 189, 0, 0, 1261,
	1262, 1264, 0, 1266, 1268, 1269, 1186, 0, 1273, 0,
	2473, 0, 1278, 1281, 1282, 0, 0, 1295, 1317, 0,
	1326, 0, 1462, 1472, 1466, 0, 1464, 1328, 0, 193,
	222, 195, 224, 219, 0, 1469, 0, 197, 207, 0,
	0, 140, 0, 0, 2540, 175, 173, 171, 115, 121,
	123, 1473, 161, 0, 142, 0, 244, 253, 1468, 255,
	239, 229, 0, 0, 1495, 1499, 1507, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 274, 0, 275, 278,
	279, 0, 0, 1186, 1244, 1185, 1303, 0, 1314, 1186,
	0, 0, 0, 0, 0, 0, 1188, 0, 1187, 0,
	0, 497, 500, 0, 503, 0, 0, 1401, 0, 1448,
	1446, 0, 1454, 0, 0, 0, 1602, 0, 0, 1621,
	1622, 514, 1646, 0, 0, 1653, 1664, 333, 0, 336,
	310, 300, 0, 299, 0, 730, 0, 732, 0, 1091,
	1093, 0, 0, 2159, 2251, 0, 0, 2184, 2185, -2,
	0, 2125, 2235, 2237, 0, 0, 0, 0, 0, 1793,
	1802, 372, 1519, 1879, 683, 680, 682, 0, 1482, 0,
	1489, 231, 1259, 1263, 0, 1270, 0, 0, 0, 1274,
	1336, 0, 0, 1353, 1353, 1287, 0, 0, 1320, 1321,
	1241, 0, 1322, 1323, 1324, 1461, 1752, 1467, 1186, 0,
	0, 221, 226, 0, 0, 0, 0, 0, 0, 160,
	0, 233, 256, 1469, 0, 0, 1526, 1527, 0, 0,
	271, 290, 0, 1395, 1188, 0, 1315, 1222, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1223, 1328, 0,
	0, 1292, 1199, 0, 1202, 0, 1184, 0, 501, 502,
	0, 0, 1402, 0, 0, 1455, 0, 0, 1609, 1601,
	1630, 1623, 1624, 1876, 0, 1654, 0, 0, 729, 0,
	0, 1101, 1102, 0, 0, 0, 0, 2246, 1744, 2126,
	0, 0, 1777, 1779, 1780, 1781, 672, 0, 1483, 201,
	0, 1330, 1272, 1341, 0, 0, 0, 0, 0, 1288,
	1318, 1319, 1316, 1240, 0, 1465, 1463, 1297, 1330, 1332,
	199, 0, 1328, 0, 1250, 0, 0, 1253, 0, 0,
	176, 2540, 174, 0, 229, 650, 1519, 229, 0, 293,
	0, 284, 282, 283, 1180, 0, 1308, 1310, 1326, 1328,
	1241, 0, 1203, 1245, 1201, 1396, 1400, 1398, 1438, 1328,
	0, 1326, 0, 1616, 1630, 1610, 1611, 0, 1626, 0,
	0, 354, 306, 307, 731, 733, 2243, 2263, 2252, -2,
	2855, 2547, 0, 2263, 2263, 2238, 2239, 0, 0, 1186,
	0, 1275, 1337, 1338, 0, 1333, 1334, 1335, 2472, 1276,
	1277, 1279, 1280, 1876, 0, 1327, 1336, 225, 1186, 1247,
	0, 0, 1248, 0, 0, 179, 0, 181, 257, 1517,
	1520, 0, 280, 0, 0, 1177, 1179, 1186, 0, 1241,
	1326, 1186, 0, 0, 0, 1186, 1188, 1326, 0, 1241,
	0, 1605, 1615, 0, 1625, 1602, 0, 1649, 0, 335,
	2248, 0, 0, 2254, 2255, 2256, 2257, 2258, 2249, 2250,
	684, 1265, 1271, 0, 1339, 0, 1340, 0, 0, 0,
	1296, 1325, 1341, 205, 1251, 0, 1254, 0, 177, 0,
	0, 288, 289, 1307, 1309, 1186, 1241, 1876, 1189, 0,
	1191, 1188, 1200, 1241, 0, 1186, 0, 1628, 1604, 1608,
	2431, 1609, 1647, 0, 0, 0, 2260, 2261, 0, 0,
	0, 1342, 0, 1345, 1346, 0, 1343, 1316, 0, 0,
	229, 0, 1876, 1186, 1291, 1190, 1180, 1186, 1328, 1876,
	1326, 1598, 1630, 1616, 0, 1876, 2259, 2262, 2253, 1329,
	1344, 1347, 1348, 1298, 0, 0, 1521, 291, 0, 1289,
	1876, 1178, 1876, 1326, 1451, 1241, 0, 1605, 1876, 1650,
	1238, 0, 0, 1290, 1449, 1241, 1186, 1627, 1599, 1648,
	1252, 1237, 0, 292, 1186, 1876, 0, 1876, 1452, 0,
	1450, 1238, 1255,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1742
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1796
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1808
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1926
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1991
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2012
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2020
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2056
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2067
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2079
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2171
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2182
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2201
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2211
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2221
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2230
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2241
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2247
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2278
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2369
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2413
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2423
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2426
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2432
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2484
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2679
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2683
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:     sqlDollar[8].union.asOfClause(),
				AsTenant: sqlDollar[9].union.asTenantClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3357
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3366
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3372
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3377
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3382
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = nil
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3490
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3722
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3743
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3748
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3771
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3789
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			return unimplemented(sqllex, "create access method")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			return unimplemented(sqllex, "create cast")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "create publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "create rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "create server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3817
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3820
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3835
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3836
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3839
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplemented(sqllex, "drop server")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3903
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3972
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4028
		{

			sqlVAL.union.val = nil
		}
	case 514:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4056
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4282
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4348
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4372
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4380
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "DELETE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "INSERT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4570
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4694
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{
			return helpWith(sqllex, "GRANT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4819
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "RESET")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "RESET")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "USE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5037
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return unimplemented(sqllex, "set from current")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5161
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5201
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.Low
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.Normal
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.High
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = true
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = false
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = false
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "FETCH")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "MOVE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5530
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = int64(1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = int64(-1)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = int64(1)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = int64(1)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = int64(-1)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5586
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5590
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.str = "client_encoding"
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.str = "timezone"
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5676
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5935
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6000
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6021
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = true
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = true
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = false
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6059
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6076
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6119
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6178
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = true
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = false
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = true
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = false
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6295
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6305
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6316
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6338
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6382
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6397
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6442
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6471
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6479
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6500
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6510
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6523
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6546
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6823
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7116
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7131
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{

			sqlVAL.union.val = nil
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7165
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = nil
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7198
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7202
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7238
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7251
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7265
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.str = ""
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7611
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7656
		{

			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7770
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7798
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7808
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7893
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8063
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8072
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8080
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8091
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8123
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8141
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8172
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8206
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{

			sqlVAL.union.val = true
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = false
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8255
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8269
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8281
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8293
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8303
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8313
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8317
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = nil
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8460
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8461
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8486
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8488
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8490
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8492
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8531
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8548
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8566
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8582
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = false
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = true
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = false
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = true
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = false
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8662
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8735
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8741
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8966
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8972
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8984
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8990
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9004
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9010
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.Types
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.str = ""
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9169
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9172
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9173
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9337
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9339
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9360
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9403
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.str = ""
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9525
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{

		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9557
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.str = ""
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.str = ""
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9612
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9638
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9898
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = true
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = false
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10254
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = nil
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10268
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = false
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10297
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10298
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10302
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10355
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10360
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10386
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10547
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10584
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10631
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10662
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10704
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10714
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10760
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10790
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = nil
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = true
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = false
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.str = tree.AstFull
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.str = tree.AstRight
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.str = tree.AstInner
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10942
		{
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10943
		{
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.str = tree.AstHash
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.str = ""
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = true
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = false
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = true
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = false
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11119
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11127
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11156
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11176
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11238
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = types.Geography
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11287
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11295
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11329
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = nil
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = types.Int2
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = types.Int
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = types.Float4
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.Float
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11380
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = types.Bool
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = types.Float
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11421
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11427
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11449
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = types.String
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = true
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = false
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = types.Date
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11498
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11506
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11520
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11529
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11537
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11554
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = true
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = false
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = false
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = types.Interval
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11578
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = nil
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11707
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11767
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12123
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12253
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12362
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12412
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12446
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12457
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12458
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12548
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12734
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12749
		{
			return unimplemented(sqllex, "treat")
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12822
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.str = ""
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12924
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13021
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13327
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13437
		{
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13438
		{
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13518
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13591
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13607
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13627
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13636
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13644
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13661
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13774
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13821
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13825
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13843
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13891
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13911
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.str = ""
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
