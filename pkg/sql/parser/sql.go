// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:684
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11839

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1343,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	224, 202,
	454, 202,
	-2, 0,
	-1, 79,
	213, 1145,
	226, 1145,
	242, 340,
	345, 340,
	354, 929,
	386, 340,
	398, 929,
	439, 929,
	465, 340,
	491, 929,
	-2, 0,
	-1, 85,
	242, 344,
	-2, 0,
	-1, 86,
	127, 1343,
	219, 1343,
	476, 1343,
	477, 1343,
	-2, 0,
	-1, 102,
	144, 1314,
	162, 1314,
	175, 1314,
	222, 1314,
	255, 1314,
	304, 1314,
	314, 1314,
	471, 1314,
	-2, 1285,
	-1, 138,
	152, 808,
	241, 808,
	348, 777,
	403, 777,
	457, 808,
	459, 777,
	-2, 0,
	-1, 140,
	4, 1345,
	21, 1345,
	22, 1345,
	23, 1345,
	24, 1345,
	25, 1345,
	26, 1345,
	28, 1345,
	29, 1345,
	35, 1345,
	40, 1345,
	41, 1345,
	43, 1345,
	44, 1345,
	45, 1345,
	46, 1345,
	47, 1345,
	48, 1345,
	49, 1345,
	51, 1345,
	52, 1345,
	53, 1345,
	54, 1345,
	56, 1345,
	57, 1345,
	58, 1345,
	59, 1345,
	60, 1345,
	61, 1345,
	62, 1345,
	66, 1345,
	67, 1345,
	68, 1345,
	69, 1345,
	71, 1345,
	72, 1345,
	73, 1345,
	77, 1345,
	78, 1345,
	79, 1345,
	80, 1345,
	81, 1345,
	82, 1345,
	83, 1345,
	86, 1345,
	87, 1345,
	88, 1345,
	89, 1345,
	91, 1345,
	93, 1345,
	94, 1345,
	95, 1345,
	96, 1345,
	97, 1345,
	98, 1345,
	100, 1345,
	101, 1345,
	102, 1345,
	104, 1345,
	105, 1345,
	113, 1345,
	114, 1345,
	115, 1345,
	116, 1345,
	118, 1345,
	119, 1345,
	120, 1345,
	122, 1345,
	123, 1345,
	124, 1345,
	126, 1345,
	127, 1345,
	129, 1345,
	130, 1345,
	131, 1345,
	134, 1345,
	135, 1345,
	136, 1345,
	138, 1345,
	139, 1345,
	141, 1345,
	142, 1345,
	143, 1345,
	145, 1345,
	146, 1345,
	147, 1345,
	148, 1345,
	149, 1345,
	150, 1345,
	151, 1345,
	152, 1345,
	153, 1345,
	154, 1345,
	155, 1345,
	156, 1345,
	157, 1345,
	158, 1345,
	159, 1345,
	161, 1345,
	167, 1345,
	168, 1345,
	169, 1345,
	170, 1345,
	174, 1345,
	176, 1345,
	180, 1345,
	181, 1345,
	182, 1345,
	183, 1345,
	184, 1345,
	185, 1345,
	187, 1345,
	188, 1345,
	190, 1345,
	191, 1345,
	193, 1345,
	194, 1345,
	195, 1345,
	196, 1345,
	197, 1345,
	198, 1345,
	199, 1345,
	200, 1345,
	201, 1345,
	203, 1345,
	204, 1345,
	206, 1345,
	207, 1345,
	208, 1345,
	209, 1345,
	213, 1345,
	214, 1345,
	215, 1345,
	216, 1345,
	219, 1345,
	220, 1345,
	221, 1345,
	223, 1345,
	225, 1345,
	226, 1345,
	228, 1345,
	230, 1345,
	231, 1345,
	232, 1345,
	234, 1345,
	238, 1345,
	239, 1345,
	240, 1345,
	241, 1345,
	242, 1345,
	243, 1345,
	245, 1345,
	246, 1345,
	247, 1345,
	249, 1345,
	250, 1345,
	252, 1345,
	253, 1345,
	256, 1345,
	257, 1345,
	258, 1345,
	261, 1345,
	262, 1345,
	263, 1345,
	264, 1345,
	266, 1345,
	267, 1345,
	268, 1345,
	269, 1345,
	270, 1345,
	271, 1345,
	272, 1345,
	273, 1345,
	274, 1345,
	275, 1345,
	276, 1345,
	278, 1345,
	280, 1345,
	281, 1345,
	282, 1345,
	283, 1345,
	284, 1345,
	285, 1345,
	286, 1345,
	287, 1345,
	288, 1345,
	289, 1345,
	290, 1345,
	292, 1345,
	294, 1345,
	296, 1345,
	297, 1345,
	299, 1345,
	300, 1345,
	301, 1345,
	302, 1345,
	303, 1345,
	306, 1345,
	309, 1345,
	310, 1345,
	311, 1345,
	312, 1345,
	315, 1345,
	316, 1345,
	317, 1345,
	319, 1345,
	321, 1345,
	322, 1345,
	323, 1345,
	324, 1345,
	325, 1345,
	326, 1345,
	327, 1345,
	328, 1345,
	329, 1345,
	330, 1345,
	331, 1345,
	332, 1345,
	334, 1345,
	335, 1345,
	336, 1345,
	337, 1345,
	338, 1345,
	339, 1345,
	340, 1345,
	341, 1345,
	342, 1345,
	344, 1345,
	346, 1345,
	347, 1345,
	348, 1345,
	349, 1345,
	350, 1345,
	351, 1345,
	352, 1345,
	353, 1345,
	354, 1345,
	355, 1345,
	356, 1345,
	358, 1345,
	364, 1345,
	366, 1345,
	367, 1345,
	368, 1345,
	369, 1345,
	370, 1345,
	371, 1345,
	372, 1345,
	373, 1345,
	375, 1345,
	376, 1345,
	377, 1345,
	379, 1345,
	380, 1345,
	381, 1345,
	382, 1345,
	383, 1345,
	384, 1345,
	386, 1345,
	387, 1345,
	388, 1345,
	389, 1345,
	390, 1345,
	391, 1345,
	392, 1345,
	393, 1345,
	394, 1345,
	395, 1345,
	396, 1345,
	398, 1345,
	399, 1345,
	400, 1345,
	401, 1345,
	402, 1345,
	403, 1345,
	405, 1345,
	406, 1345,
	407, 1345,
	408, 1345,
	409, 1345,
	411, 1345,
	412, 1345,
	413, 1345,
	414, 1345,
	415, 1345,
	416, 1345,
	417, 1345,
	419, 1345,
	421, 1345,
	422, 1345,
	423, 1345,
	424, 1345,
	425, 1345,
	426, 1345,
	427, 1345,
	428, 1345,
	429, 1345,
	430, 1345,
	431, 1345,
	432, 1345,
	433, 1345,
	435, 1345,
	436, 1345,
	438, 1345,
	440, 1345,
	441, 1345,
	442, 1345,
	443, 1345,
	444, 1345,
	445, 1345,
	446, 1345,
	447, 1345,
	449, 1345,
	450, 1345,
	451, 1345,
	452, 1345,
	453, 1345,
	455, 1345,
	457, 1345,
	458, 1345,
	459, 1345,
	460, 1345,
	461, 1345,
	462, 1345,
	464, 1345,
	465, 1345,
	466, 1345,
	467, 1345,
	469, 1345,
	470, 1345,
	473, 1345,
	474, 1345,
	475, 1345,
	476, 1345,
	477, 1345,
	478, 1345,
	479, 1345,
	481, 1345,
	484, 1345,
	485, 1345,
	486, 1345,
	487, 1345,
	488, 1345,
	489, 1345,
	491, 1345,
	492, 1345,
	493, 1345,
	494, 1345,
	499, 1345,
	500, 1345,
	501, 1345,
	502, 1345,
	503, 1345,
	504, 1345,
	-2, 0,
	-1, 141,
	1, 1218,
	125, 1218,
	230, 1218,
	293, 1218,
	344, 1218,
	352, 1218,
	507, 1218,
	531, 1218,
	-2, 0,
	-1, 143,
	1, 1218,
	531, 1218,
	-2, 0,
	-1, 144,
	1, 1218,
	531, 1218,
	-2, 0,
	-1, 145,
	1, 1218,
	454, 1218,
	531, 1218,
	-2, 0,
	-1, 174,
	144, 1313,
	162, 1313,
	175, 1313,
	222, 1313,
	255, 1313,
	304, 1313,
	314, 1313,
	471, 1313,
	-2, 1288,
	-1, 212,
	4, 1352,
	5, 1352,
	6, 1352,
	7, 1352,
	8, 1352,
	9, 1352,
	10, 1352,
	21, 1352,
	22, 1352,
	23, 1352,
	24, 1352,
	25, 1352,
	26, 1352,
	28, 1352,
	29, 1352,
	35, 1352,
	36, 1352,
	40, 1352,
	41, 1352,
	42, 1352,
	43, 1352,
	44, 1352,
	45, 1352,
	46, 1352,
	47, 1352,
	48, 1352,
	49, 1352,
	51, 1352,
	52, 1352,
	53, 1352,
	54, 1352,
	56, 1352,
	57, 1352,
	58, 1352,
	59, 1352,
	60, 1352,
	61, 1352,
	62, 1352,
	63, 1352,
	64, 1352,
	65, 1352,
	66, 1352,
	67, 1352,
	68, 1352,
	69, 1352,
	71, 1352,
	72, 1352,
	73, 1352,
	75, 1352,
	77, 1352,
	78, 1352,
	79, 1352,
	80, 1352,
	81, 1352,
	82, 1352,
	83, 1352,
	86, 1352,
	87, 1352,
	88, 1352,
	89, 1352,
	91, 1352,
	93, 1352,
	94, 1352,
	95, 1352,
	96, 1352,
	97, 1352,
	98, 1352,
	100, 1352,
	101, 1352,
	102, 1352,
	103, 1352,
	104, 1352,
	105, 1352,
	106, 1352,
	107, 1352,
	108, 1352,
	109, 1352,
	110, 1352,
	111, 1352,
	112, 1352,
	113, 1352,
	114, 1352,
	115, 1352,
	116, 1352,
	117, 1352,
	118, 1352,
	119, 1352,
	120, 1352,
	121, 1352,
	122, 1352,
	123, 1352,
	124, 1352,
	126, 1352,
	127, 1352,
	129, 1352,
	130, 1352,
	131, 1352,
	134, 1352,
	135, 1352,
	136, 1352,
	138, 1352,
	139, 1352,
	141, 1352,
	142, 1352,
	143, 1352,
	145, 1352,
	146, 1352,
	147, 1352,
	148, 1352,
	149, 1352,
	150, 1352,
	151, 1352,
	152, 1352,
	153, 1352,
	154, 1352,
	155, 1352,
	156, 1352,
	157, 1352,
	158, 1352,
	159, 1352,
	160, 1352,
	161, 1352,
	167, 1352,
	168, 1352,
	169, 1352,
	170, 1352,
	174, 1352,
	176, 1352,
	179, 1352,
	180, 1352,
	181, 1352,
	182, 1352,
	183, 1352,
	184, 1352,
	185, 1352,
	187, 1352,
	188, 1352,
	190, 1352,
	191, 1352,
	193, 1352,
	194, 1352,
	195, 1352,
	196, 1352,
	197, 1352,
	198, 1352,
	199, 1352,
	200, 1352,
	201, 1352,
	202, 1352,
	203, 1352,
	204, 1352,
	206, 1352,
	207, 1352,
	208, 1352,
	209, 1352,
	213, 1352,
	214, 1352,
	215, 1352,
	216, 1352,
	218, 1352,
	219, 1352,
	220, 1352,
	221, 1352,
	223, 1352,
	225, 1352,
	226, 1352,
	227, 1352,
	228, 1352,
	229, 1352,
	230, 1352,
	231, 1352,
	232, 1352,
	233, 1352,
	234, 1352,
	238, 1352,
	239, 1352,
	240, 1352,
	241, 1352,
	242, 1352,
	243, 1352,
	245, 1352,
	246, 1352,
	247, 1352,
	249, 1352,
	250, 1352,
	251, 1352,
	252, 1352,
	253, 1352,
	254, 1352,
	256, 1352,
	257, 1352,
	258, 1352,
	259, 1352,
	260, 1352,
	261, 1352,
	262, 1352,
	263, 1352,
	264, 1352,
	266, 1352,
	267, 1352,
	268, 1352,
	269, 1352,
	270, 1352,
	271, 1352,
	272, 1352,
	273, 1352,
	274, 1352,
	275, 1352,
	276, 1352,
	278, 1352,
	279, 1352,
	280, 1352,
	281, 1352,
	282, 1352,
	283, 1352,
	284, 1352,
	285, 1352,
	286, 1352,
	287, 1352,
	288, 1352,
	289, 1352,
	290, 1352,
	291, 1352,
	292, 1352,
	293, 1352,
	294, 1352,
	295, 1352,
	296, 1352,
	297, 1352,
	298, 1352,
	299, 1352,
	300, 1352,
	301, 1352,
	302, 1352,
	303, 1352,
	306, 1352,
	310, 1352,
	311, 1352,
	312, 1352,
	315, 1352,
	316, 1352,
	317, 1352,
	318, 1352,
	319, 1352,
	320, 1352,
	321, 1352,
	322, 1352,
	323, 1352,
	324, 1352,
	325, 1352,
	326, 1352,
	327, 1352,
	328, 1352,
	329, 1352,
	330, 1352,
	331, 1352,
	332, 1352,
	334, 1352,
	335, 1352,
	336, 1352,
	337, 1352,
	338, 1352,
	339, 1352,
	340, 1352,
	341, 1352,
	342, 1352,
	344, 1352,
	346, 1352,
	347, 1352,
	348, 1352,
	349, 1352,
	350, 1352,
	351, 1352,
	352, 1352,
	353, 1352,
	354, 1352,
	355, 1352,
	356, 1352,
	358, 1352,
	364, 1352,
	366, 1352,
	367, 1352,
	368, 1352,
	369, 1352,
	370, 1352,
	371, 1352,
	372, 1352,
	373, 1352,
	375, 1352,
	376, 1352,
	377, 1352,
	378, 1352,
	379, 1352,
	380, 1352,
	381, 1352,
	382, 1352,
	383, 1352,
	384, 1352,
	386, 1352,
	387, 1352,
	388, 1352,
	389, 1352,
	390, 1352,
	391, 1352,
	392, 1352,
	393, 1352,
	394, 1352,
	395, 1352,
	396, 1352,
	398, 1352,
	399, 1352,
	400, 1352,
	401, 1352,
	402, 1352,
	403, 1352,
	404, 1352,
	405, 1352,
	406, 1352,
	407, 1352,
	408, 1352,
	409, 1352,
	410, 1352,
	411, 1352,
	412, 1352,
	413, 1352,
	414, 1352,
	415, 1352,
	416, 1352,
	417, 1352,
	419, 1352,
	421, 1352,
	422, 1352,
	423, 1352,
	424, 1352,
	425, 1352,
	426, 1352,
	427, 1352,
	428, 1352,
	429, 1352,
	430, 1352,
	431, 1352,
	432, 1352,
	433, 1352,
	435, 1352,
	436, 1352,
	437, 1352,
	438, 1352,
	440, 1352,
	441, 1352,
	442, 1352,
	443, 1352,
	444, 1352,
	445, 1352,
	446, 1352,
	447, 1352,
	449, 1352,
	450, 1352,
	451, 1352,
	452, 1352,
	453, 1352,
	455, 1352,
	457, 1352,
	458, 1352,
	459, 1352,
	460, 1352,
	461, 1352,
	462, 1352,
	463, 1352,
	464, 1352,
	465, 1352,
	466, 1352,
	467, 1352,
	469, 1352,
	470, 1352,
	472, 1352,
	473, 1352,
	474, 1352,
	475, 1352,
	476, 1352,
	477, 1352,
	478, 1352,
	479, 1352,
	480, 1352,
	481, 1352,
	484, 1352,
	485, 1352,
	486, 1352,
	487, 1352,
	488, 1352,
	489, 1352,
	491, 1352,
	492, 1352,
	493, 1352,
	494, 1352,
	499, 1352,
	500, 1352,
	501, 1352,
	502, 1352,
	503, 1352,
	504, 1352,
	505, 1352,
	512, 1352,
	519, 1352,
	520, 1352,
	521, 1352,
	528, 1352,
	532, 1352,
	-2, 0,
	-1, 641,
	178, 2062,
	454, 2062,
	511, 2062,
	530, 2062,
	-2, 0,
	-1, 642,
	178, 2154,
	454, 2154,
	511, 2154,
	530, 2154,
	-2, 0,
	-1, 643,
	178, 2050,
	454, 2050,
	511, 2050,
	530, 2050,
	-2, 0,
	-1, 645,
	178, 2259,
	454, 2259,
	511, 2259,
	530, 2259,
	-2, 0,
	-1, 647,
	178, 2293,
	454, 2293,
	511, 2293,
	530, 2293,
	-2, 0,
	-1, 654,
	178, 2169,
	454, 2169,
	511, 2169,
	530, 2169,
	-2, 619,
	-1, 685,
	530, 2001,
	533, 2001,
	-2, 866,
	-1, 686,
	530, 2003,
	533, 2003,
	-2, 867,
	-1, 687,
	530, 2002,
	533, 2002,
	-2, 868,
	-1, 688,
	533, 1935,
	-2, 869,
	-1, 710,
	175, 216,
	-2, 0,
	-1, 731,
	42, 2005,
	-2, 0,
	-1, 732,
	491, 1122,
	-2, 930,
	-1, 772,
	4, 1143,
	21, 1143,
	22, 1143,
	23, 1143,
	24, 1143,
	25, 1143,
	26, 1143,
	28, 1143,
	29, 1143,
	35, 1143,
	40, 1143,
	41, 1143,
	43, 1143,
	44, 1143,
	45, 1143,
	46, 1143,
	47, 1143,
	48, 1143,
	49, 1143,
	51, 1143,
	52, 1143,
	53, 1143,
	54, 1143,
	56, 1143,
	57, 1143,
	58, 1143,
	59, 1143,
	60, 1143,
	61, 1143,
	62, 1143,
	66, 1143,
	67, 1143,
	68, 1143,
	69, 1143,
	71, 1143,
	72, 1143,
	73, 1143,
	77, 1143,
	78, 1143,
	79, 1143,
	80, 1143,
	81, 1143,
	82, 1143,
	83, 1143,
	86, 1143,
	87, 1143,
	88, 1143,
	89, 1143,
	91, 1143,
	93, 1143,
	94, 1143,
	95, 1143,
	96, 1143,
	97, 1143,
	98, 1143,
	100, 1143,
	101, 1143,
	102, 1143,
	104, 1143,
	105, 1143,
	113, 1143,
	114, 1143,
	115, 1143,
	116, 1143,
	118, 1143,
	119, 1143,
	120, 1143,
	122, 1143,
	123, 1143,
	124, 1143,
	126, 1143,
	127, 1143,
	129, 1143,
	130, 1143,
	131, 1143,
	134, 1143,
	135, 1143,
	136, 1143,
	138, 1143,
	139, 1143,
	141, 1143,
	142, 1143,
	143, 1143,
	145, 1143,
	146, 1143,
	147, 1143,
	148, 1143,
	149, 1143,
	150, 1143,
	151, 1143,
	152, 1143,
	153, 1143,
	154, 1143,
	155, 1143,
	156, 1143,
	157, 1143,
	158, 1143,
	159, 1143,
	161, 1143,
	167, 1143,
	168, 1143,
	169, 1143,
	170, 1143,
	174, 1143,
	176, 1143,
	180, 1143,
	181, 1143,
	182, 1143,
	183, 1143,
	184, 1143,
	185, 1143,
	187, 1143,
	188, 1143,
	190, 1143,
	191, 1143,
	193, 1143,
	194, 1143,
	195, 1143,
	196, 1143,
	197, 1143,
	198, 1143,
	199, 1143,
	200, 1143,
	201, 1143,
	203, 1143,
	204, 1143,
	206, 1143,
	207, 1143,
	208, 1143,
	209, 1143,
	213, 1143,
	214, 1143,
	215, 1143,
	216, 1143,
	219, 1143,
	220, 1143,
	221, 1143,
	223, 1143,
	225, 1143,
	226, 1143,
	228, 1143,
	230, 1143,
	231, 1143,
	232, 1143,
	234, 1143,
	238, 1143,
	239, 1143,
	240, 1143,
	241, 1143,
	242, 1143,
	243, 1143,
	245, 1143,
	246, 1143,
	247, 1143,
	249, 1143,
	250, 1143,
	252, 1143,
	253, 1143,
	256, 1143,
	257, 1143,
	258, 1143,
	261, 1143,
	262, 1143,
	263, 1143,
	264, 1143,
	266, 1143,
	267, 1143,
	268, 1143,
	269, 1143,
	270, 1143,
	271, 1143,
	272, 1143,
	273, 1143,
	274, 1143,
	275, 1143,
	276, 1143,
	278, 1143,
	280, 1143,
	281, 1143,
	282, 1143,
	283, 1143,
	284, 1143,
	285, 1143,
	286, 1143,
	287, 1143,
	288, 1143,
	289, 1143,
	290, 1143,
	292, 1143,
	294, 1143,
	296, 1143,
	297, 1143,
	299, 1143,
	300, 1143,
	301, 1143,
	302, 1143,
	303, 1143,
	306, 1143,
	310, 1143,
	311, 1143,
	312, 1143,
	315, 1143,
	316, 1143,
	317, 1143,
	319, 1143,
	321, 1143,
	322, 1143,
	323, 1143,
	324, 1143,
	325, 1143,
	326, 1143,
	327, 1143,
	328, 1143,
	329, 1143,
	330, 1143,
	331, 1143,
	332, 1143,
	334, 1143,
	335, 1143,
	336, 1143,
	337, 1143,
	338, 1143,
	339, 1143,
	340, 1143,
	341, 1143,
	342, 1143,
	344, 1143,
	346, 1143,
	347, 1143,
	348, 1143,
	349, 1143,
	350, 1143,
	351, 1143,
	352, 1143,
	353, 1143,
	354, 1143,
	355, 1143,
	356, 1143,
	358, 1143,
	364, 1143,
	366, 1143,
	367, 1143,
	368, 1143,
	369, 1143,
	370, 1143,
	371, 1143,
	372, 1143,
	373, 1143,
	375, 1143,
	376, 1143,
	377, 1143,
	379, 1143,
	380, 1143,
	381, 1143,
	382, 1143,
	383, 1143,
	384, 1143,
	386, 1143,
	387, 1143,
	388, 1143,
	389, 1143,
	390, 1143,
	391, 1143,
	392, 1143,
	393, 1143,
	394, 1143,
	395, 1143,
	396, 1143,
	398, 1143,
	399, 1143,
	400, 1143,
	401, 1143,
	402, 1143,
	403, 1143,
	405, 1143,
	406, 1143,
	407, 1143,
	408, 1143,
	409, 1143,
	411, 1143,
	412, 1143,
	413, 1143,
	414, 1143,
	415, 1143,
	416, 1143,
	417, 1143,
	419, 1143,
	421, 1143,
	422, 1143,
	423, 1143,
	424, 1143,
	425, 1143,
	426, 1143,
	427, 1143,
	428, 1143,
	429, 1143,
	430, 1143,
	431, 1143,
	432, 1143,
	433, 1143,
	435, 1143,
	436, 1143,
	438, 1143,
	440, 1143,
	441, 1143,
	442, 1143,
	443, 1143,
	444, 1143,
	445, 1143,
	446, 1143,
	447, 1143,
	449, 1143,
	450, 1143,
	451, 1143,
	452, 1143,
	453, 1143,
	455, 1143,
	457, 1143,
	458, 1143,
	459, 1143,
	460, 1143,
	461, 1143,
	462, 1143,
	464, 1143,
	465, 1143,
	466, 1143,
	467, 1143,
	469, 1143,
	470, 1143,
	473, 1143,
	474, 1143,
	475, 1143,
	476, 1143,
	477, 1143,
	478, 1143,
	479, 1143,
	481, 1143,
	484, 1143,
	485, 1143,
	486, 1143,
	487, 1143,
	488, 1143,
	489, 1143,
	491, 1143,
	492, 1143,
	493, 1143,
	494, 1143,
	499, 1143,
	500, 1143,
	501, 1143,
	502, 1143,
	503, 1143,
	504, 1143,
	-2, 0,
	-1, 853,
	348, 778,
	403, 778,
	459, 778,
	-2, 0,
	-1, 854,
	348, 777,
	403, 777,
	459, 777,
	-2, 719,
	-1, 858,
	1, 822,
	527, 822,
	529, 822,
	531, 822,
	-2, 0,
	-1, 859,
	1, 754,
	527, 754,
	529, 754,
	531, 754,
	-2, 0,
	-1, 860,
	1, 756,
	527, 756,
	529, 756,
	531, 756,
	-2, 0,
	-1, 861,
	1, 865,
	175, 865,
	527, 865,
	529, 865,
	531, 865,
	-2, 0,
	-1, 869,
	1, 781,
	527, 781,
	529, 781,
	531, 781,
	-2, 0,
	-1, 875,
	1, 822,
	527, 822,
	529, 822,
	531, 822,
	-2, 0,
	-1, 876,
	1, 824,
	527, 824,
	529, 824,
	531, 824,
	-2, 0,
	-1, 877,
	1, 827,
	527, 827,
	529, 827,
	531, 827,
	-2, 0,
	-1, 883,
	1, 844,
	527, 844,
	529, 844,
	531, 844,
	-2, 0,
	-1, 884,
	1, 846,
	527, 846,
	529, 846,
	531, 846,
	-2, 0,
	-1, 933,
	162, 1354,
	175, 1354,
	255, 1354,
	304, 1354,
	-2, 1292,
	-1, 948,
	162, 1353,
	175, 1353,
	255, 1353,
	304, 1353,
	-2, 1289,
	-1, 974,
	530, 2000,
	-2, 627,
	-1, 1002,
	5, 1992,
	528, 1990,
	-2, 1981,
	-1, 1010,
	5, 2013,
	528, 2010,
	-2, 2001,
	-1, 1011,
	5, 2014,
	528, 2011,
	-2, 2002,
	-1, 1019,
	530, 1998,
	-2, 1980,
	-1, 1020,
	528, 2375,
	-2, 1999,
	-1, 1043,
	528, 2374,
	-2, 2015,
	-1, 1044,
	5, 1519,
	-2, 2345,
	-1, 1045,
	5, 1520,
	-2, 2346,
	-1, 1046,
	5, 1521,
	-2, 2360,
	-1, 1047,
	5, 1522,
	-2, 2324,
	-1, 1048,
	5, 1523,
	-2, 2358,
	-1, 1049,
	5, 1531,
	-2, 2337,
	-1, 1050,
	5, 1518,
	-2, 2333,
	-1, 1051,
	5, 1518,
	-2, 2332,
	-1, 1052,
	5, 1518,
	-2, 2351,
	-1, 1053,
	5, 1529,
	-2, 2326,
	-1, 1054,
	5, 1534,
	-2, 2325,
	-1, 1055,
	5, 1536,
	-2, 2370,
	-1, 1058,
	5, 1558,
	-2, 2363,
	-1, 1059,
	5, 1550,
	-2, 2364,
	-1, 1060,
	5, 1558,
	-2, 2365,
	-1, 1061,
	5, 1554,
	-2, 2366,
	-1, 1062,
	5, 1504,
	-2, 2338,
	-1, 1063,
	5, 1505,
	-2, 2339,
	-1, 1064,
	5, 1506,
	-2, 2327,
	-1, 1092,
	5, 1541,
	-2, 2371,
	-1, 1093,
	5, 1542,
	-2, 2361,
	-1, 1094,
	5, 1543,
	492, 1543,
	-2, 2328,
	-1, 1095,
	5, 1544,
	492, 1544,
	-2, 2329,
	-1, 1132,
	528, 2010,
	-2, 2001,
	-1, 1133,
	528, 2011,
	-2, 2002,
	-1, 1163,
	178, 2293,
	454, 2293,
	511, 2293,
	530, 2293,
	-2, 0,
	-1, 1166,
	1, 605,
	531, 605,
	-2, 1226,
	-1, 1294,
	366, 1976,
	405, 1976,
	521, 1976,
	-2, 1973,
	-1, 1306,
	532, 1976,
	-2, 1977,
	-1, 1313,
	1, 1119,
	527, 1119,
	529, 1119,
	531, 1119,
	-2, 1341,
	-1, 1367,
	354, 929,
	491, 929,
	-2, 339,
	-1, 1386,
	42, 2004,
	-2, 1974,
	-1, 1391,
	1, 1119,
	527, 1119,
	529, 1119,
	531, 1119,
	-2, 1341,
	-1, 1398,
	4, 1143,
	21, 1143,
	22, 1143,
	23, 1143,
	24, 1143,
	25, 1143,
	26, 1143,
	28, 1143,
	29, 1143,
	35, 1143,
	40, 1143,
	41, 1143,
	43, 1143,
	44, 1143,
	45, 1143,
	46, 1143,
	47, 1143,
	48, 1143,
	49, 1143,
	51, 1143,
	52, 1143,
	53, 1143,
	54, 1143,
	56, 1143,
	57, 1143,
	58, 1143,
	59, 1143,
	60, 1143,
	61, 1143,
	62, 1143,
	66, 1143,
	67, 1143,
	68, 1143,
	69, 1143,
	71, 1143,
	72, 1143,
	73, 1143,
	77, 1143,
	78, 1143,
	79, 1143,
	80, 1143,
	81, 1143,
	82, 1143,
	83, 1143,
	86, 1143,
	87, 1143,
	88, 1143,
	89, 1143,
	91, 1143,
	93, 1143,
	94, 1143,
	95, 1143,
	96, 1143,
	97, 1143,
	98, 1143,
	100, 1143,
	101, 1143,
	102, 1143,
	104, 1143,
	105, 1143,
	113, 1143,
	114, 1143,
	115, 1143,
	116, 1143,
	118, 1143,
	119, 1143,
	120, 1143,
	122, 1143,
	123, 1143,
	124, 1143,
	126, 1143,
	127, 1143,
	129, 1143,
	130, 1143,
	131, 1143,
	134, 1143,
	135, 1143,
	136, 1143,
	138, 1143,
	139, 1143,
	141, 1143,
	142, 1143,
	143, 1143,
	145, 1143,
	146, 1143,
	147, 1143,
	148, 1143,
	149, 1143,
	150, 1143,
	151, 1143,
	152, 1143,
	153, 1143,
	154, 1143,
	155, 1143,
	156, 1143,
	157, 1143,
	158, 1143,
	159, 1143,
	167, 1143,
	168, 1143,
	169, 1143,
	170, 1143,
	174, 1143,
	176, 1143,
	180, 1143,
	181, 1143,
	182, 1143,
	183, 1143,
	184, 1143,
	185, 1143,
	187, 1143,
	188, 1143,
	190, 1143,
	191, 1143,
	193, 1143,
	194, 1143,
	195, 1143,
	196, 1143,
	197, 1143,
	198, 1143,
	199, 1143,
	200, 1143,
	201, 1143,
	203, 1143,
	204, 1143,
	206, 1143,
	207, 1143,
	208, 1143,
	209, 1143,
	214, 1143,
	215, 1143,
	216, 1143,
	219, 1143,
	220, 1143,
	221, 1143,
	223, 1143,
	225, 1143,
	226, 1143,
	228, 1143,
	230, 1143,
	231, 1143,
	232, 1143,
	234, 1143,
	238, 1143,
	239, 1143,
	240, 1143,
	241, 1143,
	242, 1143,
	243, 1143,
	245, 1143,
	246, 1143,
	247, 1143,
	249, 1143,
	250, 1143,
	252, 1143,
	253, 1143,
	256, 1143,
	257, 1143,
	258, 1143,
	261, 1143,
	262, 1143,
	263, 1143,
	264, 1143,
	266, 1143,
	267, 1143,
	268, 1143,
	269, 1143,
	270, 1143,
	271, 1143,
	272, 1143,
	273, 1143,
	274, 1143,
	275, 1143,
	276, 1143,
	278, 1143,
	280, 1143,
	281, 1143,
	282, 1143,
	283, 1143,
	284, 1143,
	285, 1143,
	286, 1143,
	287, 1143,
	288, 1143,
	289, 1143,
	290, 1143,
	292, 1143,
	296, 1143,
	297, 1143,
	299, 1143,
	300, 1143,
	301, 1143,
	302, 1143,
	303, 1143,
	306, 1143,
	308, 1143,
	310, 1143,
	311, 1143,
	312, 1143,
	315, 1143,
	316, 1143,
	317, 1143,
	319, 1143,
	321, 1143,
	322, 1143,
	323, 1143,
	324, 1143,
	325, 1143,
	326, 1143,
	327, 1143,
	328, 1143,
	329, 1143,
	330, 1143,
	331, 1143,
	332, 1143,
	334, 1143,
	335, 1143,
	336, 1143,
	337, 1143,
	338, 1143,
	339, 1143,
	340, 1143,
	341, 1143,
	342, 1143,
	344, 1143,
	346, 1143,
	347, 1143,
	348, 1143,
	349, 1143,
	350, 1143,
	351, 1143,
	352, 1143,
	353, 1143,
	354, 1143,
	355, 1143,
	356, 1143,
	358, 1143,
	364, 1143,
	366, 1143,
	367, 1143,
	368, 1143,
	369, 1143,
	370, 1143,
	371, 1143,
	372, 1143,
	373, 1143,
	375, 1143,
	376, 1143,
	377, 1143,
	379, 1143,
	380, 1143,
	381, 1143,
	382, 1143,
	383, 1143,
	384, 1143,
	386, 1143,
	387, 1143,
	388, 1143,
	389, 1143,
	390, 1143,
	391, 1143,
	392, 1143,
	393, 1143,
	394, 1143,
	395, 1143,
	396, 1143,
	398, 1143,
	399, 1143,
	400, 1143,
	401, 1143,
	402, 1143,
	403, 1143,
	405, 1143,
	406, 1143,
	407, 1143,
	408, 1143,
	409, 1143,
	411, 1143,
	412, 1143,
	413, 1143,
	414, 1143,
	415, 1143,
	416, 1143,
	417, 1143,
	419, 1143,
	421, 1143,
	422, 1143,
	423, 1143,
	424, 1143,
	425, 1143,
	426, 1143,
	427, 1143,
	428, 1143,
	429, 1143,
	430, 1143,
	431, 1143,
	432, 1143,
	433, 1143,
	435, 1143,
	436, 1143,
	438, 1143,
	440, 1143,
	441, 1143,
	442, 1143,
	443, 1143,
	444, 1143,
	445, 1143,
	446, 1143,
	447, 1143,
	449, 1143,
	450, 1143,
	451, 1143,
	452, 1143,
	453, 1143,
	455, 1143,
	457, 1143,
	458, 1143,
	459, 1143,
	460, 1143,
	461, 1143,
	462, 1143,
	464, 1143,
	465, 1143,
	466, 1143,
	467, 1143,
	469, 1143,
	470, 1143,
	473, 1143,
	474, 1143,
	475, 1143,
	476, 1143,
	477, 1143,
	478, 1143,
	479, 1143,
	481, 1143,
	484, 1143,
	485, 1143,
	486, 1143,
	487, 1143,
	488, 1143,
	489, 1143,
	491, 1143,
	492, 1143,
	493, 1143,
	494, 1143,
	499, 1143,
	500, 1143,
	501, 1143,
	502, 1143,
	503, 1143,
	504, 1143,
	-2, 0,
	-1, 1471,
	1, 478,
	527, 478,
	529, 478,
	531, 478,
	-2, 1312,
	-1, 1474,
	4, 2369,
	11, 2369,
	12, 2369,
	14, 2369,
	15, 2369,
	16, 2369,
	17, 2369,
	18, 2369,
	19, 2369,
	21, 2369,
	22, 2369,
	23, 2369,
	24, 2369,
	25, 2369,
	26, 2369,
	28, 2369,
	29, 2369,
	32, 2369,
	33, 2369,
	35, 2369,
	37, 2369,
	40, 2369,
	41, 2369,
	43, 2369,
	44, 2369,
	45, 2369,
	46, 2369,
	47, 2369,
	48, 2369,
	49, 2369,
	51, 2369,
	52, 2369,
	53, 2369,
	54, 2369,
	56, 2369,
	57, 2369,
	58, 2369,
	59, 2369,
	60, 2369,
	61, 2369,
	62, 2369,
	66, 2369,
	67, 2369,
	68, 2369,
	69, 2369,
	71, 2369,
	72, 2369,
	73, 2369,
	74, 2369,
	77, 2369,
	78, 2369,
	79, 2369,
	80, 2369,
	81, 2369,
	82, 2369,
	83, 2369,
	84, 2369,
	86, 2369,
	87, 2369,
	88, 2369,
	89, 2369,
	91, 2369,
	92, 2369,
	93, 2369,
	94, 2369,
	95, 2369,
	96, 2369,
	97, 2369,
	98, 2369,
	100, 2369,
	101, 2369,
	102, 2369,
	103, 2369,
	104, 2369,
	105, 2369,
	113, 2369,
	114, 2369,
	115, 2369,
	116, 2369,
	118, 2369,
	119, 2369,
	120, 2369,
	122, 2369,
	123, 2369,
	124, 2369,
	126, 2369,
	127, 2369,
	129, 2369,
	130, 2369,
	131, 2369,
	134, 2369,
	135, 2369,
	136, 2369,
	138, 2369,
	139, 2369,
	141, 2369,
	142, 2369,
	143, 2369,
	145, 2369,
	146, 2369,
	147, 2369,
	148, 2369,
	149, 2369,
	150, 2369,
	151, 2369,
	152, 2369,
	153, 2369,
	154, 2369,
	155, 2369,
	156, 2369,
	157, 2369,
	158, 2369,
	159, 2369,
	163, 2369,
	164, 2369,
	165, 2369,
	166, 2369,
	167, 2369,
	168, 2369,
	169, 2369,
	170, 2369,
	173, 2369,
	174, 2369,
	176, 2369,
	179, 2369,
	180, 2369,
	181, 2369,
	182, 2369,
	183, 2369,
	184, 2369,
	185, 2369,
	187, 2369,
	188, 2369,
	190, 2369,
	191, 2369,
	193, 2369,
	194, 2369,
	195, 2369,
	196, 2369,
	197, 2369,
	198, 2369,
	199, 2369,
	200, 2369,
	201, 2369,
	202, 2369,
	203, 2369,
	204, 2369,
	205, 2369,
	206, 2369,
	207, 2369,
	208, 2369,
	209, 2369,
	211, 2369,
	212, 2369,
	214, 2369,
	215, 2369,
	216, 2369,
	218, 2369,
	219, 2369,
	220, 2369,
	221, 2369,
	223, 2369,
	225, 2369,
	226, 2369,
	227, 2369,
	228, 2369,
	229, 2369,
	230, 2369,
	231, 2369,
	232, 2369,
	233, 2369,
	234, 2369,
	236, 2369,
	237, 2369,
	238, 2369,
	239, 2369,
	240, 2369,
	241, 2369,
	242, 2369,
	243, 2369,
	245, 2369,
	246, 2369,
	247, 2369,
	249, 2369,
	250, 2369,
	251, 2369,
	252, 2369,
	253, 2369,
	254, 2369,
	256, 2369,
	257, 2369,
	258, 2369,
	261, 2369,
	262, 2369,
	263, 2369,
	264, 2369,
	265, 2369,
	266, 2369,
	267, 2369,
	268, 2369,
	269, 2369,
	270, 2369,
	271, 2369,
	272, 2369,
	273, 2369,
	274, 2369,
	275, 2369,
	276, 2369,
	278, 2369,
	279, 2369,
	280, 2369,
	281, 2369,
	282, 2369,
	283, 2369,
	284, 2369,
	285, 2369,
	286, 2369,
	287, 2369,
	288, 2369,
	289, 2369,
	290, 2369,
	292, 2369,
	295, 2369,
	296, 2369,
	297, 2369,
	299, 2369,
	300, 2369,
	301, 2369,
	302, 2369,
	303, 2369,
	306, 2369,
	310, 2369,
	311, 2369,
	312, 2369,
	313, 2369,
	315, 2369,
	316, 2369,
	317, 2369,
	319, 2369,
	321, 2369,
	322, 2369,
	323, 2369,
	324, 2369,
	325, 2369,
	326, 2369,
	327, 2369,
	328, 2369,
	329, 2369,
	330, 2369,
	331, 2369,
	332, 2369,
	334, 2369,
	335, 2369,
	336, 2369,
	337, 2369,
	338, 2369,
	339, 2369,
	340, 2369,
	341, 2369,
	342, 2369,
	344, 2369,
	346, 2369,
	347, 2369,
	348, 2369,
	349, 2369,
	350, 2369,
	351, 2369,
	352, 2369,
	353, 2369,
	354, 2369,
	355, 2369,
	356, 2369,
	358, 2369,
	364, 2369,
	365, 2369,
	366, 2369,
	367, 2369,
	368, 2369,
	369, 2369,
	370, 2369,
	371, 2369,
	372, 2369,
	373, 2369,
	375, 2369,
	376, 2369,
	377, 2369,
	378, 2369,
	379, 2369,
	380, 2369,
	381, 2369,
	382, 2369,
	383, 2369,
	384, 2369,
	385, 2369,
	386, 2369,
	387, 2369,
	388, 2369,
	389, 2369,
	390, 2369,
	391, 2369,
	392, 2369,
	393, 2369,
	394, 2369,
	395, 2369,
	396, 2369,
	398, 2369,
	399, 2369,
	400, 2369,
	401, 2369,
	402, 2369,
	403, 2369,
	405, 2369,
	406, 2369,
	407, 2369,
	408, 2369,
	409, 2369,
	410, 2369,
	411, 2369,
	412, 2369,
	413, 2369,
	414, 2369,
	415, 2369,
	416, 2369,
	417, 2369,
	419, 2369,
	421, 2369,
	422, 2369,
	423, 2369,
	424, 2369,
	425, 2369,
	426, 2369,
	427, 2369,
	428, 2369,
	429, 2369,
	430, 2369,
	431, 2369,
	432, 2369,
	433, 2369,
	435, 2369,
	436, 2369,
	438, 2369,
	440, 2369,
	441, 2369,
	442, 2369,
	443, 2369,
	444, 2369,
	445, 2369,
	446, 2369,
	447, 2369,
	449, 2369,
	450, 2369,
	451, 2369,
	452, 2369,
	453, 2369,
	455, 2369,
	457, 2369,
	458, 2369,
	459, 2369,
	460, 2369,
	461, 2369,
	462, 2369,
	464, 2369,
	465, 2369,
	466, 2369,
	467, 2369,
	469, 2369,
	470, 2369,
	473, 2369,
	474, 2369,
	475, 2369,
	476, 2369,
	477, 2369,
	478, 2369,
	479, 2369,
	481, 2369,
	484, 2369,
	485, 2369,
	486, 2369,
	487, 2369,
	488, 2369,
	489, 2369,
	491, 2369,
	492, 2369,
	493, 2369,
	494, 2369,
	499, 2369,
	500, 2369,
	501, 2369,
	502, 2369,
	503, 2369,
	504, 2369,
	505, 2369,
	506, 2369,
	509, 2369,
	510, 2369,
	511, 2369,
	512, 2369,
	513, 2369,
	514, 2369,
	516, 2369,
	517, 2369,
	518, 2369,
	519, 2369,
	520, 2369,
	521, 2369,
	522, 2369,
	523, 2369,
	524, 2369,
	526, 2369,
	529, 2369,
	530, 2369,
	532, 2369,
	533, 2369,
	-2, 0,
	-1, 1479,
	178, 2259,
	454, 2259,
	511, 2259,
	530, 2259,
	-2, 0,
	-1, 1528,
	348, 778,
	403, 778,
	459, 778,
	-2, 0,
	-1, 1554,
	1, 773,
	527, 773,
	529, 773,
	531, 773,
	-2, 0,
	-1, 1555,
	1, 809,
	527, 809,
	529, 809,
	531, 809,
	-2, 0,
	-1, 1556,
	1, 817,
	527, 817,
	529, 817,
	531, 817,
	-2, 0,
	-1, 1557,
	1, 780,
	527, 780,
	529, 780,
	531, 780,
	-2, 0,
	-1, 1559,
	1, 784,
	527, 784,
	529, 784,
	531, 784,
	-2, 0,
	-1, 1565,
	1, 791,
	527, 791,
	529, 791,
	531, 791,
	-2, 0,
	-1, 1593,
	1, 2315,
	527, 2315,
	529, 2315,
	530, 2315,
	531, 2315,
	-2, 842,
	-1, 1594,
	1, 2256,
	527, 2256,
	529, 2256,
	530, 2256,
	531, 2256,
	-2, 843,
	-1, 1609,
	1, 1221,
	531, 1221,
	-2, 1226,
	-1, 1612,
	162, 1353,
	175, 1353,
	255, 1353,
	304, 1353,
	-2, 1293,
	-1, 1706,
	144, 1314,
	162, 1314,
	175, 1314,
	222, 1314,
	255, 1314,
	304, 1314,
	314, 1314,
	471, 1314,
	-2, 1719,
	-1, 1766,
	529, 1869,
	-2, 0,
	-1, 1801,
	144, 1314,
	162, 1314,
	175, 1314,
	222, 1314,
	255, 1314,
	304, 1314,
	314, 1314,
	471, 1314,
	-2, 1434,
	-1, 1850,
	528, 1546,
	-2, 1534,
	-1, 1887,
	1, 607,
	531, 607,
	-2, 1226,
	-1, 1999,
	205, 217,
	-2, 2009,
	-1, 2000,
	205, 218,
	-2, 260,
	-1, 2128,
	1, 775,
	527, 775,
	529, 775,
	531, 775,
	-2, 0,
	-1, 2129,
	1, 811,
	527, 811,
	529, 811,
	531, 811,
	-2, 0,
	-1, 2130,
	1, 819,
	527, 819,
	529, 819,
	531, 819,
	-2, 0,
	-1, 2161,
	1, 793,
	527, 793,
	529, 793,
	531, 793,
	-2, 0,
	-1, 2207,
	383, 1380,
	384, 1380,
	-2, 1579,
	-1, 2238,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1599,
	-1, 2239,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1600,
	-1, 2240,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1601,
	-1, 2241,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1602,
	-1, 2242,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1603,
	-1, 2243,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1604,
	-1, 2244,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1605,
	-1, 2245,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1606,
	-1, 2257,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1618,
	-1, 2258,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1619,
	-1, 2259,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1620,
	-1, 2262,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1625,
	-1, 2268,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1629,
	-1, 2270,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1637,
	-1, 2271,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1638,
	-1, 2272,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1639,
	-1, 2273,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1640,
	-1, 2385,
	5, 2013,
	178, 1880,
	528, 2010,
	-2, 2001,
	-1, 2386,
	178, 1881,
	-2, 2320,
	-1, 2387,
	178, 1882,
	-2, 2168,
	-1, 2388,
	178, 1883,
	-2, 2078,
	-1, 2389,
	178, 1884,
	-2, 2122,
	-1, 2390,
	178, 1885,
	-2, 2163,
	-1, 2391,
	178, 1886,
	-2, 2254,
	-1, 2392,
	178, 1887,
	-2, 1702,
	-1, 2461,
	1, 1435,
	2, 1435,
	103, 1435,
	144, 1435,
	162, 1435,
	175, 1435,
	179, 1435,
	189, 1435,
	192, 1435,
	218, 1435,
	222, 1435,
	233, 1435,
	251, 1435,
	255, 1435,
	279, 1435,
	304, 1435,
	308, 1435,
	314, 1435,
	374, 1435,
	378, 1435,
	471, 1435,
	482, 1435,
	496, 1435,
	497, 1435,
	498, 1435,
	507, 1435,
	527, 1435,
	529, 1435,
	531, 1435,
	533, 1435,
	-2, 1434,
	-1, 2474,
	528, 1982,
	-2, 1996,
	-1, 2476,
	1, 276,
	-2, 1341,
	-1, 2501,
	528, 1545,
	-2, 1535,
	-1, 2636,
	1, 1119,
	527, 1119,
	529, 1119,
	531, 1119,
	-2, 1341,
	-1, 2813,
	309, 1383,
	-2, 2359,
	-1, 2814,
	309, 1384,
	-2, 2240,
	-1, 2818,
	383, 1946,
	384, 1946,
	-2, 1700,
	-1, 2819,
	383, 1950,
	384, 1950,
	-2, 1701,
	-1, 2820,
	383, 1947,
	384, 1947,
	-2, 1700,
	-1, 2821,
	383, 1951,
	384, 1951,
	-2, 1701,
	-1, 2834,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1627,
	-1, 2835,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1631,
	-1, 2841,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1633,
	-1, 3045,
	1, 604,
	527, 604,
	529, 604,
	531, 604,
	-2, 1226,
	-1, 3177,
	1, 1119,
	527, 1119,
	529, 1119,
	531, 1119,
	-2, 1341,
	-1, 3285,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1635,
	-1, 3292,
	227, 0,
	229, 0,
	295, 0,
	-2, 1654,
	-1, 3359,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1683,
	-1, 3360,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1684,
	-1, 3361,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1685,
	-1, 3365,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1689,
	-1, 3366,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1690,
	-1, 3367,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1691,
	-1, 3413,
	528, 1983,
	-2, 1997,
	-1, 3551,
	530, 2476,
	-2, 1271,
	-1, 3609,
	227, 0,
	229, 0,
	295, 0,
	-2, 1655,
	-1, 3612,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1658,
	-1, 3613,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1660,
	-1, 3825,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1659,
	-1, 3826,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1661,
	-1, 3837,
	227, 0,
	-2, 1692,
	-1, 3987,
	227, 0,
	-2, 1693,
	-1, 4134,
	48, 0,
	202, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 2323,
}

const sqlPrivate = 57344

const sqlLast = 107720

var sqlAct = [...]int{

	246, 4009, 3749, 2701, 4133, 2731, 2968, 4030, 4144, 4243,
	3161, 3869, 3592, 4109, 4093, 3872, 4090, 3915, 1996, 3162,
	4145, 3857, 4075, 4146, 3324, 3922, 4192, 3991, 1333, 2097,
	3445, 3782, 3777, 4132, 958, 1136, 3731, 2217, 3814, 3194,
	1495, 3063, 3543, 1462, 2537, 2106, 3931, 3763, 3484, 2081,
	3679, 3954, 3787, 1457, 3187, 2285, 1837, 3157, 2042, 3147,
	1621, 3519, 3502, 3277, 3504, 3446, 2225, 1807, 238, 3189,
	687, 652, 1316, 1494, 2827, 3242, 3842, 2740, 1198, 3240,
	2672, 2218, 2753, 2690, 3415, 2659, 2742, 2951, 2417, 2983,
	2668, 3591, 1296, 949, 687, 1940, 2601, 1125, 1291, 3011,
	2685, 2974, 2104, 2750, 1776, 2991, 2733, 786, 1536, 2972,
	2739, 2702, 2539, 3384, 1002, 37, 2687, 2222, 1991, 1990,
	2454, 2950, 1950, 2453, 3992, 2329, 1752, 3648, 1714, 2576,
	2298, 957, 165, 1493, 2811, 1437, 2327, 2079, 2749, 1384,
	2615, 1976, 4, 2456, 1969, 2673, 682, 1985, 1006, 1923,
	1926, 1182, 1609, 1299, 240, 1796, 239, 3018, 2282, 2435,
	2318, 1777, 1913, 2206, 2189, 2414, 2187, 3159, 1472, 1009,
	3916, 2486, 2695, 1458, 1448, 1389, 688, 2743, 1011, 689,
	1116, 2030, 2528, 1168, 618, 2485, 2321, 1747, 1119, 1786,
	2443, 604, 1838, 2425, 2299, 626, 1098, 2371, 2381, 1318,
	1699, 634, 174, 1622, 175, 2188, 1623, 2575, 2190, 1565,
	684, 101, 2029, 1461, 646, 1133, 1470, 2054, 165, 759,
	1413, 732, 1939, 1328, 693, 2211, 696, 621, 987, 780,
	42, 41, 39, 30, 847, 28, 26, 629, 2862, 1096,
	1628, 1121, 1608, 1339, 867, 3398, 2858, 3399, 693, 2070,
	696, 2970, 2070, 953, 2070, 2070, 4309, 2070, 4303, 4287,
	2434, 4286, 3221, 2434, 4260, 2434, 4258, 1793, 3695, 4254,
	3695, 4174, 4168, 2004, 1177, 4175, 2434, 4166, 1332, 4163,
	4160, 2434, 4155, 4164, 4161, 3221, 2004, 4130, 3203, 1008,
	4129, 2004, 4128, 4123, 2004, 4122, 2090, 2090, 1115, 2090,
	2105, 4118, 4116, 4088, 801, 3695, 3695, 3695, 4069, 4062,
	4061, 4056, 2492, 2434, 2434, 3695, 1113, 4055, 4049, 4023,
	3989, 3695, 2004, 3741, 2492, 3204, 985, 3971, 3968, 1131,
	3965, 3580, 2004, 3924, 3695, 3889, 3888, 3925, 3880, 2004,
	2004, 3879, 2004, 3848, 3827, 3695, 3041, 2004, 2492, 3806,
	1099, 1099, 3795, 2090, 3726, 3714, 3221, 3694, 2434, 2434,
	3611, 3695, 3559, 3553, 2492, 3517, 3237, 3237, 934, 3518,
	933, 3408, 3406, 1636, 1637, 3409, 3407, 3391, 1177, 3308,
	3040, 2434, 3304, 2004, 1128, 3236, 2434, 3026, 954, 3237,
	2923, 2924, 3228, 953, 2967, 1667, 3229, 2962, 2434, 2961,
	2427, 2434, 1639, 2434, 3388, 2914, 2912, 2488, 943, 2915,
	2913, 2068, 2904, 2902, 948, 2873, 2905, 2434, 2871, 2434,
	1152, 1147, 2756, 2729, 2872, 86, 2090, 2093, 1636, 1637,
	2728, 2512, 2826, 2491, 2093, 2434, 1638, 2492, 2434, 2483,
	2477, 2433, 2004, 2434, 2004, 2434, 1658, 1100, 2092, 1102,
	1667, 1103, 2093, 4070, 1655, 3984, 3972, 1639, 2090, 3388,
	2426, 3776, 3741, 2938, 3715, 2004, 2088, 1558, 1636, 1637,
	3580, 3229, 2434, 2592, 2527, 1944, 1892, 2069, 2324, 2665,
	2085, 2003, 2609, 2525, 1772, 1327, 3475, 212, 3280, 3258,
	1667, 1638, 1794, 1979, 3205, 1636, 1637, 1639, 1538, 2470,
	1148, 1658, 2469, 2468, 1127, 3605, 2467, 2466, 1104, 1655,
	1101, 942, 212, 3206, 1332, 941, 940, 1667, 939, 938,
	937, 936, 932, 931, 1639, 1661, 1662, 1663, 1664, 214,
	2791, 1638, 1636, 1637, 930, 1644, 929, 928, 927, 926,
	925, 1129, 924, 923, 922, 921, 920, 919, 918, 917,
	916, 898, 2929, 845, 214, 844, 2325, 843, 1638, 2071,
	3289, 1639, 2071, 1502, 2071, 2071, 842, 2071, 841, 840,
	839, 838, 837, 1666, 1668, 836, 835, 213, 834, 833,
	1661, 1662, 1663, 1664, 832, 831, 830, 829, 206, 828,
	1644, 827, 826, 825, 824, 1638, 207, 823, 1653, 1654,
	822, 821, 213, 820, 819, 818, 817, 816, 815, 814,
	2681, 804, 2861, 803, 799, 798, 792, 791, 176, 781,
	750, 3789, 749, 709, 708, 707, 699, 1659, 1666, 1668,
	1644, 2326, 2323, 698, 697, 666, 658, 657, 656, 640,
	1341, 234, 1488, 176, 2939, 68, 3664, 784, 783, 233,
	232, 1011, 231, 1653, 1654, 1011, 230, 1644, 229, 228,
	227, 69, 226, 225, 224, 223, 222, 212, 1666, 1668,
	1201, 221, 220, 219, 1201, 218, 217, 73, 1321, 138,
	3203, 216, 1659, 215, 3623, 1181, 3425, 3402, 3238, 1186,
	3014, 2884, 2867, 1172, 1644, 1666, 1668, 2646, 2354, 2496,
	2475, 1148, 1011, 2460, 1011, 2100, 1011, 1797, 1921, 214,
	2698, 1321, 1820, 1755, 1725, 1335, 79, 2340, 1313, 1754,
	2717, 2338, 1659, 2069, 1302, 2088, 2085, 1665, 2182, 1307,
	1635, 3522, 3867, 1188, 1321, 2088, 1341, 2965, 1506, 1013,
	1294, 1758, 1135, 1306, 1309, 4151, 1716, 1660, 4131, 1659,
	4037, 1356, 1755, 85, 3981, 2426, 2328, 213, 1754, 1331,
	3975, 1353, 3973, 2966, 2940, 3841, 3796, 100, 206, 3775,
	3671, 3232, 86, 97, 1391, 1148, 207, 1321, 1011, 3646,
	1753, 1112, 1665, 1321, 2099, 3645, 3639, 1321, 3638, 1395,
	1397, 3637, 3630, 3629, 3627, 1011, 3791, 1011, 176, 1716,
	1166, 1321, 1660, 3622, 1309, 1309, 3619, 1011, 3618, 1011,
	1636, 1637, 3516, 3429, 3428, 1341, 3427, 1465, 1338, 2683,
	1345, 87, 1351, 3412, 3379, 3378, 3377, 1481, 3300, 1636,
	1637, 1400, 1667, 3296, 3009, 2958, 2949, 2922, 2919, 1639,
	2918, 2916, 1660, 1309, 2911, 693, 1056, 696, 1387, 1194,
	2910, 1288, 1293, 1321, 2909, 2906, 2903, 2883, 1639, 2866,
	1161, 2859, 212, 2322, 2730, 1347, 1451, 1330, 2461, 1660,
	1329, 1011, 2311, 1638, 1011, 1656, 1652, 1635, 1649, 1647,
	1648, 1640, 1641, 1642, 1643, 1645, 1646, 2045, 2505, 1717,
	1310, 1715, 1638, 1520, 1468, 2934, 2932, 2933, 2925, 2926,
	2927, 2928, 2930, 2931, 214, 2011, 1442, 1445, 4302, 2923,
	2924, 1486, 1723, 1491, 2009, 165, 165, 1634, 1507, 3473,
	2923, 2924, 4252, 1500, 4251, 1505, 1475, 1477, 3523, 4184,
	1656, 1652, 4182, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 4173, 1137, 2294, 1382, 1454, 90, 1172, 3326,
	2597, 1172, 213, 3523, 4029, 4019, 4016, 1352, 212, 4015,
	1560, 4014, 4008, 206, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 207, 1644, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 1473, 4001, 1574, 1559, 212, 173, 93, 3969,
	96, 1644, 3953, 176, 954, 1011, 3952, 2682, 2963, 2288,
	214, 1011, 68, 1640, 1641, 1642, 1643, 1645, 1646, 3940,
	1666, 1668, 3852, 3937, 212, 3885, 3790, 3863, 69, 3839,
	2923, 2924, 785, 3822, 3821, 3803, 138, 1613, 214, 3802,
	3766, 3742, 3663, 3644, 73, 3006, 3581, 212, 3575, 1487,
	1640, 1641, 1642, 1643, 1645, 1646, 3572, 1416, 213, 1492,
	3463, 1501, 3462, 3449, 3448, 3394, 214, 3382, 3291, 206,
	1705, 1346, 1703, 3239, 1659, 3222, 3180, 207, 3119, 3092,
	3066, 2929, 1340, 79, 2923, 2924, 213, 3065, 3034, 214,
	1607, 140, 2929, 1512, 2888, 3032, 3066, 206, 2887, 176,
	2882, 2850, 2658, 1761, 1760, 207, 177, 1759, 212, 1529,
	2923, 2924, 1756, 1748, 213, 1746, 1011, 1011, 1011, 2503,
	85, 2502, 1011, 1561, 2472, 206, 2465, 2697, 2432, 1133,
	2336, 1133, 1819, 207, 100, 2561, 1775, 213, 1770, 86,
	97, 1769, 1768, 212, 2101, 1774, 1201, 1004, 206, 1767,
	214, 1766, 1765, 1764, 1011, 782, 207, 687, 1610, 1763,
	1762, 1855, 687, 1743, 1742, 1618, 212, 1741, 1617, 1740,
	934, 1011, 933, 2939, 1739, 1321, 1823, 1738, 176, 1737,
	1736, 1735, 1612, 1734, 2939, 214, 1834, 1733, 87, 1614,
	1732, 1881, 2929, 1011, 1660, 1731, 1730, 1757, 213, 1201,
	1729, 1828, 1631, 1632, 1718, 1704, 1702, 1697, 214, 206,
	1783, 1160, 1150, 1143, 3993, 3769, 954, 207, 3667, 1172,
	1306, 1780, 1781, 3615, 3424, 3405, 3397, 1919, 2923, 2924,
	2870, 2494, 1804, 213, 2463, 2353, 3669, 3717, 3423, 176,
	1884, 1824, 1830, 1131, 206, 1131, 2929, 1890, 1811, 1749,
	1750, 1099, 207, 1717, 2339, 1341, 213, 3030, 2337, 1885,
	1700, 4249, 1815, 4242, 165, 1827, 3095, 206, 3866, 1183,
	212, 3976, 2929, 3974, 176, 207, 2923, 2924, 1636, 1637,
	1177, 1912, 4017, 212, 2939, 3190, 1185, 1805, 1797, 1912,
	3927, 3926, 3794, 2940, 2490, 3744, 1738, 176, 1128, 1826,
	1128, 1912, 3743, 3716, 2940, 1738, 3666, 1639, 3584, 3583,
	3582, 693, 214, 696, 90, 3400, 693, 1111, 696, 1802,
	1910, 3224, 1469, 3691, 956, 214, 1887, 1648, 1640, 1641,
	1642, 1643, 1645, 1646, 3223, 3932, 1321, 1321, 2939, 2580,
	1883, 1638, 954, 1184, 3526, 2908, 1201, 1773, 2907, 1642,
	1643, 1645, 1646, 1177, 173, 93, 3687, 96, 2832, 2563,
	213, 1180, 1727, 1814, 1813, 1812, 1810, 1831, 1809, 1808,
	1799, 206, 1878, 213, 1755, 1932, 1528, 3461, 1898, 207,
	1754, 212, 1537, 1605, 206, 4127, 1835, 1177, 2046, 785,
	2929, 914, 207, 138, 1795, 3164, 2098, 3163, 3923, 4171,
	1575, 176, 1965, 2120, 2940, 1968, 3843, 3688, 1973, 1997,
	2001, 4156, 4143, 3148, 176, 2319, 1915, 2970, 1127, 1905,
	1127, 2754, 1538, 214, 2934, 2932, 2933, 2925, 2926, 2927,
	2928, 2930, 2931, 1992, 915, 970, 2932, 2933, 2925, 2926,
	2927, 2928, 2930, 2931, 3481, 1724, 3480, 1949, 140, 3466,
	3255, 3043, 3328, 4152, 212, 1129, 2501, 1129, 2940, 1771,
	1751, 2876, 3155, 177, 1944, 2039, 1441, 2038, 1394, 1324,
	1155, 213, 4165, 4162, 3199, 2603, 3440, 212, 4010, 2400,
	3778, 4087, 206, 1977, 3998, 2606, 3069, 1321, 3456, 1321,
	207, 1321, 693, 2737, 696, 2694, 214, 2035, 3141, 4208,
	4209, 3272, 3906, 3705, 2128, 3494, 1359, 1321, 1321, 1369,
	912, 2513, 176, 1554, 1330, 1994, 4153, 1329, 1321, 214,
	1572, 2040, 4297, 2691, 4233, 3899, 3891, 1306, 1516, 2051,
	1321, 2096, 1321, 1321, 1321, 1972, 3739, 2933, 2925, 2926,
	2927, 2928, 2930, 2931, 213, 1185, 3047, 1465, 2109, 910,
	2107, 3490, 1325, 745, 687, 206, 908, 906, 2110, 2129,
	2119, 2002, 894, 207, 952, 903, 3493, 213, 1555, 2059,
	2118, 1899, 2121, 2122, 2123, 2167, 1573, 2165, 206, 3683,
	3489, 3483, 3479, 2048, 3684, 176, 207, 2073, 1370, 1185,
	2531, 3477, 2925, 2926, 2927, 2928, 2930, 2931, 2022, 2021,
	3437, 2103, 1184, 3436, 2529, 3144, 3025, 2124, 176, 1571,
	3049, 2881, 2880, 2112, 3031, 2130, 2531, 3094, 2925, 2926,
	2927, 2928, 2930, 2931, 1556, 2879, 2878, 2836, 2613, 3686,
	2529, 2612, 1888, 2608, 2599, 1011, 2591, 1011, 2053, 2057,
	2590, 2108, 951, 3689, 1011, 746, 1184, 1855, 1855, 1201,
	2589, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1473, 1011, 1473, 1011,
	1011, 1011, 1011, 2199, 2061, 2062, 2098, 2186, 954, 2588,
	954, 1514, 1944, 2094, 1161, 2095, 4234, 2567, 693, 2451,
	696, 1011, 2554, 2197, 1011, 1011, 1416, 212, 2056, 212,
	2056, 2495, 1011, 2484, 2269, 1611, 1011, 2367, 1011, 1011,
	2366, 2111, 2227, 2324, 953, 900, 1201, 2020, 2927, 2928,
	2930, 2931, 1011, 1011, 1011, 1011, 1427, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1178, 3718, 2195, 3685, 214,
	3256, 214, 1904, 1903, 2143, 1941, 1912, 1914, 4237, 1365,
	1406, 2584, 1405, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1326, 2541, 3820, 2180, 1011, 2161, 1404, 2931,
	1403, 1646, 2577, 2578, 3692, 2116, 1377, 1937, 1133, 2210,
	2577, 2578, 2300, 2301, 2476, 1201, 1167, 213, 1530, 213,
	2565, 2325, 2577, 2578, 1133, 2176, 2300, 2316, 206, 2319,
	206, 1942, 1943, 2183, 2520, 1570, 207, 2193, 207, 2185,
	1011, 1201, 2184, 962, 2284, 2198, 2191, 2284, 1140, 2223,
	2224, 934, 2362, 2214, 934, 934, 2215, 2216, 176, 4208,
	176, 1938, 4238, 2553, 2171, 2809, 2315, 3701, 3443, 2133,
	1174, 2384, 2384, 2398, 2075, 2300, 1584, 2077, 2418, 2420,
	3263, 2824, 2794, 2082, 2424, 2179, 2084, 1138, 1538, 1907,
	2087, 1616, 1509, 2196, 2364, 1604, 2326, 2323, 1927, 2365,
	2544, 950, 2368, 1928, 2369, 2370, 1538, 1815, 2605, 2440,
	1849, 2448, 748, 747, 1159, 3500, 4261, 3109, 2127, 2296,
	2552, 1309, 1131, 616, 2292, 1804, 3102, 2058, 2473, 1588,
	2602, 2290, 2313, 1179, 954, 2280, 1099, 4149, 1131, 1178,
	2604, 889, 1201, 954, 1526, 3046, 3262, 954, 611, 2462,
	2788, 1935, 3452, 3317, 3499, 4240, 3108, 1172, 2638, 2197,
	3738, 2194, 2510, 2278, 947, 3101, 2439, 2136, 1309, 2447,
	1963, 2452, 1855, 2328, 2458, 2459, 904, 1128, 3464, 2380,
	2797, 2409, 2393, 2178, 1175, 1141, 1178, 2497, 165, 2422,
	1975, 1909, 1176, 1128, 2430, 2431, 2823, 2637, 2441, 2489,
	1201, 2445, 2446, 2195, 2530, 1510, 812, 3478, 743, 1962,
	742, 1929, 1802, 1974, 1321, 904, 1757, 1852, 1515, 3476,
	3819, 2328, 904, 905, 1947, 2533, 1908, 2487, 1931, 1011,
	1011, 904, 1011, 3465, 4246, 954, 3143, 3113, 2181, 3699,
	2166, 2607, 2164, 2587, 1174, 1970, 2564, 2266, 2600, 1390,
	1294, 2175, 890, 2566, 2636, 1321, 2511, 3874, 664, 2532,
	2504, 3314, 1567, 1946, 4253, 2137, 2543, 1306, 2516, 1942,
	1943, 805, 1749, 1750, 2508, 2560, 793, 2662, 2328, 2274,
	2585, 1426, 4264, 2518, 4150, 2507, 4225, 2509, 2008, 2007,
	1933, 1174, 2569, 1388, 2796, 2514, 2275, 1127, 2679, 1971,
	4197, 2276, 2816, 2817, 1364, 2281, 4224, 1179, 2596, 4066,
	2482, 1321, 1321, 1127, 1321, 3597, 2519, 2793, 2675, 3596,
	2641, 3196, 4239, 2705, 2643, 2536, 1321, 2669, 2322, 2196,
	1367, 2546, 2549, 1989, 1129, 2517, 3315, 2556, 4011, 1927,
	4277, 1321, 3197, 2647, 1928, 4025, 2650, 1177, 2652, 2568,
	1129, 2724, 1465, 1935, 1179, 2725, 663, 1585, 1175, 2720,
	2759, 2760, 2586, 2070, 2570, 3876, 1176, 2751, 1582, 4148,
	3048, 2766, 2767, 2768, 1309, 1309, 1988, 3700, 693, 1011,
	696, 2765, 901, 1390, 2579, 2581, 2582, 2583, 2847, 2777,
	2696, 2778, 3122, 2696, 3080, 2542, 2719, 2194, 1934, 2755,
	1330, 2264, 1935, 2644, 2267, 1175, 2795, 2775, 3196, 2177,
	3758, 1139, 1744, 1176, 779, 891, 2845, 2656, 3028, 4196,
	1935, 3453, 3593, 1011, 2707, 3832, 1306, 2736, 2711, 1011,
	1011, 2757, 2714, 2666, 2715, 2761, 4218, 2762, 4098, 2838,
	4028, 3087, 2283, 3079, 165, 2689, 2799, 3724, 2801, 2774,
	2700, 1785, 1929, 2263, 4244, 2726, 612, 1951, 2780, 1696,
	2782, 2328, 2784, 2772, 2310, 1306, 2277, 1306, 4064, 1931,
	3083, 1586, 4177, 2779, 2132, 2781, 2279, 2783, 2721, 1955,
	3088, 4178, 2727, 2723, 1011, 1011, 2886, 1916, 1917, 2738,
	1011, 2135, 2802, 2785, 1513, 1615, 889, 2792, 2531, 1583,
	806, 807, 4065, 1011, 1011, 794, 795, 3085, 1843, 1011,
	1011, 2444, 2547, 1473, 4265, 1011, 2457, 2291, 1158, 947,
	613, 1177, 2722, 2126, 1011, 1011, 1011, 1789, 953, 1511,
	1011, 1933, 2842, 1952, 813, 3330, 3507, 4275, 1944, 3816,
	1011, 892, 3507, 2839, 4245, 3505, 1966, 3768, 1525, 1527,
	3587, 3505, 1587, 3420, 2843, 1153, 3598, 1011, 2848, 2869,
	1930, 2815, 614, 3084, 615, 4031, 1792, 3691, 1177, 2825,
	2806, 2805, 3274, 2807, 1542, 4147, 4207, 4247, 4205, 665,
	4046, 1787, 662, 2804, 4195, 2210, 2810, 893, 3939, 1199,
	3541, 3875, 3759, 1300, 3183, 2028, 1849, 1849, 1782, 1790,
	3687, 1151, 1146, 1980, 3680, 603, 1625, 890, 1987, 2265,
	3521, 1626, 3594, 2864, 2865, 2860, 3642, 2213, 2868, 1620,
	3678, 1625, 3368, 1011, 1011, 1011, 1945, 1788, 1956, 3682,
	1900, 3278, 1011, 1011, 1011, 3019, 3882, 1011, 3881, 1934,
	1708, 4270, 3861, 1935, 1713, 2837, 3508, 1011, 1133, 1201,
	4278, 3688, 3508, 1011, 3946, 1011, 2985, 2977, 2978, 808,
	809, 3704, 3815, 1133, 796, 797, 3997, 3542, 3703, 3487,
	1897, 3439, 3184, 2071, 3176, 3061, 3057, 2680, 2674, 2660,
	2052, 1201, 1924, 2041, 2033, 1789, 2016, 4176, 4032, 1957,
	1958, 3681, 2203, 1133, 639, 3313, 1201, 2436, 2875, 1624,
	3383, 3433, 1953, 1852, 1852, 2712, 4076, 3275, 2172, 1893,
	3544, 2716, 2999, 1855, 1624, 3783, 1986, 1201, 3503, 2844,
	954, 1925, 2571, 2657, 1792, 2960, 1791, 1429, 2117, 2846,
	2481, 1625, 1011, 3024, 3921, 3919, 3862, 2989, 3072, 2442,
	1895, 2979, 1954, 3068, 1557, 3067, 1011, 1696, 1626, 2830,
	3250, 3599, 2808, 3008, 3396, 3038, 2480, 1790, 1855, 3243,
	2982, 2981, 1131, 1626, 2987, 2548, 3044, 2438, 1896, 2479,
	891, 2478, 2437, 1964, 1011, 1321, 1398, 1131, 3512, 1172,
	3050, 3817, 3506, 3369, 2664, 4004, 3643, 3013, 3506, 1399,
	3012, 2988, 3370, 3053, 3054, 951, 2997, 2955, 2956, 2957,
	2993, 1930, 3000, 3001, 2204, 3005, 3750, 1131, 2971, 3071,
	1321, 3070, 3076, 3077, 3074, 3017, 1967, 1128, 4269, 2998,
	1201, 2986, 1412, 3683, 1624, 3600, 1410, 811, 3684, 1321,
	2984, 3233, 1128, 3058, 1321, 3097, 2050, 3003, 3151, 3004,
	3702, 3800, 4215, 1959, 3917, 3245, 3100, 2669, 3035, 3036,
	2758, 3037, 3870, 2642, 1306, 1321, 4033, 3021, 3022, 3023,
	3244, 1321, 1128, 1321, 2640, 3082, 1519, 1201, 3125, 3434,
	4084, 3128, 4079, 3686, 687, 3133, 3135, 2038, 2572, 2573,
	1543, 3123, 2669, 1927, 1791, 1321, 3045, 3689, 1928, 4073,
	2994, 4005, 3649, 3089, 3090, 3139, 892, 3091, 3051, 1321,
	3112, 2669, 3799, 1983, 3114, 3029, 2669, 3111, 3859, 1827,
	3385, 1849, 2335, 3169, 1960, 1133, 3120, 4102, 1932, 3130,
	3192, 4217, 1602, 3160, 3137, 3170, 3086, 1600, 3020, 3116,
	3117, 3175, 3241, 3118, 3146, 3093, 3149, 1127, 2992, 3177,
	2334, 4167, 893, 3104, 3871, 3860, 1981, 1932, 4018, 4080,
	3062, 3107, 1127, 3838, 3115, 1579, 1577, 1321, 1321, 638,
	3201, 3641, 2751, 2996, 1553, 3121, 3056, 1551, 4006, 3511,
	2952, 2751, 3290, 3253, 1129, 3138, 3142, 3131, 700, 1321,
	3220, 3039, 1127, 1977, 2917, 1982, 2849, 3213, 2661, 1129,
	2598, 1977, 2562, 1549, 1843, 1843, 1929, 3226, 3227, 2506,
	3099, 1822, 3685, 1547, 1387, 3191, 1306, 1306, 3105, 1818,
	3185, 1603, 3106, 1931, 1201, 3257, 2569, 1201, 1852, 1129,
	3153, 3110, 1545, 1535, 3193, 1533, 1497, 3173, 693, 1131,
	696, 2953, 2163, 3246, 3247, 3248, 3249, 3271, 3692, 3270,
	3145, 3129, 1408, 1620, 1411, 2790, 3136, 1011, 1409, 810,
	2789, 4142, 2995, 1011, 1011, 1821, 3198, 1011, 1011, 1011,
	3251, 1011, 2764, 3200, 2192, 3207, 3231, 3269, 2174, 3210,
	1011, 1855, 1566, 3963, 3124, 1933, 3214, 2140, 2013, 1011,
	165, 165, 1011, 1882, 1128, 3235, 1306, 1728, 1201, 1508,
	3250, 3218, 3219, 1381, 4219, 3268, 3725, 1011, 1601, 3243,
	3713, 3172, 902, 1599, 4072, 1201, 3781, 3266, 1922, 3259,
	3730, 3260, 3252, 3261, 3676, 1855, 1855, 1011, 1011, 3540,
	1011, 1011, 1011, 2379, 2375, 3955, 3532, 3293, 3276, 954,
	3492, 1578, 1576, 3459, 3457, 3438, 3179, 3956, 1011, 3174,
	1552, 3165, 1011, 1550, 1855, 1855, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 3273, 1011, 3265, 3957, 1548,
	3188, 2718, 2713, 1011, 1011, 1855, 2692, 3302, 3303, 1546,
	1011, 2678, 2667, 1934, 2654, 3245, 945, 1935, 889, 2639,
	1785, 1011, 2091, 3310, 2089, 2086, 2373, 2083, 1544, 1534,
	3244, 1532, 1133, 1133, 1127, 2162, 1011, 701, 702, 3298,
	2078, 947, 2076, 2377, 2378, 2376, 2072, 2063, 1407, 2012,
	2010, 3309, 1993, 1978, 1961, 1948, 3052, 3959, 3320, 1936,
	4193, 3325, 3332, 4185, 1108, 1201, 3316, 3318, 3319, 3132,
	1829, 1129, 2828, 3958, 1987, 1629, 907, 909, 911, 3417,
	4209, 3339, 1901, 3340, 3401, 2005, 946, 3341, 3372, 1109,
	3960, 3347, 3345, 3342, 4112, 3343, 1789, 3805, 3380, 3798,
	1011, 3797, 3737, 3672, 3418, 3419, 2372, 2374, 2752, 1920,
	1361, 3948, 2531, 2531, 2551, 3552, 1011, 1011, 3430, 3431,
	3432, 1944, 2131, 3373, 2049, 3387, 2529, 2550, 1450, 890,
	1597, 1598, 2158, 3392, 3393, 1792, 1449, 2223, 3333, 1843,
	2157, 3389, 3390, 1011, 1011, 165, 1131, 1131, 4111, 2138,
	1787, 3706, 3732, 1531, 704, 703, 3381, 3416, 3983, 3650,
	3628, 2574, 2829, 2555, 1633, 677, 2223, 3348, 1790, 1019,
	1011, 4211, 2293, 3209, 3403, 1930, 3211, 3212, 3404, 4203,
	1630, 3215, 1986, 3216, 617, 3217, 4172, 1708, 2653, 1636,
	1637, 3486, 1321, 235, 1110, 2160, 1788, 3376, 1636, 1637,
	3529, 1128, 1128, 3246, 3247, 3248, 3249, 1450, 705, 706,
	3426, 1855, 3485, 242, 242, 242, 3471, 606, 607, 1450,
	622, 606, 622, 632, 637, 2034, 3442, 1639, 655, 3488,
	1164, 3467, 3495, 661, 2603, 2611, 2610, 628, 600, 242,
	1321, 2405, 3472, 3474, 1309, 733, 2593, 1011, 2557, 4071,
	4041, 776, 1638, 3498, 2595, 1133, 1011, 790, 3482, 3554,
	3510, 1638, 3527, 242, 3514, 4038, 2559, 2594, 4003, 3935,
	3914, 3531, 3520, 3411, 1321, 1321, 1321, 3178, 3563, 2558,
	2569, 2699, 1849, 2423, 1886, 3549, 3528, 1836, 3535, 4241,
	1321, 3868, 891, 2038, 3027, 1791, 4104, 4268, 2705, 3501,
	3961, 4105, 3509, 2923, 2924, 3962, 3567, 4040, 3545, 1201,
	1636, 1637, 3546, 4104, 3564, 3565, 3566, 1332, 4105, 3620,
	4221, 1127, 1127, 3530, 2523, 2524, 2330, 1849, 2521, 2522,
	1465, 1201, 2751, 3579, 1011, 1011, 3548, 1518, 3422, 2523,
	1011, 1011, 1855, 1517, 3534, 1011, 1011, 3533, 1011, 2521,
	2363, 3550, 1011, 1581, 3936, 3900, 1580, 3733, 1129, 1129,
	3547, 3729, 3728, 1011, 3556, 3555, 3616, 3538, 3421, 1131,
	3321, 3126, 1722, 1721, 4255, 4226, 606, 606, 3562, 1011,
	3994, 3895, 3853, 3573, 242, 3568, 3569, 3850, 2226, 1852,
	3570, 3577, 3761, 3668, 3576, 3578, 3558, 3515, 3610, 3513,
	3574, 3455, 3450, 3062, 3601, 3585, 3208, 3497, 3182, 3181,
	2787, 3595, 2771, 2770, 2769, 2709, 944, 2684, 892, 3586,
	2655, 2499, 2498, 3590, 1128, 2295, 2159, 3602, 2156, 2155,
	2154, 2153, 2152, 2066, 1852, 2065, 3614, 2064, 2047, 1133,
	2023, 2019, 2018, 2017, 2015, 2014, 1596, 1133, 1595, 1540,
	1539, 1201, 1436, 1201, 1435, 1434, 1433, 1432, 1431, 1430,
	1133, 1428, 1423, 1422, 893, 1421, 1420, 1419, 1376, 1375,
	1374, 1373, 1372, 3655, 1371, 2331, 1201, 1366, 1360, 1358,
	1357, 1192, 1191, 3640, 1190, 1189, 1157, 1156, 1091, 1891,
	913, 899, 3873, 3690, 1590, 84, 1368, 721, 78, 1011,
	2207, 1984, 3454, 872, 4101, 1354, 4024, 728, 4086, 3078,
	2614, 2139, 1541, 2141, 3007, 2464, 4063, 3624, 2885, 3990,
	3831, 2333, 1726, 2964, 80, 3661, 1201, 995, 3698, 3697,
	1041, 3673, 3674, 3654, 1201, 3757, 3458, 3756, 3460, 3677,
	3651, 3709, 3710, 3441, 1127, 2741, 3754, 3658, 3656, 3665,
	3753, 3708, 3707, 1131, 3657, 1840, 1842, 3012, 961, 3662,
	1204, 1131, 1321, 1321, 165, 1902, 3675, 3652, 3653, 1001,
	2474, 1918, 3696, 1911, 1131, 3647, 2500, 2383, 1018, 1015,
	1321, 1129, 1844, 1846, 1017, 3734, 3721, 3735, 1016, 1845,
	1745, 1201, 1014, 1839, 3537, 3491, 1321, 3736, 2038, 3536,
	3748, 2663, 1465, 2703, 1415, 3746, 874, 1906, 1128, 2289,
	2317, 3740, 1309, 3751, 2874, 1719, 1128, 976, 997, 3745,
	2314, 3774, 1149, 1011, 986, 975, 2990, 2969, 3723, 1128,
	3727, 3195, 3410, 1321, 1321, 1321, 3747, 2202, 737, 2401,
	1849, 3773, 2920, 2320, 1201, 1142, 2406, 2399, 2395, 3042,
	2693, 1606, 2669, 3801, 3804, 3752, 1011, 1011, 1011, 3788,
	3767, 3771, 1698, 2704, 3784, 1187, 979, 2287, 3785, 1710,
	3770, 2526, 3560, 3809, 1201, 3811, 3561, 2854, 2405, 1011,
	1843, 3786, 1011, 1011, 1849, 1849, 3760, 3779, 2212, 3202,
	3010, 2493, 1011, 4108, 3329, 1855, 2027, 3772, 3793, 1107,
	1011, 1011, 1106, 1105, 4092, 4089, 3807, 3810, 3571, 3158,
	1894, 3808, 2515, 1849, 1849, 1201, 1688, 1321, 3812, 3792,
	3166, 991, 3818, 1305, 2975, 1843, 3234, 3823, 1127, 3712,
	1378, 1201, 660, 1003, 1687, 2633, 1127, 2632, 4000, 1011,
	3720, 1173, 3722, 1171, 1849, 1170, 1011, 1852, 1169, 1127,
	3060, 3840, 4276, 3451, 1011, 211, 1855, 3851, 2405, 2405,
	3834, 3828, 2822, 1627, 1011, 1129, 1619, 1011, 208, 210,
	3855, 209, 3762, 1129, 3414, 3016, 1011, 3849, 1144, 3846,
	3847, 4170, 3469, 1201, 3150, 21, 1129, 20, 19, 3845,
	105, 1852, 1852, 40, 1321, 1321, 18, 3856, 120, 137,
	136, 3894, 2851, 2852, 3854, 113, 1154, 135, 134, 133,
	3878, 3877, 132, 139, 131, 655, 130, 125, 129, 128,
	1852, 1852, 127, 3905, 126, 124, 123, 122, 3929, 121,
	3920, 119, 1201, 118, 3911, 1321, 117, 3892, 242, 116,
	242, 242, 1297, 115, 242, 242, 1312, 114, 3908, 3902,
	112, 1852, 111, 1011, 1011, 3910, 3909, 3913, 110, 3934,
	242, 3160, 1334, 3918, 3933, 3896, 109, 3897, 3912, 3947,
	108, 107, 1011, 1011, 3928, 106, 3951, 3945, 2405, 2405,
	2405, 651, 648, 3966, 3967, 57, 3970, 1363, 56, 1011,
	1855, 3944, 104, 103, 17, 38, 3949, 14, 61, 1380,
	3950, 1386, 3964, 3942, 3788, 242, 242, 3943, 1297, 62,
	16, 13, 33, 83, 1011, 95, 94, 1011, 242, 34,
	3978, 92, 2946, 2947, 2948, 4007, 1425, 91, 3941, 32,
	15, 3996, 89, 88, 31, 29, 1011, 11, 242, 1306,
	242, 242, 9, 1297, 242, 1312, 3988, 8, 3884, 35,
	1849, 1806, 12, 5, 170, 655, 3995, 242, 242, 169,
	3979, 3980, 172, 168, 171, 82, 4013, 167, 166, 81,
	27, 4012, 10, 162, 3930, 3982, 4027, 1011, 1011, 3525,
	790, 76, 164, 163, 161, 160, 159, 77, 1011, 74,
	158, 1011, 157, 1321, 75, 156, 25, 6, 60, 4020,
	7, 3813, 3907, 1321, 1321, 3254, 98, 99, 36, 72,
	4022, 4035, 4036, 71, 70, 24, 59, 4054, 4043, 23,
	1321, 4045, 199, 4034, 198, 1309, 3933, 4039, 197, 196,
	195, 194, 189, 188, 1011, 1011, 193, 4048, 1843, 4051,
	4050, 191, 190, 1465, 1465, 192, 4052, 4053, 187, 202,
	201, 203, 242, 4059, 200, 4060, 205, 1852, 186, 184,
	1465, 4058, 4083, 4057, 180, 4047, 179, 1011, 1011, 242,
	1011, 183, 4068, 185, 182, 4081, 2812, 4091, 4094, 181,
	4026, 1849, 1843, 1843, 178, 4106, 204, 4082, 154, 155,
	4113, 67, 153, 152, 4103, 151, 150, 149, 148, 147,
	66, 4042, 4096, 22, 2, 1, 4121, 4125, 0, 4100,
	0, 1843, 1843, 0, 0, 1011, 1011, 1011, 0, 667,
	4124, 0, 4067, 0, 4110, 0, 4126, 4117, 0, 0,
	4120, 0, 0, 0, 0, 0, 0, 0, 1011, 0,
	4159, 0, 1843, 4154, 0, 0, 4141, 0, 4140, 4138,
	4139, 0, 0, 0, 0, 4095, 2401, 2401, 4099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4181, 3886,
	3887, 4157, 0, 0, 0, 0, 0, 4188, 2976, 0,
	0, 4179, 0, 4190, 4183, 1011, 0, 0, 1852, 4194,
	4180, 4189, 0, 3901, 0, 0, 3903, 3904, 0, 0,
	0, 0, 4186, 4187, 4114, 0, 0, 4115, 4191, 0,
	3002, 4210, 4213, 0, 4202, 4200, 4201, 4206, 0, 4204,
	0, 0, 0, 0, 4091, 3015, 0, 4094, 4214, 4216,
	4212, 0, 672, 1011, 0, 1011, 4231, 0, 4228, 4223,
	4227, 4220, 4236, 0, 0, 0, 3033, 4229, 0, 0,
	0, 0, 4222, 0, 0, 0, 4235, 0, 0, 0,
	0, 0, 0, 4230, 0, 4232, 0, 606, 0, 4248,
	4110, 4250, 0, 0, 0, 0, 2401, 2401, 2401, 0,
	0, 0, 4257, 0, 0, 4256, 0, 0, 242, 0,
	242, 0, 1011, 1011, 242, 0, 4266, 0, 0, 4259,
	1011, 0, 1011, 1011, 4263, 4262, 680, 1334, 1297, 242,
	4280, 242, 4272, 2405, 2405, 4283, 242, 1334, 622, 4284,
	0, 242, 1334, 0, 0, 4279, 4282, 0, 655, 4281,
	674, 4288, 0, 4285, 0, 4293, 0, 0, 4292, 0,
	4294, 0, 4295, 0, 4300, 4298, 4291, 4299, 1843, 4290,
	0, 0, 0, 1011, 4296, 0, 2705, 3286, 3287, 0,
	0, 4301, 4308, 0, 4310, 0, 0, 4021, 4304, 0,
	0, 4305, 0, 0, 4307, 0, 0, 4311, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	4273, 4274, 0, 0, 0, 0, 3015, 0, 0, 0,
	0, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405,
	2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405,
	0, 2405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 4306, 0, 0, 669, 3349, 3350, 3351, 3352, 3353,
	3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363,
	3364, 3365, 3366, 3367, 0, 3371, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 1849, 679, 242, 0, 0,
	0, 0, 0, 1636, 1637, 0, 0, 0, 0, 676,
	0, 146, 0, 0, 0, 671, 0, 0, 68, 0,
	44, 43, 0, 0, 0, 1667, 0, 0, 0, 0,
	1636, 1637, 1639, 0, 69, 0, 0, 141, 0, 0,
	0, 1852, 0, 1300, 0, 0, 1199, 242, 0, 0,
	73, 242, 1667, 0, 0, 0, 668, 0, 242, 1639,
	0, 63, 4169, 0, 242, 0, 1638, 0, 46, 0,
	143, 0, 0, 0, 0, 0, 1658, 242, 0, 242,
	0, 242, 0, 675, 1655, 606, 0, 45, 0, 79,
	0, 0, 0, 1638, 0, 0, 0, 681, 0, 2067,
	0, 0, 1852, 1658, 0, 0, 0, 0, 670, 0,
	0, 242, 0, 48, 64, 0, 0, 3306, 242, 0,
	0, 49, 0, 0, 0, 0, 85, 0, 0, 1849,
	144, 0, 0, 0, 3322, 3284, 0, 0, 47, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 0, 655,
	0, 0, 0, 790, 0, 1661, 1662, 1663, 1664, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 242, 0,
	1297, 242, 1661, 1662, 1663, 1664, 0, 0, 0, 0,
	0, 0, 1644, 0, 87, 655, 0, 0, 0, 0,
	0, 0, 242, 1666, 1668, 0, 0, 0, 0, 0,
	0, 2401, 2401, 242, 242, 0, 242, 0, 242, 0,
	242, 0, 242, 0, 0, 0, 0, 0, 1653, 1654,
	1666, 1668, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 2168, 0, 0, 2169, 0, 2170, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	242, 0, 0, 0, 3413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 1659, 655, 0, 0, 0, 0,
	0, 2923, 2924, 0, 2941, 2942, 2943, 0, 0, 2401,
	2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401,
	2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 0, 2401,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	1637, 51, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 1667, 0, 0, 65, 244, 0, 1665, 1639, 54,
	173, 93, 0, 96, 2938, 0, 0, 52, 0, 1636,
	1637, 145, 0, 0, 0, 0, 0, 1660, 53, 0,
	0, 0, 0, 0, 1665, 0, 2630, 212, 0, 0,
	0, 1667, 1638, 1843, 0, 58, 0, 0, 1639, 138,
	0, 0, 1658, 0, 1660, 0, 0, 0, 0, 0,
	1655, 0, 0, 142, 0, 0, 0, 0, 2622, 2620,
	0, 0, 0, 0, 0, 2624, 2626, 2616, 0, 214,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2929, 140, 0, 0, 242, 0, 0,
	0, 3283, 0, 0, 0, 0, 606, 0, 0, 177,
	0, 0, 0, 242, 0, 606, 0, 213, 0, 0,
	0, 1661, 1662, 1663, 1664, 2945, 0, 242, 206, 0,
	0, 1644, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 242, 1312, 0, 1656, 1652, 2944, 1649, 1647,
	1648, 1640, 1641, 1642, 1643, 1645, 1646, 0, 176, 0,
	0, 3, 0, 0, 0, 0, 0, 1843, 0, 1666,
	1668, 1644, 0, 974, 0, 1649, 1647, 1648, 1640, 1641,
	1642, 1643, 1645, 1646, 0, 2939, 0, 0, 0, 242,
	1312, 0, 622, 242, 1653, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 1666,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 69, 0, 0, 2618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2540, 0, 0,
	73, 0, 0, 0, 0, 0, 242, 0, 2631, 2623,
	2621, 2625, 2627, 2617, 2619, 0, 0, 2405, 242, 0,
	0, 2629, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 1784, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 3660, 0, 2634, 0, 0, 0, 0, 0,
	0, 3837, 0, 0, 2405, 2940, 0, 0, 0, 0,
	0, 0, 0, 242, 2645, 3670, 85, 0, 0, 0,
	0, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 1334, 0,
	0, 242, 0, 1660, 0, 0, 0, 0, 3864, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 2688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2540, 0,
	606, 0, 0, 2708, 0, 0, 0, 0, 0, 242,
	0, 0, 242, 1660, 87, 0, 242, 0, 242, 0,
	0, 0, 0, 1297, 0, 242, 242, 0, 1312, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 2734, 790,
	0, 2540, 2540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 2935,
	2936, 2937, 0, 0, 0, 0, 2934, 2932, 2933, 2925,
	2926, 2927, 2928, 2930, 2931, 242, 1297, 242, 0, 2635,
	1334, 0, 1334, 0, 2405, 1297, 960, 1297, 2628, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 1199, 0, 242, 242, 242, 242, 1297,
	242, 0, 242, 0, 0, 0, 0, 0, 3987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 3829, 0, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 242, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 1636, 1637, 0, 1669, 1670,
	1671, 1679, 1680, 1681, 0, 0, 0, 0, 0, 0,
	173, 93, 0, 96, 3829, 0, 1672, 1667, 1636, 1637,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	2226, 0, 1685, 0, 0, 0, 0, 212, 0, 0,
	1667, 0, 0, 0, 0, 785, 0, 1639, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 214,
	1334, 1638, 2226, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 140, 0, 974, 0, 2923, 2924,
	974, 2941, 2942, 2943, 0, 2401, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 1285, 0, 213, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 207, 1661, 1662, 1663,
	1664, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	2923, 2924, 2401, 2941, 2942, 2943, 0, 0, 176, 0,
	1661, 1662, 1663, 1664, 0, 0, 0, 0, 1636, 1637,
	1644, 2938, 0, 0, 0, 0, 1676, 0, 0, 1686,
	0, 0, 0, 0, 0, 1666, 1668, 242, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 1682, 242, 1683, 0, 0, 0, 606, 1666, 1668,
	1653, 1654, 606, 0, 0, 606, 0, 0, 606, 606,
	0, 0, 0, 2938, 606, 0, 0, 0, 1674, 0,
	0, 1638, 242, 1653, 1654, 0, 0, 0, 0, 1659,
	0, 1658, 0, 0, 1334, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2929, 0, 1659, 0, 0, 0, 1334, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 2540, 2540,
	242, 0, 1312, 0, 0, 2540, 0, 0, 3064, 0,
	2840, 0, 2401, 0, 0, 0, 2540, 3064, 0, 2540,
	3064, 3064, 2929, 0, 2944, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 242, 242, 1312, 242, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 1312, 242, 0,
	0, 1297, 2939, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 1665, 2540, 0, 3127, 2540, 1312, 1666, 1668,
	2540, 2540, 1312, 0, 0, 0, 0, 0, 0, 960,
	0, 0, 1660, 960, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 1654, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 2939, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 3154, 0, 0, 3156, 2540, 0,
	0, 242, 1659, 0, 0, 242, 0, 1386, 0, 0,
	1336, 0, 1342, 0, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2688,
	0, 0, 1297, 0, 242, 0, 0, 2540, 0, 606,
	0, 0, 0, 0, 0, 0, 2540, 0, 0, 0,
	0, 0, 2940, 242, 0, 0, 0, 242, 242, 1675,
	0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0,
	1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 0,
	0, 0, 0, 3633, 242, 2688, 1466, 3632, 2688, 0,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 1665, 1484, 2940, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 1503, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 3264, 0, 0, 1297, 242, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 2935, 2936, 2937, 1562,
	0, 0, 1568, 2934, 2932, 2933, 2925, 2926, 2927, 2928,
	2930, 2931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3327, 0, 2935, 2936,
	2937, 0, 0, 0, 0, 2934, 2932, 2933, 2925, 2926,
	2927, 2928, 2930, 2931, 0, 0, 0, 0, 0, 0,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 1707, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 606, 606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 1334,
	1334, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 0, 0,
	0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681,
	0, 0, 0, 0, 1778, 1778, 1778, 0, 0, 0,
	0, 0, 1672, 1667, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 655, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 1655, 1312, 242, 0, 0, 0, 0, 0,
	0, 960, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 0, 0, 2540, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 1662, 1663, 1664, 0, 0, 0,
	0, 2734, 2734, 1644, 0, 0, 0, 790, 790, 2540,
	90, 0, 2688, 2688, 0, 0, 790, 2540, 0, 0,
	0, 0, 243, 243, 243, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 1686, 242, 0, 0, 0,
	0, 1666, 1668, 0, 0, 0, 0, 0, 243, 0,
	173, 93, 0, 96, 0, 0, 0, 1682, 0, 1683,
	0, 0, 0, 0, 0, 0, 1653, 1654, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 212, 0, 1636,
	1637, 0, 0, 0, 1674, 785, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 1667, 0, 0, 1285, 0, 3625, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 1673, 140, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 177,
	1655, 0, 0, 0, 0, 0, 0, 213, 242, 0,
	0, 0, 0, 0, 1334, 0, 242, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 242,
	0, 1285, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 2833, 0, 0, 0, 1660, 2540, 2540, 2540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 1661, 1662, 1663, 1664, 0, 0, 2540, 0, 3064,
	1677, 1644, 1334, 1334, 242, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 242, 1312, 242,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2540, 0, 2540, 242, 0, 0, 0, 0, 0, 1666,
	1668, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2540, 0,
	0, 0, 0, 3764, 1653, 1654, 2923, 2924, 0, 2941,
	2942, 2943, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 3607, 0, 0,
	0, 0, 0, 1659, 0, 1675, 0, 0, 0, 1650,
	1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640,
	1641, 1642, 1643, 1645, 1646, 1334, 0, 0, 0, 2898,
	0, 0, 0, 2899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2201, 0, 2205, 0, 0, 0, 2938,
	0, 0, 2219, 0, 0, 0, 0, 1285, 0, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 0, 2268, 0, 2270, 2271, 2272,
	2273, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 2297,
	0, 0, 0, 1660, 0, 0, 2540, 0, 3064, 0,
	1707, 3858, 0, 0, 2312, 0, 0, 0, 2929, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2342, 2345, 2348, 2351, 0, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 2397, 0, 2408, 2410, 2415, 1312, 242,
	0, 0, 2944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3858, 0,
	0, 0, 0, 0, 0, 0, 2540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3938, 0,
	2939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 0, 0, 0, 0, 0, 0, 242,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3858,
	0, 0, 0, 0, 0, 0, 0, 243, 1205, 243,
	243, 0, 1205, 243, 243, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2940, 0, 0, 0, 0, 0, 242, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3764, 0, 0, 0, 0,
	0, 0, 1205, 0, 243, 243, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 243, 3064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 243,
	243, 0, 68, 243, 1334, 1205, 1334, 2648, 2649, 0,
	2651, 1205, 0, 0, 0, 1205, 243, 243, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 4077, 0, 0, 73, 0, 0, 0, 1334, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2935, 2936, 2937, 0, 242, 2540,
	0, 2934, 2932, 2933, 2925, 2926, 2927, 2928, 2930, 2931,
	0, 0, 0, 79, 0, 0, 242, 0, 0, 0,
	0, 1205, 0, 1636, 1637, 0, 0, 0, 0, 1679,
	1680, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	3327, 0, 0, 0, 0, 1667, 0, 0, 0, 0,
	85, 243, 1639, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 100, 0, 0, 0, 243, 86,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1658, 2786, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 3858, 0, 0, 0, 1285, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 2540, 0, 1689, 1690, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 1661, 1662, 1663, 1664, 0,
	0, 974, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2834, 2835, 0, 0, 0, 0, 2841, 0,
	0, 0, 0, 0, 1676, 0, 0, 1686, 0, 0,
	0, 0, 0, 1666, 1668, 0, 0, 2855, 2856, 0,
	0, 2540, 0, 2312, 0, 0, 0, 0, 0, 0,
	0, 0, 2863, 0, 90, 2734, 0, 0, 1653, 1654,
	0, 0, 0, 0, 0, 1285, 0, 0, 2877, 2734,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 767, 0, 2889, 0, 1659, 0, 0,
	0, 0, 0, 0, 173, 93, 0, 96, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 751, 0, 0,
	0, 0, 1285, 0, 1205, 0, 0, 0, 243, 243,
	243, 212, 0, 0, 0, 243, 0, 0, 0, 785,
	243, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 0, 0, 0,
	2415, 2415, 2415, 214, 0, 0, 0, 1205, 0, 2923,
	2924, 0, 2941, 2942, 2943, 1778, 754, 0, 0, 0,
	0, 0, 0, 2980, 0, 0, 0, 1665, 140, 0,
	3606, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 1660, 0, 0,
	0, 213, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 1677, 0, 0, 0, 0, 0, 756, 0,
	0, 0, 2938, 0, 0, 2923, 2924, 0, 2941, 2942,
	2943, 0, 1476, 0, 0, 0, 0, 0, 757, 1285,
	960, 758, 1285, 0, 0, 0, 3295, 0, 0, 0,
	680, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 3081, 243, 1205, 1205, 243, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 2938, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 2929, 0, 1285, 1678, 1656, 1652, 0, 1649, 1647,
	1648, 1640, 1641, 1642, 1643, 1645, 1646, 0, 769, 0,
	1285, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 243, 2923, 2924, 0, 2941, 2942, 2943,
	0, 0, 0, 0, 0, 2944, 243, 0, 243, 0,
	243, 0, 0, 0, 0, 3294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 2929, 0, 0,
	0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681,
	243, 0, 0, 2939, 0, 0, 779, 243, 761, 0,
	0, 0, 1672, 1667, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 2938, 1685, 0,
	0, 0, 0, 0, 0, 1205, 0, 1205, 0, 1205,
	679, 2944, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 777, 778, 775, 1638, 1205, 1205, 0, 0, 770,
	1285, 0, 763, 0, 1658, 0, 1205, 243, 0, 0,
	243, 0, 1655, 0, 0, 0, 0, 0, 1205, 2939,
	1205, 1205, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 1007, 0, 0, 0, 0, 764,
	771, 0, 243, 243, 0, 243, 0, 243, 765, 243,
	0, 243, 0, 0, 0, 0, 2929, 0, 0, 0,
	0, 0, 766, 2940, 0, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 241,
	241, 681, 0, 1661, 1662, 1663, 1664, 0, 0, 243,
	0, 0, 768, 1644, 0, 2219, 0, 0, 0, 0,
	0, 3281, 3282, 0, 694, 3285, 0, 0, 0, 3288,
	2944, 0, 0, 0, 0, 0, 0, 0, 3292, 0,
	0, 0, 1676, 0, 0, 1686, 0, 3299, 694, 0,
	2980, 1666, 1668, 0, 0, 0, 0, 1205, 0, 2940,
	0, 0, 0, 0, 0, 3311, 0, 1682, 2939, 1683,
	0, 0, 0, 0, 0, 0, 1653, 1654, 0, 0,
	0, 0, 0, 0, 0, 3334, 3335, 0, 3336, 3337,
	3338, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 3344, 2935, 2936, 2937,
	3346, 0, 0, 0, 2934, 2932, 2933, 2925, 2926, 2927,
	2928, 2930, 2931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 3374, 3375, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 3386,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 1130,
	0, 0, 0, 1123, 3395, 0, 0, 0, 0, 0,
	0, 0, 0, 2935, 2936, 2937, 1285, 0, 2940, 0,
	2934, 2932, 2933, 2925, 2926, 2927, 2928, 2930, 2931, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 237, 237, 602,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 3435, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 243, 0, 0, 3444, 3447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 243, 0, 0, 0, 1285, 0, 1285, 0,
	0, 0, 2935, 2936, 2937, 0, 0, 0, 0, 2934,
	2932, 2933, 2925, 2926, 2927, 2928, 2930, 2931, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 0, 0, 1675, 0, 0, 0, 1650,
	1651, 1657, 1678, 1656, 1652, 243, 1649, 1647, 1648, 1640,
	1641, 1642, 1643, 1645, 1646, 0, 0, 243, 0, 2308,
	0, 0, 0, 2309, 0, 0, 0, 0, 0, 0,
	243, 1285, 0, 0, 0, 1778, 0, 0, 0, 1285,
	0, 0, 0, 0, 3557, 0, 0, 243, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	243, 0, 0, 1205, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3603, 3604, 0, 0, 0, 0, 3608, 3609,
	0, 0, 0, 3612, 3613, 0, 0, 0, 243, 0,
	3617, 243, 0, 0, 0, 243, 0, 243, 0, 1285,
	0, 3621, 0, 0, 243, 243, 0, 0, 0, 1205,
	1205, 0, 1205, 0, 0, 0, 0, 3626, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 243, 243, 243, 243, 0, 243,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 241, 0, 241, 241, 0, 0, 241,
	241, 0, 243, 0, 0, 0, 0, 3447, 1285, 0,
	243, 0, 0, 0, 0, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	241, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 241, 241, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3824, 3825, 3826, 0, 0, 0,
	714, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2219, 0, 0,
	3835, 3836, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 716, 974, 974, 0, 0, 0, 241, 3844, 0,
	0, 0, 1196, 0, 736, 0, 0, 1205, 1304, 0,
	0, 996, 102, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 3447, 0, 0, 718, 0, 0,
	719, 0, 3883, 0, 1205, 740, 0, 0, 0, 680,
	0, 0, 3890, 0, 0, 960, 0, 0, 0, 0,
	0, 0, 0, 0, 3898, 1205, 0, 0, 0, 0,
	0, 0, 1417, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 1440, 0, 1440, 1440, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 1483, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 1205, 0, 0, 0, 734, 0, 0,
	0, 0, 0, 243, 243, 0, 243, 0, 0, 0,
	0, 3447, 3447, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 935, 1205, 0,
	0, 0, 0, 720, 0, 0, 0, 1205, 955, 0,
	0, 0, 1205, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3999, 1205, 0, 4002, 1589, 723, 243, 1205,
	0, 1205, 0, 0, 0, 1205, 1117, 0, 0, 0,
	0, 0, 243, 1800, 3447, 1130, 0, 0, 0, 241,
	243, 0, 0, 1205, 243, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 241, 1800, 241, 1205, 0, 0,
	710, 694, 731, 0, 0, 0, 694, 0, 0, 0,
	0, 724, 0, 0, 0, 960, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3447, 0, 0, 3447,
	0, 0, 243, 0, 729, 0, 243, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 743, 0, 742, 0, 1205, 1205, 726, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 2219, 0, 0, 735, 1205, 0, 0,
	0, 0, 744, 0, 741, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 1205, 0, 243, 1205, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 4137, 4137, 4137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4158, 0, 0, 241,
	0, 0, 694, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 4137, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 241, 0, 241, 0, 0, 0,
	0, 3447, 0, 3447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4137, 4267, 0, 1205, 0, 0, 0, 0, 4271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 241,
	0, 241, 0, 241, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 241, 0, 0, 0, 0,
	0, 2025, 0, 0, 102, 2032, 102, 0, 102, 0,
	1205, 0, 0, 243, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 1417, 0, 2055, 243, 2055, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 243, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 1205, 0,
	0, 0, 0, 0, 0, 1440, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 955, 102, 102, 0, 0, 0,
	0, 0, 1205, 1205, 1205, 0, 0, 102, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 1205, 0, 0,
	0, 0, 2032, 0, 0, 2114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1043, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 2134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2144, 0,
	2146, 102, 2148, 0, 2150, 0, 2151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 0,
	0, 0, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 241, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 1205, 0, 1706, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 1205, 0, 243, 0, 243, 0,
	0, 0, 1205, 241, 0, 0, 0, 0, 0, 0,
	1134, 0, 243, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 1205, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 694, 1205,
	243, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	1798, 0, 1801, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 2471, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 1205, 1205, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 241, 0, 0,
	0, 241, 0, 241, 0, 0, 0, 0, 0, 0,
	241, 241, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 1205, 0, 0, 0, 0,
	241, 0, 241, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 241, 241, 241, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 1304, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 1205, 1205, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 1205, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 243,
	0, 0, 0, 2710, 0, 0, 1440, 0, 0, 0,
	1440, 0, 1440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2773,
	0, 2776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 955, 0,
	955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2798,
	1304, 2800, 1304, 0, 2803, 0, 0, 0, 243, 0,
	0, 1205, 0, 0, 0, 1134, 0, 0, 0, 1134,
	0, 1205, 1205, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 1130, 0, 0, 0, 0, 1440, 1205, 0,
	0, 0, 0, 0, 0, 2831, 0, 1130, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 1134,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 0, 0, 0, 1134, 0,
	935, 0, 1134, 935, 935, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	241, 0, 241, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 2286, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1706, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 3055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3096, 3098,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 241, 0, 0, 0, 0, 0, 0, 1636,
	1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 1667, 0, 0, 0, 241, 0, 0, 1639, 0,
	0, 102, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 1134, 0, 0, 0,
	0, 0, 1638, 0, 102, 0, 0, 0, 0, 0,
	0, 1134, 1658, 0, 0, 3167, 0, 0, 0, 3171,
	1655, 0, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	1134, 0, 102, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	0, 0, 0, 0, 1134, 0, 0, 1440, 0, 0,
	0, 1304, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 102,
	0, 1661, 1662, 1663, 1664, 0, 0, 0, 3230, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1130, 1130, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	1676, 0, 0, 1686, 0, 0, 0, 0, 0, 1666,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 3267,
	0, 1304, 0, 0, 0, 1682, 0, 1683, 0, 0,
	0, 0, 0, 0, 1653, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 3279, 0, 0, 0, 0, 102,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 1134, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 1665, 0, 0, 0, 0, 0, 2286,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 1660, 241, 0, 0, 0, 241, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1202, 1134, 0, 1134, 1202, 1134, 0, 0, 1322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 241, 1322, 0, 0, 1134, 0, 1134, 1134, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 1650, 1651, 1657,
	1678, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 0, 0, 0, 0, 0, 1322, 1117,
	0, 3631, 0, 0, 1322, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 1856, 1856, 1134, 0, 0, 0, 0, 3524,
	0, 0, 0, 1130, 0, 0, 0, 0, 0, 0,
	0, 1130, 0, 2044, 1322, 0, 0, 3539, 0, 0,
	0, 0, 0, 0, 1800, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 102,
	102, 0, 0, 102, 0, 0, 0, 0, 0, 241,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 1638,
	3588, 0, 241, 0, 241, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 102, 102, 1655, 241, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 241, 0, 0,
	1134, 0, 0, 0, 0, 0, 241, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 1203, 955,
	0, 0, 1203, 0, 0, 0, 1323, 1676, 0, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 102, 1682, 0, 1683, 0, 0, 0, 0, 1323,
	0, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 1323, 0, 0, 0, 0, 1134, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 3711, 0,
	0, 0, 0, 0, 241, 0, 0, 1856, 686, 0,
	1684, 2044, 0, 686, 0, 1323, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 1323, 1322, 0, 1673, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	1202, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 3780, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 1637, 1677, 1669, 1670, 1671, 1679,
	1680, 1681, 0, 0, 241, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 1672, 1667, 1134, 1134, 0, 1134,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	1685, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 1322, 1322, 0,
	0, 0, 0, 1117, 1117, 0, 1658, 1202, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 241, 0, 3865, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 3297, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 1661, 1662, 1663, 1664, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 1686, 0, 0,
	0, 0, 0, 1666, 1668, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 1682,
	1322, 1683, 1322, 241, 0, 0, 0, 0, 1653, 1654,
	0, 0, 0, 3977, 1304, 0, 0, 0, 1322, 1322,
	0, 241, 0, 0, 0, 0, 1674, 0, 0, 1322,
	0, 0, 0, 0, 1203, 0, 0, 1659, 0, 0,
	0, 1322, 0, 1322, 1322, 1322, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 686, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 4044, 0, 0, 0, 1665, 0, 0,
	0, 0, 0, 1134, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 1134, 0,
	1202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 0, 0, 1134, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4085, 0, 0, 1856, 0,
	0, 0, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4107, 0, 1323, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	4119, 0, 0, 0, 0, 0, 0, 1202, 0, 0,
	0, 0, 0, 1856, 102, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	1134, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649, 1647,
	1648, 1640, 1641, 1642, 1643, 1645, 1646, 0, 0, 0,
	0, 4078, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 1202, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 0, 1134, 0, 1134, 0,
	0, 0, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 1323, 0, 1323,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 1134, 1323, 1323, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 1323, 0, 0, 0,
	1134, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	1323, 1323, 1323, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 1134, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	0, 0, 0, 0, 0, 1639, 1322, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	1134, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	1856, 1856, 1322, 1322, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	1856, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2286, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 1203, 0, 0, 0, 1134, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 0, 1203,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 1203, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	102, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 1134,
	1134, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	1202, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 1323,
	1323, 0, 1323, 0, 0, 0, 1134, 1202, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1202, 1323,
	1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 2901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 1322, 1134, 0, 0, 0, 1134, 0, 1134, 0,
	0, 1202, 0, 0, 0, 1134, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 0, 0, 0,
	0, 0, 1322, 0, 1322, 0, 0, 0, 1202, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 1134,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 1322, 1322,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 1134,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 1202, 0, 0, 1202, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 1636, 1637,
	0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1672,
	1667, 0, 0, 0, 0, 0, 0, 1639, 0, 1203,
	1856, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	1134, 0, 1134, 0, 0, 0, 0, 0, 0, 1202,
	0, 1638, 0, 0, 0, 1203, 1134, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 1202, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 1134,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 0, 0, 0, 0, 1323, 0,
	1644, 0, 0, 0, 0, 0, 0, 1134, 1203, 0,
	1134, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 1686, 0, 0, 0, 0, 0, 1666, 1668,
	0, 0, 0, 1323, 0, 0, 1202, 0, 0, 1323,
	0, 1323, 0, 0, 1682, 1203, 1683, 0, 0, 0,
	0, 0, 0, 1653, 1654, 1856, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 0, 0, 0, 0, 1323, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1134, 0,
	0, 0, 0, 1322, 0, 0, 0, 0, 1134, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 1636, 1637, 0, 1669, 1670,
	1671, 1679, 1680, 1681, 0, 0, 0, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 1672, 1667, 0, 0,
	0, 0, 0, 0, 1639, 1322, 1322, 1322, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	1202, 0, 0, 1203, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 1650, 1651, 1657, 1678,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	2900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 1663,
	1664, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 1686,
	0, 0, 0, 1203, 0, 1666, 1668, 0, 0, 0,
	0, 0, 1202, 0, 1202, 0, 0, 0, 0, 0,
	0, 1682, 0, 1683, 0, 0, 0, 0, 0, 0,
	1653, 1654, 0, 0, 0, 0, 0, 1202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 0, 1684,
	0, 0, 0, 0, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 1322, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 1322, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 1660,
	0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681,
	0, 0, 0, 0, 1322, 1322, 1322, 0, 0, 0,
	0, 0, 1672, 1667, 1677, 1202, 0, 0, 0, 0,
	1639, 0, 1323, 1323, 1323, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 1202, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0,
	1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 2897, 0, 0,
	0, 0, 0, 1661, 1662, 1663, 1664, 0, 0, 0,
	0, 0, 0, 1644, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 1322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 1686, 0, 0, 0, 0,
	0, 1666, 1668, 0, 0, 0, 0, 0, 0, 1203,
	0, 1203, 0, 1202, 0, 0, 1322, 1682, 846, 1683,
	889, 0, 0, 0, 0, 0, 1653, 1654, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 854, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 868,
	852, 851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 1684, 0, 0, 853, 0,
	0, 0, 1203, 856, 0, 0, 0, 0, 897, 0,
	0, 0, 0, 1673, 0, 0, 865, 866, 0, 0,
	0, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	1323, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 890, 858, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 1323, 1665, 0, 0, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	0, 0, 0, 0, 1322, 1660, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1322, 0, 0, 0, 0,
	0, 1323, 1323, 1323, 0, 0, 0, 0, 0, 0,
	1677, 1322, 1203, 861, 0, 0, 0, 0, 0, 0,
	0, 850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 862,
	863, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 869, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 894, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 891, 1675, 0, 0, 0, 1650,
	1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640,
	1641, 1642, 1643, 1645, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 2896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 0, 0, 857, 0, 0, 896, 0, 0,
	0, 0, 1323, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 0, 0, 886, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 1323, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 895, 880, 0, 873, 871, 0, 876,
	0, 0, 0, 0, 0, 877, 0, 0, 848, 0,
	892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 878, 0, 0, 0, 0, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 1323, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 1206, 257, 258, 1207, 1208, 1209, 1323, 1210,
	548, 1211, 1212, 1213, 1214, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	1215, 553, 268, 269, 270, 271, 272, 273, 1216, 1217,
	0, 274, 554, 555, 556, 1218, 275, 276, 557, 1219,
	1286, 1220, 277, 278, 279, 280, 281, 282, 283, 0,
	1221, 285, 286, 287, 284, 1222, 288, 0, 289, 290,
	291, 292, 293, 294, 1223, 295, 296, 297, 1075, 298,
	299, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 300, 301,
	302, 303, 0, 304, 558, 559, 1231, 308, 305, 306,
	1232, 309, 307, 1233, 310, 311, 312, 1234, 1235, 313,
	314, 315, 1236, 316, 317, 1237, 318, 319, 320, 1238,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 1239, 248, 1240, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	1241, 338, 1242, 1243, 1076, 339, 340, 564, 565, 341,
	342, 1244, 343, 566, 1245, 567, 344, 1246, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 1078, 350, 351,
	1247, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 1248, 1077, 358, 571, 572, 1249, 573, 1250,
	360, 361, 1079, 574, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 1251,
	372, 374, 373, 1252, 375, 575, 1082, 376, 377, 1083,
	1253, 378, 379, 380, 1254, 1255, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 1256, 250,
	1086, 409, 410, 1257, 576, 411, 577, 413, 414, 1258,
	0, 415, 0, 1259, 1260, 417, 418, 419, 1261, 1262,
	420, 421, 578, 1087, 422, 1088, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 1263, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 1264, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 1265, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 1266,
	459, 460, 461, 1089, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 1267, 482, 483, 481, 484, 485, 486, 1268,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 1269, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 1270,
	508, 509, 0, 507, 1271, 510, 511, 512, 513, 514,
	515, 328, 516, 1272, 517, 589, 590, 591, 592, 1273,
	526, 1274, 518, 519, 520, 593, 521, 594, 1275, 522,
	523, 524, 525, 0, 527, 528, 1276, 1277, 529, 530,
	531, 533, 534, 532, 535, 1278, 536, 1279, 0, 537,
	538, 539, 595, 596, 597, 1280, 541, 540, 542, 598,
	1281, 1282, 1283, 1284, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 2449, 0, 0, 0, 0, 0, 0, 0, 2450,
	251, 252, 253, 254, 255, 256, 1206, 257, 258, 1207,
	1208, 1209, 0, 1210, 548, 1211, 1212, 1213, 1214, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 1215, 553, 268, 269, 270, 271,
	272, 273, 1216, 1217, 0, 274, 554, 555, 556, 1218,
	275, 276, 557, 1219, 1286, 1220, 277, 278, 279, 280,
	281, 282, 283, 0, 1221, 285, 286, 287, 284, 1222,
	288, 0, 289, 290, 291, 292, 293, 294, 1223, 295,
	296, 297, 1075, 298, 299, 1224, 1225, 1227, 1226, 1228,
	1229, 1230, 300, 301, 302, 303, 0, 304, 558, 559,
	1231, 308, 305, 306, 1232, 309, 307, 1233, 310, 311,
	312, 1234, 1235, 313, 314, 315, 1236, 316, 317, 1237,
	318, 319, 320, 1238, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 1239,
	248, 1240, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 1241, 338, 1242, 1243, 1076, 339,
	340, 564, 565, 341, 342, 1244, 343, 566, 1245, 567,
	344, 1246, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 1078, 350, 351, 1247, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 1248, 1077, 358, 571,
	572, 1249, 573, 1250, 360, 361, 1079, 574, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 1251, 372, 374, 373, 1252, 375, 575,
	1082, 376, 377, 1083, 1253, 378, 379, 380, 1254, 1255,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 1256, 250, 1086, 409, 410, 1257, 576, 411,
	577, 413, 414, 1258, 0, 415, 0, 1259, 1260, 417,
	418, 419, 1261, 1262, 420, 421, 578, 1087, 422, 1088,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 1263, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 1264, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 1265, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 1266, 459, 460, 461, 1089, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 1267, 482, 483, 481,
	484, 485, 486, 1268, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 1269,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 1270, 508, 509, 0, 507, 1271, 510,
	511, 512, 513, 514, 515, 328, 516, 1272, 517, 589,
	590, 591, 592, 1273, 526, 1274, 518, 519, 520, 593,
	521, 594, 1275, 522, 523, 524, 525, 0, 527, 528,
	1276, 1277, 529, 530, 531, 533, 534, 532, 535, 1278,
	536, 1279, 0, 537, 538, 539, 595, 596, 597, 1280,
	541, 540, 542, 598, 1281, 1282, 1283, 1284, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 0,
	3305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3307, 251, 252, 253, 254, 255, 256, 1206, 257,
	258, 1207, 1208, 1209, 0, 1210, 548, 1211, 1212, 1213,
	1214, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 1215, 553, 268, 269,
	270, 271, 272, 273, 1216, 1217, 0, 274, 554, 555,
	556, 1218, 275, 276, 557, 1219, 1286, 1220, 277, 278,
	279, 280, 281, 282, 283, 0, 1221, 285, 286, 287,
	284, 1222, 288, 0, 289, 290, 291, 292, 293, 294,
	1223, 295, 296, 297, 1075, 298, 299, 1224, 1225, 1227,
	1226, 1228, 1229, 1230, 300, 301, 302, 303, 0, 304,
	558, 559, 1231, 308, 305, 306, 1232, 309, 307, 1233,
	310, 311, 312, 1234, 1235, 313, 314, 315, 1236, 316,
	317, 1237, 318, 319, 320, 1238, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 1239, 248, 1240, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 1241, 338, 1242, 1243,
	1076, 339, 340, 564, 565, 341, 342, 1244, 343, 566,
	1245, 567, 344, 1246, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 1078, 350, 351, 1247, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 1248, 1077,
	358, 571, 572, 1249, 573, 1250, 360, 361, 1079, 574,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 1251, 372, 374, 373, 1252,
	375, 575, 1082, 376, 377, 1083, 1253, 378, 379, 380,
	1254, 1255, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 1256, 250, 1086, 409, 410, 1257,
	576, 411, 577, 413, 414, 1258, 0, 415, 0, 1259,
	1260, 417, 418, 419, 1261, 1262, 420, 421, 578, 1087,
	422, 1088, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 1263, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 1264, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 1265, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 1266, 459, 460, 461, 1089,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 1267, 482,
	483, 481, 484, 485, 486, 1268, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 1269, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 1270, 508, 509, 0, 507,
	1271, 510, 511, 512, 513, 514, 515, 328, 516, 1272,
	517, 589, 590, 591, 592, 1273, 526, 1274, 518, 519,
	520, 593, 521, 594, 1275, 522, 523, 524, 525, 0,
	527, 528, 1276, 1277, 529, 530, 531, 533, 534, 532,
	535, 1278, 536, 1279, 0, 537, 538, 539, 595, 596,
	597, 1280, 541, 540, 542, 598, 1281, 1282, 1283, 1284,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3659, 251, 252,
	253, 254, 255, 256, 1206, 257, 258, 1207, 1208, 1209,
	0, 1210, 548, 1211, 1212, 1213, 1214, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 1215, 553, 268, 269, 270, 271, 272, 273,
	1216, 1217, 0, 274, 554, 555, 556, 1218, 275, 276,
	557, 1219, 1286, 1220, 277, 278, 279, 280, 281, 282,
	283, 0, 1221, 285, 286, 287, 284, 1222, 288, 0,
	289, 290, 291, 292, 293, 294, 1223, 295, 296, 297,
	1075, 298, 299, 1224, 1225, 1227, 1226, 1228, 1229, 1230,
	300, 301, 302, 303, 0, 304, 558, 559, 1231, 308,
	305, 306, 1232, 309, 307, 1233, 310, 311, 312, 1234,
	1235, 313, 314, 315, 1236, 316, 317, 1237, 318, 319,
	320, 1238, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 1239, 248, 1240,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 1241, 338, 1242, 1243, 1076, 339, 340, 564,
	565, 341, 342, 1244, 343, 566, 1245, 567, 344, 1246,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 1078,
	350, 351, 1247, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 1248, 1077, 358, 571, 572, 1249,
	573, 1250, 360, 361, 1079, 574, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 1251, 372, 374, 373, 1252, 375, 575, 1082, 376,
	377, 1083, 1253, 378, 379, 380, 1254, 1255, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	1256, 250, 1086, 409, 410, 1257, 576, 411, 577, 413,
	414, 1258, 0, 415, 0, 1259, 1260, 417, 418, 419,
	1261, 1262, 420, 421, 578, 1087, 422, 1088, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	1263, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	1264, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 1265, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 1266, 459, 460, 461, 1089, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 1267, 482, 483, 481, 484, 485,
	486, 1268, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 1269, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 1270, 508, 509, 0, 507, 1271, 510, 511, 512,
	513, 514, 515, 328, 516, 1272, 517, 589, 590, 591,
	592, 1273, 526, 1274, 518, 519, 520, 593, 521, 594,
	1275, 522, 523, 524, 525, 0, 527, 528, 1276, 1277,
	529, 530, 531, 533, 534, 532, 535, 1278, 536, 1279,
	0, 537, 538, 539, 595, 596, 597, 1280, 541, 540,
	542, 598, 1281, 1282, 1283, 1284, 543, 544, 599, 545,
	546, 547, 1200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3830, 251,
	252, 253, 254, 255, 256, 1206, 257, 258, 1207, 1208,
	1209, 0, 1210, 548, 1211, 1212, 1213, 1214, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 1215, 553, 268, 269, 270, 271, 272,
	273, 1216, 1217, 0, 274, 554, 555, 556, 1218, 275,
	276, 557, 1219, 1286, 1220, 277, 278, 279, 280, 281,
	282, 283, 0, 1221, 285, 286, 287, 284, 1222, 288,
	0, 289, 290, 291, 292, 293, 294, 1223, 295, 296,
	297, 1075, 298, 299, 1224, 1225, 1227, 1226, 1228, 1229,
	1230, 300, 301, 302, 303, 0, 304, 558, 559, 1231,
	308, 305, 306, 1232, 309, 307, 1233, 310, 311, 312,
	1234, 1235, 313, 314, 315, 1236, 316, 317, 1237, 318,
	319, 320, 1238, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 1239, 248,
	1240, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 1241, 338, 1242, 1243, 1076, 339, 340,
	564, 565, 341, 342, 1244, 343, 566, 1245, 567, 344,
	1246, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	1078, 350, 351, 1247, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 1248, 1077, 358, 571, 572,
	1249, 573, 1250, 360, 361, 1079, 574, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 1251, 372, 374, 373, 1252, 375, 575, 1082,
	376, 377, 1083, 1253, 378, 379, 380, 1254, 1255, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 1256, 250, 1086, 409, 410, 1257, 576, 411, 577,
	413, 414, 1258, 0, 415, 0, 1259, 1260, 417, 418,
	419, 1261, 1262, 420, 421, 578, 1087, 422, 1088, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 1263, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 1264, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 1265, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 1266, 459, 460, 461, 1089, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 1267, 482, 483, 481, 484,
	485, 486, 1268, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 1269, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 1270, 508, 509, 0, 507, 1271, 510, 511,
	512, 513, 514, 515, 328, 516, 1272, 517, 589, 590,
	591, 592, 1273, 526, 1274, 518, 519, 520, 593, 521,
	594, 1275, 522, 523, 524, 525, 0, 527, 528, 1276,
	1277, 529, 530, 531, 533, 534, 532, 535, 1278, 536,
	1279, 0, 537, 538, 539, 595, 596, 597, 1280, 541,
	540, 542, 598, 1281, 1282, 1283, 1284, 543, 544, 599,
	545, 546, 547, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3719,
	251, 252, 253, 254, 255, 256, 1206, 257, 258, 1207,
	1208, 1209, 0, 1210, 548, 1211, 1212, 1213, 1214, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 1215, 553, 268, 269, 270, 271,
	272, 273, 1216, 1217, 0, 274, 554, 555, 556, 1218,
	275, 276, 557, 1219, 1286, 1220, 277, 278, 279, 280,
	281, 282, 283, 0, 1221, 285, 286, 287, 284, 1222,
	288, 0, 289, 290, 291, 292, 293, 294, 1223, 295,
	296, 297, 1075, 298, 299, 1224, 1225, 1227, 1226, 1228,
	1229, 1230, 300, 301, 302, 303, 0, 304, 558, 559,
	1231, 308, 305, 306, 1232, 309, 307, 1233, 310, 311,
	312, 1234, 1235, 313, 314, 315, 1236, 316, 317, 1237,
	318, 319, 320, 1238, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 1239,
	248, 1240, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 1241, 338, 1242, 1243, 1076, 339,
	340, 564, 565, 341, 342, 1244, 343, 566, 1245, 567,
	344, 1246, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 1078, 350, 351, 1247, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 1248, 1077, 358, 571,
	572, 1249, 573, 1250, 360, 361, 1079, 574, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 1251, 372, 374, 373, 1252, 375, 575,
	1082, 376, 377, 1083, 1253, 378, 379, 380, 1254, 1255,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 1256, 250, 1086, 409, 410, 1257, 576, 411,
	577, 413, 414, 1258, 0, 415, 0, 1259, 1260, 417,
	418, 419, 1261, 1262, 420, 421, 578, 1087, 422, 1088,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 1263, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 1264, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 1265, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 1266, 459, 460, 461, 1089, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 1267, 482, 483, 481,
	484, 485, 486, 1268, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 1269,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 1270, 508, 509, 0, 507, 1271, 510,
	511, 512, 513, 514, 515, 328, 516, 1272, 517, 589,
	590, 591, 592, 1273, 526, 1274, 518, 519, 520, 593,
	521, 594, 1275, 522, 523, 524, 525, 0, 527, 528,
	1276, 1277, 529, 530, 531, 533, 534, 532, 535, 1278,
	536, 1279, 0, 537, 538, 539, 595, 596, 597, 1280,
	541, 540, 542, 598, 1281, 1282, 1283, 1284, 543, 544,
	599, 545, 546, 547, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3589, 251, 252, 253, 254, 255, 256, 1206, 257, 258,
	1207, 1208, 1209, 0, 1210, 548, 1211, 1212, 1213, 1214,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 1215, 553, 268, 269, 270,
	271, 272, 273, 1216, 1217, 0, 274, 554, 555, 556,
	1218, 275, 276, 557, 1219, 1286, 1220, 277, 278, 279,
	280, 281, 282, 283, 0, 1221, 285, 286, 287, 284,
	1222, 288, 0, 289, 290, 291, 292, 293, 294, 1223,
	295, 296, 297, 1075, 298, 299, 1224, 1225, 1227, 1226,
	1228, 1229, 1230, 300, 301, 302, 303, 0, 304, 558,
	559, 1231, 308, 305, 306, 1232, 309, 307, 1233, 310,
	311, 312, 1234, 1235, 313, 314, 315, 1236, 316, 317,
	1237, 318, 319, 320, 1238, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	1239, 248, 1240, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 1241, 338, 1242, 1243, 1076,
	339, 340, 564, 565, 341, 342, 1244, 343, 566, 1245,
	567, 344, 1246, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 1078, 350, 351, 1247, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 1248, 1077, 358,
	571, 572, 1249, 573, 1250, 360, 361, 1079, 574, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 1251, 372, 374, 373, 1252, 375,
	575, 1082, 376, 377, 1083, 1253, 378, 379, 380, 1254,
	1255, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 1256, 250, 1086, 409, 410, 1257, 576,
	411, 577, 413, 414, 1258, 0, 415, 0, 1259, 1260,
	417, 418, 419, 1261, 1262, 420, 421, 578, 1087, 422,
	1088, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 1263, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 1264, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 1265, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 1266, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 1267, 482, 483,
	481, 484, 485, 486, 1268, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	1269, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 1270, 508, 509, 0, 507, 1271,
	510, 511, 512, 513, 514, 515, 328, 516, 1272, 517,
	589, 590, 591, 592, 1273, 526, 1274, 518, 519, 520,
	593, 521, 594, 1275, 522, 523, 524, 525, 0, 527,
	528, 1276, 1277, 529, 530, 531, 533, 534, 532, 535,
	1278, 536, 1279, 0, 537, 538, 539, 595, 596, 597,
	1280, 541, 540, 542, 598, 1281, 1282, 1283, 1284, 543,
	544, 599, 545, 546, 547, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3323, 251, 252, 253, 254, 255, 256, 1206, 257,
	258, 1207, 1208, 1209, 0, 1210, 548, 1211, 1212, 1213,
	1214, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 1215, 553, 268, 269,
	270, 271, 272, 273, 1216, 1217, 0, 274, 554, 555,
	556, 1218, 275, 276, 557, 1219, 1286, 1220, 277, 278,
	279, 280, 281, 282, 283, 0, 1221, 285, 286, 287,
	284, 1222, 288, 0, 289, 290, 291, 292, 293, 294,
	1223, 295, 296, 297, 1075, 298, 299, 1224, 1225, 1227,
	1226, 1228, 1229, 1230, 300, 301, 302, 303, 0, 304,
	558, 559, 1231, 308, 305, 306, 1232, 309, 307, 1233,
	310, 311, 312, 1234, 1235, 313, 314, 315, 1236, 316,
	317, 1237, 318, 319, 320, 1238, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 1239, 248, 1240, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 1241, 338, 1242, 1243,
	1076, 339, 340, 564, 565, 341, 342, 1244, 343, 566,
	1245, 567, 344, 1246, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 1078, 350, 351, 1247, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 1248, 1077,
	358, 571, 572, 1249, 573, 1250, 360, 361, 1079, 574,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 1251, 372, 374, 373, 1252,
	375, 575, 1082, 376, 377, 1083, 1253, 378, 379, 380,
	1254, 1255, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 1256, 250, 1086, 409, 410, 1257,
	576, 411, 577, 413, 414, 1258, 0, 415, 0, 1259,
	1260, 417, 418, 419, 1261, 1262, 420, 421, 578, 1087,
	422, 1088, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 1263, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 1264, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 1265, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 1266, 459, 460, 461, 1089,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 1267, 482,
	483, 481, 484, 485, 486, 1268, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 1269, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 1270, 508, 509, 0, 507,
	1271, 510, 511, 512, 513, 514, 515, 328, 516, 1272,
	517, 589, 590, 591, 592, 1273, 526, 1274, 518, 519,
	520, 593, 521, 594, 1275, 522, 523, 524, 525, 0,
	527, 528, 1276, 1277, 529, 530, 531, 533, 534, 532,
	535, 1278, 536, 1279, 0, 537, 538, 539, 595, 596,
	597, 1280, 541, 540, 542, 598, 1281, 1282, 1283, 1284,
	543, 544, 599, 545, 546, 547, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3152, 251, 252, 253, 254, 255, 256, 1206,
	257, 258, 1207, 1208, 1209, 0, 1210, 548, 1211, 1212,
	1213, 1214, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 1215, 553, 268,
	269, 270, 271, 272, 273, 1216, 1217, 0, 274, 554,
	555, 556, 1218, 275, 276, 557, 1219, 1286, 1220, 277,
	278, 279, 280, 281, 282, 283, 0, 1221, 285, 286,
	287, 284, 1222, 288, 0, 289, 290, 291, 292, 293,
	294, 1223, 295, 296, 297, 1075, 298, 299, 1224, 1225,
	1227, 1226, 1228, 1229, 1230, 300, 301, 302, 303, 0,
	304, 558, 559, 1231, 308, 305, 306, 1232, 309, 307,
	1233, 310, 311, 312, 1234, 1235, 313, 314, 315, 1236,
	316, 317, 1237, 318, 319, 320, 1238, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 1239, 248, 1240, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 1241, 338, 1242,
	1243, 1076, 339, 340, 564, 565, 341, 342, 1244, 343,
	566, 1245, 567, 344, 1246, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 1078, 350, 351, 1247, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 1248,
	1077, 358, 571, 572, 1249, 573, 1250, 360, 361, 1079,
	574, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 1251, 372, 374, 373,
	1252, 375, 575, 1082, 376, 377, 1083, 1253, 378, 379,
	380, 1254, 1255, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 1256, 250, 1086, 409, 410,
	1257, 576, 411, 577, 413, 414, 1258, 0, 415, 0,
	1259, 1260, 417, 418, 419, 1261, 1262, 420, 421, 578,
	1087, 422, 1088, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 1263, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 1264, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 1265,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 1266, 459, 460, 461,
	1089, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 1267,
	482, 483, 481, 484, 485, 486, 1268, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 1269, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 1270, 508, 509, 0,
	507, 1271, 510, 511, 512, 513, 514, 515, 328, 516,
	1272, 517, 589, 590, 591, 592, 1273, 526, 1274, 518,
	519, 520, 593, 521, 594, 1275, 522, 523, 524, 525,
	0, 527, 528, 1276, 1277, 529, 530, 531, 533, 534,
	532, 535, 1278, 536, 1279, 0, 537, 538, 539, 595,
	596, 597, 1280, 541, 540, 542, 598, 1281, 1282, 1283,
	1284, 543, 544, 599, 545, 546, 547, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2332, 251, 252, 253, 254, 255, 256,
	1206, 257, 258, 1207, 1208, 1209, 0, 1210, 548, 1211,
	1212, 1213, 1214, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 1215, 553,
	268, 269, 270, 271, 272, 273, 1216, 1217, 0, 274,
	554, 555, 556, 1218, 275, 276, 557, 1219, 1286, 1220,
	277, 278, 279, 280, 281, 282, 283, 0, 1221, 285,
	286, 287, 284, 1222, 288, 0, 289, 290, 291, 292,
	293, 294, 1223, 295, 296, 297, 1075, 298, 299, 1224,
	1225, 1227, 1226, 1228, 1229, 1230, 300, 301, 302, 303,
	0, 304, 558, 559, 1231, 308, 305, 306, 1232, 309,
	307, 1233, 310, 311, 312, 1234, 1235, 313, 314, 315,
	1236, 316, 317, 1237, 318, 319, 320, 1238, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 1239, 248, 1240, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 1241, 338,
	1242, 1243, 1076, 339, 340, 564, 565, 341, 342, 1244,
	343, 566, 1245, 567, 344, 1246, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 1078, 350, 351, 1247, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	1248, 1077, 358, 571, 572, 1249, 573, 1250, 360, 361,
	1079, 574, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 1251, 372, 374,
	373, 1252, 375, 575, 1082, 376, 377, 1083, 1253, 378,
	379, 380, 1254, 1255, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 1256, 250, 1086, 409,
	410, 1257, 576, 411, 577, 413, 414, 1258, 0, 415,
	0, 1259, 1260, 417, 418, 419, 1261, 1262, 420, 421,
	578, 1087, 422, 1088, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 1263, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 1264, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	1265, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 1266, 459, 460,
	461, 1089, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	1267, 482, 483, 481, 484, 485, 486, 1268, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 1269, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 1270, 508, 509,
	0, 507, 1271, 510, 511, 512, 513, 514, 515, 328,
	516, 1272, 517, 589, 590, 591, 592, 1273, 526, 1274,
	518, 519, 520, 593, 521, 594, 1275, 522, 523, 524,
	525, 0, 527, 528, 1276, 1277, 529, 530, 531, 533,
	534, 532, 535, 1278, 536, 1279, 0, 537, 538, 539,
	595, 596, 597, 1280, 541, 540, 542, 598, 1281, 1282,
	1283, 1284, 543, 544, 599, 545, 546, 547, 1298, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 0, 0, 251, 252, 253,
	254, 255, 256, 1206, 257, 258, 1207, 1208, 1209, 0,
	1210, 548, 1211, 1212, 1213, 1214, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 1215, 553, 268, 269, 270, 271, 272, 273, 1216,
	1217, 0, 274, 554, 555, 556, 1218, 275, 276, 557,
	1219, 1286, 1220, 277, 278, 279, 280, 281, 282, 283,
	0, 1221, 285, 286, 287, 284, 1222, 288, 0, 289,
	290, 291, 292, 293, 294, 1223, 295, 296, 297, 1075,
	298, 299, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 300,
	301, 302, 303, 0, 304, 558, 559, 1231, 308, 305,
	306, 1232, 309, 307, 1233, 310, 311, 312, 1234, 1235,
	313, 314, 315, 1236, 316, 317, 1237, 318, 319, 320,
	1238, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 1239, 248, 1240, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 1241, 338, 1242, 1243, 1076, 339, 340, 564, 565,
	341, 342, 1244, 343, 566, 1245, 567, 344, 1246, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 1078, 350,
	351, 1247, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 1248, 1077, 358, 571, 572, 1249, 573,
	1250, 360, 361, 1079, 574, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	1251, 372, 374, 373, 1252, 375, 575, 1082, 376, 377,
	1083, 1253, 378, 379, 380, 1254, 1255, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 1256,
	250, 1086, 409, 410, 1257, 576, 411, 577, 413, 414,
	1258, 0, 415, 0, 1259, 1260, 417, 418, 419, 1261,
	1262, 420, 421, 578, 1087, 422, 1088, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 1263,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 1264,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 1265, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	1266, 459, 460, 461, 1089, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 1267, 482, 483, 481, 484, 485, 486,
	1268, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 1269, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	1270, 508, 509, 0, 507, 1271, 510, 511, 512, 513,
	514, 515, 328, 516, 1272, 517, 589, 590, 591, 592,
	1273, 526, 1274, 518, 519, 520, 593, 521, 594, 1275,
	522, 523, 524, 525, 0, 527, 528, 1276, 1277, 529,
	530, 531, 533, 534, 532, 535, 1278, 536, 1279, 0,
	537, 538, 539, 595, 596, 597, 1280, 541, 540, 542,
	598, 1281, 1282, 1283, 1284, 543, 544, 599, 545, 546,
	547, 1197, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 1206, 257, 258, 1207,
	1208, 1209, 0, 1210, 548, 1211, 1212, 1213, 1214, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 1215, 553, 268, 269, 270, 271,
	272, 273, 1216, 1217, 0, 274, 554, 555, 556, 1218,
	275, 276, 557, 1219, 1286, 1220, 277, 278, 279, 280,
	281, 282, 283, 0, 1221, 285, 286, 287, 284, 1222,
	288, 0, 289, 290, 291, 292, 293, 294, 1223, 295,
	296, 297, 1075, 298, 299, 1224, 1225, 1227, 1226, 1228,
	1229, 1230, 300, 301, 302, 303, 0, 304, 558, 559,
	1231, 308, 305, 306, 1232, 309, 307, 1233, 310, 311,
	312, 1234, 1235, 313, 314, 315, 1236, 316, 317, 1237,
	318, 319, 320, 1238, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 1239,
	248, 1240, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 1241, 338, 1242, 1243, 1076, 339,
	340, 564, 565, 341, 342, 1244, 343, 566, 1245, 567,
	344, 1246, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 1078, 350, 351, 1247, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 1248, 1077, 358, 571,
	572, 1249, 573, 1250, 360, 361, 1079, 574, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 1251, 372, 374, 373, 1252, 375, 575,
	1082, 376, 377, 1083, 1253, 378, 379, 380, 1254, 1255,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 1256, 250, 1086, 409, 410, 1257, 576, 411,
	577, 413, 414, 1258, 0, 415, 0, 1259, 1260, 417,
	418, 419, 1261, 1262, 420, 421, 578, 1087, 422, 1088,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 1263, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 1264, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 1265, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 1266, 459, 460, 461, 1089, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 1267, 482, 483, 481,
	484, 485, 486, 1268, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 1269,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 1270, 508, 509, 0, 507, 1271, 510,
	511, 512, 513, 514, 515, 328, 516, 1272, 517, 589,
	590, 591, 592, 1273, 526, 1274, 518, 519, 520, 593,
	521, 594, 1275, 522, 523, 524, 525, 0, 527, 528,
	1276, 1277, 529, 530, 531, 533, 534, 532, 535, 1278,
	536, 1279, 0, 537, 538, 539, 595, 596, 597, 1280,
	541, 540, 542, 598, 1281, 1282, 1283, 1284, 543, 544,
	599, 545, 546, 547, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1206, 257, 258,
	1207, 1208, 1209, 0, 1210, 548, 1211, 1212, 1213, 1214,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 1215, 553, 268, 269, 270,
	271, 272, 273, 1216, 1217, 0, 274, 554, 555, 556,
	1218, 275, 276, 557, 1219, 1286, 1220, 277, 278, 279,
	280, 281, 282, 283, 0, 1221, 285, 286, 287, 284,
	1222, 288, 0, 289, 290, 291, 292, 293, 294, 1223,
	295, 296, 297, 1075, 298, 299, 1224, 1225, 1227, 1226,
	1228, 1229, 1230, 300, 301, 302, 303, 0, 304, 558,
	559, 1231, 308, 305, 306, 1232, 309, 307, 1233, 310,
	311, 312, 1234, 1235, 313, 314, 315, 1236, 316, 317,
	1237, 318, 319, 320, 1238, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	1239, 248, 1240, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 1241, 338, 1242, 1243, 1076,
	339, 340, 564, 565, 341, 342, 1244, 343, 566, 1245,
	567, 344, 1246, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 1078, 350, 351, 1247, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 1248, 1077, 358,
	571, 572, 1249, 573, 1250, 360, 361, 1079, 574, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 1251, 372, 374, 373, 1252, 375,
	575, 1082, 376, 377, 1083, 1253, 378, 379, 380, 1254,
	1255, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 1256, 250, 1086, 409, 410, 1257, 576,
	411, 577, 413, 414, 1258, 0, 415, 0, 1259, 1260,
	417, 418, 419, 1261, 1262, 420, 421, 578, 1087, 422,
	1088, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 1263, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 1264, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 1265, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 1266, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 1267, 482, 483,
	481, 484, 485, 486, 1268, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	1269, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 1270, 508, 509, 0, 507, 1271,
	510, 511, 512, 513, 514, 515, 328, 516, 1272, 517,
	589, 590, 591, 592, 1273, 526, 1274, 518, 519, 520,
	593, 521, 594, 1275, 522, 523, 524, 525, 0, 527,
	528, 1276, 1277, 529, 530, 531, 533, 534, 532, 535,
	1278, 536, 1279, 0, 537, 538, 539, 595, 596, 597,
	1280, 541, 540, 542, 598, 1281, 1282, 1283, 1284, 543,
	544, 599, 545, 546, 547, 2307, 0, 1010, 982, 983,
	984, 980, 981, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	2304, 257, 258, 0, 0, 0, 0, 0, 1034, 998,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 1047, 0, 266, 1054, 267, 1053, 0, 1064,
	268, 269, 270, 271, 272, 273, 1000, 1033, 967, 274,
	1094, 1095, 556, 0, 275, 276, 1040, 0, 1021, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 1024,
	1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303,
	1057, 304, 1051, 1050, 971, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 2305, 0, 313, 1042, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	977, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1065, 1066, 989, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1049, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 1062, 1063, 341, 342, 0,
	343, 1072, 0, 999, 344, 0, 345, 346, 347, 348,
	349, 1035, 1036, 1039, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 1077, 358, 1044, 1045, 0, 1005, 0, 360, 361,
	1079, 1037, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 1073, 1082, 376, 377, 1083, 0, 378,
	379, 380, 1028, 1027, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 968, 250, 1086, 409,
	410, 990, 1038, 411, 1052, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 1067, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 1068, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 1048, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 978, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 1031, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	1046, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 1093, 502, 503, 504, 505, 1069, 0, 508, 509,
	966, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 1058, 1059, 1060, 1061, 0, 526, 0,
	518, 519, 520, 1070, 521, 1071, 988, 522, 523, 524,
	525, 0, 527, 528, 0, 972, 529, 530, 531, 533,
	534, 532, 535, 1032, 536, 0, 0, 537, 538, 539,
	595, 1055, 1092, 2303, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 969, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 963, 964, 2306, 0, 0, 0, 0, 0,
	0, 994, 2302, 0, 956, 992, 1010, 982, 983, 984,
	980, 981, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 250, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 212,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 214, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 1474,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	206, 543, 544, 599, 545, 546, 547, 969, 207, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 1010, 982, 983, 984, 980, 981, 993,
	1711, 1709, 0, 0, 992, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1034, 998, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 1047, 0,
	266, 1054, 267, 1053, 0, 1064, 268, 269, 270, 271,
	272, 273, 1000, 1033, 967, 274, 1094, 1095, 556, 0,
	275, 276, 1040, 0, 1021, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026,
	1025, 1029, 300, 301, 302, 303, 1057, 304, 1051, 1050,
	971, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1042, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 977, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1065, 1066, 989,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1049,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 1062, 1063, 341, 342, 0, 343, 1072, 0, 999,
	344, 0, 345, 346, 347, 348, 349, 1035, 1036, 1039,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 1077, 358, 1044,
	1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 1073,
	1082, 376, 377, 1083, 0, 378, 379, 380, 1028, 1027,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 968, 250, 1086, 409, 410, 990, 1038, 411,
	1052, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	1067, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 1068, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 1048, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 978, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 212, 482, 483, 481,
	484, 485, 486, 1031, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 1046, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 1093, 502, 503,
	504, 505, 1069, 0, 508, 509, 966, 507, 214, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 1058,
	1059, 1060, 1061, 0, 526, 0, 518, 519, 520, 1070,
	521, 1071, 988, 522, 523, 524, 525, 0, 527, 528,
	0, 972, 529, 530, 531, 533, 534, 532, 535, 1032,
	536, 0, 0, 537, 538, 539, 1474, 1055, 1092, 0,
	541, 540, 542, 598, 0, 0, 0, 206, 543, 544,
	599, 545, 546, 547, 969, 207, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 963, 964,
	1010, 982, 983, 984, 980, 981, 993, 1711, 2853, 0,
	0, 992, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1034, 998, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 1047, 0, 266, 1054, 267,
	1053, 0, 1064, 268, 269, 270, 271, 272, 273, 1000,
	1033, 967, 274, 1094, 1095, 556, 0, 275, 276, 1040,
	0, 1021, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300,
	301, 302, 303, 1057, 304, 1051, 1050, 971, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1042, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 977, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1065, 1066, 989, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1049, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 1062, 1063,
	341, 342, 0, 343, 1072, 0, 999, 344, 0, 345,
	346, 347, 348, 349, 1035, 1036, 1039, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 1077, 358, 1044, 1045, 0, 1005,
	0, 360, 361, 1079, 1037, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 1073, 1082, 376, 377,
	1083, 0, 378, 379, 380, 1028, 1027, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 968,
	250, 1086, 409, 410, 990, 1038, 411, 1052, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 1067, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 1068, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 1048,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 978,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 212, 482, 483, 481, 484, 485, 486,
	1031, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 1046, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 1093, 502, 503, 504, 505, 1069,
	0, 508, 509, 966, 507, 214, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 1058, 1059, 1060, 1061,
	0, 526, 0, 518, 519, 520, 1070, 521, 1071, 988,
	522, 523, 524, 525, 0, 527, 528, 0, 972, 529,
	530, 531, 533, 534, 532, 535, 1032, 536, 0, 0,
	537, 538, 539, 1474, 1055, 1092, 0, 541, 540, 542,
	598, 0, 0, 0, 206, 543, 544, 599, 545, 546,
	547, 969, 207, 0, 0, 0, 0, 0, 965, 0,
	0, 0, 0, 0, 0, 963, 964, 1010, 982, 983,
	984, 980, 981, 993, 1711, 1709, 0, 0, 992, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1034, 998,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 1047, 0, 266, 1054, 267, 1053, 2411, 1064,
	268, 269, 270, 271, 272, 273, 1000, 1033, 967, 274,
	1094, 1095, 556, 0, 275, 276, 1040, 0, 1021, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 1024,
	1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303,
	1057, 304, 1051, 1050, 971, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1042, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	977, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1065, 1066, 989, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1049, 0, 0, 0, 337, 0, 338,
	0, 2416, 1076, 339, 340, 1062, 1063, 341, 342, 0,
	343, 1072, 0, 999, 344, 0, 345, 346, 347, 348,
	349, 1035, 1036, 1039, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 1077, 358, 1044, 1045, 0, 1005, 0, 360, 361,
	1079, 1037, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 2412, 375, 1073, 1082, 376, 377, 1083, 0, 378,
	379, 380, 1028, 1027, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 968, 250, 1086, 409,
	410, 990, 1038, 411, 1052, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 1067, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 1068, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 1048, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 978, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 1031, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	1046, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 1093, 502, 503, 504, 505, 1069, 0, 508, 509,
	966, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 1058, 1059, 1060, 1061, 0, 526, 2413,
	518, 519, 520, 1070, 521, 1071, 988, 522, 523, 524,
	525, 0, 527, 528, 0, 972, 529, 530, 531, 533,
	534, 532, 535, 1032, 536, 0, 0, 537, 538, 539,
	595, 1055, 1092, 0, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 969, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 963, 964, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 2352, 992, 1010, 982, 983, 984,
	980, 981, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 250, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 969, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 0, 0, 0, 0, 0, 0, 0,
	994, 2350, 0, 2349, 992, 1010, 982, 983, 984, 980,
	981, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1034, 998, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	1047, 0, 266, 1054, 267, 1053, 0, 1064, 268, 269,
	270, 271, 272, 273, 1000, 1033, 967, 274, 1094, 1095,
	556, 0, 275, 276, 1040, 0, 1021, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 1024, 1022, 1023,
	1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057, 304,
	1051, 1050, 971, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 977, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1065,
	1066, 989, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1049, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1062, 1063, 341, 342, 0, 343, 1072,
	0, 999, 344, 0, 345, 346, 347, 348, 349, 1035,
	1036, 1039, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 1077,
	358, 1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 1073, 1082, 376, 377, 1083, 0, 378, 379, 380,
	1028, 1027, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 968, 250, 1086, 409, 410, 990,
	1038, 411, 1052, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 1087,
	422, 1088, 1067, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 1068,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1048, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 978, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 1031, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1046, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1093,
	502, 503, 504, 505, 1069, 0, 508, 509, 966, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1058, 1059, 1060, 1061, 0, 526, 0, 518, 519,
	520, 1070, 521, 1071, 988, 522, 523, 524, 525, 0,
	527, 528, 0, 972, 529, 530, 531, 533, 534, 532,
	535, 1032, 536, 0, 0, 537, 538, 539, 595, 1055,
	1092, 0, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 969, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	963, 964, 0, 0, 0, 0, 0, 0, 0, 994,
	2347, 0, 2346, 992, 1010, 982, 983, 984, 980, 981,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1034, 998, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 1047,
	0, 266, 1054, 267, 1053, 0, 1064, 268, 269, 270,
	271, 272, 273, 1000, 1033, 967, 274, 1094, 1095, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 1057, 304, 1051,
	1050, 971, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1042, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 977, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	989, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1049, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 1062, 1063, 341, 342, 0, 343, 1072, 0,
	999, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 968, 250, 1086, 409, 410, 990, 1038,
	411, 1052, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 1048, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 978, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 1046, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 1093, 502,
	503, 504, 505, 1069, 0, 508, 509, 966, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	1058, 1059, 1060, 1061, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 988, 522, 523, 524, 525, 0, 527,
	528, 0, 972, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 595, 1055, 1092,
	0, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 969, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 963,
	964, 0, 0, 0, 0, 0, 0, 0, 994, 2344,
	0, 2343, 992, 1010, 982, 983, 984, 980, 981, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1034, 998, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 1047, 0,
	266, 1054, 267, 1053, 0, 1064, 268, 269, 270, 271,
	272, 273, 1000, 1033, 967, 274, 1094, 1095, 556, 0,
	275, 276, 1040, 0, 1021, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026,
	1025, 1029, 300, 301, 302, 303, 1057, 304, 1051, 1050,
	971, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1042, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 977, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1065, 1066, 989,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1049,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 1062, 1063, 341, 342, 0, 343, 1072, 0, 999,
	344, 0, 345, 346, 347, 348, 349, 1035, 1036, 1039,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 1077, 358, 1044,
	1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 1073,
	1082, 376, 377, 1083, 0, 378, 379, 380, 1028, 1027,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 968, 250, 1086, 409, 410, 990, 1038, 411,
	1052, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	1067, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 1068, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 1048, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 978, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 1031, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 1046, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 1093, 502, 503,
	504, 505, 1069, 0, 508, 509, 966, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 1058,
	1059, 1060, 1061, 0, 526, 0, 518, 519, 520, 1070,
	521, 1071, 988, 522, 523, 524, 525, 0, 527, 528,
	0, 972, 529, 530, 531, 533, 534, 532, 535, 1032,
	536, 0, 0, 537, 538, 539, 595, 1055, 1092, 0,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 969, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 963, 964,
	0, 0, 0, 0, 0, 0, 0, 994, 2341, 0,
	1564, 992, 1010, 982, 983, 984, 980, 981, 993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 998, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 1047, 0, 266,
	1054, 267, 1053, 0, 1064, 268, 269, 270, 271, 272,
	273, 1000, 1033, 967, 274, 1094, 1095, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 1057, 304, 1051, 1050, 971,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1042, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 977, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 989, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1049, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	1062, 1063, 341, 342, 0, 343, 1072, 0, 999, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 1044, 1045,
	0, 1005, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 968, 250, 1086, 409, 410, 990, 1038, 411, 1052,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 1048, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 978, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 1046, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 1093, 502, 503, 504,
	505, 1069, 0, 508, 509, 966, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 1058, 1059,
	1060, 1061, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 988, 522, 523, 524, 525, 0, 527, 528, 0,
	972, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 1055, 1092, 0, 541,
	540, 542, 598, 1563, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 969, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 963, 964, 0,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 959,
	992, 1010, 982, 983, 984, 980, 981, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1034, 998, 0, 0, 0, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 1047, 0, 266, 1054,
	267, 1053, 0, 1064, 268, 269, 270, 271, 272, 273,
	1000, 1033, 967, 274, 1094, 1095, 556, 0, 275, 276,
	1040, 0, 1021, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029,
	300, 301, 302, 303, 1057, 304, 1051, 1050, 971, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1042, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 977, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1065, 1066, 989, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1049, 0, 0,
	0, 337, 0, 338, 0, 0, 1076, 339, 340, 1062,
	1063, 341, 342, 0, 343, 1072, 0, 999, 344, 0,
	345, 346, 347, 348, 349, 1035, 1036, 1039, 412, 1078,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 1077, 358, 1044, 1045, 0,
	1005, 0, 360, 361, 1079, 1037, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 1073, 1082, 376,
	377, 1083, 0, 378, 379, 380, 1028, 1027, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	968, 250, 1086, 409, 410, 990, 1038, 411, 1052, 413,
	414, 0, 0, 415, 0, 973, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 1087, 422, 1088, 1067, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 1068, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	1048, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 1089, 462, 463, 464, 465,
	978, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 1031, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 1046, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 1093, 502, 503, 504, 505,
	1069, 0, 508, 509, 966, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 1058, 1059, 1060,
	1061, 0, 526, 0, 518, 519, 520, 1070, 521, 1071,
	988, 522, 523, 524, 525, 0, 527, 528, 0, 972,
	529, 530, 531, 533, 534, 532, 535, 1032, 536, 0,
	0, 537, 538, 539, 595, 1055, 1092, 0, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 969, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 963, 964, 1010, 982,
	983, 984, 980, 981, 993, 994, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1034,
	998, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 1047, 0, 266, 1054, 267, 1053, 0,
	1064, 268, 269, 270, 271, 272, 273, 1000, 1033, 967,
	274, 1094, 1095, 556, 0, 275, 276, 1040, 0, 1021,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 4097, 294, 0, 295, 296, 297, 1075, 298, 299,
	1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302,
	303, 1057, 304, 1051, 1050, 971, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1042,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 977, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1065, 1066, 989, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1049, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 1062, 1063, 341, 342,
	0, 343, 1072, 0, 999, 344, 0, 345, 346, 347,
	348, 349, 1035, 1036, 1039, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 1077, 358, 1044, 1045, 0, 1005, 0, 360,
	361, 1079, 1037, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 1073, 1082, 376, 377, 1083, 0,
	378, 379, 380, 1028, 1027, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 968, 250, 1086,
	409, 410, 990, 1038, 411, 1052, 413, 414, 0, 0,
	415, 0, 973, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 1067, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 1068, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 1048, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 978, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 1031, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 1046, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 1093, 502, 503, 504, 505, 1069, 0, 508,
	509, 966, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 1058, 1059, 1060, 1061, 0, 526,
	0, 518, 519, 520, 1070, 521, 1071, 988, 522, 523,
	524, 525, 0, 527, 528, 0, 972, 529, 530, 531,
	533, 534, 532, 535, 1032, 536, 0, 0, 537, 538,
	539, 595, 1055, 1092, 0, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 969,
	0, 0, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 0, 0, 963, 964, 1010, 982, 983, 984, 980,
	981, 993, 994, 0, 0, 0, 992, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1034, 998, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	1047, 0, 266, 1054, 267, 1053, 0, 1064, 268, 269,
	270, 271, 272, 273, 1000, 1033, 967, 274, 1094, 1095,
	556, 0, 275, 276, 1040, 0, 1021, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 1024, 1022, 1023,
	1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057, 304,
	1051, 1050, 971, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 977, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1065,
	1066, 989, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1049, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1062, 1063, 341, 342, 0, 343, 1072,
	0, 999, 344, 0, 345, 346, 347, 348, 349, 1035,
	1036, 1039, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 2221, 356, 357, 359, 0, 1077,
	358, 1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 1073, 1082, 376, 377, 1083, 0, 378, 379, 380,
	1028, 1027, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 968, 250, 1086, 409, 410, 990,
	1038, 411, 1052, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 1087,
	422, 1088, 1067, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 1068,
	435, 583, 436, 437, 2220, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1048, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 978, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 1031, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1046, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1093,
	502, 503, 504, 505, 1069, 0, 508, 509, 966, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1058, 1059, 1060, 1061, 0, 526, 0, 518, 519,
	520, 1070, 521, 1071, 988, 522, 523, 524, 525, 0,
	527, 528, 0, 972, 529, 530, 531, 533, 534, 532,
	535, 1032, 536, 0, 0, 537, 538, 539, 595, 1055,
	1092, 0, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 969, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	963, 964, 1010, 982, 983, 984, 980, 981, 993, 994,
	0, 0, 0, 992, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 998, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 1047, 0, 266,
	1054, 267, 1053, 0, 1064, 268, 269, 270, 271, 272,
	273, 1000, 1033, 967, 274, 1094, 1095, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 1057, 304, 1051, 1050, 971,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1042, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 977, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 989, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1049, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	1062, 1063, 341, 342, 0, 343, 1072, 0, 999, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 1044, 1045,
	0, 1005, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 968, 250, 1086, 409, 410, 990, 1038, 411, 1052,
	413, 414, 0, 0, 415, 0, 973, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 1048, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 978, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 1046, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 1093, 502, 503, 504,
	505, 1069, 0, 508, 509, 966, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 1058, 1059,
	1060, 1061, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 988, 522, 523, 524, 525, 0, 527, 528, 0,
	972, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 1055, 1092, 0, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 969, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 963, 964, 1010,
	982, 983, 984, 980, 981, 993, 994, 0, 0, 0,
	992, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1034, 998, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 1047, 0, 266, 1054, 267, 1053,
	0, 1064, 268, 269, 270, 271, 272, 273, 1000, 1033,
	967, 274, 1094, 1095, 556, 0, 275, 276, 1040, 0,
	1021, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 3893, 294, 0, 295, 296, 297, 1075, 298,
	299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301,
	302, 303, 1057, 304, 1051, 1050, 971, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1042, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 977, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1065, 1066, 989, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1049, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 1062, 1063, 341,
	342, 0, 343, 1072, 0, 999, 344, 0, 345, 346,
	347, 348, 349, 1035, 1036, 1039, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 1077, 358, 1044, 1045, 0, 1005, 0,
	360, 361, 1079, 1037, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 1073, 1082, 376, 377, 1083,
	0, 378, 379, 380, 1028, 1027, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 968, 250,
	1086, 409, 410, 990, 1038, 411, 1052, 413, 414, 0,
	0, 415, 0, 973, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 1067, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 1068, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 1048, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 978, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 1031,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 1046, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 1093, 502, 503, 504, 505, 1069, 0,
	508, 509, 966, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 1058, 1059, 1060, 1061, 0,
	526, 0, 518, 519, 520, 1070, 521, 1071, 988, 522,
	523, 524, 525, 0, 527, 528, 0, 972, 529, 530,
	531, 533, 534, 532, 535, 1032, 536, 0, 0, 537,
	538, 539, 595, 1055, 1092, 0, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	969, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 0, 0, 0, 963, 964, 1010, 982, 983, 984,
	980, 981, 993, 994, 0, 0, 0, 992, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 3551, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 969, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 1779, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 992, 1010, 982, 983, 984, 980,
	981, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1034, 998, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	1047, 0, 266, 1054, 267, 1053, 0, 1064, 268, 269,
	270, 271, 272, 273, 1000, 1033, 967, 274, 1094, 1095,
	556, 0, 275, 276, 1040, 0, 1021, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 1024, 1022, 1023,
	1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057, 304,
	1051, 1050, 971, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 977, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1065,
	1066, 989, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1049, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1062, 1063, 341, 342, 0, 343, 1072,
	0, 999, 344, 0, 345, 346, 347, 348, 349, 1035,
	1036, 1039, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 1077,
	358, 1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 1073, 1082, 376, 377, 1083, 0, 378, 379, 380,
	1028, 1027, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 968, 250, 1086, 409, 410, 990,
	1038, 411, 1052, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 1087,
	422, 1088, 1067, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 1068,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1048, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 978, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 1031, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1046, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1093,
	502, 503, 504, 505, 1069, 0, 508, 509, 966, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1058, 1059, 1060, 1061, 0, 526, 0, 518, 519,
	520, 1070, 521, 1071, 988, 522, 523, 524, 525, 0,
	527, 528, 0, 972, 529, 530, 531, 533, 534, 532,
	535, 1032, 536, 0, 0, 537, 538, 539, 595, 1055,
	1092, 3301, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 969, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	963, 964, 1010, 982, 983, 984, 980, 981, 993, 994,
	0, 0, 0, 992, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 998, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 1047, 0, 266,
	1054, 267, 1053, 0, 1064, 268, 269, 270, 271, 272,
	273, 1000, 1033, 967, 274, 1094, 1095, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 1057, 304, 1051, 1050, 971,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1042, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 977, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 989, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1049, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	1062, 1063, 341, 342, 0, 343, 1072, 0, 999, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 1044, 1045,
	0, 1005, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 968, 250, 1086, 409, 410, 990, 1038, 411, 1052,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 1048, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 978, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 1046, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 1093, 502, 503, 504,
	505, 1069, 0, 508, 509, 966, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 1058, 1059,
	1060, 1061, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 988, 522, 523, 524, 525, 0, 527, 528, 0,
	972, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 1055, 1092, 0, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 969, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 963, 964, 1779,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	992, 1010, 982, 983, 984, 980, 981, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1034, 998, 0, 0, 0, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 1047, 0, 266, 1054,
	267, 1053, 0, 1064, 268, 269, 270, 271, 272, 273,
	1000, 1033, 967, 274, 1094, 1095, 556, 0, 275, 276,
	1040, 0, 1021, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029,
	300, 301, 302, 303, 1057, 304, 1051, 1050, 971, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1042, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 977, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1065, 1066, 989, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1049, 0, 0,
	0, 337, 0, 338, 0, 2416, 1076, 339, 340, 1062,
	1063, 341, 342, 0, 343, 1072, 0, 999, 344, 0,
	345, 346, 347, 348, 349, 1035, 1036, 1039, 412, 1078,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 1077, 358, 1044, 1045, 0,
	1005, 0, 360, 361, 1079, 1037, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 1073, 1082, 376,
	377, 1083, 0, 378, 379, 380, 1028, 1027, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	968, 250, 1086, 409, 410, 990, 1038, 411, 1052, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 1087, 422, 1088, 1067, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 1068, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	1048, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 1089, 462, 463, 464, 465,
	978, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 1031, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 1046, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 1093, 502, 503, 504, 505,
	1069, 0, 508, 509, 966, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 1058, 1059, 1060,
	1061, 0, 526, 0, 518, 519, 520, 1070, 521, 1071,
	988, 522, 523, 524, 525, 0, 527, 528, 0, 972,
	529, 530, 531, 533, 534, 532, 535, 1032, 536, 0,
	0, 537, 538, 539, 595, 1055, 1092, 0, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 969, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 963, 964, 1010, 982,
	983, 984, 980, 981, 993, 994, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1034,
	998, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 1047, 0, 266, 1054, 267, 1053, 0,
	1064, 268, 269, 270, 271, 272, 273, 1000, 1033, 967,
	274, 1094, 1095, 556, 0, 275, 276, 1040, 0, 1021,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302,
	303, 1057, 304, 1051, 1050, 971, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1042,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 977, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1065, 1066, 989, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1049, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 1062, 1063, 341, 342,
	0, 343, 1072, 0, 999, 344, 0, 345, 346, 347,
	348, 349, 1035, 1036, 1039, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 1077, 358, 1044, 1045, 0, 1005, 0, 360,
	361, 1079, 1037, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 1073, 1082, 376, 377, 1083, 0,
	378, 379, 380, 1028, 1027, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 968, 250, 1086,
	409, 410, 990, 1038, 411, 1052, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 1067, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 1068, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 1048, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 978, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 1031, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 1046, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 1093, 502, 503, 504, 505, 1069, 0, 508,
	509, 966, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 1058, 1059, 1060, 1061, 0, 526,
	0, 518, 519, 520, 1070, 521, 1071, 988, 522, 523,
	524, 525, 0, 527, 528, 0, 972, 529, 530, 531,
	533, 534, 532, 535, 1032, 536, 0, 0, 537, 538,
	539, 595, 1055, 1092, 0, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 969,
	0, 0, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 0, 0, 963, 964, 0, 0, 0, 0, 0,
	0, 0, 994, 1709, 0, 2421, 992, 1010, 982, 983,
	984, 980, 981, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1034, 998,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 1047, 0, 266, 1054, 267, 1053, 0, 1064,
	268, 269, 270, 271, 272, 273, 1000, 1033, 967, 274,
	1094, 1095, 556, 0, 275, 276, 1040, 0, 1021, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 1024,
	1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303,
	1057, 304, 1051, 1050, 971, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1042, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	977, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1065, 1066, 989, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1049, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 1062, 1063, 341, 342, 0,
	343, 1072, 0, 999, 344, 0, 345, 346, 347, 348,
	349, 1035, 1036, 1039, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 1077, 358, 1044, 1045, 0, 1005, 0, 360, 361,
	1079, 1037, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 1073, 1082, 376, 377, 1083, 0, 378,
	379, 380, 1028, 1027, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 968, 250, 1086, 409,
	410, 990, 1038, 411, 1052, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 1067, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 1068, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 1048, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 978, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 1031, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	1046, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 1093, 502, 503, 504, 505, 1069, 0, 508, 509,
	966, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 1058, 1059, 1060, 1061, 0, 526, 0,
	518, 519, 520, 1070, 521, 1071, 988, 522, 523, 524,
	525, 0, 527, 528, 0, 972, 529, 530, 531, 533,
	534, 532, 535, 1032, 536, 0, 0, 537, 538, 539,
	595, 1055, 1092, 0, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 969, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 963, 964, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 2419, 992, 1010, 982, 983, 984,
	980, 981, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 250, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 969, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 0, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 2407, 992, 1010, 982, 983, 984, 980,
	981, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1034, 998, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	1047, 0, 266, 1054, 267, 1053, 0, 1064, 268, 269,
	270, 271, 272, 273, 1000, 1033, 967, 274, 1094, 1095,
	556, 0, 275, 276, 1040, 0, 1021, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 1024, 1022, 1023,
	1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057, 304,
	1051, 1050, 971, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 977, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1065,
	1066, 989, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1049, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1062, 1063, 341, 342, 0, 343, 1072,
	0, 999, 344, 0, 345, 346, 347, 348, 349, 1035,
	1036, 1039, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 1077,
	358, 1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 1073, 1082, 376, 377, 1083, 0, 378, 379, 380,
	1028, 1027, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 968, 250, 1086, 409, 410, 990,
	1038, 411, 1052, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 1087,
	422, 1088, 1067, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 1068,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1048, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 978, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 1031, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1046, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1093,
	502, 503, 504, 505, 1069, 0, 508, 509, 966, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1058, 1059, 1060, 1061, 0, 526, 0, 518, 519,
	520, 1070, 521, 1071, 988, 522, 523, 524, 525, 0,
	527, 528, 0, 972, 529, 530, 531, 533, 534, 532,
	535, 1032, 536, 0, 0, 537, 538, 539, 595, 1055,
	1092, 0, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 969, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	963, 964, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 2396, 992, 1010, 982, 983, 984, 980, 981,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1034, 998, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 1047,
	0, 266, 1054, 267, 1053, 0, 1064, 268, 269, 270,
	271, 272, 273, 1000, 1033, 967, 274, 1094, 1095, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 1057, 304, 1051,
	1050, 971, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1042, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 977, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	989, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1049, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 1062, 1063, 341, 342, 0, 343, 1072, 0,
	999, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 968, 250, 1086, 409, 410, 990, 1038,
	411, 1052, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 1048, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 978, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 1046, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 1093, 502,
	503, 504, 505, 1069, 0, 508, 509, 966, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	1058, 1059, 1060, 1061, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 988, 522, 523, 524, 525, 0, 527,
	528, 0, 972, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 595, 1055, 1092,
	0, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 969, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 963,
	964, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 2394, 992, 2385, 2392, 983, 984, 980, 981, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1034, 998, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 1047, 0,
	266, 1054, 267, 1053, 0, 1064, 268, 269, 270, 271,
	272, 273, 1000, 1033, 967, 274, 1094, 1095, 556, 0,
	275, 276, 1040, 0, 1021, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026,
	1025, 1029, 300, 301, 302, 303, 1057, 2388, 1051, 1050,
	971, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1042, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 977, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1065, 1066, 989,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1049,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 1062, 1063, 341, 342, 0, 343, 1072, 0, 999,
	344, 0, 345, 346, 347, 2389, 349, 1035, 1036, 1039,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 1077, 358, 1044,
	1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 1073,
	1082, 376, 377, 1083, 0, 378, 379, 380, 1028, 1027,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	2390, 2387, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 968, 250, 1086, 409, 410, 990, 1038, 411,
	1052, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	1067, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 1068, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 1048, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 978, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 2391, 0, 482, 483, 481,
	484, 485, 486, 1031, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 1046, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 1093, 502, 503,
	504, 505, 1069, 0, 508, 509, 966, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 1058,
	1059, 1060, 1061, 0, 526, 0, 518, 519, 520, 1070,
	521, 1071, 988, 522, 523, 524, 525, 0, 527, 528,
	0, 972, 529, 530, 531, 533, 534, 532, 535, 1032,
	536, 0, 0, 537, 538, 539, 595, 1055, 1092, 0,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 2386, 547, 969, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 963, 964,
	0, 0, 0, 0, 0, 0, 0, 994, 0, 0,
	2382, 992, 2385, 2392, 983, 984, 980, 981, 993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 998, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 1047, 0, 266,
	1054, 267, 1053, 0, 1064, 268, 269, 270, 271, 272,
	273, 1000, 1033, 967, 274, 1094, 1095, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 1057, 2388, 1051, 1050, 971,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1042, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 977, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 989, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1049, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	1062, 1063, 341, 342, 0, 343, 1072, 0, 999, 344,
	0, 345, 346, 347, 2389, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 1044, 1045,
	0, 1005, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 2390,
	2387, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 968, 250, 1086, 409, 410, 990, 1038, 411, 1052,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 1048, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 978, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 2391, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 1046, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 1093, 502, 503, 504,
	505, 1069, 0, 508, 509, 966, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 1058, 1059,
	1060, 1061, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 988, 522, 523, 524, 525, 0, 527, 528, 0,
	972, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 1055, 1092, 0, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 2386, 547, 969, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 963, 964, 1010,
	982, 983, 984, 980, 981, 993, 994, 0, 0, 0,
	992, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1034, 998, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 1047, 0, 266, 1054, 267, 1053,
	0, 1064, 268, 269, 270, 271, 272, 273, 1000, 1033,
	967, 274, 1094, 1095, 556, 0, 275, 276, 1040, 0,
	1021, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1075, 298,
	299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301,
	302, 303, 1057, 304, 1051, 1050, 971, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1042, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 977, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1065, 1066, 989, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1049, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 1062, 1063, 341,
	342, 0, 343, 1072, 0, 999, 344, 0, 345, 346,
	347, 348, 349, 1035, 1036, 1039, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 1077, 358, 1044, 1045, 0, 1005, 0,
	360, 361, 1079, 1037, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 1073, 1082, 376, 377, 1083,
	0, 378, 379, 380, 1028, 1027, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 968, 250,
	1086, 409, 410, 990, 1038, 411, 1052, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 1067, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 1068, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 1048, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 978, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 1031,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 1046, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 1093, 502, 503, 504, 505, 1069, 0,
	508, 509, 966, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 1058, 1059, 1060, 1061, 0,
	526, 0, 518, 519, 520, 1070, 521, 1071, 988, 522,
	523, 524, 525, 0, 527, 528, 0, 972, 529, 530,
	531, 533, 534, 532, 535, 1032, 536, 0, 0, 537,
	538, 539, 595, 1055, 1092, 0, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	969, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 0, 0, 0, 963, 964, 0, 0, 0, 0,
	0, 1717, 0, 994, 0, 0, 0, 992, 1010, 982,
	983, 984, 980, 981, 993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 2200, 257, 258, 0, 0, 0, 0, 0, 1034,
	998, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 1047, 0, 266, 1054, 267, 1053, 0,
	1064, 268, 269, 270, 271, 272, 273, 1000, 1033, 967,
	274, 1094, 1095, 556, 0, 275, 276, 1040, 0, 1021,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302,
	303, 1057, 304, 1051, 1050, 971, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1042,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 977, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1065, 1066, 989, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1049, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 1062, 1063, 341, 342,
	0, 343, 1072, 0, 999, 344, 0, 345, 346, 347,
	348, 349, 1035, 1036, 1039, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 1077, 358, 1044, 1045, 0, 1005, 0, 360,
	361, 1079, 1037, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 1073, 1082, 376, 377, 1083, 0,
	378, 379, 380, 1028, 1027, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 968, 250, 1086,
	409, 410, 990, 1038, 411, 1052, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 1067, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 1068, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 1048, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 978, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 1031, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 1046, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 1093, 502, 503, 504, 505, 1069, 0, 508,
	509, 966, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 1058, 1059, 1060, 1061, 0, 526,
	0, 518, 519, 520, 1070, 521, 1071, 988, 522, 523,
	524, 525, 0, 527, 528, 0, 972, 529, 530, 531,
	533, 534, 532, 535, 1032, 536, 0, 0, 537, 538,
	539, 595, 1055, 1092, 0, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 969,
	0, 0, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 0, 0, 963, 964, 0, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 1569, 992, 1010, 982, 983,
	984, 980, 981, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1034, 998,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 1047, 0, 266, 1054, 267, 1053, 0, 1064,
	268, 269, 270, 271, 272, 273, 1000, 1033, 967, 274,
	1094, 1095, 556, 0, 275, 276, 1040, 0, 1021, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 1024,
	1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303,
	1057, 304, 1051, 1050, 971, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1042, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	977, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1065, 1066, 989, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1049, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 1062, 1063, 341, 342, 0,
	343, 1072, 0, 999, 344, 0, 345, 346, 347, 348,
	349, 1035, 1036, 1039, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 1077, 358, 1044, 1045, 0, 1005, 0, 360, 361,
	1079, 1037, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 1073, 1082, 376, 377, 1083, 0, 378,
	379, 380, 1028, 1027, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 968, 250, 1086, 409,
	410, 990, 1038, 411, 1052, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 1067, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 1068, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 1048, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 978, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 1031, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	1046, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 1093, 502, 503, 504, 505, 1069, 0, 508, 509,
	966, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 1058, 1059, 1060, 1061, 0, 526, 0,
	518, 519, 520, 1070, 521, 1071, 988, 522, 523, 524,
	525, 0, 527, 528, 0, 972, 529, 530, 531, 533,
	534, 532, 535, 1032, 536, 0, 0, 537, 538, 539,
	595, 1055, 1092, 0, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 969, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 963, 964, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 1504, 992, 1010, 982, 983, 984,
	980, 981, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 250, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 969, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 0, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 1499, 992, 1010, 982, 983, 984, 980,
	981, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1034, 998, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 549,
	1047, 0, 266, 1054, 267, 1053, 0, 1064, 268, 269,
	270, 271, 272, 273, 1000, 1033, 967, 274, 1094, 1095,
	556, 0, 275, 276, 1040, 0, 1021, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 1024, 1022, 1023,
	1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057, 304,
	1051, 1050, 971, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 977, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1065,
	1066, 989, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1049, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1062, 1063, 341, 342, 0, 343, 1072,
	0, 999, 344, 0, 345, 346, 347, 348, 349, 1035,
	1036, 1039, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 1077,
	358, 1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 1073, 1082, 376, 377, 1083, 0, 378, 379, 380,
	1028, 1027, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 968, 250, 1086, 409, 410, 990,
	1038, 411, 1052, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 1087,
	422, 1088, 1067, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 1068,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1048, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 978, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 1031, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1046, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1093,
	502, 503, 504, 505, 1069, 0, 508, 509, 966, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1058, 1059, 1060, 1061, 0, 526, 0, 518, 519,
	520, 1070, 521, 1071, 988, 522, 523, 524, 525, 0,
	527, 528, 0, 972, 529, 530, 531, 533, 534, 532,
	535, 1032, 536, 0, 0, 537, 538, 539, 595, 1055,
	1092, 0, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 969, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	963, 964, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 1490, 992, 1010, 982, 983, 984, 980, 981,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1034, 998, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 1047,
	0, 266, 1054, 267, 1053, 0, 1064, 268, 269, 270,
	271, 272, 273, 1000, 1033, 967, 274, 1094, 1095, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 1057, 304, 1051,
	1050, 971, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1042, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 977, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	989, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1049, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 1062, 1063, 341, 342, 0, 343, 1072, 0,
	999, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 968, 250, 1086, 409, 410, 990, 1038,
	411, 1052, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 1048, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 978, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 1046, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 1093, 502,
	503, 504, 505, 1069, 0, 508, 509, 966, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	1058, 1059, 1060, 1061, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 988, 522, 523, 524, 525, 0, 527,
	528, 0, 972, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 595, 1055, 1092,
	0, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 969, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 963,
	964, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 1485, 992, 1010, 982, 983, 984, 980, 981, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1034, 998, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 1047, 0,
	266, 1054, 267, 1053, 0, 1064, 268, 269, 270, 271,
	272, 273, 1000, 1033, 967, 274, 1094, 1095, 556, 0,
	275, 276, 1040, 0, 1021, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026,
	1025, 1029, 300, 301, 302, 303, 1057, 304, 1051, 1050,
	971, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1042, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 977, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1065, 1066, 989,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1049,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 1062, 1063, 341, 342, 0, 343, 1072, 0, 999,
	344, 0, 345, 346, 347, 348, 349, 1035, 1036, 1039,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 1077, 358, 1044,
	1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 1073,
	1082, 376, 377, 1083, 0, 378, 379, 380, 1028, 1027,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 968, 250, 1086, 409, 410, 990, 1038, 411,
	1052, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	1067, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 1068, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 1048, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 978, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 1031, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 1046, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 1093, 502, 503,
	504, 505, 1069, 0, 508, 509, 966, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 1058,
	1059, 1060, 1061, 0, 526, 0, 518, 519, 520, 1070,
	521, 1071, 988, 522, 523, 524, 525, 0, 527, 528,
	0, 972, 529, 530, 531, 533, 534, 532, 535, 1032,
	536, 0, 0, 537, 538, 539, 595, 1055, 1092, 0,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 969, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 963, 964,
	0, 0, 0, 0, 0, 0, 0, 994, 0, 0,
	1467, 992, 1010, 982, 983, 984, 980, 981, 993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 998, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 1047, 0, 266,
	1054, 267, 1053, 0, 1064, 268, 269, 270, 271, 272,
	273, 1000, 1033, 967, 274, 1094, 1095, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 1057, 304, 1051, 1050, 971,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1042, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 977, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 989, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1049, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	1062, 1063, 341, 342, 0, 343, 1072, 0, 999, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 1044, 1045,
	0, 1005, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 968, 250, 1086, 409, 410, 990, 1038, 411, 1052,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 1048, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 978, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 1046, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 1093, 502, 503, 504,
	505, 1069, 0, 508, 509, 966, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 1058, 1059,
	1060, 1061, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 988, 522, 523, 524, 525, 0, 527, 528, 0,
	972, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 1055, 1092, 0, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 969, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 963, 964, 0,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 1350,
	992, 1010, 982, 983, 984, 980, 981, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1034, 998, 0, 0, 0, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 1047, 0, 266, 1054,
	267, 1053, 0, 1064, 268, 269, 270, 271, 272, 273,
	1000, 1033, 967, 274, 1094, 1095, 556, 0, 275, 276,
	1040, 0, 1021, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029,
	300, 301, 302, 303, 1057, 304, 1051, 1050, 971, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1042, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 977, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1065, 1066, 989, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1049, 0, 0,
	0, 337, 0, 338, 0, 0, 1076, 339, 340, 1062,
	1063, 341, 342, 0, 343, 1072, 0, 999, 344, 0,
	345, 346, 347, 348, 349, 1349, 1036, 1039, 412, 1078,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 1077, 358, 1044, 1045, 0,
	1005, 0, 360, 361, 1079, 1037, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 1073, 1082, 376,
	377, 1083, 0, 378, 379, 380, 1028, 1027, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	968, 250, 1086, 409, 410, 990, 1038, 411, 1052, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 1087, 422, 1088, 1067, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 1068, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	1048, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 1089, 462, 463, 464, 465,
	978, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 1031, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 1046, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 1093, 502, 503, 504, 505,
	1069, 0, 508, 509, 966, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 1058, 1059, 1060,
	1061, 0, 526, 0, 518, 519, 520, 1070, 521, 1071,
	988, 522, 523, 524, 525, 0, 527, 528, 0, 972,
	529, 530, 531, 533, 534, 532, 535, 1032, 536, 0,
	0, 537, 538, 539, 595, 1055, 1092, 0, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 969, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 963, 964, 0, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 1344, 992,
	1010, 982, 983, 984, 980, 981, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1034, 998, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 1047, 0, 266, 1054, 267,
	1053, 0, 1064, 268, 269, 270, 271, 272, 273, 1000,
	1033, 967, 274, 1094, 1095, 556, 0, 275, 276, 1040,
	0, 1021, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300,
	301, 302, 303, 1057, 304, 1051, 1050, 971, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1042, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 977, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1065, 1066, 989, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1049, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 1062, 1063,
	341, 342, 0, 343, 1072, 0, 999, 344, 0, 345,
	346, 347, 348, 349, 1343, 1036, 1039, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 1077, 358, 1044, 1045, 0, 1005,
	0, 360, 361, 1079, 1037, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 1073, 1082, 376, 377,
	1083, 0, 378, 379, 380, 1028, 1027, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 968,
	250, 1086, 409, 410, 990, 1038, 411, 1052, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 1067, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 1068, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 1048,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 978,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	1031, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 1046, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 1093, 502, 503, 504, 505, 1069,
	0, 508, 509, 966, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 1058, 1059, 1060, 1061,
	0, 526, 0, 518, 519, 520, 1070, 521, 1071, 988,
	522, 523, 524, 525, 0, 527, 528, 0, 972, 529,
	530, 531, 533, 534, 532, 535, 1032, 536, 0, 0,
	537, 538, 539, 595, 1055, 1092, 0, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 969, 0, 0, 0, 0, 0, 0, 965, 0,
	0, 0, 0, 0, 0, 963, 964, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 1337, 992, 1010,
	982, 983, 984, 980, 981, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1034, 998, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 1047, 0, 266, 1054, 267, 1053,
	0, 1064, 268, 269, 270, 271, 272, 273, 1000, 1033,
	967, 274, 1094, 1095, 556, 0, 275, 276, 1040, 0,
	1021, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1075, 298,
	299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301,
	302, 303, 1057, 304, 1051, 1050, 971, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1042, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 977, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1065, 1066, 989, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1049, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 1062, 1063, 341,
	342, 0, 343, 1072, 0, 999, 344, 0, 345, 346,
	347, 348, 349, 1035, 1036, 1039, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 1077, 358, 1044, 1045, 0, 1005, 0,
	360, 361, 1079, 1037, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 1073, 1082, 376, 377, 1083,
	0, 378, 379, 380, 1028, 1027, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 968, 250,
	1086, 409, 410, 990, 1038, 411, 1052, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 1067, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 1068, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 1048, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 978, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 1031,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 1046, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 1093, 502, 503, 504, 505, 1069, 0,
	508, 509, 966, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 1058, 1059, 1060, 1061, 0,
	526, 0, 518, 519, 520, 1070, 521, 1071, 988, 522,
	523, 524, 525, 0, 527, 528, 0, 972, 529, 530,
	531, 533, 534, 532, 535, 1032, 536, 0, 0, 537,
	538, 539, 595, 1055, 1092, 0, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	969, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 0, 0, 0, 963, 964, 1010, 982, 983, 984,
	980, 981, 993, 994, 0, 0, 0, 992, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1034, 998, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 1047, 0, 266, 1054, 267, 1053, 0, 1064, 268,
	269, 270, 271, 272, 273, 1000, 1033, 967, 274, 1094,
	1095, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 1057,
	304, 1051, 1050, 971, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1042, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 977,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 989, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1049, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 1062, 1063, 341, 342, 0, 343,
	1072, 0, 999, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 1044, 1045, 0, 1005, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 968, 250, 1086, 409, 410,
	990, 1038, 411, 1052, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 1048, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 978, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 1046,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	1093, 502, 503, 504, 505, 1069, 0, 508, 509, 966,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 1058, 1059, 1060, 1061, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 988, 522, 523, 524, 525,
	0, 527, 528, 0, 972, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	1055, 1092, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 969, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 963, 964, 1010, 982, 983, 984, 980, 981, 993,
	994, 0, 0, 0, 992, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1034, 998, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 1047, 0,
	266, 1054, 267, 1053, 0, 1064, 268, 269, 270, 271,
	272, 273, 1000, 1033, 967, 274, 1094, 1095, 556, 0,
	275, 276, 1040, 0, 1021, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 4136, 1024, 1022, 1023, 1030, 1026,
	1025, 1029, 300, 301, 302, 303, 1057, 304, 1051, 1050,
	971, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1042, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 977, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1065, 1066, 989,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1049,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 1062, 1063, 341, 342, 0, 343, 1072, 0, 999,
	344, 0, 345, 346, 347, 348, 349, 1035, 1036, 1039,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 1077, 358, 1044,
	1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 1073,
	1082, 376, 377, 1083, 0, 378, 379, 380, 1028, 1027,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 968, 250, 1086, 409, 410, 990, 1038, 411,
	1052, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	1067, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 1068, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 1048, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 978, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 1031, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 1046, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 1093, 502, 503,
	504, 505, 1069, 0, 508, 509, 966, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 1058,
	1059, 1060, 1061, 0, 526, 0, 518, 519, 520, 1070,
	521, 1071, 988, 522, 523, 524, 525, 0, 4135, 528,
	0, 972, 529, 530, 531, 533, 534, 532, 535, 1032,
	536, 0, 0, 537, 538, 539, 595, 1055, 1092, 0,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 969, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 963, 964,
	1010, 982, 983, 984, 980, 981, 993, 994, 0, 0,
	0, 992, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1034, 998, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 4134, 1047, 0, 266, 1054, 267,
	1053, 0, 1064, 268, 269, 270, 271, 272, 273, 1000,
	1033, 967, 274, 1094, 1095, 556, 0, 275, 276, 1040,
	0, 1021, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 4136, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300,
	301, 302, 303, 1057, 304, 1051, 1050, 971, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1042, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 977, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1065, 1066, 989, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1049, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 1062, 1063,
	341, 342, 0, 343, 1072, 0, 999, 344, 0, 345,
	346, 347, 348, 349, 1035, 1036, 1039, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 1077, 358, 1044, 1045, 0, 1005,
	0, 360, 361, 1079, 1037, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 1073, 1082, 376, 377,
	1083, 0, 378, 379, 380, 1028, 1027, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 968,
	250, 1086, 409, 410, 990, 1038, 411, 1052, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 1067, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 1068, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 1048,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 978,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	1031, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 1046, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 1093, 502, 503, 504, 505, 1069,
	0, 508, 509, 966, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 1058, 1059, 1060, 1061,
	0, 526, 0, 518, 519, 520, 1070, 521, 1071, 988,
	522, 523, 524, 525, 0, 4135, 528, 0, 972, 529,
	530, 531, 533, 534, 532, 535, 1032, 536, 0, 0,
	537, 538, 539, 595, 1055, 1092, 0, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 969, 0, 0, 0, 0, 0, 0, 965, 0,
	0, 0, 0, 0, 0, 963, 964, 1010, 982, 983,
	984, 2820, 2821, 993, 994, 0, 0, 0, 992, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1034, 998,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 1047, 0, 266, 1054, 267, 1053, 0, 1064,
	268, 269, 270, 271, 272, 273, 1000, 1033, 967, 274,
	1094, 1095, 556, 0, 275, 276, 1040, 0, 1021, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 1024,
	1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303,
	1057, 304, 1051, 1050, 971, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1042, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	977, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1065, 1066, 989, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1049, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 1062, 1063, 341, 342, 0,
	343, 1072, 0, 999, 344, 0, 345, 346, 347, 348,
	349, 1035, 1036, 1039, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 1077, 358, 1044, 1045, 0, 1005, 0, 360, 361,
	1079, 1037, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 1073, 1082, 376, 377, 1083, 0, 378,
	379, 380, 1028, 1027, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 968, 250, 1086, 409,
	410, 990, 1038, 411, 1052, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 1067, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 1068, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 1048, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 978, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 1031, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	1046, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 1093, 502, 503, 504, 505, 1069, 0, 508, 509,
	966, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 1058, 1059, 1060, 1061, 0, 526, 0,
	518, 519, 520, 1070, 521, 1071, 988, 522, 523, 524,
	525, 0, 527, 528, 0, 972, 529, 530, 531, 533,
	534, 532, 535, 1032, 536, 0, 0, 537, 538, 539,
	595, 1055, 1092, 0, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 969, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 963, 964, 1010, 982, 983, 984, 2818, 2819,
	993, 994, 0, 0, 0, 992, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1034, 998, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 1047,
	0, 266, 1054, 267, 1053, 0, 1064, 268, 269, 270,
	271, 272, 273, 1000, 1033, 967, 274, 1094, 1095, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 1057, 304, 1051,
	1050, 971, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1042, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 977, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	989, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1049, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 1062, 1063, 341, 342, 0, 343, 1072, 0,
	999, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	1044, 1045, 0, 1005, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 968, 250, 1086, 409, 410, 990, 1038,
	411, 1052, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 1048, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 978, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 1046, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 1093, 502,
	503, 504, 505, 1069, 0, 508, 509, 966, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	1058, 1059, 1060, 1061, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 988, 522, 523, 524, 525, 0, 527,
	528, 0, 972, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 595, 1055, 1092,
	0, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 969, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 963,
	964, 1010, 982, 983, 984, 980, 981, 993, 994, 0,
	0, 0, 992, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1034, 998, 0, 0, 0, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 1047, 0, 266, 1054,
	267, 1053, 0, 1064, 268, 269, 270, 271, 272, 273,
	1000, 1033, 967, 274, 1094, 1095, 556, 0, 275, 276,
	1040, 0, 1021, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029,
	300, 301, 302, 303, 1057, 304, 1051, 1050, 971, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1042, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 977, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1065, 1066, 989, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1049, 0, 0,
	0, 337, 0, 338, 0, 0, 1076, 339, 340, 1062,
	1063, 341, 342, 0, 343, 1072, 0, 999, 344, 0,
	345, 346, 347, 348, 349, 1035, 1036, 1039, 412, 1078,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 1077, 358, 1044, 1045, 0,
	1005, 0, 360, 361, 1079, 1037, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 1073, 1082, 376,
	377, 1083, 0, 378, 379, 380, 1028, 1027, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	968, 250, 1086, 409, 410, 990, 1038, 411, 1052, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 1087, 422, 1088, 1067, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 1068, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	1048, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 1089, 462, 463, 464, 465,
	978, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 1031, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 1046, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 1093, 502, 503, 504, 505,
	1069, 0, 508, 509, 966, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 1058, 1059, 1060,
	1061, 0, 526, 0, 518, 519, 520, 1070, 521, 1071,
	988, 522, 523, 524, 525, 0, 527, 528, 0, 972,
	529, 530, 531, 533, 534, 532, 535, 1032, 536, 0,
	0, 537, 538, 539, 595, 1055, 1092, 0, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 969, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 2208, 2209, 1010, 982,
	983, 984, 980, 981, 993, 994, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1034,
	998, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 1047, 0, 266, 1054, 267, 1053, 0,
	1064, 268, 269, 270, 271, 272, 273, 1000, 1033, 0,
	274, 1094, 1095, 556, 0, 275, 276, 1040, 0, 1021,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302,
	303, 1057, 304, 1051, 1050, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1042,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 977, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1065, 1066, 989, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1049, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 1062, 1063, 341, 342,
	0, 343, 1072, 0, 999, 344, 0, 345, 346, 347,
	348, 349, 1035, 1036, 1039, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 1077, 358, 1044, 1045, 0, 1005, 0, 360,
	361, 1079, 1037, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 1073, 1082, 376, 377, 1083, 0,
	378, 379, 380, 1028, 1027, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 0, 250, 1086,
	409, 410, 990, 1038, 411, 1052, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 1067, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 1068, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 1048, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 978, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 1031, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 1046, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 1093, 502, 503, 504, 505, 1069, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 1058, 1059, 1060, 1061, 0, 526,
	0, 518, 519, 520, 1070, 521, 1071, 988, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 1032, 536, 0, 0, 537, 538,
	539, 595, 1055, 1092, 0, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 1010,
	982, 983, 984, 980, 981, 993, 2404, 0, 0, 0,
	0, 0, 0, 2402, 2403, 0, 251, 252, 253, 254,
	255, 256, 994, 257, 258, 0, 992, 0, 0, 0,
	1034, 998, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 1047, 0, 266, 1054, 267, 1053,
	0, 1064, 268, 269, 270, 271, 272, 273, 1000, 1033,
	0, 274, 1094, 1095, 556, 0, 275, 276, 1040, 0,
	1021, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1075, 298,
	299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301,
	302, 303, 1057, 304, 1051, 1050, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1042, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 977, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1065, 1066, 989, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1049, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 1062, 1063, 341,
	342, 0, 343, 1072, 0, 999, 344, 0, 345, 346,
	347, 348, 349, 1035, 1036, 1039, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 1077, 358, 1044, 1045, 0, 1005, 0,
	360, 361, 1079, 1037, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 1073, 1082, 376, 377, 1083,
	0, 378, 379, 380, 1028, 1027, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 0, 250,
	1086, 409, 410, 990, 1038, 411, 1052, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 1067, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 1068, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 1048, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 2813, 2814,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 1031,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 1046, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 1093, 502, 503, 504, 505, 1069, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 1058, 1059, 1060, 1061, 0,
	526, 0, 518, 519, 520, 1070, 521, 1071, 988, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 1032, 536, 0, 0, 537,
	538, 539, 595, 1055, 1092, 0, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	1010, 982, 983, 984, 980, 981, 993, 0, 0, 0,
	0, 0, 0, 0, 1916, 1917, 0, 251, 252, 253,
	254, 255, 256, 994, 257, 258, 0, 992, 0, 0,
	0, 1034, 998, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 0, 1047, 0, 266, 1054, 267,
	1053, 0, 1064, 268, 269, 270, 271, 272, 273, 1000,
	1033, 967, 274, 1094, 1095, 556, 0, 275, 276, 1040,
	0, 1021, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 4136, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300,
	301, 302, 303, 1057, 304, 1051, 1050, 971, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1042, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 977, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1065, 1066, 989, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1049, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 1062, 1063,
	341, 342, 0, 343, 1072, 0, 999, 344, 0, 345,
	346, 347, 348, 349, 1035, 1036, 1039, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 1077, 358, 1044, 1045, 0, 1005,
	0, 360, 361, 0, 1037, 0, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 1073, 1082, 376, 377,
	0, 0, 378, 379, 380, 1028, 1027, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 968,
	250, 0, 409, 410, 990, 1038, 411, 1052, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 1067, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 1068, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 1048,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 978,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	1031, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 1046, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 1093, 502, 503, 504, 505, 1069,
	0, 508, 509, 966, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 1058, 1059, 1060, 1061,
	0, 526, 0, 518, 519, 520, 1070, 521, 1071, 988,
	522, 523, 524, 525, 0, 4135, 528, 0, 972, 529,
	530, 531, 533, 534, 532, 535, 1032, 536, 0, 0,
	537, 538, 539, 595, 1055, 1092, 0, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 0, 1132, 0, 0, 963, 964, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 992, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 0, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 1033, 0, 274, 554, 555, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	564, 565, 341, 342, 0, 343, 1072, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 571, 572,
	0, 573, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 1118, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 0, 250, 1086, 409, 410, 0, 1038, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 1124, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 585, 1126, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 212, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 1069, 0, 508, 509, 0, 507, 214, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 1474, 596, 597, 0, 541,
	540, 542, 598, 0, 1132, 0, 206, 543, 544, 599,
	545, 546, 547, 0, 207, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 1122, 1034, 1803, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 1033, 0, 274, 554, 555, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 564, 565, 341, 342, 0, 343, 1072, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	571, 572, 0, 573, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 1118, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 0, 250, 1086, 409, 410, 0, 1038,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 1124,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 1126, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 212, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 1069, 0, 508, 509, 0, 507, 214,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 1474, 596, 597,
	0, 541, 540, 542, 598, 0, 0, 0, 206, 543,
	544, 599, 545, 546, 547, 0, 207, 0, 0, 0,
	2973, 0, 1132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 1803, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1034, 0, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 1033, 0, 274, 554, 555, 556, 0, 275,
	276, 1040, 0, 1021, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 1024, 1022, 1023, 1030, 1026, 1025,
	1029, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1065, 1066, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	564, 565, 341, 342, 0, 343, 1072, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 1035, 1036, 1039, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 1077, 358, 571, 572,
	0, 573, 0, 360, 361, 1079, 1037, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 1118, 372, 374, 373, 0, 375, 1073, 1082,
	376, 377, 1083, 0, 378, 379, 380, 1028, 1027, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 0, 250, 1086, 409, 410, 0, 1038, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 1124, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 1067,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 1068, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 585, 1126, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 1031, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 1069, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 1070, 521,
	1071, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 1032, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 0, 1114, 0, 1132, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 1122, 0, 1120, 1034, 0, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 1033, 0, 274, 554,
	555, 556, 0, 275, 276, 1040, 0, 1021, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 1024, 1022,
	1023, 1030, 1026, 1025, 1029, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1065, 1066, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 564, 565, 341, 342, 0, 343,
	1072, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	1035, 1036, 1039, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	1077, 358, 571, 572, 0, 573, 0, 360, 361, 1079,
	1037, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 1118, 372, 374, 373,
	0, 375, 1073, 1082, 376, 377, 1083, 0, 378, 379,
	380, 1028, 1027, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 0, 250, 1086, 409, 410,
	0, 1038, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 1124, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 1067, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	1068, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 585, 1126, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 1031, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 1069, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 1070, 521, 1071, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 1032, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 0, 1132, 0,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 1122, 1034,
	1120, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 1033, 0,
	274, 554, 555, 556, 0, 275, 276, 1040, 0, 1021,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	1024, 1022, 1023, 1030, 1026, 1025, 1029, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1065, 1066, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 564, 565, 341, 342,
	0, 343, 1072, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 1035, 1036, 1039, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 1077, 358, 571, 572, 0, 573, 0, 360,
	361, 1079, 1037, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 1118, 372,
	374, 373, 0, 375, 1073, 1082, 376, 377, 1083, 0,
	378, 379, 380, 1028, 1027, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 0, 250, 1086,
	409, 410, 0, 1038, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 1124, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 1067, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 1068, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 585, 1126, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 1031, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 1069, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 1070, 521, 1071, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 1032, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 0,
	1132, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	1122, 1034, 1120, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	1033, 0, 274, 554, 555, 556, 0, 275, 276, 1040,
	0, 1021, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 1024, 1022, 1023, 1030, 1026, 1025, 1029, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1065, 1066, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 564, 565,
	341, 342, 0, 343, 1072, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 1035, 1036, 1039, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 1077, 358, 571, 572, 0, 573,
	0, 360, 361, 1079, 1037, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 1073, 1082, 376, 377,
	1083, 0, 378, 379, 380, 1028, 1027, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 0,
	250, 1086, 409, 410, 0, 1038, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 1067, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 1068, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 585,
	1126, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	1031, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 1069,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 1070, 521, 1071, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 1032, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 0, 956, 0, 1320, 543, 544, 599, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 1702, 548, 0, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 1286, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 1077, 358,
	571, 572, 0, 573, 0, 360, 361, 1079, 574, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 1082, 376, 377, 1083, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 0, 0, 1086, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 212, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 214,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 1474, 596, 597,
	0, 541, 540, 542, 598, 0, 0, 0, 206, 543,
	544, 599, 545, 546, 547, 0, 207, 0, 0, 0,
	1471, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 1286, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 1077, 358, 571, 572,
	0, 573, 0, 360, 361, 1079, 574, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 1082,
	376, 377, 1083, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 0, 0, 1086, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 212, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 214, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 1474, 596, 597, 0, 541,
	540, 542, 598, 0, 0, 0, 206, 543, 544, 599,
	545, 546, 547, 0, 207, 0, 0, 0, 0, 0,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 1286, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 1077, 358, 571, 572, 0, 573,
	0, 360, 361, 1079, 574, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 1082, 376, 377,
	1083, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 0,
	0, 1086, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 1320, 1319, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1496, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 1074,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 1286, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1075, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 1076, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 1078,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	0, 356, 357, 359, 0, 1077, 358, 571, 572, 0,
	573, 0, 360, 361, 1079, 574, 1080, 362, 363, 364,
	1081, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 1082, 376,
	377, 1083, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 1084, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 1085, 400,
	0, 0, 1086, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 1087, 422, 1088, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 1089, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 1090, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 0, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 1320, 1999, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 3225, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	1074, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 1286, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1075, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 1076, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	1078, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 1077, 358, 571, 572,
	0, 573, 0, 360, 361, 1079, 574, 1080, 362, 363,
	364, 1081, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 1998, 374, 373, 0, 375, 575, 1082,
	376, 377, 1083, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 1084, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 1085,
	400, 0, 0, 1086, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 1087, 422, 1088, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 1089, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 1090, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 1320, 1319, 0, 0, 0, 0, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 1496, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 1286, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 0, 356, 357, 359, 0, 1077, 358, 571,
	572, 0, 573, 0, 360, 361, 1079, 574, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	1082, 376, 377, 1083, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 0, 0, 1086, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 1132, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1034, 0, 1480, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 1033, 0, 274, 554, 555, 556,
	0, 275, 276, 1040, 0, 1021, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 1024, 1022, 1023, 1030,
	1026, 1025, 1029, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1065, 1066,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 564, 565, 341, 342, 0, 343, 1072, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 1035, 1036,
	1039, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 1077, 358,
	571, 572, 0, 573, 0, 360, 361, 1079, 1037, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	1073, 1082, 376, 377, 1083, 0, 378, 379, 380, 1028,
	1027, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 0, 250, 1086, 409, 410, 0, 1038,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 1067, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 1068, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 1031, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 1069, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	1070, 521, 1071, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	1032, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 956, 0, 245, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 0, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	212, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 214, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	1474, 596, 597, 245, 541, 540, 542, 598, 0, 0,
	0, 206, 543, 544, 599, 545, 546, 547, 0, 207,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 176, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 250, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 0, 1414, 0, 245, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 1817, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 250, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 0, 245,
	2735, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1418,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 0,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 245, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 4289, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 0, 245, 0, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 3168, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 250, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 0, 245,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1418,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 0,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 245, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 2706, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 0, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 0, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 245, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 3326,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	0, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 0, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 0, 541, 540,
	542, 598, 0, 802, 0, 685, 543, 544, 599, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 2102, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 692, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 800,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	690, 510, 511, 512, 513, 691, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 0, 683, 0, 685,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 695, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	692, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 250,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 690, 510, 511, 512, 513, 691,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 1854, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 695, 0, 0, 0,
	0, 259, 260, 1074, 261, 262, 263, 264, 265, 0,
	1860, 0, 266, 1850, 267, 1866, 0, 1873, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 1876, 1877,
	0, 0, 275, 276, 0, 0, 1286, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1075, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 1057, 304,
	1864, 1863, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1042, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 1862, 0, 0, 0, 337, 0, 338, 0, 0,
	1076, 339, 340, 1871, 1872, 341, 342, 0, 343, 0,
	0, 0, 344, 0, 345, 346, 347, 348, 349, 0,
	0, 0, 412, 1078, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 0, 356, 357, 359, 0, 1077,
	358, 1857, 1858, 0, 1853, 0, 360, 361, 1079, 0,
	1080, 362, 363, 364, 1081, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 0, 1082, 376, 377, 1083, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	1084, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 1085, 400, 0, 0, 1086, 409, 410, 0,
	0, 411, 1865, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 0, 1087,
	422, 1088, 0, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 1847, 1848, 0,
	435, 0, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 1861, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 1089,
	462, 463, 464, 465, 0, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 1090, 490, 491, 492, 493, 494, 495, 1859, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 1875,
	502, 503, 504, 505, 0, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 1867, 1868, 1869, 1870, 0, 526, 0, 518, 519,
	520, 0, 521, 0, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 0, 1851,
	1874, 0, 541, 540, 542, 0, 0, 0, 1320, 1319,
	543, 544, 0, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 1841, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 1286,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	0, 0, 0, 0, 0, 0, 2670, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 1077, 358, 571, 572, 0, 573, 0, 360,
	361, 1079, 574, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 1082, 376, 377, 1083, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 0, 0, 1086,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 2671, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 1320,
	1319, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	1286, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1075, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 1077, 358, 571, 572, 0, 573, 0,
	360, 361, 1079, 574, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 1082, 376, 377, 1083,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 0, 0,
	1086, 409, 410, 3496, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 685, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 692, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	690, 510, 511, 512, 513, 691, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 1320, 1319, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 1286, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	1077, 358, 571, 572, 0, 573, 0, 360, 361, 1079,
	574, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 1082, 376, 377, 1083, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 0, 0, 1086, 409, 410,
	3140, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 685, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 692, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 250, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 2142, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 690, 510, 511,
	512, 513, 691, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 685, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 695,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 692, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 250, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 1880, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 690, 510,
	511, 512, 513, 691, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 1879, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 685, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	695, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 692, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 250, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 1833, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 690,
	510, 511, 512, 513, 691, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 1832, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 1524, 0, 1320, 1319, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 695, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 1286, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	1523, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 1077, 358, 571, 572, 0, 573, 0, 360, 361,
	1079, 574, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 1082, 376, 377, 1083, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 0, 0, 1086, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 1522, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 1521, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 1464, 0,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 1286, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 1463, 569, 570, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 1077, 358, 571, 572, 0, 573,
	0, 360, 361, 1079, 574, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 1082, 376, 377,
	1083, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 0,
	0, 1086, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 1393, 0, 1320, 1319, 0, 0, 0, 0, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 1074, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 1286, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1075, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 1076, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 1392, 569, 570,
	412, 1078, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 0, 356, 357, 359, 0, 1077, 358, 571,
	572, 0, 573, 0, 360, 361, 1079, 574, 1080, 362,
	363, 364, 1081, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	1082, 376, 377, 1083, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 1084, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	1085, 400, 0, 0, 1086, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 1087, 422, 1088,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 1089, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 1090,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 1355, 0, 1320, 1319, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 1074, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 1286, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1075, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 1076, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 1078, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	1077, 358, 571, 572, 0, 573, 0, 360, 361, 1079,
	574, 1080, 362, 363, 364, 1081, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 1082, 376, 377, 1083, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 1084, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 1085, 400, 0, 0, 1086, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	1087, 422, 1088, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	1089, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 1090, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 1315, 0, 1320,
	1319, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 1074, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	1286, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1075, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 1076, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 1314, 569, 570, 412, 1078, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 1077, 358, 571, 572, 0, 573, 0,
	360, 361, 1079, 574, 1080, 362, 363, 364, 1081, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 1082, 376, 377, 1083,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 1084, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 1085, 400, 0, 0,
	1086, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 1087, 422, 1088, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 1089, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 1090, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 1074, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 1286, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1075,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 1076, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 1078, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 1077, 358, 571, 572, 0, 573,
	0, 360, 361, 1079, 574, 1080, 362, 363, 364, 1081,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 1082, 376, 377,
	1083, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 1084, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 1085, 400, 0,
	0, 1086, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 1087, 422, 1088, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 1089, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 1090, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 250, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 1320, 1319, 0,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 695, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 1074, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 1286, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1075, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 1889, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 1076, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 1078, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 1077, 358, 571, 572, 0, 573, 0, 360, 361,
	1079, 574, 1080, 362, 363, 364, 1081, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 1082, 376, 377, 1083, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 1084, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 1085, 400, 0, 0, 1086, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 1087, 422, 1088, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 1089, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 1090, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 1320, 1319,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 1074, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 1286,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1075, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 1076, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 1078, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 1077, 358, 571, 572, 0, 573, 0, 360,
	361, 1079, 574, 1080, 362, 363, 364, 1081, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 1082, 376, 377, 1083, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 1084, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 1085, 400, 0, 0, 1086,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 1087, 422, 1088, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 1089, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 1090, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 1320, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 1074, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 1286, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1075, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 1076,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 1078, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 1077, 358,
	571, 572, 0, 573, 0, 360, 361, 1079, 574, 1080,
	362, 363, 364, 1081, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 1082, 376, 377, 1083, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 1084,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 1085, 400, 0, 0, 1086, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 1087, 422,
	1088, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 1089, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	1090, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 2541, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 2538, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 2545, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 2748, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 2544, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 2745,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 2747, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	2744, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 2543,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 2746, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 2541, 275, 276, 557, 0, 0, 2535, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 2538, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 2545, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 2544,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	2534, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 2543, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 2542, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 1591, 0, 245,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 250,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 1594, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 1592, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 1593, 540, 542, 598,
	1290, 0, 245, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 1292, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 250, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 1124, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 1287, 0, 245, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 1289,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	1124, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 1193, 0, 245, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 1195, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 250, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 1124, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 631,
	0, 245, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 630, 255, 256, 620, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 623, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 624, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	0, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 0, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 625, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 0, 541, 540,
	542, 598, 619, 0, 245, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 620, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 623,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 624, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 625, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	250, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 1124, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 3103, 400, 0, 250, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 2677, 0, 245,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 2676, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 250,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 541, 540, 542, 598,
	2115, 0, 245, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 250, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 245, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 250, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 2031, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 2037,
	0, 245, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 2036, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 250, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 0, 541, 540,
	542, 598, 2024, 0, 245, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 2026, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 250, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 1995, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 249,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	250, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 1124, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 1456, 0, 245, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 1455, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 250, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 1447, 0, 245, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	1446, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 249, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 250, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 1444, 0, 245,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 1443, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 250,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 541, 540, 542, 598,
	1439, 0, 245, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 1438, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 249, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 250, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 1396, 0, 245, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 1308, 0, 245, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 249, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 250, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 1301,
	0, 245, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 1303, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 250, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 0, 541, 540,
	542, 598, 601, 0, 245, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 249, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 250, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 236, 0, 245, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 250, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 245, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 250, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 245,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 623, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 624, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 0,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 625, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 245, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 2149, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 245, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 2147, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	249, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 250, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 245, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 2145, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 249, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 250, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 245, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 2080, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 249, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 250, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 245,
	541, 540, 542, 598, 0, 0, 0, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 2074, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 249, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 250,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 245, 541, 540, 542, 598,
	0, 0, 0, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 2043,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 249, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 250, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 789, 0, 245, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 788, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 787, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 245, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 2748, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 3755, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 653, 0, 245, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 1164, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 1162, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 654, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 0, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 650, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 1165, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 649, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 653, 0,
	245, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 1164, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 1162, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 654, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 650, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 1165, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 649, 590, 591, 592,
	0, 526, 0, 518, 1163, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 610, 0, 245, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 609, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 0, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 0, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	608, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 245, 2735, 0, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 245, 3765, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 0, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 0, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 245, 541, 540, 542, 598, 0, 0, 0, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 3470, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	0, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 0, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 245, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	2455, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 0, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 245, 2735,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 2732, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 245, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 2125, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	0, 541, 540, 542, 598, 2113, 0, 245, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 0, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 0, 541, 540, 542, 598, 653, 0,
	245, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 643, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 654, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 650, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 1479, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 649, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 0, 541, 540, 542,
	598, 1460, 0, 245, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 1459, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 0, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 0, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 1453, 0, 245, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	1452, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 1402, 0, 245,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 1401, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 0,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 474, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 541, 540, 542, 598,
	1385, 0, 245, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 1383, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 0, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 1379, 0, 245, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 0, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 0, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 1311, 0, 245, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 0, 541, 540, 542, 598, 1295,
	0, 245, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 549, 550, 0, 266, 551,
	267, 552, 0, 553, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 554, 555, 556, 0, 275, 276,
	557, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 558, 559, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 560, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 561, 562, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 563, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 564,
	565, 341, 342, 0, 343, 566, 0, 567, 344, 0,
	345, 346, 347, 348, 349, 568, 569, 570, 412, 0,
	350, 351, 0, 352, 353, 354, 355, 0, 0, 0,
	0, 356, 357, 359, 0, 0, 358, 571, 572, 0,
	573, 0, 360, 361, 0, 574, 0, 362, 363, 364,
	0, 365, 0, 0, 0, 366, 367, 368, 369, 370,
	371, 0, 372, 374, 373, 0, 375, 575, 0, 376,
	377, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 0, 385, 386, 388, 390, 387, 389, 394,
	391, 392, 393, 396, 0, 395, 0, 397, 398, 399,
	404, 406, 407, 402, 403, 405, 408, 401, 0, 400,
	0, 0, 0, 409, 410, 0, 576, 411, 577, 413,
	414, 0, 0, 415, 0, 0, 0, 417, 418, 419,
	0, 0, 420, 421, 578, 0, 422, 0, 579, 423,
	424, 416, 425, 426, 427, 428, 429, 430, 431, 432,
	0, 433, 434, 580, 581, 582, 435, 583, 436, 437,
	0, 438, 0, 439, 440, 441, 442, 443, 444, 445,
	584, 447, 446, 448, 0, 449, 0, 0, 0, 0,
	0, 450, 0, 452, 453, 454, 451, 455, 456, 457,
	458, 0, 459, 460, 461, 0, 462, 463, 464, 465,
	585, 466, 0, 467, 468, 474, 475, 469, 470, 476,
	477, 478, 479, 480, 0, 482, 483, 481, 484, 485,
	486, 0, 487, 471, 472, 488, 489, 0, 490, 491,
	492, 493, 494, 495, 586, 0, 496, 0, 497, 498,
	499, 500, 473, 501, 506, 587, 502, 503, 504, 505,
	588, 0, 508, 509, 0, 507, 0, 510, 511, 512,
	513, 514, 515, 328, 516, 0, 517, 589, 590, 591,
	592, 0, 526, 0, 518, 519, 520, 593, 521, 594,
	0, 522, 523, 524, 525, 0, 527, 528, 0, 0,
	529, 530, 531, 533, 534, 532, 535, 0, 536, 0,
	0, 537, 538, 539, 595, 596, 597, 245, 541, 540,
	542, 598, 0, 0, 0, 0, 543, 544, 599, 545,
	546, 547, 0, 0, 251, 252, 253, 254, 255, 256,
	1145, 257, 258, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 549, 550, 0, 266, 551, 267, 552, 0, 553,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	554, 555, 556, 0, 275, 276, 557, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 558, 559, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	560, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 561, 562, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 563, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 564, 565, 341, 342, 0,
	343, 566, 0, 567, 344, 0, 345, 346, 347, 348,
	349, 568, 569, 570, 412, 0, 350, 351, 0, 352,
	353, 354, 355, 0, 0, 0, 0, 356, 357, 359,
	0, 0, 358, 571, 572, 0, 573, 0, 360, 361,
	0, 574, 0, 362, 363, 364, 0, 365, 0, 0,
	0, 366, 367, 368, 369, 370, 371, 0, 372, 374,
	373, 0, 375, 575, 0, 376, 377, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 0, 385,
	386, 388, 390, 387, 389, 394, 391, 392, 393, 396,
	0, 395, 0, 397, 398, 399, 404, 406, 407, 402,
	403, 405, 408, 401, 0, 400, 0, 0, 0, 409,
	410, 0, 576, 411, 577, 413, 414, 0, 0, 415,
	0, 0, 0, 417, 418, 419, 0, 0, 420, 421,
	578, 0, 422, 0, 579, 423, 424, 416, 425, 426,
	427, 428, 429, 430, 431, 432, 0, 433, 434, 580,
	581, 582, 435, 583, 436, 437, 0, 438, 0, 439,
	440, 441, 442, 443, 444, 445, 584, 447, 446, 448,
	0, 449, 0, 0, 0, 0, 0, 450, 0, 452,
	453, 454, 451, 455, 456, 457, 458, 0, 459, 460,
	461, 0, 462, 463, 464, 465, 585, 466, 0, 467,
	468, 474, 475, 469, 470, 476, 477, 478, 479, 480,
	0, 482, 483, 481, 484, 485, 486, 0, 487, 471,
	472, 488, 489, 0, 490, 491, 492, 493, 494, 495,
	586, 0, 496, 0, 497, 498, 499, 500, 473, 501,
	506, 587, 502, 503, 504, 505, 588, 0, 508, 509,
	0, 507, 0, 510, 511, 512, 513, 514, 515, 328,
	516, 0, 517, 589, 590, 591, 592, 0, 526, 0,
	518, 519, 520, 593, 521, 594, 0, 522, 523, 524,
	525, 0, 527, 528, 0, 0, 529, 530, 531, 533,
	534, 532, 535, 0, 536, 0, 0, 537, 538, 539,
	595, 596, 597, 245, 541, 540, 542, 598, 0, 0,
	0, 0, 543, 544, 599, 545, 546, 547, 0, 0,
	251, 252, 253, 254, 255, 256, 659, 257, 258, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 549, 550, 0,
	266, 551, 267, 552, 0, 553, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 554, 555, 556, 0,
	275, 276, 557, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 558, 559,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 560, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 561, 562, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 563,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 564, 565, 341, 342, 0, 343, 566, 0, 567,
	344, 0, 345, 346, 347, 348, 349, 568, 569, 570,
	412, 0, 350, 351, 0, 352, 353, 354, 355, 0,
	0, 0, 0, 356, 357, 359, 0, 0, 358, 571,
	572, 0, 573, 0, 360, 361, 0, 574, 0, 362,
	363, 364, 0, 365, 0, 0, 0, 366, 367, 368,
	369, 370, 371, 0, 372, 374, 373, 0, 375, 575,
	0, 376, 377, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 0, 385, 386, 388, 390, 387,
	389, 394, 391, 392, 393, 396, 0, 395, 0, 397,
	398, 399, 404, 406, 407, 402, 403, 405, 408, 401,
	0, 400, 0, 0, 0, 409, 410, 0, 576, 411,
	577, 413, 414, 0, 0, 415, 0, 0, 0, 417,
	418, 419, 0, 0, 420, 421, 578, 0, 422, 0,
	579, 423, 424, 416, 425, 426, 427, 428, 429, 430,
	431, 432, 0, 433, 434, 580, 581, 582, 435, 583,
	436, 437, 0, 438, 0, 439, 440, 441, 442, 443,
	444, 445, 584, 447, 446, 448, 0, 449, 0, 0,
	0, 0, 0, 450, 0, 452, 453, 454, 451, 455,
	456, 457, 458, 0, 459, 460, 461, 0, 462, 463,
	464, 465, 585, 466, 0, 467, 468, 474, 475, 469,
	470, 476, 477, 478, 479, 480, 0, 482, 483, 481,
	484, 485, 486, 0, 487, 471, 472, 488, 489, 0,
	490, 491, 492, 493, 494, 495, 586, 0, 496, 0,
	497, 498, 499, 500, 473, 501, 506, 587, 502, 503,
	504, 505, 588, 0, 508, 509, 0, 507, 0, 510,
	511, 512, 513, 514, 515, 328, 516, 0, 517, 589,
	590, 591, 592, 0, 526, 0, 518, 519, 520, 593,
	521, 594, 0, 522, 523, 524, 525, 0, 527, 528,
	0, 0, 529, 530, 531, 533, 534, 532, 535, 0,
	536, 0, 0, 537, 538, 539, 595, 596, 597, 0,
	541, 540, 542, 598, 653, 0, 245, 0, 543, 544,
	599, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 643, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 641, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	642, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	654, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 644, 466, 0, 467, 468,
	474, 475, 469, 470, 650, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 645, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 649, 590, 591, 592, 0, 526, 0, 518,
	647, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 635, 0, 245,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 549, 550, 0, 266, 551, 267, 552,
	0, 553, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 554, 555, 556, 0, 275, 276, 557, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 558, 559, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 560, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 561, 562, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 563, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 564, 565, 341,
	342, 0, 343, 566, 0, 567, 344, 0, 345, 346,
	347, 348, 349, 568, 569, 570, 412, 0, 350, 351,
	0, 352, 353, 354, 355, 0, 0, 0, 0, 356,
	357, 359, 0, 0, 358, 571, 572, 0, 573, 0,
	360, 361, 0, 574, 0, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 367, 368, 369, 370, 371, 0,
	372, 374, 373, 0, 375, 575, 0, 376, 377, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	0, 385, 386, 388, 390, 387, 389, 394, 391, 392,
	393, 396, 0, 395, 0, 397, 398, 399, 404, 406,
	407, 402, 403, 405, 408, 401, 0, 400, 0, 0,
	0, 409, 410, 0, 576, 411, 577, 413, 414, 0,
	0, 415, 0, 0, 0, 417, 418, 419, 0, 0,
	420, 421, 578, 0, 422, 0, 579, 423, 424, 416,
	425, 426, 427, 428, 429, 430, 431, 432, 0, 433,
	434, 580, 581, 582, 435, 583, 436, 437, 0, 438,
	0, 439, 440, 441, 442, 443, 444, 445, 584, 447,
	446, 448, 0, 449, 0, 0, 0, 0, 0, 450,
	0, 452, 453, 454, 451, 455, 456, 457, 458, 0,
	459, 460, 461, 0, 462, 463, 464, 465, 585, 466,
	0, 467, 468, 636, 475, 469, 470, 476, 477, 478,
	479, 480, 0, 482, 483, 481, 484, 485, 486, 0,
	487, 471, 472, 488, 489, 0, 490, 491, 492, 493,
	494, 495, 586, 0, 496, 0, 497, 498, 499, 500,
	473, 501, 506, 587, 502, 503, 504, 505, 588, 0,
	508, 509, 0, 507, 0, 510, 511, 512, 513, 514,
	515, 328, 516, 0, 517, 589, 590, 591, 592, 0,
	526, 0, 518, 519, 520, 593, 521, 594, 0, 522,
	523, 524, 525, 0, 527, 528, 0, 0, 529, 530,
	531, 533, 534, 532, 535, 0, 536, 0, 0, 537,
	538, 539, 595, 596, 597, 0, 541, 540, 542, 598,
	633, 0, 245, 0, 543, 544, 599, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 0, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 0, 541,
	540, 542, 598, 627, 0, 245, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 549,
	550, 0, 266, 551, 267, 552, 0, 553, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 554, 555,
	556, 0, 275, 276, 557, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	558, 559, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 560, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 561,
	562, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 563, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 564, 565, 341, 342, 0, 343, 566,
	0, 567, 344, 0, 345, 346, 347, 348, 349, 568,
	569, 570, 412, 0, 350, 351, 0, 352, 353, 354,
	355, 0, 0, 0, 0, 356, 357, 359, 0, 0,
	358, 571, 572, 0, 573, 0, 360, 361, 0, 574,
	0, 362, 363, 364, 0, 365, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 372, 374, 373, 0,
	375, 575, 0, 376, 377, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 0, 385, 386, 388,
	390, 387, 389, 394, 391, 392, 393, 396, 0, 395,
	0, 397, 398, 399, 404, 406, 407, 402, 403, 405,
	408, 401, 0, 400, 0, 0, 0, 409, 410, 0,
	576, 411, 577, 413, 414, 0, 0, 415, 0, 0,
	0, 417, 418, 419, 0, 0, 420, 421, 578, 0,
	422, 0, 579, 423, 424, 416, 425, 426, 427, 428,
	429, 430, 431, 432, 0, 433, 434, 580, 581, 582,
	435, 583, 436, 437, 0, 438, 0, 439, 440, 441,
	442, 443, 444, 445, 584, 447, 446, 448, 0, 449,
	0, 0, 0, 0, 0, 450, 0, 452, 453, 454,
	451, 455, 456, 457, 458, 0, 459, 460, 461, 0,
	462, 463, 464, 465, 585, 466, 0, 467, 468, 474,
	475, 469, 470, 476, 477, 478, 479, 480, 0, 482,
	483, 481, 484, 485, 486, 0, 487, 471, 472, 488,
	489, 0, 490, 491, 492, 493, 494, 495, 586, 0,
	496, 0, 497, 498, 499, 500, 473, 501, 506, 587,
	502, 503, 504, 505, 588, 0, 508, 509, 0, 507,
	0, 510, 511, 512, 513, 514, 515, 328, 516, 0,
	517, 589, 590, 591, 592, 0, 526, 0, 518, 519,
	520, 593, 521, 594, 0, 522, 523, 524, 525, 0,
	527, 528, 0, 0, 529, 530, 531, 533, 534, 532,
	535, 0, 536, 0, 0, 537, 538, 539, 595, 596,
	597, 0, 541, 540, 542, 598, 605, 0, 245, 0,
	543, 544, 599, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 568, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 245, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 568, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 3186, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	3134, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 245, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 3075, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 0, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 487, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 245, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 3073, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 245, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 3059, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 2686, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	447, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 344, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 427,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 443, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 466, 0, 467, 468,
	636, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 245, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 548, 0, 2060, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 549, 550, 0, 266,
	551, 267, 552, 0, 553, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 554, 555, 556, 0, 275,
	276, 557, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 558, 559, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 560, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 561, 562, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 563, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	564, 565, 341, 342, 0, 343, 566, 0, 567, 344,
	0, 345, 346, 347, 348, 349, 568, 569, 570, 412,
	0, 350, 351, 0, 352, 353, 354, 355, 0, 0,
	0, 0, 356, 357, 359, 0, 0, 358, 571, 572,
	0, 573, 0, 360, 361, 0, 574, 0, 362, 363,
	364, 0, 365, 0, 0, 0, 366, 367, 368, 369,
	370, 371, 0, 372, 374, 373, 0, 375, 575, 0,
	376, 377, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 0, 385, 386, 388, 390, 387, 389,
	394, 391, 392, 393, 396, 0, 395, 0, 397, 398,
	399, 404, 406, 407, 402, 403, 405, 408, 401, 0,
	400, 0, 0, 0, 409, 410, 0, 576, 411, 577,
	413, 414, 0, 0, 415, 0, 0, 0, 417, 418,
	419, 0, 0, 420, 421, 578, 0, 422, 0, 579,
	423, 424, 416, 425, 426, 427, 428, 429, 430, 431,
	432, 0, 433, 434, 580, 581, 582, 435, 583, 436,
	437, 0, 438, 0, 439, 440, 441, 442, 443, 444,
	445, 584, 447, 446, 448, 0, 449, 0, 0, 0,
	0, 0, 450, 0, 452, 453, 454, 451, 455, 456,
	457, 458, 0, 459, 460, 461, 0, 462, 463, 464,
	465, 585, 466, 0, 467, 468, 474, 475, 469, 470,
	476, 477, 478, 479, 480, 0, 482, 483, 481, 484,
	485, 486, 0, 0, 471, 472, 488, 489, 0, 490,
	491, 492, 493, 494, 495, 586, 0, 496, 0, 497,
	498, 499, 500, 473, 501, 506, 587, 502, 503, 504,
	505, 588, 0, 508, 509, 0, 507, 0, 510, 511,
	512, 513, 514, 515, 328, 516, 0, 517, 589, 590,
	591, 592, 0, 526, 0, 518, 519, 520, 593, 521,
	594, 0, 522, 523, 524, 525, 0, 527, 528, 0,
	0, 529, 530, 531, 533, 534, 532, 535, 0, 536,
	0, 0, 537, 538, 539, 595, 596, 597, 245, 541,
	540, 542, 598, 0, 0, 0, 0, 543, 544, 599,
	545, 546, 547, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 549, 550, 0, 266, 551, 267, 552, 0,
	553, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 554, 555, 556, 0, 275, 276, 557, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 558, 559, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 560, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 561, 562, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 563, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 564, 565, 341, 342,
	0, 343, 566, 0, 567, 344, 0, 345, 346, 347,
	348, 349, 1424, 569, 570, 412, 0, 350, 351, 0,
	352, 353, 354, 355, 0, 0, 0, 0, 356, 357,
	359, 0, 0, 358, 571, 572, 0, 573, 0, 360,
	361, 0, 574, 0, 362, 363, 364, 0, 365, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 372,
	374, 373, 0, 375, 575, 0, 376, 377, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 0,
	385, 386, 388, 390, 387, 389, 394, 391, 392, 393,
	396, 0, 395, 0, 397, 398, 399, 404, 406, 407,
	402, 403, 405, 408, 401, 0, 400, 0, 0, 0,
	409, 410, 0, 576, 411, 577, 413, 414, 0, 0,
	415, 0, 0, 0, 417, 418, 419, 0, 0, 420,
	421, 578, 0, 422, 0, 579, 423, 424, 416, 425,
	426, 427, 428, 429, 430, 431, 432, 0, 433, 434,
	580, 581, 582, 435, 583, 436, 437, 0, 438, 0,
	439, 440, 441, 442, 443, 444, 445, 584, 447, 446,
	448, 0, 449, 0, 0, 0, 0, 0, 450, 0,
	452, 453, 454, 451, 455, 456, 457, 458, 0, 459,
	460, 461, 0, 462, 463, 464, 465, 585, 466, 0,
	467, 468, 474, 475, 469, 470, 476, 477, 478, 479,
	480, 0, 482, 483, 481, 484, 485, 486, 0, 487,
	471, 472, 488, 489, 0, 490, 491, 492, 493, 494,
	495, 586, 0, 496, 0, 497, 498, 499, 500, 473,
	501, 506, 587, 502, 503, 504, 505, 588, 0, 508,
	509, 0, 507, 0, 510, 511, 512, 513, 514, 515,
	328, 516, 0, 517, 589, 590, 591, 592, 0, 526,
	0, 518, 519, 520, 593, 521, 594, 0, 522, 523,
	524, 525, 0, 527, 528, 0, 0, 529, 530, 531,
	533, 534, 532, 535, 0, 536, 0, 0, 537, 538,
	539, 595, 596, 597, 245, 541, 540, 542, 598, 0,
	0, 0, 0, 543, 544, 599, 545, 546, 547, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 549, 550,
	0, 266, 551, 267, 552, 0, 553, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 554, 555, 556,
	0, 275, 276, 557, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 558,
	559, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 560, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 561, 562,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	563, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 564, 565, 341, 342, 0, 343, 566, 0,
	567, 344, 0, 345, 346, 347, 348, 349, 1362, 569,
	570, 412, 0, 350, 351, 0, 352, 353, 354, 355,
	0, 0, 0, 0, 356, 357, 359, 0, 0, 358,
	571, 572, 0, 573, 0, 360, 361, 0, 574, 0,
	362, 363, 364, 0, 365, 0, 0, 0, 366, 367,
	368, 369, 370, 371, 0, 372, 374, 373, 0, 375,
	575, 0, 376, 377, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 0, 385, 386, 388, 390,
	387, 389, 394, 391, 392, 393, 396, 0, 395, 0,
	397, 398, 399, 404, 406, 407, 402, 403, 405, 408,
	401, 0, 400, 0, 0, 0, 409, 410, 0, 576,
	411, 577, 413, 414, 0, 0, 415, 0, 0, 0,
	417, 418, 419, 0, 0, 420, 421, 578, 0, 422,
	0, 579, 423, 424, 416, 425, 426, 427, 428, 429,
	430, 431, 432, 0, 433, 434, 580, 581, 582, 435,
	583, 436, 437, 0, 438, 0, 439, 440, 441, 442,
	443, 444, 445, 584, 447, 446, 448, 0, 449, 0,
	0, 0, 0, 0, 450, 0, 452, 453, 454, 451,
	455, 456, 457, 458, 0, 459, 460, 461, 0, 462,
	463, 464, 465, 585, 466, 0, 467, 468, 474, 475,
	469, 470, 476, 477, 478, 479, 480, 0, 482, 483,
	481, 484, 485, 486, 0, 487, 471, 472, 488, 489,
	0, 490, 491, 492, 493, 494, 495, 586, 0, 496,
	0, 497, 498, 499, 500, 473, 501, 506, 587, 502,
	503, 504, 505, 588, 0, 508, 509, 0, 507, 0,
	510, 511, 512, 513, 514, 515, 328, 516, 0, 517,
	589, 590, 591, 592, 0, 526, 0, 518, 519, 520,
	593, 521, 594, 0, 522, 523, 524, 525, 0, 527,
	528, 0, 0, 529, 530, 531, 533, 534, 532, 535,
	0, 536, 0, 0, 537, 538, 539, 595, 596, 597,
	245, 541, 540, 542, 598, 0, 0, 0, 0, 543,
	544, 599, 545, 546, 547, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 549, 550, 0, 266, 551, 267,
	552, 0, 553, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 554, 555, 556, 0, 275, 276, 557,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 558, 559, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 560, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 561, 562, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 563, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 564, 565,
	341, 342, 0, 343, 566, 0, 567, 344, 0, 345,
	346, 347, 348, 349, 568, 569, 570, 412, 0, 350,
	351, 0, 352, 353, 354, 355, 0, 0, 0, 0,
	356, 357, 359, 0, 0, 358, 571, 572, 0, 573,
	0, 360, 361, 0, 574, 0, 362, 363, 364, 0,
	365, 0, 0, 0, 366, 367, 368, 369, 370, 371,
	0, 372, 374, 373, 0, 375, 575, 0, 376, 377,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 0, 385, 386, 388, 390, 387, 389, 394, 391,
	392, 393, 396, 0, 395, 0, 397, 398, 399, 404,
	406, 407, 402, 403, 405, 408, 401, 0, 400, 0,
	0, 0, 409, 410, 0, 576, 411, 577, 413, 414,
	0, 0, 415, 0, 0, 0, 417, 418, 419, 0,
	0, 420, 421, 578, 0, 422, 0, 579, 423, 424,
	416, 425, 426, 427, 428, 429, 430, 431, 432, 0,
	433, 434, 580, 581, 582, 435, 583, 436, 437, 0,
	438, 0, 439, 440, 441, 442, 443, 444, 445, 584,
	1097, 446, 448, 0, 449, 0, 0, 0, 0, 0,
	450, 0, 452, 453, 454, 451, 455, 456, 457, 458,
	0, 459, 460, 461, 0, 462, 463, 464, 465, 585,
	466, 0, 467, 468, 474, 475, 469, 470, 476, 477,
	478, 479, 480, 0, 482, 483, 481, 484, 485, 486,
	0, 487, 471, 472, 488, 489, 0, 490, 491, 492,
	493, 494, 495, 586, 0, 496, 0, 497, 498, 499,
	500, 473, 501, 506, 587, 502, 503, 504, 505, 588,
	0, 508, 509, 0, 507, 0, 510, 511, 512, 513,
	514, 515, 328, 516, 0, 517, 589, 590, 591, 592,
	0, 526, 0, 518, 519, 520, 593, 521, 594, 0,
	522, 523, 524, 525, 0, 527, 528, 0, 0, 529,
	530, 531, 533, 534, 532, 535, 0, 536, 0, 0,
	537, 538, 539, 595, 596, 597, 245, 541, 540, 542,
	598, 0, 0, 0, 0, 543, 544, 599, 545, 546,
	547, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	549, 550, 0, 266, 551, 267, 552, 0, 553, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 554,
	555, 556, 0, 275, 276, 557, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 558, 559, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 560,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	561, 562, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 563, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 564, 565, 341, 342, 0, 343,
	566, 0, 567, 0, 0, 345, 346, 347, 348, 349,
	568, 569, 570, 412, 0, 350, 351, 0, 352, 353,
	354, 355, 0, 0, 0, 0, 356, 357, 359, 0,
	0, 358, 571, 572, 0, 573, 0, 360, 361, 0,
	574, 0, 362, 363, 364, 0, 365, 0, 0, 0,
	366, 367, 368, 369, 370, 371, 0, 372, 374, 373,
	0, 375, 575, 0, 376, 377, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 0, 385, 386,
	388, 390, 387, 389, 394, 391, 392, 393, 396, 0,
	395, 0, 397, 398, 399, 404, 406, 407, 402, 403,
	405, 408, 401, 0, 400, 0, 0, 0, 409, 410,
	0, 576, 411, 577, 413, 414, 0, 0, 415, 0,
	0, 0, 417, 418, 419, 0, 0, 420, 421, 578,
	0, 422, 0, 579, 423, 424, 416, 425, 426, 0,
	428, 429, 430, 431, 432, 0, 433, 434, 580, 581,
	582, 435, 583, 436, 437, 0, 438, 0, 439, 440,
	441, 442, 0, 444, 445, 584, 447, 446, 448, 0,
	449, 0, 0, 0, 0, 0, 450, 0, 452, 453,
	454, 451, 455, 456, 457, 458, 0, 459, 460, 461,
	0, 462, 463, 464, 465, 585, 0, 0, 467, 468,
	474, 475, 469, 470, 476, 477, 478, 479, 480, 0,
	482, 483, 481, 484, 485, 486, 0, 487, 471, 472,
	488, 489, 0, 490, 491, 492, 493, 494, 495, 586,
	0, 496, 0, 497, 498, 499, 500, 473, 501, 506,
	587, 502, 503, 504, 505, 588, 0, 508, 509, 0,
	507, 0, 510, 511, 512, 513, 514, 515, 328, 516,
	0, 517, 589, 590, 591, 592, 0, 526, 0, 518,
	519, 520, 593, 521, 594, 0, 522, 523, 524, 525,
	0, 527, 528, 0, 0, 529, 530, 531, 533, 534,
	532, 535, 0, 536, 0, 0, 537, 538, 539, 595,
	596, 597, 0, 541, 540, 542, 598, 0, 0, 0,
	0, 543, 544, 599, 545, 546, 547, 1636, 1637, 0,
	1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1672, 1667,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1637, 0,
	1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 1672, 1667,
	1658, 0, 0, 0, 0, 0, 1639, 0, 1655, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1662, 1663, 1664, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 1686, 0, 0, 0, 0, 0, 1666, 1668, 1661,
	1662, 1663, 1664, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 1682, 0, 1683, 0, 0, 0, 0,
	0, 0, 1653, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	1674, 1686, 0, 0, 0, 0, 0, 1666, 1668, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 0, 1683, 0, 0, 0, 0,
	0, 0, 1653, 1654, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 1672, 1667, 0,
	0, 1665, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656,
	1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 2895,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656,
	1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645,
	1646, 0, 0, 0, 0, 0, 0, 1676, 0, 2309,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	1659, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671,
	1679, 1680, 1681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1672, 1667, 0, 0, 0,
	1665, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 1638, 1644, 0,
	0, 0, 0, 0, 0, 1677, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 0, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 1661, 1662, 1663, 1664,
	1659, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	1684, 0, 0, 0, 4074, 1676, 0, 0, 1686, 0,
	0, 0, 0, 0, 1666, 1668, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 1683, 0, 0, 0, 0, 0, 0, 1653,
	1654, 0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671,
	1679, 1680, 1681, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 0, 0, 1672, 1667, 0, 1659, 0,
	1665, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 1677, 1673, 1658, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1661, 1662, 1663, 1664,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	1675, 0, 0, 1677, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	0, 0, 0, 0, 3986, 1676, 0, 0, 1686, 0,
	0, 0, 0, 0, 1666, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 1683, 0, 0, 0, 0, 0, 0, 1653,
	1654, 0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671,
	1679, 1680, 1681, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 0, 0, 1672, 1667, 0, 1659, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 1675, 0,
	0, 1685, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649,
	1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 1684, 0,
	0, 0, 3985, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 1673, 1658, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1672, 1667, 0, 0, 0, 1665, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1661, 1662, 1663, 1664,
	0, 0, 0, 0, 0, 1638, 1644, 0, 0, 0,
	0, 0, 0, 1677, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 1686, 0,
	0, 0, 0, 0, 1666, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 1683, 0, 0, 0, 0, 0, 0, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 0, 1661, 1662, 1663, 1664, 1659, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 1675, 0,
	0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649,
	1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 1684, 0,
	0, 0, 3833, 1676, 0, 0, 1686, 0, 0, 0,
	0, 0, 1666, 1668, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	1683, 0, 0, 0, 0, 0, 0, 1653, 1654, 0,
	0, 0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680,
	1681, 0, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 1672, 1667, 0, 1659, 0, 1665, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 1677, 1673, 1658, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1661, 1662, 1663, 1664, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 1675, 0,
	0, 1677, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649,
	1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 0, 0,
	0, 0, 3693, 1676, 0, 0, 1686, 0, 0, 0,
	0, 0, 1666, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	1683, 0, 0, 0, 0, 0, 0, 1653, 1654, 0,
	0, 0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680,
	1681, 0, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 1672, 1667, 0, 1659, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 1675, 0, 0, 1685,
	1650, 1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648,
	1640, 1641, 1642, 1643, 1645, 1646, 1684, 0, 0, 0,
	3636, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1658, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 1667, 0, 0, 0, 1665, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1661, 1662, 1663, 1664, 0, 0,
	0, 0, 0, 1638, 1644, 0, 0, 0, 0, 0,
	0, 1677, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1676, 0, 0, 1686, 0, 0, 0,
	0, 0, 1666, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	1683, 0, 0, 0, 0, 0, 0, 1653, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 1661, 1662, 1663, 1664, 1659, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 1675, 0, 0, 0,
	1650, 1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648,
	1640, 1641, 1642, 1643, 1645, 1646, 1684, 0, 0, 0,
	3635, 1676, 0, 0, 1686, 0, 0, 0, 0, 0,
	1666, 1668, 0, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 1683, 0,
	0, 0, 0, 0, 0, 1653, 1654, 0, 0, 0,
	1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 1672, 1667, 0, 1659, 0, 1665, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 1677, 1673, 1658, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 1663, 1664, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 1675, 0, 0, 1677,
	1650, 1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648,
	1640, 1641, 1642, 1643, 1645, 1646, 0, 0, 0, 0,
	3634, 1676, 0, 0, 1686, 0, 0, 0, 0, 0,
	1666, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 1683, 0,
	0, 0, 0, 0, 0, 1653, 1654, 0, 0, 0,
	1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 1672, 1667, 0, 1659, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 1675, 0, 0, 1685, 1650, 1651,
	1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641,
	1642, 1643, 1645, 1646, 1684, 0, 0, 0, 3331, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 1658, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 1637,
	0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1672,
	1667, 0, 0, 0, 1665, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 1663, 1664, 0, 0, 0, 0,
	0, 1638, 1644, 0, 0, 0, 0, 0, 0, 1677,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 1686, 0, 0, 0, 0, 0,
	1666, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 1683, 0,
	0, 0, 0, 0, 0, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 1659, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 1675, 0, 0, 0, 1650, 1651,
	1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641,
	1642, 1643, 1645, 1646, 1684, 0, 0, 0, 2893, 1676,
	0, 0, 1686, 0, 0, 0, 0, 0, 1666, 1668,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 1683, 0, 0, 0,
	0, 0, 0, 1653, 1654, 0, 0, 0, 1636, 1637,
	0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 1672,
	1667, 0, 1659, 0, 1665, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 1677,
	1673, 1658, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 1675, 0, 0, 1677, 1650, 1651,
	1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641,
	1642, 1643, 1645, 1646, 0, 0, 0, 0, 2892, 1676,
	0, 0, 1686, 0, 0, 0, 0, 0, 1666, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 1683, 0, 0, 0,
	0, 0, 0, 1653, 1654, 0, 0, 0, 1636, 1637,
	0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 1672,
	1667, 0, 1659, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 1675, 0, 0, 1685, 1650, 1651, 1657, 1678,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 1684, 0, 0, 0, 2891, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 1658, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	0, 0, 1665, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 0, 0, 0, 0, 0, 1638,
	1644, 0, 0, 0, 0, 0, 0, 1677, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 1686, 0, 0, 0, 0, 0, 1666, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 1683, 0, 0, 0,
	0, 0, 0, 1653, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 1659, 0, 0, 0, 0, 0, 1644, 4199,
	0, 0, 1675, 0, 0, 0, 1650, 1651, 1657, 1678,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 1684, 0, 0, 0, 2890, 1676, 0, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	1673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	1659, 0, 1665, 2828, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 1677, 1673, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2829, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 1675, 0, 0, 1677, 1650, 1651, 1657, 1678,
	1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643,
	1645, 1646, 0, 0, 2857, 0, 0, 1676, 0, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 1672, 1667, 0,
	1659, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	1675, 0, 0, 1685, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2429, 0, 0, 0, 0, 0,
	0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 0, 1672, 1667, 0, 0, 0, 2428, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	2953, 0, 0, 2952, 1638, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 1676, 0, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 1683, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 1661, 1662, 1663, 1664, 0, 0, 0,
	1675, 0, 0, 1644, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 1686, 0, 0, 1673, 0,
	0, 1666, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 1683,
	0, 0, 0, 0, 0, 0, 1653, 1654, 0, 0,
	0, 1636, 1637, 0, 1669, 1670, 1671, 1679, 1680, 1681,
	0, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	1665, 0, 1672, 1667, 0, 1659, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 1677, 0, 0, 0, 0,
	0, 0, 0, 1673, 1658, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 0, 0, 1661, 1662, 1663, 1664, 0, 0, 0,
	1675, 0, 0, 1644, 1650, 1651, 1657, 1678, 1656, 1652,
	1677, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
	0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671, 1679,
	1680, 1681, 1676, 0, 0, 1686, 0, 0, 0, 0,
	0, 1666, 1668, 0, 1672, 1667, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 1682, 0, 1683,
	1685, 0, 0, 0, 0, 0, 1653, 1654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 1658, 0, 0, 0,
	0, 0, 0, 0, 1655, 1675, 0, 0, 0, 1650,
	1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640,
	1641, 1642, 1643, 1645, 1646, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 0, 1669, 1670,
	1671, 1679, 1680, 1681, 0, 1661, 1662, 1663, 1664, 0,
	0, 0, 0, 0, 0, 1644, 1672, 1667, 0, 0,
	0, 0, 0, 0, 1639, 1665, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 1660, 0, 1686, 0, 0,
	0, 0, 0, 1666, 1668, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 1682,
	1677, 1683, 0, 0, 0, 0, 1655, 0, 1653, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 1663,
	1664, 0, 0, 0, 0, 1673, 0, 1644, 0, 0,
	0, 0, 2959, 0, 0, 1675, 0, 0, 0, 1650,
	1651, 1657, 1678, 1656, 1652, 0, 1649, 1647, 1648, 1640,
	1641, 1642, 1643, 1645, 1646, 0, 1676, 0, 0, 1686,
	0, 0, 0, 0, 0, 1666, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 1682, 0, 1683, 0, 0, 0, 0, 0, 0,
	1653, 1654, 0, 0, 0, 1636, 1637, 1660, 1669, 1670,
	1671, 1679, 1680, 1681, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 1672, 1667, 0, 1659,
	0, 2954, 1677, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	3312, 0, 0, 0, 0, 0, 0, 1673, 1658, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 0, 1665,
	0, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649, 1647,
	1648, 1640, 1641, 1642, 1643, 1645, 1646, 1636, 1637, 1660,
	1669, 1670, 1671, 1679, 1680, 1681, 0, 1661, 1662, 1663,
	1664, 0, 0, 0, 0, 0, 0, 1644, 1672, 1667,
	0, 0, 0, 0, 1677, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 1686,
	0, 0, 0, 0, 0, 1666, 1668, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 1682, 0, 1683, 0, 0, 0, 0, 1655, 0,
	1653, 1654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0,
	1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1662, 1663, 1664, 0, 0, 0, 0, 1673, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 1676, 0,
	0, 1686, 0, 0, 0, 0, 0, 1666, 1668, 0,
	1672, 1667, 0, 0, 0, 2894, 0, 0, 1639, 1665,
	0, 0, 0, 1682, 0, 1683, 1685, 0, 0, 0,
	0, 0, 1653, 1654, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 1658, 0, 1677, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 1663, 1664, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 1675,
	0, 1665, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0,
	1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 0,
	1676, 1660, 0, 1686, 0, 0, 0, 0, 0, 1666,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 1677, 1683, 0, 0,
	0, 0, 0, 0, 1653, 1654, 0, 0, 0, 1636,
	1637, 0, 1669, 1670, 1671, 1679, 1680, 1681, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 0, 0, 0,
	1672, 1667, 0, 1659, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 1658, 0, 0, 0, 0, 0, 0, 0,
	1655, 1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656,
	1652, 0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645,
	1646, 0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671,
	1679, 1680, 1681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 0, 1672, 1667, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 1663, 1664, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 1638, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	1676, 0, 0, 1686, 0, 0, 0, 0, 0, 1666,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 0, 1683, 0, 0,
	0, 0, 0, 0, 1653, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 1661, 1662, 1663, 1664,
	0, 0, 0, 1675, 0, 0, 1644, 1650, 1651, 1657,
	1678, 1656, 1652, 0, 1649, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 1686, 0,
	0, 1673, 0, 0, 1666, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 1683, 0, 0, 0, 0, 0, 0, 1653,
	1654, 0, 0, 0, 1636, 1637, 0, 1669, 1670, 1671,
	1679, 1680, 1681, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 1665, 0, 0, 1667, 0, 1659, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1661, 1662, 1663, 1664,
	0, 0, 0, 1675, 0, 0, 1644, 1650, 1651, 1657,
	1678, 1656, 1652, 1677, 1649, 1647, 1648, 1640, 1641, 1642,
	1643, 1645, 1646, 0, 0, 0, 1636, 1637, 0, 1669,
	1670, 1671, 1679, 1680, 1681, 1676, 0, 0, 1686, 0,
	0, 0, 0, 0, 1666, 1668, 0, 0, 1667, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	1682, 0, 1683, 1685, 0, 0, 0, 0, 0, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 1658,
	0, 0, 0, 0, 0, 0, 0, 1655, 1675, 0,
	0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649,
	1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	1663, 1664, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 1660, 0,
	1686, 0, 0, 0, 0, 0, 1666, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 1650, 1651, 1657, 1678, 1656, 1652, 0, 1649,
	1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 1650, 1651, 1657, 1678, 1656, 1652,
	0, 1649, 1647, 1648, 1640, 1641, 1642, 1643, 1645, 1646,
}
var sqlPact = [...]int{

	4440, -1000, -1000, -1000, -1000, 152, -1000, -1000, 150, 145,
	144, 142, 141, 140, 135, 134, 133, -1000, -1000, -1000,
	-1000, -1000, -1000, 132, -1000, -1000, 131, -1000, 129, 128,
	127, -1000, -1000, 125, -1000, 121, -1000, -1000, -1000, -1000,
	119, 118, 110, 77873, 77380, 78359, 2077, 95024, 84219, 1901,
	69520, 94531, 69027, 94038, 93545, 2472, 108, -1000, 93052, 107,
	106, 105, -1000, 92559, -1000, 1923, -1000, 104, 4067, 56685,
	103, 102, 95, 2756, 94, -1000, 93, 92, -1000, 8610,
	1416, -1000, 91, 89, -1000, 7421, 617, 82254, 86, 85,
	2054, 84, 83, 56191, 82, 80, 2049, 2605, -1000, -1000,
	1920, -1000, -1000, 78, 77, 76, 75, 74, 73, 72,
	70, 69, 66, 63, -1000, 62, 61, 60, 58, 56,
	55, 54, 53, -1000, 48, 47, 45, 44, 41, 40,
	39, 38, 37, 35, 26, 24, 22, -1000, 14186, 20,
	1723, 1553, 1545, 1544, 1537, 1498, 923, 19, 18, 17,
	16, 15, 14, 13, 12, 11, -1000, 9, 8, 7,
	6, 5, 3, -8, -9, 115, -10, -11, -12, -13,
	-15, -16, -20, 2964, -1000, 1410, 1312, 26517, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 100856, 95510, -21, -82,
	-23, -1000, 3012, 779, 46802, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 415, 1752, 675, -1000, -1000, -1000, 92073, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2074, -33, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 674, -1000, 2073, 242,
	2024, -1000, -1000, -1000, -1000, -1000, 95510, -1000, 969, -1000,
	-1000, 3435, 3434, 1892, 673, 83726, -1000, 1794, -1000, 847,
	28068, -1000, 1081, -1000, 28068, 203, -1000, -1000, -1000, -1000,
	-1000, -1000, 3433, 3432, 3430, 3429, -1000, -1000, 68534, 20259,
	68041, 67548, 91587, 19756, 76887, 76394, 91094, 63135, 968, -1000,
	-1000, -1000, 1318, -1000, -1000, -1000, -1000, -1000, -1000, -48,
	64122, 3259, 95510, -1000, 185, -1000, -1000, -1000, -1000, -1000,
	-1000, 40175, 1070, 39646, 863, 39117, 759, -1000, -1000, -1000,
	62632, -1000, 3428, 3427, 1035, 3426, 2965, 100370, 1645, 3425,
	1742, 1113, 3422, 3420, 3419, 3418, 3417, 3416, 1347, 90601,
	2698, 90108, 1675, 62129, 967, 75901, 78359, 2343, 89615, 1337,
	1319, -1000, -1000, -1000, -1000, 2820, 2604, 2600, 52763, -1000,
	-1000, 3415, 3414, 3413, 3411, 3410, 99884, 1622, 3409, 2265,
	3407, 3406, 3405, 3404, 3403, 3402, 3400, -1000, 75408, 965,
	74915, 74422, 3084, 89122, 73929, 88629, 61626, 38588, 1310, -1000,
	-1000, -1000, 48788, 7064, 6020, 88136, 50799, 78359, 78359, -1000,
	-1000, -1000, -1000, -1000, 38059, 640, 37530, 1047, -1000, -1000,
	49296, 2628, -1000, -1000, -1000, -1000, 37001, 561, 36472, 736,
	95510, -1000, 2694, 1870, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2272, 1516,
	3285, 2441, 61123, 1922, 1294, 3031, 2803, 2801, 1370, 3398,
	3397, 2352, 2800, 2781, 2771, 2745, 2742, 1155, 2292, 465,
	25988, 2677, 1651, 35943, 1358, 1388, 2734, 2733, 3301, 1799,
	1854, 1907, 67055, 3396, 3394, 2994, 2705, 2700, 2613, -1000,
	-1000, -1000, -1000, 1371, -1000, -1000, -1000, -1000, -1000, 70006,
	-1000, -1000, 1841, -1000, -1000, 1841, -1000, -1000, -1000, -1000,
	-1000, 1261, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1410, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1917, -1000, 1869, -1000, -1000, 2224,
	2998, 2998, 2998, 3056, 388, 348, -1000, 115, -1000, -1000,
	106678, -1000, -1000, 40692, 40692, 40692, 40692, 40692, 40692, 40692,
	1919, -1000, 669, -1000, -1000, 724, -1000, 668, 534, -1000,
	-1000, -1000, -1000, -1000, -1000, 667, -1000, -1000, -1000, -1000,
	-1000, -1000, 3259, -1000, 22826, -1000, -1000, -1000, 363, 666,
	40692, -1000, -1000, 3318, 3317, 907, -1000, 184, 853, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2692, 662, 658, -1000, 657, 652, 649, 645, 643,
	-1000, -1000, -1000, 642, 641, 639, 636, 631, 629, 626,
	625, -1000, 1852, -1000, -1000, -1000, -1000, -1000, -1000, 577,
	575, 575, 575, -1000, 958, -1000, -1000, -1000, 252, 574,
	213, 569, 566, 565, -1000, 622, 621, 615, 614, 613,
	611, 604, 603, 600, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 957, -1000, -1000, -1000, -1000, -49, 95510, -1000, 415,
	-49, -1000, -1000, 598, -1000, 30148, 30148, 30148, -1000, -1000,
	2070, 40692, -1000, 2867, -1000, -40, -40, 772, 47786, -1000,
	45800, 772, 270, 731, 52269, -1000, 2611, -1000, -1000, 594,
	182, -1000, -1000, -1000, -1000, 20760, 2603, 95510, 95510, 78359,
	78359, 78359, 2889, 40692, -1000, -1000, 60620, 95510, 78845, 3200,
	57171, 60129, 95510, 2688, -1000, 2993, -1000, -1000, 95510, -1000,
	40692, -1000, 3197, 1620, 64613, 3138, -57, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2236, 2256, 1059, 2108, -1000, 2907,
	1748, -1000, 28068, 2954, -1000, -1000, -1000, 178, 20760, -1000,
	-1000, -1000, -1000, -1000, 2096, 2862, 1366, -1000, 2104, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1638, 2858,
	-1000, 2200, 2857, 1584, -1000, -1000, 2230, -1000, -1000, 2983,
	-1000, -1000, 1604, 2856, -39, -1000, -1000, 2360, -1000, -1000,
	1790, -1000, -1000, 925, 2855, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73436, 50298, 49296, 64122, -52, -1000,
	-1000, -1000, -1000, -68, -1000, 19253, 106678, -1000, -1000, -1000,
	-1000, 1678, 106678, 767, -1000, -1000, 2853, -1000, 106678, 758,
	-1000, -1000, 2852, -1000, 2683, -1000, -1000, -1000, -1000, 3393,
	-1000, 3392, 2173, 3391, 3390, 3389, -1000, 1547, 1849, 3388,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 72950, 2067, -1000,
	-1000, 71964, -1000, 2171, 3133, -1000, -1000, -1000, 72457, 964,
	-1000, 925, 2170, -1000, 81761, 850, -1000, 3386, 3072, 2403,
	925, 2167, -1000, -1000, -1000, -1000, -1000, 54233, -1000, 54233,
	-1000, 54233, -1000, 1502, -1000, 99398, -40, -40, 3259, -1000,
	-1000, -1000, -1000, -1000, 2850, 3385, 3383, 3381, -1000, 95510,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 190, 2849, -1000,
	-1000, 81275, 190, 2845, -1000, 190, 2843, -1000, 80789, -1000,
	-1000, 2081, 2830, -1000, 193, 2828, -1000, -1000, 192, 2827,
	-1000, -1000, -75, 2825, -1000, -1000, 106678, -1000, -1000, -1000,
	-81, -1000, -1000, -1000, 779, -1000, 48280, -1000, 48280, 83233,
	63636, 888, 606, 55697, 106678, -1000, -1000, -1000, -1000, 106678,
	-1000, -1000, -1000, -233, -1000, -1000, 63636, 49296, 106678, -1000,
	-1000, -1000, -1000, 106678, -1000, -1000, -1000, 63636, 71964, -1000,
	87643, 71478, -1000, -1000, 1346, 2274, -1000, -1000, -1000, 63636,
	1188, 63636, 63636, 63636, -1000, 87150, -1000, -1000, 1896, 1146,
	2985, 1847, 78359, -1000, 1832, -1000, -1000, -1000, 3021, -1000,
	-1000, 2682, -1000, 59638, 80303, -1000, 79817, -1000, 79331, -1000,
	78359, -1000, 78359, -1000, 3380, 3379, 3378, 3377, -1000, 3376,
	3007, -1000, 106678, 2999, -1000, 3374, 3101, 2677, 106678, -1000,
	2810, 1565, 1563, 95510, -1000, -1000, 95510, -1000, 95510, -1000,
	-1000, -1000, 1420, -1000, -1000, 2235, -1000, -1000, -1000, -1000,
	78359, -1000, -1000, -1000, -1000, -1000, -1000, 2673, -1000, 1592,
	-1000, 1750, -1000, 1336, -1000, -1000, 195, -1000, -1000, -57,
	-1000, 98912, -1000, 2224, -1000, 95510, -1000, 2239, 2648, 2669,
	1465, 2087, 2349, -1000, 35414, 2303, 43277, 2095, 115, -1000,
	-1000, 115, 115, 27551, -1000, -1000, 57171, 57171, 20760, 1272,
	40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692,
	40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692,
	40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692, 40692,
	40692, 40692, 40692, 40692, 40692, 1979, 40692, 1260, 40692, 40692,
	40692, 40692, 1783, -1000, -1000, 1788, 471, 1877, -1000, 3249,
	3249, 3249, 521, 521, 107013, 107013, 416, 3373, 724, -1000,
	40692, -1000, 90, 40692, 21263, -1000, 348, 7740, 2207, -1000,
	343, 21792, -1000, -1000, -1000, 22826, 534, 34885, 40692, 910,
	106678, -1000, -1000, 1605, 3268, 18752, 2552, 2503, 592, 719,
	715, 25459, 24930, 24401, 23872, 696, 40692, 40692, 40692, 40692,
	40692, 40692, 40692, 40692, -1000, -1000, 3292, -1000, 3268, -1000,
	-1000, -1000, -1000, 3268, 1270, 1267, 3268, -1000, 3268, 3268,
	2720, 2720, 34368, 33839, 33310, 43794, 32781, 40692, 23343, 32252,
	31723, -1000, 95510, -49, 3196, 40692, 222, -1000, 105340, -1000,
	222, 222, 590, -88, 106678, 2284, 2284, 47294, 2286, 1973,
	1973, 1973, -1000, 772, 14715, 772, 86173, 1981, 772, 772,
	173, 201, 339, 45308, 2867, 86173, 697, 588, -24, -25,
	-28, -1000, -1000, -29, -32, -1000, -1000, 78359, 586, 21263,
	20760, 170, 1368, -89, 2324, 2322, 2309, -1000, 2283, 1706,
	-90, 1259, 78359, 95510, -91, -1000, 974, -96, -1000, 1185,
	169, 3268, -1000, -1000, -1000, -1000, -1000, 3370, 3369, -1000,
	954, 583, 581, 360, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 577, 575, 575, 575, -1000, 252, 574, 213,
	569, 566, 565, -1000, -1000, -1000, -1000, -1000, 2601, 78359,
	95510, -68, 78845, 78359, 822, -98, 1043, -57, -1000, -1000,
	-1000, 1841, -1000, 1696, -1000, -1000, -1000, -1000, -1000, -1000,
	1378, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 907,
	-1000, -1000, -1000, -1000, -1000, -1000, 3270, 3266, -50, -1000,
	-1000, 20760, -1000, -59, 1530, 1647, -1000, 66562, 2202, 2987,
	2974, 1495, -1000, 1419, 1248, 3055, 70006, 3158, 3189, 876,
	-1000, 2594, -1000, -1000, 845, 1587, 1641, 1243, 70006, 2200,
	-1000, 57171, -1000, 2389, 3053, 1283, 1271, 1283, 1283, 1263,
	-1000, 70006, 1631, 1235, 1186, -1000, 1176, 1172, -1000, -60,
	3156, 3177, 701, -1000, 2592, 1170, -1000, -1000, 78359, 20760,
	1424, 1434, 1629, 1169, -51, -1000, 3145, 3144, 1167, 1164,
	-1000, 4775, -1000, 63636, 1572, 2822, 2439, 763, 2428, -1000,
	-1000, 763, -52, 64122, 95510, 167, -1000, 90, 40692, 40692,
	90, 40692, 90, 3094, -1000, -1000, 2817, -1000, -1000, -1000,
	3368, 1809, 2261, -1000, -1000, 564, 2166, 2590, 95510, 2340,
	-54, 78359, -1000, 2815, 57664, 2200, 2165, -1000, -1000, 70985,
	-1000, 2814, 415, 2164, -1000, 469, 3365, -1000, 98426, -1000,
	2993, 1071, 2809, 1003, 589, 3194, -1000, 589, 54725, -1000,
	95510, -1000, -1000, 95510, -1000, -1000, -1000, 3363, -1000, 78359,
	-1000, -1000, 78359, 190, 2805, -1000, 78359, -1000, 78359, 187,
	2804, -1000, -1000, 95510, -1000, 78359, 78359, -1000, 95510, 95510,
	63636, 63636, 4990, 65590, -99, -106, 335, -1000, 86664, 95510,
	1001, 66076, 95510, 2944, 913, 49296, -1000, -107, -233, 2425,
	888, 888, 763, -1000, 763, -1000, 78359, 2667, -1000, -1000,
	63636, 888, 888, 888, -1000, -1000, -1000, -1000, 3362, 3361,
	3360, -1000, -1000, -1000, 914, 78359, 95510, 78359, -1000, -1000,
	95510, -1000, 95510, -1000, 914, 95510, 914, 95510, 914, 95510,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 90, 40692, -1000,
	-1000, 3358, 1528, -1000, 2655, -1000, 2650, -1000, 0, -1000,
	-1000, -1000, -1000, -1000, 1747, 78359, 78359, 78359, 78359, 95510,
	78359, -1000, 70006, -1000, 2239, 2648, -1000, -1000, -1000, -1000,
	-1000, -1000, 1701, 2044, -1000, 2294, -1000, 1437, -1000, -1000,
	-1000, 106678, 44295, -1000, -1000, 106678, 1699, -1000, 42760, 42243,
	-1000, -1000, 1564, 78359, 2353, -1000, 2353, -101, -1000, 105005,
	2291, 78359, -1000, -1000, -1000, -1000, -1000, 844, 818, 818,
	1257, 1257, 1257, 1257, 3137, 799, 484, 4808, 7162, 7162,
	4469, 4469, 4469, 4469, 4469, 7162, 457, 521, 521, 457,
	457, 457, 457, 457, 521, 521, 521, 7162, 7162, 7162,
	107013, 106783, 6408, 40692, 40692, 1163, 1785, 471, 5517, 40692,
	5357, 5357, 5357, 5357, -1000, 2036, -1000, -1000, -1000, -1000,
	2588, 563, 43794, 43794, -1000, -1000, -1000, -1000, 22309, 40692,
	-1000, -1000, -1000, -1000, 31194, -1000, -1000, 104677, -290, 332,
	-95, 79, -1000, 40692, 40692, 40692, 330, -1000, 162, 40692,
	95510, -1000, 101886, 693, -109, -1000, -114, 1314, -1000, 40692,
	-1000, -1000, 1162, -1000, 1161, 1148, 1147, -1000, 562, 328,
	-1000, 161, -1000, 1947, 560, 556, 40692, -1000, -1000, -1000,
	-1000, -1000, 104447, -1000, -1000, 104217, -1000, -1000, 104119, -1000,
	-1000, 103889, -1000, -1000, -1000, 106448, 101836, 13960, 13584, 6170,
	13197, 12395, -116, 327, -117, 326, 834, 831, 325, 321,
	315, -123, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-124, 312, -1000, 2586, -95, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 311, -1000, 309, -1000, 106266, -95, 308,
	4730, -1000, 43794, 43794, 43794, -1000, 307, -1000, 105235, -1000,
	106124, 30677, 30677, 30677, 306, 105894, 40692, -95, -130, -1000,
	-132, -1000, -1000, 470, -135, 911, 30148, 46308, 20760, -1000,
	911, 911, 40692, -1000, 40692, 2308, -1000, -1000, -1000, 2307,
	2128, 2284, 47294, -1000, -1000, -1000, -1000, 86173, -1000, 3259,
	2542, -1000, 86173, -1000, -1000, 95510, 415, -1000, 86173, 86173,
	20760, 772, -1000, 772, 86173, 506, -1000, -1000, -1000, -1000,
	-1000, 305, 51290, 79, 160, 20760, 925, -1000, 2410, 2410,
	2410, 2410, -1000, -1000, 95510, 1142, -53, -67, 3220, -1000,
	1864, -1000, 57171, -1000, 721, 1077, 20760, -1000, -1000, -1000,
	550, -1000, 3268, 3268, -1000, 3268, 95510, 2583, 202, 168,
	943, 28068, -1000, 1841, -1000, -1000, 1455, -1000, 1798, -1000,
	1150, -1000, -1000, -1000, -1000, 28068, -1000, 2640, 95510, 95510,
	78359, -1000, 95510, -1000, 2163, 97940, 2162, 57171, 95510, -1000,
	-1000, 549, 542, 2287, 2285, 994, 95510, 95510, 2280, 97454,
	96968, 95510, 1871, 40692, 57664, 1993, 1855, 90, 90, -1000,
	-1000, 90, 541, 1125, 78359, 78359, 95510, 78359, 1540, -1000,
	-1000, -1000, -1000, -1000, 70492, -1000, -1000, 3291, 3281, -1000,
	1283, -1000, -1000, -1000, 1283, 2200, 1531, 95510, 78359, 57664,
	1625, 95510, 1873, 90, 90, -1000, -1000, 90, 540, 20760,
	1806, -1000, 2656, 95510, 3316, 95510, 95510, 95510, 57664, 2996,
	96482, 95510, 95510, 57664, 4775, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 59152, 1010, 925, 1624, 1141, 70006,
	49296, 905, 49296, 2409, -1000, -1000, 18251, -1000, 106678, 106678,
	-1000, 106678, -1000, 58651, 95510, -1000, 961, 95510, 66076, 887,
	2774, 53741, -68, 888, 63636, 78359, -54, 95510, -1000, -1000,
	-1000, -1000, -1000, 2200, 2772, 415, 2161, -1000, 63636, 3190,
	2769, 538, 3357, 3356, -1000, 2066, 2159, -1000, -1000, 95996,
	2812, 764, 95510, 911, 47294, 1814, -1000, 51783, 977, 95510,
	1727, 147, -1000, -1000, -1000, -17, 95510, -1000, 3354, -1000,
	-1000, 190, -1000, 78359, 190, 190, -1000, 78359, 78359, 2081,
	-1000, 193, -1000, 192, -1000, -75, -1000, -1000, 4990, 4990,
	888, -248, 537, -1000, 813, 800, 49797, 63636, -137, -1000,
	-1000, -1000, -1000, -1000, 78359, 95510, 558, 2398, 95510, -144,
	-1000, 158, 535, -1000, 2400, -1000, -1000, 913, 49296, 2575,
	-1000, -1000, 942, -1000, 1311, 888, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -43, -68, -68, -1000,
	914, -1000, 914, -1000, 914, -1000, 106678, -1000, -1000, 1524,
	1458, 95510, -1000, 20760, 95510, 78359, 20760, 78359, 2644, 2642,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1015, -1000,
	1699, 2043, -1000, 534, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2226, -1000, -56, 27551, 2111, -1000, -1000,
	78359, -44, 40692, 40692, 4768, 4442, 40692, 43794, 43794, -1000,
	40692, 417, -1000, -1000, -1000, -1000, -1000, 2574, 530, 40692,
	57171, 7703, 7574, -1000, 304, 11255, 457, -1000, 40692, -1000,
	299, 29631, -1000, 105570, -61, -147, -1000, 15229, -95, -150,
	-1000, -1000, 717, -1000, 2833, -1000, 40692, 105752, 2203, 1845,
	1662, 1557, 3268, 3315, 17750, -1000, 55211, 946, 2001, 103659,
	-1000, -1000, -1000, -1000, 57171, 57171, 40692, 40692, -1000, 40692,
	40692, 40692, -1000, -1000, -1000, 3268, 864, -1000, -1000, -1000,
	864, -1000, -1000, 1283, -1000, 1283, -1000, 40692, -1000, -1000,
	2572, 40692, -1000, 57171, 57171, 43794, 43794, 43794, 43794, 43794,
	43794, 43794, 43794, 43794, 43794, 43794, 43794, 43794, 43794, 43794,
	43794, 43794, 43794, 43794, 2270, 43794, 3242, 3242, 3242, -1000,
	2636, 2572, 40692, 40692, 57171, 297, 296, 295, -1000, 40692,
	-95, -1000, -1000, 4990, 529, -1000, 2213, -1000, 2501, -1000,
	40692, -1000, -129, -1000, 2867, -1000, -1000, 2501, 2501, -152,
	106678, 47294, 47294, -1000, 527, 40692, 2301, -1000, -1000, 689,
	-288, -1000, 794, -1000, -1000, -1000, -1000, -1000, 415, -1000,
	-1000, -1000, 157, 86173, 86173, 688, -1000, -157, -1000, -1000,
	-158, -1000, 3186, 294, 20760, -1000, -1000, 2978, -1000, -1000,
	-1000, -1000, -1000, -1000, -68, 95510, 95510, 2022, 3313, -1000,
	3280, 702, 687, 156, 3268, 287, 285, 284, -68, 95510,
	95510, 95510, -1000, 2367, -1000, -57, -1000, -1000, -1000, 40692,
	-1000, -1000, 2986, 1139, 1136, -1000, -1000, 2768, -1000, 2158,
	-1000, 982, -1000, 1703, -1000, 40692, 40692, 526, 525, 3350,
	1796, 3349, 996, 2767, 2081, 2766, 2081, -1000, -1000, 865,
	-1000, 106678, -1000, 524, 522, -1000, -59, 1504, 1621, 941,
	-1000, -1000, 40692, 40692, 85687, -1000, 387, 2983, -46, -1000,
	-1000, 1607, 1127, -1000, -1000, -1000, -1000, 2200, 1595, 1118,
	-1000, -1000, -1000, 938, -1000, -1000, 936, -1000, -1000, 40692,
	-1000, -60, 1117, 3116, 2156, 78359, 1116, -1000, 1087, -1000,
	-1000, -1000, 3143, 2081, 2763, 1090, -1000, -1000, -1000, -1000,
	-1000, 58165, -1000, 95510, 78359, 1529, 763, -1000, 2186, 763,
	905, 2571, -1000, 2334, 3347, 78359, 3345, 283, -164, -62,
	57171, 3185, -1000, 2084, 425, 78359, 836, -1000, 3259, -1000,
	-1000, -1000, -1000, 3108, 78359, 3184, 2759, 925, 90, 78359,
	3312, -1000, -1000, 78359, 2752, 2062, 2154, 2243, 764, 65104,
	-1000, 925, 1994, -74, -1000, 1727, 29102, 2976, -166, -1000,
	-1000, -1000, 911, 54725, 47294, 40692, 3344, -167, -1000, -1000,
	190, -1000, -1000, -1000, 187, -1000, -1000, -1000, -1000, -1000,
	-1000, 84710, 84710, 63636, 63636, 63636, 888, 95510, 95510, 66076,
	-1000, 518, 95510, 95510, 510, -1000, 95510, 95510, 3343, 63636,
	-63, 508, -1000, 789, 788, 787, -1000, -1000, -1000, -1000,
	-1000, -1000, -233, 90, -1000, 2018, 78359, -1000, 17249, -1000,
	-1000, -1000, -1000, -1000, 914, -1000, -1000, 1875, 2090, 1875,
	1716, 1712, -1000, 2027, -1000, -1000, -1000, -1000, 2362, 2984,
	20760, 3128, 5357, 40692, 40692, 362, 7498, 6635, 5357, 40692,
	40692, 57171, 107195, -169, 40692, 40692, -1000, 40692, 686, 106678,
	3311, 40692, 279, 277, -1000, -1000, -1000, 3261, -1000, -1000,
	-1000, 106678, 40692, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	274, -1000, 154, -1000, -1000, -1000, 101342, -1000, 40692, 265,
	3052, -1000, 264, 263, 10648, 5334, 103561, 103331, 103101, 262,
	-1000, -1000, 259, 257, 106678, 2636, 106678, -1000, -1000, 1207,
	1207, 1255, 1255, 1255, 1255, 3242, 1009, 1063, 909, 379,
	379, 379, 898, 1089, 1089, 379, 379, 379, 2563, 2264,
	505, 5447, -1000, -1000, 106678, 106678, 256, -1000, -1000, -1000,
	-95, 250, 4990, -1000, 2480, 3051, 106678, -1000, 47294, 2480,
	2480, -1000, -1000, 2128, 95510, 106678, 47294, -1000, 2542, -1000,
	15741, -1000, 20760, -1000, -1000, -1000, -1000, 3259, -1000, 51290,
	-1000, 504, -1000, 116, 2978, -1000, 785, -1000, -68, -68,
	-1000, -1000, 681, 3341, 700, 20760, 241, -1000, -1000, -1000,
	-68, -68, -68, -1000, 2939, 106678, 95510, 95510, 95510, 2747,
	-1000, 2310, -1000, 994, 103003, -172, -1000, 105005, 40692, 95510,
	-1000, -1000, 1726, 2327, 1027, -1000, 3024, 95510, -1000, 95510,
	-1000, -1000, 95510, 95510, 78359, 95510, 2726, -174, 106678, -69,
	-1000, 782, -1000, 1225, -1000, 16748, 95510, 78359, 95510, 78359,
	1902, 2722, -175, 20760, -1000, 3307, 3306, 2743, 3028, 3302,
	95510, -1000, 95510, 78359, 2938, -1000, -1000, -1000, -1000, 1548,
	1072, 905, -71, 503, -1000, 781, -1000, -1000, 774, 905,
	-1000, 63636, 49296, -1000, 415, -1000, 2370, -1000, 82740, 2029,
	90, -1000, 3340, 85201, 502, -1000, 2015, -1000, 678, 57664,
	2200, 90, 78359, -1000, -1000, 415, 240, -72, -1000, 988,
	20760, 78359, 2739, 2249, 764, 65104, -1000, 1071, 2349, -1000,
	-73, -1000, 488, 90, 1994, -1000, -74, 106678, -1000, 771,
	-1000, -1000, -1000, -177, -1000, -1000, 237, -1000, 2937, 2935,
	-1000, 2475, 40692, 501, 497, 95510, 2933, -1000, -1000, -180,
	2740, 2740, 63636, 49296, 63636, 913, -1000, 2229, -1000, -1000,
	-1000, -1000, -1000, 20760, 1561, -1000, 496, 495, -1000, -1000,
	-1000, -1000, 2984, 5357, 5357, 40692, 40692, 40692, 5357, 107195,
	-185, -1000, 5357, 5357, -95, -1000, -1000, 105570, -1000, -1000,
	-1000, 106678, -1000, 16247, 1878, -1000, 102773, -1000, 27551, -1000,
	-1000, 40692, 40692, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 43794, 2555, 491, 57171, -1000, -1000, 236, 899, 40692,
	40692, 2867, 899, 899, -1000, -186, -1000, -1000, -1000, 3259,
	116, -1000, -1000, 3335, 20760, -1000, 63636, 486, -1000, 3330,
	-1000, -1000, -1000, -1000, -1000, -1000, 95510, -1000, 95510, -1000,
	20760, 95510, 2527, 2124, -1000, -1000, 2278, 489, 43794, 78359,
	730, -1000, 3212, 2507, 1939, 40692, 2111, -188, -191, 2120,
	-1000, -1000, 2118, 40692, -1000, 57171, 487, 2081, 2081, -193,
	-194, -1000, -1000, 40692, 1062, 95510, 28585, -1000, 3329, 2983,
	-1000, -1000, -1000, -1000, 95510, 40692, 1061, -1000, -1000, -1000,
	3300, 2081, 20760, -1000, 2081, 2081, 3028, 1026, 95510, 78359,
	-1000, 2192, 2192, 63636, 49296, -1000, -75, 905, 3183, 1873,
	2419, -1000, -1000, -1000, -1000, 2277, -1000, -1000, 95510, 2276,
	890, -1000, -196, -1000, 770, 769, 66076, 887, 870, -1000,
	-1000, -1000, -1000, 415, 3182, -1000, 3299, 485, 95510, 2060,
	481, 20760, -1000, 764, 65104, -1000, 2812, 1727, -1000, 2140,
	95510, 2971, -1000, 2349, 471, -1000, 888, 468, 464, 2826,
	2826, -199, 40692, 40692, -201, 461, 888, -1000, -202, -1000,
	-1000, -1000, -1000, -77, -1000, 735, 733, -1000, -1000, 78359,
	78359, 40692, 40692, -1000, 5357, 5357, 5357, -1000, 225, -1000,
	-1000, 1994, 3050, -1000, -78, 102543, 102445, 5499, 43794, 57171,
	-209, -1000, -1000, 95510, 106678, -95, -1000, -1000, -1000, 677,
	-1000, -1000, 3328, -1000, -1000, 1276, -1000, -1000, -1000, 95510,
	2153, -1000, 992, 40692, 5447, 455, 40692, -1000, 3181, -1000,
	2348, 2545, 2370, 434, -1000, -1000, -1000, -1000, -1000, 986,
	1761, -1000, -1000, 106678, 3028, 40692, -1000, -1000, 433, 431,
	106678, 428, 761, 2550, -1000, -1000, -1000, -1000, 106678, 427,
	3116, -1000, -1000, -1000, -1000, 2081, 78359, -1000, -1000, -1000,
	-210, -1000, -1000, 1770, 90, 887, -1000, 1895, 2029, 426,
	-1000, -1000, 2037, 2354, -1000, 85201, 28068, 28068, 221, 3178,
	870, -1000, 3248, -1000, 3163, 90, -1000, 40692, -1000, 78359,
	40692, 2052, 65104, -1000, 2243, -1000, -1000, -211, 95510, 1727,
	-1000, -1000, 63636, 63636, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 986, -212, -218, -1000, 63636,
	-1000, -1000, 2229, -1000, 95510, -1000, 95510, -1000, -1000, -219,
	-220, -1000, 1898, 40692, 27551, -1000, -1000, 5499, -221, -1000,
	-80, -1000, 3162, -1000, -1000, -1000, -1000, 2737, 2476, 102215,
	2220, 95510, 11652, -1000, 2526, -1000, -1000, 1873, 95510, 2370,
	2457, 78359, 989, -226, 1875, 1875, 40692, 27034, 1893, 40692,
	-1000, -1000, 3028, -1000, 2518, 3258, -1000, 2037, 78359, 95510,
	-1000, 3018, -1000, 2930, -1000, -1000, -1000, 2370, 90, -1000,
	-1000, 90, -1000, -227, 988, -228, 78359, -1000, 2249, 911,
	-1000, -1000, -234, -236, 1939, 986, 877, -237, -1000, -239,
	-242, -1000, -1000, 219, 41726, 41726, 41726, -95, -101, -1000,
	95510, 421, 2670, 904, -1000, 2047, 1738, 216, 1012, -1000,
	-1000, 2507, -247, -1000, 903, 415, -1000, 40692, 986, -249,
	-1000, 976, -250, -1000, 975, -252, -1000, 2543, -1000, -257,
	2081, 891, 3092, -1000, -1000, -1000, -1000, 414, -258, -1000,
	-1000, 2125, -1000, 1873, 890, -1000, 986, 404, 1939, 401,
	-1000, 2880, 888, 888, 2370, 1939, 911, 400, 888, -1000,
	-1000, -1000, 2865, -1000, 44796, 2025, 1697, 104775, 2865, 2865,
	-1000, -1000, 95510, 3076, -1000, 2050, 2048, 1363, -1000, -1000,
	-1000, -1000, -1000, -1000, 911, -1000, 3068, 2220, 106678, 2370,
	-1000, 1875, 2417, -1000, 1875, 2523, -1000, 1891, -1000, -1000,
	-1000, 2724, 3241, 95510, -1000, 95510, 1702, 1682, 3323, 887,
	2037, 1939, 40692, 2370, 40692, 1220, -1000, -1000, 1873, 2370,
	-1000, -1000, -1000, 1653, 3207, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 742, -1000, 2903, -1000, 1013, 1952, 1952,
	-1000, 740, 2047, -1000, -1000, 396, -1000, 394, -1000, 1654,
	-1000, -1000, -260, -1000, -1000, 3322, -1000, 2037, -1000, 2370,
	-263, 1873, -265, -1000, 1491, 877, 1873, 1679, -1000, -1000,
	1978, 41209, 40692, -1000, 3225, -1000, -1000, 2300, -1000, 40692,
	2507, 40692, 40692, 2005, 2058, -1000, -1000, 1873, 986, 877,
	1939, 54725, 911, 877, -1000, -1000, -1000, 106678, -1000, -1000,
	-1000, 106678, -1000, -268, -270, 53255, -1000, -1000, -1000, 877,
	1939, 911, 2370, -245, -1000, 911, 1873, 1058, -248, 84710,
	911, 2370, -1000, 1873, -1000, -1000, -1000, 380, -271, -1000,
	1873, 877, 40692, -1000, 877, 911, -273, 911, -1000, 1873,
	-1000, -1000,
}
var sqlPgo = [...]int{

	0, 4055, 4054, 4053, 4050, 4049, 4048, 4047, 4046, 4045,
	4043, 4042, 4041, 4039, 4038, 4036, 4034, 4029, 4024, 4023,
	4021, 4016, 4014, 4009, 4008, 4006, 4004, 4001, 4000, 3999,
	3998, 3995, 3992, 3991, 3986, 3983, 3982, 3981, 3980, 3979,
	3978, 3974, 3972, 3969, 3966, 3965, 3964, 3963, 3959, 3958,
	3957, 3956, 3955, 3951, 38, 3950, 3948, 3947, 3946, 3945,
	3944, 3942, 3940, 3939, 3937, 3936, 3935, 3934, 3933, 3932,
	3931, 3929, 3924, 46, 3923, 236, 3922, 3920, 3919, 3918,
	3917, 3915, 3914, 3913, 3912, 3909, 3904, 3903, 235, 3902,
	142, 3901, 3899, 3897, 3892, 3887, 233, 3885, 3884, 3883,
	3882, 243, 3880, 3879, 3877, 3871, 3869, 3866, 3865, 3863,
	3862, 73, 133, 3861, 3860, 115, 3859, 3848, 3847, 3845,
	3844, 3843, 3842, 3838, 3835, 3832, 214, 3831, 232, 3825,
	3821, 3820, 3816, 3808, 3802, 3800, 3797, 3793, 3789, 3786,
	3783, 3781, 3779, 3777, 3776, 3775, 3774, 3772, 3769, 3768,
	3767, 3766, 3764, 3763, 3762, 3759, 3758, 3757, 3755, 3750,
	3749, 3748, 234, 157, 3746, 3743, 231, 230, 3740, 3738,
	3737, 3735, 3734, 106, 5, 29, 3732, 3731, 59, 64,
	62, 82, 75, 79, 3725, 84, 3724, 107, 47, 3722,
	10, 19, 211, 204, 8751, 202, 3721, 3719, 3718, 208,
	164, 3716, 206, 3713, 3712, 3705, 3703, 74, 63, 150,
	149, 141, 144, 411, 3702, 3700, 83, 54, 42, 31,
	3698, 3695, 3693, 3691, 3119, 116, 3688, 227, 201, 140,
	3687, 3685, 3684, 326, 3683, 36, 3682, 92, 96, 100,
	44, 103, 3680, 124, 21, 3676, 143, 41, 3674, 153,
	78, 66, 7854, 8073, 3673, 98, 53, 58, 68, 156,
	154, 171, 213, 139, 173, 179, 176, 148, 114, 3671,
	217, 3670, 3143, 49, 137, 3666, 3662, 3660, 57, 167,
	85, 3659, 3658, 51, 7, 2, 17, 170, 12, 91,
	16, 3655, 14, 3654, 3653, 3652, 3649, 35, 138, 3646,
	238, 3644, 93, 37, 30, 3643, 28, 184, 3641, 193,
	109, 3640, 3639, 223, 181, 135, 3638, 88, 194, 3627,
	3619, 3617, 3616, 3615, 104, 3, 111, 3613, 3612, 113,
	205, 166, 3601, 39, 3600, 3599, 145, 80, 122, 240,
	108, 190, 89, 189, 159, 198, 3598, 3597, 3596, 165,
	3595, 3593, 186, 136, 3592, 3588, 174, 244, 32, 60,
	203, 52, 163, 134, 3587, 172, 3582, 3581, 242, 152,
	183, 1, 15, 77, 110, 3577, 6, 200, 130, 267,
	105, 3576, 5088, 1469, 1823, 3575, 3574, 121, 87, 55,
	127, 128, 228, 56, 3572, 3570, 1425, 3568, 3567, 3565,
	3564, 160, 3560, 3559, 3557, 120, 123, 155, 3556, 81,
	65, 13, 101, 298, 241, 99, 188, 180, 220, 3554,
	161, 3553, 45, 102, 3551, 168, 216, 3549, 3544, 192,
	3543, 117, 1137, 48, 126, 3542, 187, 3540, 3539, 3538,
	3534, 3533, 3532, 3529, 846, 197, 3528, 3527, 3526, 129,
	162, 3523, 225, 125, 207, 67, 34, 3521, 71, 1699,
	3519, 739, 199, 72, 90, 3515, 40, 43, 0, 10778,
	9595, 6318, 10401, 3510, 4805, 3508, 3506, 3505, 177, 112,
	3500, 3496, 3495, 86, 3493, 61, 3489, 3487, 50, 3485,
	22, 8, 9, 23, 20, 289, 169, 3480, 3477, 97,
	118, 131, 3474, 239, 196, 3473, 3472, 3471, 3470, 76,
	3469, 27, 3468, 24, 3467, 3466, 33, 4, 26, 3465,
	3464, 210, 3463, 185, 212, 3462, 146, 3461, 3134, 119,
	3460, 3459, 222, 95, 3458, 221, 3457, 3115, 3456, 3455,
	18, 3454, 3453, 209, 151, 182, 3452, 3451, 147, 3448,
	3447, 3446, 219, 3445, 3444, 25, 3443, 11, 3442, 3441,
	175, 2882, 3440, 3439, 69, 3438, 158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 532, 532, 21, 35, 22, 36,
	15, 533, 533, 533, 533, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 531, 531, 212, 212,
	211, 206, 206, 534, 534, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 433,
	433, 433, 464, 464, 464, 547, 547, 548, 548, 548,
	548, 548, 114, 114, 335, 335, 335, 43, 43, 43,
	43, 43, 526, 526, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 539, 539, 540, 540, 538,
	541, 541, 541, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 466,
	466, 467, 467, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 550,
	550, 551, 551, 552, 552, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 299, 299, 271, 271, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 524, 524, 314, 314,
	424, 424, 75, 75, 334, 334, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 523, 261, 261, 82, 82, 82, 264,
	264, 81, 81, 81, 315, 315, 87, 87, 87, 87,
	272, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 426, 426, 89, 89, 89, 394, 394, 93,
	93, 93, 350, 350, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 528, 528, 307, 307, 227, 227, 227, 227, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 544,
	544, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	458, 458, 323, 323, 456, 456, 475, 475, 457, 457,
	276, 276, 276, 276, 276, 277, 277, 277, 465, 465,
	465, 465, 465, 465, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 357, 357, 357,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 542, 542, 543,
	543, 155, 155, 155, 155, 155, 155, 408, 408, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 340, 340, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 554, 554, 554, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 525, 525, 521, 521, 521, 521,
	521, 521, 521, 521, 522, 522, 527, 527, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 65, 65, 14, 14, 14, 66, 66, 190,
	190, 190, 191, 191, 284, 284, 284, 284, 188, 188,
	189, 189, 67, 67, 555, 555, 555, 535, 535, 535,
	536, 536, 536, 536, 536, 536, 278, 278, 279, 279,
	374, 374, 374, 374, 374, 282, 282, 282, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 285, 285, 214,
	214, 214, 288, 289, 289, 286, 286, 287, 287, 287,
	291, 291, 290, 293, 293, 292, 373, 484, 484, 486,
	486, 486, 486, 486, 486, 486, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 556, 556, 482,
	482, 482, 483, 478, 478, 479, 479, 479, 479, 479,
	280, 280, 281, 281, 281, 281, 480, 481, 305, 305,
	411, 485, 485, 487, 487, 489, 557, 557, 557, 557,
	557, 557, 558, 558, 558, 372, 372, 371, 371, 297,
	297, 490, 490, 490, 490, 491, 491, 491, 491, 491,
	494, 493, 492, 492, 492, 492, 492, 69, 69, 69,
	337, 337, 336, 336, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 165,
	165, 230, 230, 63, 63, 63, 12, 12, 12, 537,
	537, 537, 68, 68, 68, 68, 68, 68, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 530, 530, 529, 529,
	231, 231, 560, 560, 74, 74, 74, 74, 74, 74,
	74, 427, 427, 428, 428, 62, 62, 62, 62, 62,
	358, 358, 356, 356, 355, 355, 304, 304, 410, 235,
	235, 207, 207, 207, 27, 26, 19, 19, 24, 24,
	39, 39, 39, 39, 42, 42, 38, 38, 38, 38,
	40, 40, 34, 34, 545, 545, 546, 546, 102, 102,
	107, 107, 107, 107, 107, 108, 108, 108, 108, 109,
	109, 109, 109, 118, 118, 164, 164, 164, 164, 164,
	164, 164, 44, 44, 44, 44, 56, 56, 56, 56,
	116, 562, 562, 562, 117, 117, 117, 561, 561, 228,
	228, 368, 368, 369, 369, 563, 563, 370, 370, 370,
	370, 370, 221, 220, 222, 222, 223, 223, 61, 61,
	61, 216, 216, 217, 217, 218, 218, 219, 219, 564,
	564, 96, 96, 96, 167, 167, 270, 270, 270, 365,
	365, 365, 298, 298, 241, 241, 367, 367, 367, 367,
	333, 333, 333, 166, 166, 312, 312, 325, 325, 326,
	326, 421, 421, 327, 115, 115, 194, 194, 192, 192,
	192, 192, 192, 192, 192, 192, 199, 199, 200, 200,
	201, 201, 202, 203, 203, 203, 203, 316, 316, 204,
	204, 204, 193, 193, 193, 195, 195, 195, 195, 195,
	195, 195, 198, 198, 198, 198, 205, 205, 205, 197,
	197, 501, 501, 501, 503, 503, 505, 505, 504, 504,
	500, 500, 502, 502, 559, 559, 339, 339, 339, 295,
	296, 294, 294, 302, 302, 300, 301, 301, 303, 303,
	409, 409, 409, 208, 208, 208, 330, 330, 330, 330,
	331, 331, 361, 361, 359, 359, 359, 359, 360, 360,
	362, 362, 362, 363, 363, 364, 364, 329, 329, 390,
	390, 196, 196, 196, 309, 309, 309, 310, 310, 380,
	380, 380, 380, 380, 380, 381, 381, 379, 379, 379,
	379, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	413, 414, 414, 311, 311, 415, 366, 366, 519, 519,
	519, 520, 520, 407, 407, 416, 416, 416, 416, 416,
	416, 405, 405, 406, 406, 422, 423, 423, 343, 343,
	343, 343, 341, 341, 344, 344, 344, 344, 342, 342,
	417, 417, 417, 417, 332, 332, 418, 418, 418, 418,
	419, 375, 376, 376, 429, 429, 429, 429, 431, 308,
	308, 308, 308, 308, 477, 476, 476, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 445, 445, 445, 445,
	445, 445, 445, 445, 446, 446, 446, 446, 446, 446,
	446, 432, 432, 432, 432, 432, 436, 436, 436, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	437, 437, 442, 442, 443, 443, 443, 438, 439, 444,
	444, 444, 444, 565, 565, 448, 448, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 434, 434, 434, 441,
	441, 441, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 351, 351, 353, 353, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 384, 384, 384, 384,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 495, 495, 495, 495, 495,
	495, 495, 495, 386, 386, 498, 498, 499, 499, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 506, 506,
	507, 507, 509, 509, 510, 510, 511, 512, 512, 512,
	513, 514, 514, 508, 508, 515, 515, 515, 515, 516,
	516, 517, 517, 517, 517, 517, 518, 518, 518, 518,
	518, 396, 396, 397, 397, 403, 403, 403, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 232, 232, 232, 232, 232, 321,
	321, 319, 319, 319, 322, 322, 320, 320, 318, 318,
	317, 317, 393, 393, 391, 391, 395, 395, 345, 345,
	447, 447, 447, 447, 447, 447, 447, 447, 346, 346,
	346, 354, 347, 347, 348, 348, 348, 348, 348, 387,
	388, 349, 349, 349, 389, 389, 398, 402, 402, 401,
	400, 400, 399, 399, 377, 377, 378, 378, 328, 328,
	566, 566, 324, 324, 420, 420, 420, 420, 274, 274,
	313, 313, 273, 273, 265, 265, 266, 266, 266, 266,
	306, 306, 404, 404, 449, 449, 450, 450, 451, 451,
	452, 452, 453, 454, 455, 392, 392, 251, 250, 238,
	239, 249, 248, 247, 237, 240, 244, 245, 246, 242,
	243, 257, 256, 255, 262, 263, 253, 254, 425, 236,
	267, 267, 268, 268, 268, 269, 269, 269, 269, 233,
	233, 234, 234, 258, 258, 259, 260, 260, 252, 252,
	252, 224, 224, 224, 225, 225, 226, 226, 463, 463,
	460, 460, 460, 461, 461, 461, 462, 462, 462, 462,
	459, 459, 459, 459, 459, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 469, 469, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 471, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 474, 474,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 11, 14, 1,
	2, 3, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 9, 9, 3,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 1, 2,
	8, 4, 2, 5, 5, 5, 2, 1, 3, 11,
	12, 8, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 531, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 97, 78, 148, 123, 131,
	186, 341, 377, 388, 369, 358, -123, -124, 405, -44,
	-56, -117, -116, 71, 124, 364, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -549, 99,
	-502, -78, -81, -109, -553, 136, 155, 204, -99, -100,
	330, -104, -105, 371, -107, -108, 373, 156, -51, -50,
	150, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 409, -153,
	464, 47, 423, 80, 140, 381, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -501, -79, -80, -83, -85,
	-86, -82, -84, 370, -195, -193, 528, 479, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 498, 506, -198, -196,
	-197, -205, 397, 487, 439, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, -272, 2, -253, -258, -259,
	-260, -252, -224, -471, -474, 4, -468, -472, 161, 213,
	294, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 91, 93,
	94, 95, 96, 97, 98, 100, 101, 102, 104, 105,
	113, 114, 115, 116, 118, 123, 124, 127, 122, 126,
	129, 130, 131, 134, 135, 136, 138, 139, 141, 142,
	143, 145, 146, 148, 149, 150, 153, 151, 446, 152,
	154, 155, 156, 157, 167, 168, 169, 174, 176, 180,
	181, 184, 185, 187, 191, 193, 194, 195, 196, 197,
	203, 204, 206, 207, 208, 209, 214, 215, 219, 216,
	225, 226, 230, 231, 232, 234, 238, 239, 240, 241,
	242, 243, 245, 247, 246, 249, 252, 253, 256, 257,
	258, 261, 262, 263, 264, 266, 267, 270, 268, 271,
	269, 273, 274, 275, 272, 278, 276, 280, 281, 282,
	292, 290, 286, 287, 283, 288, 284, 285, 289, 296,
	297, 300, 201, 302, 303, 306, 324, 310, 311, 312,
	315, 316, 319, 322, 323, 325, 326, 327, 328, 329,
	330, 331, 332, 334, 335, 339, 341, 342, 344, 346,
	347, 348, 349, 350, 351, 352, 355, 354, 356, 358,
	364, 369, 366, 367, 368, 370, 371, 372, 373, 375,
	376, 377, 379, 380, 381, 382, 384, 386, 387, 390,
	391, 406, 407, 425, 388, 389, 392, 393, 394, 395,
	396, 400, 398, 399, 401, 402, 403, 405, 408, 409,
	411, 412, 413, 414, 415, 416, 419, 421, 422, 423,
	424, 426, 429, 430, 431, 432, 427, 438, 435, 436,
	440, 441, 442, 443, 444, 445, 447, 449, 457, 458,
	459, 461, 464, 465, 466, 467, 455, 469, 470, 473,
	474, 475, 478, 476, 477, 479, 481, 484, 485, 486,
	492, 491, 493, 499, 500, 502, 503, 504, 35, 48,
	49, 52, 54, 56, 67, 68, 69, 73, 119, 120,
	147, 158, 159, 170, 182, 183, 188, 190, 198, 199,
	200, 220, 221, 223, 228, 250, 299, 301, 317, 321,
	336, 337, 338, 340, 353, 383, 417, 428, 433, 450,
	451, 452, 453, 460, 462, 487, 488, 489, 494, 501,
	-272, 2, -253, 308, -246, 2, -224, -224, 341, 27,
	2, 27, 335, 399, 441, 443, 2, -528, -307, 2,
	27, -227, -224, 99, 186, 397, -246, 2, -528, -307,
	24, 2, -224, 2, -228, 2, 388, -224, 267, 2,
	531, 91, 258, 72, 383, 402, -126, 458, -125, 450,
	392, -127, -458, 2, 278, -224, 531, 531, 531, 27,
	-236, -224, 439, 213, 115, 436, 531, 2, 439, 327,
	491, 398, 115, 350, 213, 466, 392, -537, 267, 379,
	189, 480, -526, 2, -521, 4, -472, -468, -266, -265,
	439, 444, 115, -260, -252, 521, -259, 531, 531, 531,
	2, 231, 232, 349, 348, 402, 403, 531, 531, 531,
	390, 2, 26, 64, 90, 95, 121, 157, 177, 180,
	313, -550, 324, 347, 401, 438, 447, 461, -536, 424,
	66, 392, -535, -537, 267, 466, 134, -355, 115, 258,
	185, 474, 443, 441, 472, 127, 219, 477, 476, 531,
	531, 26, 64, 75, 95, 134, 157, 177, 180, -552,
	324, 347, 386, 401, 438, 447, 461, 2, 491, 267,
	398, 439, 213, 115, 466, 392, -537, 390, 391, 345,
	-90, 2, 528, 31, 30, 405, -187, 439, 224, 2,
	-224, 531, 531, 2, 231, 232, 390, 391, 531, 531,
	178, -521, 2, 531, 531, 2, 231, 232, 390, 391,
	224, 2, 66, 394, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 2, -162, 402, 424,
	195, 45, 44, 72, 27, 346, 77, 328, 116, 142,
	467, 187, 213, 214, 239, 90, 91, -357, 43, 232,
	231, 391, -542, 390, -408, 440, 393, 399, 435, 243,
	388, 458, 99, 481, 380, 504, 350, 351, 151, 4,
	115, 278, 404, 450, 258, 387, 331, 82, 531, -559,
	2, 439, -561, 2, 458, 458, 2, -561, 2, -561,
	2, -561, 2, -562, 458, 501, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, -193, -195, -194, 531, 531, 531, 531,
	531, 531, 531, -162, 402, 2, 72, 27, -300, -302,
	471, 222, 144, 314, -192, -194, 2, -501, -456, 2,
	-382, -475, -384, 519, 520, 512, 437, 65, 293, 505,
	-396, 121, 472, 308, -474, -385, -398, 147, 383, -322,
	8, 9, 5, 6, 7, -233, -386, -392, 463, 160,
	298, -269, 532, 10, 528, -498, -194, -397, 36, 190,
	63, -460, -268, -234, -432, 223, -267, -252, -495, -496,
	4, -468, -469, -461, -435, -443, -439, -440, -446, -224,
	-471, 75, 107, 108, 106, 111, 110, 260, 259, 112,
	109, 404, 480, 64, 35, 198, 199, 228, 299, 200,
	73, -497, 135, -470, 220, 221, 417, 49, 353, 170,
	120, 119, 301, 54, 52, 488, -444, 117, 450, 451,
	452, 453, 182, 183, 56, 158, 159, 321, 338, 433,
	460, 462, 188, 250, 42, 103, 179, 218, 202, 227,
	229, 233, 251, 254, 279, 291, 295, 318, 320, 378,
	410, -565, 489, 428, 67, 68, -503, 354, -504, -246,
	-503, 531, 531, 533, 531, -294, -295, -296, 2, 27,
	132, 528, 2, -412, 2, -413, -417, -194, 244, -416,
	528, -414, 526, -253, 309, -499, 384, -495, -496, -233,
	-252, -268, 4, -468, -470, 530, -297, 528, 115, 439,
	76, 213, -350, 528, -224, 27, 308, 454, 533, -394,
	528, 308, 178, 311, -224, 491, 2, 2, 406, 2,
	528, -126, 69, 458, 42, 402, -369, 2, -370, -220,
	-221, -222, -422, -223, 230, 344, 352, 507, 125, 293,
	504, -456, -544, 178, 511, 454, -456, -323, 530, 2,
	2, 2, 2, 2, -417, 198, -253, 2, -250, -459,
	4, -468, -472, -469, -473, -471, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 90, 99, 106, 107, 109, 108, 110, 111,
	112, 121, 125, 128, 132, 133, 137, 140, 144, 160,
	162, 175, 177, 178, 186, 189, 192, 205, 217, 222,
	224, 244, 248, 255, 259, 260, 293, 298, 304, 308,
	309, 313, 314, 333, 343, 357, 374, 397, 404, 420,
	434, 439, 448, 454, 456, 463, 471, 472, 480, 482,
	490, 495, 496, 497, 498, -474, 75, 2, -417, 198,
	2, -255, 198, -417, -258, 2, -237, -224, 2, -249,
	-459, 2, -273, 198, -253, -254, -258, -256, 2, -258,
	-262, 2, -224, -466, 198, 2, -463, 10, -462, 5,
	4, -468, -472, -469, 491, 224, 454, 533, -313, -265,
	-266, -455, 8, -306, -224, 530, -382, 2, -115, -101,
	2, 175, -382, 198, 2, -115, 198, 2, -382, 198,
	2, -115, 198, 2, -539, 2, -466, 2, 2, 461,
	2, 95, 198, -224, 439, 114, 2, 368, -551, 386,
	465, 2, 2, 2, 2, 2, 2, 439, -242, 2,
	-224, 175, -262, 198, -263, 2, -224, -225, 398, -560,
	354, -466, 198, 2, 491, -256, 2, -256, 213, 226,
	-237, 198, 2, 443, 441, 443, 441, 178, 2, 224,
	2, 224, 2, -418, 2, -419, -413, -253, 526, 2,
	2, 2, 2, 2, 198, -224, 439, 114, 2, 242,
	2, 2, 2, 2, 2, 2, 2, -315, 198, 2,
	-253, 491, -315, 198, 2, -315, 198, 2, -356, 2,
	85, -237, 198, 2, -261, 198, 2, -256, -264, 198,
	2, -262, -467, 198, 2, -466, -382, 2, -115, 2,
	-426, 2, -425, -462, 487, -90, 528, -90, 528, 402,
	528, -466, -253, -253, -382, 2, -115, -101, 2, -382,
	2, -115, 2, -112, -111, -466, 528, 178, -382, 2,
	-115, -101, 2, -382, 2, -115, 2, -187, 175, 2,
	115, 439, -162, 2, 175, 482, 2, 8, 2, 205,
	-466, 393, 351, 167, 2, 406, 2, 407, 72, -357,
	504, 72, 178, 2, 178, 2, -340, 2, 498, 2,
	2, -525, 2, 308, 178, 2, 178, 2, 178, 2,
	178, 2, 178, 2, 348, 403, 459, 232, 2, -115,
	495, -101, -382, 495, 2, -543, 175, 391, -382, 2,
	457, 241, 152, 178, -340, 2, 178, 2, 178, 2,
	5, 2, 349, 425, 2, 230, 344, 425, 2, -253,
	-554, 2, 439, 491, 398, 2, 2, 86, 87, 178,
	2, 178, 2, 178, 504, 2, -332, -417, -368, -369,
	-368, 454, -300, -302, -162, 406, 2, -199, -330, -201,
	175, -359, -360, -202, 255, 162, 304, -203, -339, 27,
	132, -339, -339, 58, 529, 529, 11, 12, 74, 40,
	519, 520, 521, 522, 173, 523, 524, 517, 518, 516,
	509, 510, 514, 236, 237, 92, 513, 511, 84, 265,
	385, 163, 164, 165, 166, 365, 211, 33, 212, 14,
	15, 16, 32, 313, 254, 505, 202, 410, 512, 17,
	18, 19, 227, 229, 295, 48, 205, -232, -275, -382,
	-382, -382, -382, -382, -382, -382, 320, 528, -328, -377,
	526, -194, 528, 528, 528, -455, -194, -382, -396, 529,
	-320, 528, -194, -396, -391, 528, 383, 526, 528, -399,
	-382, 5, 5, 5, 528, 530, -506, 499, 175, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 340, -437, 528, -436, 528, -436,
	-436, 492, -434, 528, 506, 500, 528, -434, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 492, 533, -503, -297, 528, -324, -420, -382, 521,
	-324, -324, 308, -317, -382, 103, -343, 233, 279, 179,
	251, 378, 218, -379, 532, -379, -407, 506, -194, -414,
	-252, -194, -416, 528, -412, -407, -91, -455, -75, -88,
	-96, -115, -128, -166, -167, 521, -253, 528, 178, 528,
	530, -459, 178, -306, -237, -253, -267, -268, -273, 131,
	-317, -521, 466, 392, -306, -227, 37, -393, -429, -430,
	-477, 532, -476, -432, -442, -438, -441, 336, 337, -461,
	52, 488, -444, 223, 4, -468, -470, 220, 221, 417,
	49, 353, 170, 120, 119, 301, 54, 450, 451, 452,
	453, 182, 183, 56, 489, 428, 67, 68, -521, 466,
	392, -306, 175, -356, -458, -317, 37, -369, 2, 121,
	-463, -563, 533, 253, -277, 264, 292, 194, 309, 502,
	302, 125, -465, 5, 4, -392, -404, 121, 258, 223,
	-449, -451, 8, -450, 9, -452, 519, 520, -457, -456,
	105, 530, -459, -210, 366, 405, -209, 23, 28, 136,
	485, 153, -287, 215, 323, 327, 147, 421, 475, -532,
	-533, 389, 445, 446, 88, 302, 405, 366, 147, -336,
	-338, 37, 113, 282, 322, 59, 208, 269, 270, 423,
	494, 147, 405, 366, 323, -533, 96, 366, -533, -212,
	421, 475, -532, -533, 389, 366, -211, -287, 147, 532,
	23, 366, 405, 323, -547, -548, 136, 28, 366, 323,
	-529, -500, 498, 147, -417, 198, -540, -111, 245, 5,
	10, -111, -313, 533, 533, -459, 521, 391, 390, 147,
	147, 147, 147, 175, 2, 2, 293, 2, 2, 2,
	180, -535, -552, 2, 2, -253, 198, -299, 308, -524,
	-314, 439, -253, 293, 42, -255, 198, 2, -258, 491,
	-529, 293, -257, 198, -253, 37, 528, 2, -356, 2,
	213, -500, 293, -418, -270, -253, -413, -270, 405, -246,
	37, -379, -379, 147, 2, 2, 2, -224, -213, 533,
	62, 372, 147, -315, 198, -213, 147, -213, 147, -274,
	198, -273, -213, 147, -213, 533, 147, -213, 533, 147,
	533, 147, 529, 533, -426, -426, -466, -175, 498, 178,
	99, 528, 528, -187, -423, 533, -422, -467, -112, -466,
	-466, -524, -237, 2, -253, 2, 439, 234, -466, -175,
	205, -466, -466, -466, -458, 27, 407, 2, 348, 403,
	459, 87, 407, 2, -253, 439, 115, 213, 78, -527,
	175, -522, 379, -521, -253, 115, -253, 115, -253, 115,
	-253, -253, 2, 2, 2, 2, 2, 83, 83, 2,
	44, -543, 175, 2, 457, 2, 457, 2, -224, -224,
	-224, 424, 253, -253, 175, 439, 213, 439, 213, 115,
	439, -213, 533, -228, -199, -330, -458, -331, -330, -200,
	-199, -202, 175, 352, 476, 282, 408, 238, -360, -359,
	27, -382, -364, 169, 281, -382, -362, -384, 519, 520,
	-450, -452, -316, 302, -193, -193, -193, -303, -409, -382,
	343, 213, -431, -429, -429, -251, -459, 450, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, 254, 202, 410, 48, 205, -382, 454,
	-382, -382, -382, -382, 276, 293, 298, 463, 160, 473,
	132, 302, -566, 434, 39, -389, -194, -321, 528, -403,
	34, 420, 27, -396, 528, 2, -377, -382, -378, -318,
	-317, -317, 529, 490, 27, 132, 521, 2, 529, 533,
	37, 529, -382, -318, -395, -391, -317, -402, -401, 495,
	-351, -352, 503, 272, 118, 196, 271, -353, 396, -453,
	8, -459, 521, -507, 168, 189, 528, 529, 2, 529,
	2, 529, -382, 2, 529, -382, 2, 529, -382, 2,
	529, -382, 2, 529, 2, -382, -382, -382, -382, -382,
	-382, -382, -317, 8, -453, -453, 450, 450, -453, -453,
	-453, -445, 336, 256, 337, 184, 275, 273, 274, 183,
	-445, -345, 2, -447, -317, 4, 503, 272, 118, 196,
	271, 396, 5, -345, 2, -346, 2, -382, -317, -347,
	-383, -384, 519, 520, 512, -396, -348, 2, -382, -318,
	-382, 55, 248, 456, -349, -382, 178, -317, -317, 2,
	-317, 2, -504, 37, -317, -309, 533, 178, 37, 4,
	-309, -309, 528, 529, 533, -344, 193, 268, 263, -344,
	-412, -343, 233, -341, 318, -341, -341, -407, -238, 526,
	534, -459, -407, -406, -405, 37, -246, 315, -407, -407,
	530, 529, -406, 527, -519, 528, 531, 531, 531, 531,
	531, -253, 528, -317, -459, 530, 426, 529, 227, 227,
	227, 227, 384, 529, 454, -523, -261, -264, 498, -90,
	310, 529, 533, -308, 36, 526, 530, -453, 2, 2,
	-448, 492, 528, 528, -352, 528, 178, -523, -264, -307,
	-257, -544, 529, 458, -370, -276, 352, 419, 367, 400,
	436, 8, 9, 8, 9, 533, -459, 533, -545, 90,
	454, 76, 392, -373, 198, 76, -478, -240, 90, -479,
	-224, 70, 472, 343, 177, 145, -545, 90, 343, -545,
	90, 90, 405, 424, 454, 58, -417, 40, 40, 27,
	-115, 249, 178, 504, 439, 213, 392, 454, -417, -338,
	-429, 113, 269, 270, 58, -454, -449, 519, 520, -454,
	58, -454, -454, -454, 498, -255, -417, 392, 454, 454,
	454, 454, 533, 40, 40, 27, -115, 249, 178, 454,
	-273, -238, 486, 41, 486, 454, 41, 392, 454, 533,
	41, 41, 454, 454, -530, -229, 102, 288, 262, 289,
	94, 285, 93, 284, 100, 286, 101, 287, 493, 296,
	61, 283, -230, -231, 329, 484, -466, 405, 366, 147,
	205, -423, 205, -423, -265, -224, 530, -115, -382, -382,
	-115, -382, -115, 44, 147, 2, -560, 242, 528, -280,
	293, 178, -306, -424, 224, 533, -314, 147, -464, -463,
	112, 404, -337, -336, 293, -257, 198, 2, 147, -297,
	293, 141, 528, 350, 2, -239, 198, -225, -224, -356,
	-216, 442, 147, -334, 482, -365, -115, 528, 121, 37,
	-365, -325, -326, -421, -327, -240, 528, -246, -224, 2,
	-253, -315, -213, 147, -315, -315, -213, 533, 147, -237,
	-256, -261, -262, -264, -466, -467, -90, -425, 529, 529,
	529, -174, 312, -173, -224, 5, -187, 482, -279, -374,
	-373, -482, -483, -478, 254, 213, 472, 226, 161, -298,
	-241, -240, 114, -181, 498, -111, 529, -423, 205, -175,
	-175, -423, -423, -253, 175, -466, -175, -175, -175, 2,
	2, 2, -340, -253, -237, -273, -253, -306, -306, -340,
	-237, -340, -237, -340, -237, -115, -382, 2, 402, 175,
	175, 530, -340, 350, 115, 439, 327, 213, -253, -273,
	-253, -273, -237, -253, -417, -331, -200, 309, 238, 408,
	-362, -363, -384, 383, 384, -363, 383, 384, 8, 9,
	8, 9, -204, 412, 297, -315, 533, -207, 38, 128,
	238, -253, 504, 143, -382, -382, 454, -566, 434, -389,
	143, -382, 276, 298, 463, 160, 473, 132, 302, 178,
	528, -383, -383, 529, -319, -382, -382, 527, 536, 529,
	-302, 533, -300, -382, -317, -317, 529, 530, -317, -306,
	527, 527, 533, 529, -400, -401, 137, -382, 454, 454,
	454, 454, 528, 529, 530, -512, 319, 528, 528, -382,
	529, 529, 529, 529, 37, 533, 533, 533, 529, 533,
	533, 533, 529, 529, 529, 533, 529, 504, 504, 529,
	529, 529, 529, 533, 529, 533, 529, 178, 529, 529,
	-354, 333, 529, 11, 12, 519, 520, 521, 522, 173,
	523, 524, 517, 518, 516, 509, 510, 511, 84, 265,
	385, 14, 15, 16, 227, 205, -383, -383, -383, 529,
	-387, -388, 178, 175, 37, -349, -349, -349, 529, 178,
	-317, 529, 529, 528, -505, 267, 293, 529, -376, -375,
	496, -420, -310, 2, -412, -248, -459, -376, -376, -317,
	-382, 233, 233, -342, 482, 308, -344, -412, -406, -455,
	-381, -380, 176, 38, 128, 290, 201, -406, -246, -297,
	-406, -406, -459, -407, -407, -405, 529, -520, -455, 529,
	-311, -415, -499, -302, 530, -459, -184, -500, -163, 5,
	298, -163, -163, -163, -306, 454, 454, 24, 334, -429,
	526, 527, 8, -459, 528, -453, -453, -453, -306, 178,
	178, 178, -335, 498, -456, -369, 470, 81, 352, 450,
	-456, -209, 366, -240, -240, -253, -262, 293, -373, 198,
	-215, 293, -429, -247, -224, 528, 528, 238, 238, 482,
	-240, -247, 238, 198, -240, 198, -247, -247, -531, 352,
	303, -382, -464, 257, 350, 294, -210, 366, 405, -115,
	-115, -115, 528, -544, 482, 131, -253, -273, -253, -262,
	-257, 405, 366, 291, -267, -454, -454, -336, 405, 366,
	-262, -255, -464, 392, -237, -211, -115, -115, -115, 528,
	-238, -212, 366, 5, 198, -240, 5, -224, -240, -262,
	-464, -548, 23, -240, 198, -240, -262, -464, -229, -466,
	298, 478, -529, 392, 454, -417, -111, -178, 498, -111,
	-172, 209, 521, -526, -224, 491, -224, -278, -281, -279,
	-240, -190, -191, 500, 498, 147, -271, -253, 526, -175,
	-466, -253, -262, -263, 147, -297, 293, -466, 37, 147,
	528, 2, 2, 308, 293, -239, 198, -217, 138, -564,
	511, -237, -376, -310, -333, -367, 374, 308, -298, 487,
	-246, -333, -312, 533, 178, 511, 530, -298, 2, -213,
	-315, -213, -213, -273, -274, -213, -213, -213, -90, -90,
	-175, 533, 528, 511, 511, 528, -466, -466, 529, 533,
	-253, -239, 213, 213, -245, -225, 529, 533, 530, 528,
	-183, 312, -182, 139, 240, 225, 413, 414, 415, 416,
	130, -181, -112, 178, -52, 498, 439, -175, 532, -340,
	-340, -340, 402, 402, -224, -249, -237, -253, -250, -273,
	175, 175, 476, -363, 309, 261, -409, -208, 300, -253,
	532, -382, -382, 143, 143, -382, -383, -383, -382, 143,
	178, 528, -382, -393, 32, 32, 529, 533, -378, -382,
	529, 490, -302, -302, 529, 521, -459, 532, 529, -391,
	140, -382, 448, 272, 196, 271, -353, 271, -353, -353,
	-453, 5, -459, 521, -513, -243, 528, -224, 496, -301,
	314, 529, -431, -429, -382, -382, -382, -382, -382, -453,
	-434, -434, -449, -449, -382, -387, -382, -431, -429, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, 132, 293,
	302, -383, -388, -387, -382, -382, -429, 529, 529, 529,
	-317, -90, 528, 267, -329, 189, -382, -423, 533, -329,
	-329, 529, -412, -412, 528, -382, 233, 527, 533, 535,
	511, -297, 530, -405, -406, 527, 529, 533, 529, 533,
	-366, 37, 529, -459, -186, -185, 129, 51, -306, -306,
	311, 5, 8, 526, 527, 530, -453, 529, 529, 529,
	-306, -306, -306, 114, 282, -382, 454, 454, 147, 293,
	484, -484, -479, 145, -382, -304, -410, -382, 528, 528,
	2, -206, 136, 405, -546, 2, 482, 147, -213, 147,
	-213, 502, 528, 528, 454, 392, 498, -317, -382, -176,
	121, -458, -533, 532, -533, 532, 392, 454, 392, 454,
	498, 498, -317, 454, -433, 46, 25, 293, -256, 454,
	454, -213, 147, 466, 405, -466, 298, -262, -257, 405,
	366, -423, -180, 312, -179, 139, 376, 130, 240, -423,
	-178, 178, 224, 2, -257, 2, 529, 529, 533, -485,
	37, 306, 306, 528, -253, -71, 498, -422, -455, 42,
	-255, 37, 147, -529, -115, -257, -427, -428, 5, -253,
	147, 308, 293, -218, 247, -564, -463, -500, -302, -333,
	-324, 294, 89, 529, -376, -326, -310, -382, 2, 529,
	-213, -213, -173, -174, -466, -466, -466, -175, -187, -187,
	-374, -282, 528, -239, -225, 528, -187, -241, 2, -467,
	533, 528, 511, 511, 511, -423, -115, 312, -253, 521,
	-340, -289, -288, 327, 302, -289, 383, 383, 309, 169,
	243, -207, -238, -382, -382, 143, 32, 32, -382, -382,
	-393, 529, -382, -382, -317, 527, 5, -382, 529, 529,
	8, -382, 529, 530, -514, -224, -382, 529, 58, 529,
	529, 533, 533, 529, 529, 529, 529, 529, 529, 529,
	-388, 178, 132, 302, 528, 529, 529, -90, -390, 192,
	58, -412, -390, -390, -342, -306, -412, -380, -238, 526,
	-459, -455, -415, 528, 530, -185, 511, 527, 2, 526,
	-459, 529, 114, -240, -240, -373, 147, -486, 90, -488,
	74, 161, 99, 293, 298, 472, 343, 70, 121, 357,
	-556, 37, 508, 529, 529, 533, -207, -304, -306, 293,
	431, 121, 293, 121, 114, 466, 77, -240, -247, -306,
	-306, -253, -262, 154, 529, 533, 511, 2, 521, 521,
	-262, -257, -262, -255, 325, 154, 529, -238, 5, 5,
	147, -235, 74, 5, -240, -240, -256, 114, 392, 454,
	-178, 533, 528, 511, 511, -178, -467, -111, -297, -285,
	216, -240, -483, -480, -481, 343, -487, -489, 161, 343,
	-115, 2, -189, -188, -224, 5, 528, -280, 312, 527,
	-464, -337, -115, -257, -297, 529, 533, -358, 482, -238,
	-253, 147, -219, 246, -564, -463, -216, -361, -359, 133,
	528, 308, -115, -302, 511, 529, 529, 114, 114, 207,
	146, -304, 528, 528, -306, 114, 529, -182, -183, -466,
	-111, -466, -181, -53, -54, 213, 90, 332, -250, 439,
	213, 528, 528, -207, -382, -382, -382, 529, -302, -459,
	521, -508, 327, 529, -409, -382, -382, -383, 178, 528,
	-393, 529, -509, 497, -382, -317, -509, -509, 529, -455,
	2, -466, 526, 2, -373, -247, -251, -244, -224, 161,
	198, 298, 238, 528, -383, -253, 528, 2, 29, -557,
	125, 217, -372, -558, 98, 432, 206, -410, -208, 529,
	529, 298, 298, -382, -429, 528, -213, -213, 529, 529,
	-382, 454, -458, 97, -456, 2, -533, -237, -382, 454,
	5, -213, -251, -213, -213, -235, 466, -262, -257, -179,
	-180, -466, -111, -178, 37, -286, -287, 205, -485, 238,
	-244, 238, -555, 498, 529, 533, 511, 511, -278, -190,
	-72, -73, 455, -422, -297, 37, 5, 528, -224, 308,
	528, -238, -564, -463, -217, -333, 294, -306, 90, -361,
	-389, -175, 528, 528, -283, 79, 91, 122, 197, 181,
	214, 424, 429, 27, -283, 529, -304, -304, 529, 528,
	-175, 529, 533, 27, 528, 27, 528, -253, -273, -317,
	-317, 529, -302, 58, 533, 529, 529, -383, -393, 529,
	-510, -511, -243, 527, 2, -488, -244, 293, 482, -382,
	-226, 528, -382, 37, 217, 126, 203, -285, 528, -371,
	482, 357, -235, -304, 528, 528, 528, 511, 178, 528,
	-433, -213, -256, 529, -538, 355, -115, -190, 325, 528,
	-284, 308, 114, 282, -188, -456, -456, 529, 37, -73,
	9, 37, -115, -304, -253, -304, 308, -463, -218, 529,
	-247, -333, -467, -467, -371, 529, 529, -467, -54, -306,
	-306, 529, 529, -515, 350, 384, 191, -317, -303, 529,
	533, 37, 147, 193, 529, -490, 266, -224, 529, 126,
	203, -286, -306, -285, 193, -253, -534, 482, 529, -291,
	-290, -288, -293, -292, -288, -317, -456, 97, 325, -317,
	-235, -541, 179, -540, 5, 10, -284, -253, -305, -411,
	-240, 80, 114, -285, -115, -115, 529, -358, 529, -253,
	-219, -376, 529, 529, -372, -371, -191, 498, 529, 529,
	529, 529, -516, -517, 48, 469, 105, -382, -516, -516,
	-511, -513, 161, 498, -491, -494, -493, 308, 411, 179,
	326, 529, 431, 494, -557, 529, 498, -297, -382, -371,
	529, 533, 487, 529, 533, 487, 529, 178, 529, -213,
	-177, 498, 44, 528, 529, 533, 342, 127, 136, -286,
	-555, -371, 528, -372, 528, 133, -175, -175, -285, -372,
	-376, -175, -518, 145, -517, 339, 174, 383, 339, 174,
	-518, -518, -244, 53, -493, 308, -494, 308, 476, 127,
	-376, 53, -490, -285, -290, 205, -292, 178, 325, 150,
	-540, 29, -306, -411, 384, 384, 2, -190, -284, -372,
	-304, -285, -304, 294, 476, -286, -285, 105, 189, 449,
	282, 32, 511, -492, 282, 372, 62, 405, -492, 511,
	-491, 528, 528, 390, 529, 2, -284, -285, 529, -286,
	529, 405, -191, -286, 383, 316, -517, -382, 22, 298,
	121, -382, -557, -317, -317, 312, -214, 62, 372, -286,
	-371, -191, -372, -325, -376, -191, 529, 529, -174, 528,
	-191, -372, -376, -285, -376, -376, -286, 454, -174, -376,
	-285, -286, 528, 529, -286, -191, -317, -191, -376, 529,
	-376, -286,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1195,
	1197, 1199, 1201, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 878, 880,
	0, 559, 561, 0, 883, 885, 0, 0, 581, 582,
	0, 1284, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1213, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1342, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1354, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1315, 1317,
	1319, 1321, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 1976, 1993,
	1994, 1995, 1998, 1999, 2000, 2001, 2002, 2003, 2394, 2475,
	2476, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	468, 469, 1040, 0, 533, 531, 1968, 534, 2210, 536,
	538, 406, 407, 408, 409, 410, 411, 0, 552, 544,
	551, 553, 555, 556, 557, 558, 528, 526, 0, 552,
	2028, 550, 1193, 1194, 1178, 1179, 2248, 1220, 0, 193,
	571, -2, -2, -2, 2359, -2, 603, -2, 610, 2363,
	2250, 615, 0, 617, -2, 620, 1196, 1198, 1200, 708,
	709, 1979, 0, 0, 0, 0, 34, 35, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	1090, 1091, 0, 201, 203, -2, -2, -2, -2, 0,
	0, 2288, 2076, 1936, 1995, 1939, 1934, 282, 284, 286,
	287, 0, 0, 0, 0, 0, 0, 312, 315, 317,
	-2, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 927, 928, 1144, 0, 0, 0, 0, 414,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 343,
	471, 472, 0, 1343, 1343, 0, 0, 0, 0, 256,
	247, 879, 881, 882, 0, 0, 0, 0, 560, 562,
	0, 0, 229, 884, 886, 887, 0, 0, 0, 0,
	0, 258, 0, 0, 576, 578, 580, 645, 647, 649,
	651, 653, 655, 657, 659, 662, 664, 666, 668, 670,
	672, 674, 676, 679, 681, 683, 685, 687, 689, 691,
	693, 695, 697, 699, 701, 703, 705, 715, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 799, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 718,
	720, 721, 722, 0, 779, 797, 798, 807, 707, 0,
	1080, 1344, 1222, 1203, 1217, 1222, 1205, 1206, 1207, 1208,
	1209, 1214, 1216, 1210, 1211, 1212, 37, 39, 41, 43,
	45, 47, 49, 51, 53, 365, 367, 369, 371, 373,
	376, 378, 380, -2, 1313, 1314, 420, 422, 424, 426,
	428, 430, 432, 563, 0, 565, 0, 719, -2, 0,
	1348, 1348, 1348, 0, 0, 1314, 1312, 0, 568, 569,
	624, 625, 1579, 0, 0, 0, 0, 0, 0, 0,
	1833, 1665, 0, 626, -2, 1696, 1698, 2334, 2359, 1832,
	1700, 1701, 1702, 1703, 1704, 0, 1706, 1707, 1708, 1709,
	1710, 1711, 0, 1713, 0, 1718, 1719, 1720, 0, 2341,
	1913, 1989, -2, 0, 0, 2347, 1985, 0, 1799, 1736,
	-2, -2, 2012, 1991, 1511, 1512, 1513, 1514, 1515, -2,
	-2, 2377, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 0, 2322, 2342, 2343, 2348, 2350, 2344,
	2331, 1761, 2088, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1538, 1547, -2, -2,
	-2, -2, -2, -2, -2, 2335, 2336, 2353, 2356, 2362,
	2367, 2368, 2340, 2349, 2376, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 1539, -2, -2, -2, -2, 1331, 2221, 1334, 1040,
	1332, 1316, 1318, 0, 1320, 0, 0, 0, 1325, 1351,
	1349, 0, 1392, 1329, 1330, 1410, 1410, 1434, 0, 1415,
	0, 1434, 1343, 1460, 0, 1421, 2240, 1737, 1738, 0,
	1995, 1990, -2, -2, 2374, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 535, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 1143, 573, 574, 0, 598,
	0, 602, 2330, -2, 0, 2259, -2, 606, 1223, 1227,
	1228, 1229, 1230, 1231, 0, 0, 0, 0, 1236, 0,
	0, 612, 0, 0, 599, 600, 618, 621, 0, 711,
	712, 713, 714, 63, 0, 2342, 1460, 65, 0, 1958,
	2020, 2021, 2022, 2023, 2024, 2375, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2377, 68, 0, 2342,
	72, 0, 2342, 0, -2, 79, 0, 1964, 82, 0,
	1961, 91, 0, 2342, 0, 1933, -2, 0, 178, 1972,
	0, 906, 1974, -2, 2342, 1088, 259, 260, 2008, 2009,
	2016, 2017, 2018, 2019, 0, 0, 0, 0, 871, 1930,
	1935, 872, 1954, 873, 1940, 0, 288, 289, 290, 291,
	292, 0, 293, 2342, 295, 296, 0, 298, 299, 2342,
	301, 302, 0, 304, 0, 214, 215, 320, 321, 0,
	323, 0, 2342, 0, 0, 0, 329, -2, 344, 0,
	341, 332, 333, 335, 336, 337, 338, 0, 384, 382,
	1969, 0, 899, 2342, 0, 903, -2, 1975, 0, 0,
	1123, -2, 2342, 1085, 0, 1129, 1125, 0, -2, 0,
	1341, 2342, 1240, 931, 932, 933, 934, 0, 403, 0,
	1253, 0, 1255, 0, 1274, 1466, 1410, 1410, 0, 345,
	346, 347, 348, 349, 2342, 0, 0, 0, 354, 0,
	356, 357, 358, 359, 360, 361, 362, 167, 2342, 437,
	464, 0, 167, 2342, 440, 167, 2342, 443, 0, 446,
	1142, 167, 2342, 449, 167, 2342, 452, 454, 167, 2342,
	458, 459, 461, 2342, 463, 261, 1189, 1190, 1191, 1192,
	0, -2, 522, 1978, -2, 474, 0, 475, 0, -2,
	0, 273, 0, 0, 888, 889, 890, 891, 892, 895,
	896, 897, 898, 1447, 232, 230, 0, 0, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 0, 0, 583,
	0, 0, 716, 717, 0, 0, 727, 728, 729, 0,
	273, 2251, 2218, 2108, 736, 0, 739, 742, -2, 0,
	0, 0, 0, 746, 0, 751, 752, 753, 0, 755,
	757, 877, 759, 0, 0, 761, 0, 765, 0, 768,
	0, 770, 0, 772, -2, -2, -2, -2, 783, -2,
	0, 786, 788, 0, 790, -2, 0, 799, 795, 796,
	0, 0, 0, 0, 815, 816, 0, 825, 0, 828,
	829, 830, 0, 832, 833, 0, 835, 836, 837, 838,
	0, 840, 841, -2, -2, 845, 847, 0, 854, 0,
	858, 0, 862, 0, 723, 724, 167, 1464, 1202, -2,
	1204, 0, -2, 0, 564, 0, 567, 1371, 1299, 1296,
	0, 1368, 1369, 1300, 0, 0, 0, 1307, 0, 1346,
	1347, 0, 0, 0, 1286, 1287, 0, 0, 0, 0,
	1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1844, 1845,
	1848, 1849, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 0, 0, 1855, 0, 1857, 0, 0, 0,
	0, 0, 0, 1644, 1646, 1921, 0, 0, 1854, 1584,
	1585, 1586, 1587, 1588, 1623, 1624, 0, 0, 1697, 1918,
	1917, 1699, 0, 1869, 0, 1712, -2, 0, 1833, 1864,
	0, 0, 1721, 1722, 1723, 0, 0, 1869, 0, 0,
	1912, 1733, 1734, 1576, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 1524, 0, 1526, 0, 1527,
	1528, 1535, 1548, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 1893, -2, 0, 0, 0,
	0, 1540, 0, 1333, 0, 0, 1396, 1922, 1926, 1927,
	1396, 1396, 0, 0, 1870, 1457, 1457, 0, 0, 1453,
	1453, 1453, 1451, 1434, 0, 1434, 1444, 0, 1434, 1434,
	0, -2, 1415, 0, 0, 1444, 0, 1428, 510, 512,
	514, 516, 517, 518, 520, 1461, 1462, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 2298, 2250, 540, 554, 1343, 0, 1872, 1483,
	1487, 0, 1489, 1490, 1491, 1492, 1493, 0, 0, 1484,
	-2, 1536, 1538, 1559, 2013, 2014, 2015, 1519, 1520, 1521,
	1522, 1523, 1531, 1518, 1518, 1518, 1529, 1558, 1550, 1558,
	1554, 1504, 1505, 1506, 1541, 1542, 1543, 1544, 0, 2298,
	2250, 546, 0, 0, 0, 0, 0, -2, 608, 613,
	614, 0, 1225, 0, 1232, 635, 636, 637, 1234, 1235,
	0, 1237, 611, 638, 639, 640, 641, 642, 643, 0,
	1942, 1943, 1944, 1945, 1948, 1949, 0, 0, 609, 628,
	616, 0, 622, 92, 1175, 0, 131, 0, 1175, 1175,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	116, 127, 104, 105, 0, 0, 0, 0, 0, 73,
	1062, 0, 1065, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 115, 0, 0, 110, 94,
	0, 0, 0, 117, 129, 0, 158, 160, 0, 0,
	0, 0, 0, 0, 177, 185, 0, 0, 0, 0,
	1086, 0, 1340, 0, 0, 2342, 0, 1447, 2146, -2,
	-2, 1447, 870, 0, 0, 1996, 1938, 0, 0, 0,
	0, 0, 0, 0, 322, 324, 0, 326, 327, 328,
	0, 1122, 0, 334, 374, 1011, 2342, 0, 0, 401,
	396, 0, 398, 0, 0, 1061, 2342, 1059, 1973, 0,
	1083, 0, 1040, 2342, 1971, 0, 0, 1130, 2005, 1139,
	1143, 1242, 0, 405, 0, 1256, 1258, 0, 0, 1467,
	0, 1469, 1470, 0, 351, 352, 353, 0, 433, 0,
	165, 166, 0, 167, 2342, 438, 0, 441, 0, 167,
	2342, 1928, 447, 0, 450, 0, 0, 456, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 236, 0, 1446, 0, 1447, 230,
	273, 273, 1447, 585, 1447, 587, 0, 0, 730, 731,
	0, 273, 273, 273, 737, 738, 740, 741, -2, -2,
	-2, 855, 743, 744, 822, 0, 0, 0, 821, 758,
	0, 864, 2236, 875, 822, 2076, 822, 2076, 822, 2076,
	769, 771, 774, 810, 818, 782, 787, 0, 0, 792,
	800, -2, 0, 802, 0, 804, 0, 806, 822, 823,
	826, 831, 834, 839, 0, 0, 0, 0, 0, 0,
	0, 1079, 0, 1215, 1371, 1299, 566, 1290, 1370, 1291,
	1298, 1301, 0, 0, 1303, 0, 1305, 0, 1366, 1367,
	1374, 1375, 0, 1385, 1386, 1378, 0, -2, 0, 0,
	1381, 1382, 1309, 0, 1326, 1327, 1328, 1355, 1358, 1153,
	0, 2475, 1580, 1478, 1581, 1582, 1957, 0, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, -2, -2,
	-2, -2, -2, -2, -2, -2, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, -2, -2, -2,
	1621, 1622, -2, 1856, 1858, 0, 1921, 0, -2, 0,
	-2, -2, -2, -2, 1641, 0, 1643, 1648, 1650, 1652,
	0, 0, 0, 0, 1920, 1662, 1904, 1905, 0, 0,
	1835, 1836, 1837, 1647, 0, 1666, 1919, 1916, 0, 0,
	1868, 1354, 1725, 0, 0, 0, 0, 1732, 1717, 1866,
	0, 1865, 0, 0, 0, 1876, 0, 1911, 1907, 0,
	1955, 1575, 1562, 1563, 1564, 1565, 1566, 1567, 1577, 0,
	1952, 1982, 1988, 1809, 0, 0, 0, 1762, 1763, 1764,
	1765, 1766, 0, 1768, 1769, 0, 1771, 1772, 0, 1774,
	1775, 0, 1777, 1778, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	0, 0, 1781, 0, 1879, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1783, 0, 1785, 1870, 1890, 0,
	0, 1667, 0, 0, 0, 1833, 0, 1788, 1870, 1898,
	0, 0, 0, 0, 0, 1870, 0, 1903, 0, 1795,
	0, 1797, 1335, 0, 0, 1473, 0, 0, 0, 1925,
	1473, 1473, 0, 1391, 0, 0, 1454, 1455, 1456, 0,
	0, 1457, 0, 1448, 1452, 1449, 1450, 1444, 1407, 0,
	0, 1959, 1444, 1413, 1443, 0, 1040, 1433, 1444, 1444,
	0, -2, 1417, 1434, 0, 0, 511, 513, 515, 519,
	521, 0, 0, 1354, -2, 0, -2, 1039, 0, 0,
	0, 0, 530, 532, 0, 0, 453, 0, 0, 524,
	0, 527, 0, 1474, 1477, 0, 0, 1488, 1494, 1495,
	0, -2, 0, 0, 1560, 0, 0, 0, 0, 0,
	196, 0, 601, 0, 1224, 1233, 0, 632, 0, 634,
	0, 1946, 1950, 1947, 1951, 0, 623, 0, 0, 0,
	0, 1174, 0, 135, 2342, 0, 169, 0, 0, 1004,
	1965, 0, 0, 0, 0, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 1063,
	1064, 1066, 1073, 1075, 0, 1069, 1953, 0, 0, 1070,
	0, 1072, 1074, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 107, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 1116, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 0, 0, -2, 0, 0, 0,
	0, 206, 0, 264, 1931, 1941, 0, 893, 894, 294,
	297, 300, 303, 202, 0, 330, 0, 0, 937, 912,
	0, 0, 383, 273, 0, 0, 397, 2005, 901, 182,
	183, 184, 1057, 1060, 0, 1040, 2342, 1097, 0, 0,
	0, 0, 0, 0, 1128, 0, 2342, 1960, 2004, 2005,
	1244, 1250, 0, 1473, 0, 1272, 1259, 0, 0, 0,
	1272, 1276, 1277, 1279, 1280, 0, 0, 1468, 0, 355,
	465, 167, 435, 0, 167, 167, 444, 0, 0, 167,
	455, 167, 460, 167, 262, 462, 473, 523, 1343, 1343,
	273, 271, 2193, 269, 266, 268, 0, 0, 0, 938,
	940, 941, 942, 943, 0, 2005, 0, 2135, 2005, 0,
	1262, 1264, 0, 226, 0, 233, 231, 236, 0, 0,
	395, 584, 589, 725, 0, 273, 733, 734, 735, 776,
	812, 820, 745, 747, 748, 749, 0, 876, 874, 760,
	822, 763, 822, 766, 822, 785, 789, 794, 801, 0,
	0, 0, 814, 0, 0, 0, 0, 0, 0, 0,
	859, 860, 861, 863, 1465, 1294, 1295, 1297, 0, 1306,
	0, 0, 1380, -2, -2, 1379, 1383, 1384, -2, -2,
	-2, -2, 1302, 0, 1311, 1308, 0, 1365, 1151, 1152,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1663,
	0, -2, 1642, 1645, 1649, 1651, 1653, 0, 0, 0,
	0, 0, 0, 1859, 0, 1861, 1664, 1914, 1917, 1831,
	0, 0, 1353, 1354, 1354, 0, 1731, 0, 1867, 0,
	1874, 1875, 0, 1724, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	1767, 1770, 1773, 1776, 0, 0, 0, 0, 1756, 0,
	0, 0, 1760, 1530, 1516, 0, 1558, 1556, 1557, 1551,
	1558, 1555, 1508, 0, 1507, 0, 1780, 0, 1782, 1784,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 1671, 1672, 1787,
	1896, 1897, 0, 0, 0, 0, 0, 0, 1793, 0,
	1902, 1794, 1796, 1343, 0, 1336, 0, 1393, 1388, 1472,
	0, 1923, 1447, 1395, 1397, 1924, 1962, 1388, 1388, 0,
	1871, 0, 0, 1438, 0, 0, 0, 1440, 1411, 0,
	0, 1405, 0, 1401, 1402, 1403, 1404, 1412, 1040, 1442,
	1414, 1418, 1982, 0, 1444, 0, 1429, 0, 1431, 1463,
	0, 1423, 1426, 0, 0, 1997, 274, 0, 305, 309,
	310, 306, 307, 308, 539, 0, 0, 0, 0, 1873,
	0, 1479, 0, 1485, 0, 0, 0, 0, 545, 0,
	0, 0, 192, 0, 597, -2, 630, 631, 633, 0,
	629, 132, 1175, 0, 0, 1156, 1158, 0, 137, 2342,
	146, 0, 978, 0, 1963, 0, 0, 0, 0, 0,
	1177, 0, 0, 2342, 167, 2342, 167, 149, 152, 0,
	157, 154, 155, 0, 0, 969, 93, 1175, 0, 96,
	100, 108, 0, 0, 0, 114, 0, 0, 0, 1160,
	1166, 0, 0, 1067, 1068, 1071, 1077, 74, 0, 0,
	1164, 1170, 80, 0, 1155, 159, 98, 102, 109, 0,
	1172, 95, 0, 181, 0, 0, 0, 173, 0, 174,
	175, 186, 0, 167, 2342, 0, 904, 905, 1117, 1081,
	1082, 0, 1087, 0, 0, 0, 1447, 198, 0, 1447,
	206, 0, 1937, 0, 0, 0, 0, 0, 0, 936,
	1022, 0, 909, 0, 0, 0, 389, 385, 0, 394,
	400, 399, 900, 0, 0, 0, 0, -2, 0, 0,
	1132, 1126, 1127, 0, 0, 0, 2342, 1246, 1250, 0,
	1249, 1341, 1354, 404, 1251, 1272, 0, 0, 0, 1261,
	1257, 1254, 1473, 0, 0, 0, 0, 0, 350, 434,
	167, 439, 442, 1929, 167, 448, 451, 457, 476, 477,
	248, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	947, 0, 2005, 2005, 0, 1967, 0, 0, 0, 0,
	234, 0, 237, 0, 0, 0, 242, 243, 244, 245,
	246, 227, 1447, 0, 586, 0, 0, 732, 0, 762,
	764, 767, 803, 805, 822, 848, 849, 964, 0, 964,
	0, 0, 1304, 0, 1377, 1310, 1359, 1360, 0, 1153,
	0, 1583, 1626, 0, 0, -2, 0, 0, 1630, 0,
	0, 0, -2, 0, 0, 0, 1860, 1862, 0, 1916,
	1726, 0, 0, 0, 1730, 1714, 1715, 0, 1834, 1877,
	1906, 1910, 0, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	0, 1956, 1983, 1987, 1807, 1808, 1812, 1970, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 1553, 0, 0, 1878, 1889, 1891, 1668, 1669, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, -2,
	-2, -2, 1686, 1687, 1688, -2, -2, -2, 0, 0,
	0, 1892, 1894, 1895, 1899, 1900, 0, 1790, 1791, 1792,
	1901, 0, 1343, 1337, 1390, 0, 1471, 1394, 0, 1390,
	1390, 1350, 1436, 0, 0, 1459, 0, 1408, 0, 1409,
	0, 1441, 0, 1416, 1419, 1420, 1430, 0, 1422, 0,
	1425, 0, 1726, -2, 275, 277, 0, 280, 542, 543,
	541, 525, 0, 0, 1481, 0, 0, 1533, 1537, 1561,
	548, 549, 547, 194, 0, 1445, 0, 0, 0, 0,
	168, 976, 1003, 0, 0, 0, 1146, 1153, 0, 0,
	1009, 139, 0, 0, 0, 147, 0, 0, 144, 0,
	151, 156, 0, 0, 0, 0, 0, 0, 111, 112,
	113, 0, 118, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 1150, 0,
	0, 188, 0, 0, 0, 1120, 1121, 1161, 1167, 0,
	0, 206, 204, 0, 207, 0, 210, 211, 0, 206,
	200, 0, 0, 325, 1040, 331, 958, 1010, 0, 1012,
	0, 910, 0, 0, 1011, 381, 0, 388, 0, 0,
	1061, 0, 0, 1084, 1095, 1040, 0, 1131, 1133, 1141,
	0, 0, 0, 1248, 1250, 0, 1241, 1242, 1373, 1252,
	1270, -2, 0, 0, 1354, 1278, 1275, 1281, 1282, 0,
	436, 445, 270, 0, 265, 267, 0, 251, 0, 0,
	939, 944, 0, 0, 0, 0, 0, 1263, 1265, 0,
	0, 0, 0, 0, 0, 236, 257, 0, 726, 750,
	813, 850, 963, 0, 0, 852, 0, 0, 1376, 1363,
	1364, 1361, 1153, 1628, 1632, 0, 0, 0, 1634, -2,
	0, 1656, -2, -2, 1863, 1915, 1705, 1354, 1727, 1729,
	1716, 1909, 1578, 0, 1814, 1811, 0, 1798, 0, 1751,
	1752, 0, 0, 1755, 1757, 1758, 1759, 1517, 1510, 1509,
	1888, 0, 0, 0, 0, 1789, 1338, 0, 1803, 0,
	0, 1398, 1803, 1803, 1437, 0, 1439, 1406, 1399, 0,
	1983, 1432, 1424, 0, 0, 278, 0, 1475, 1480, 0,
	1486, 1532, 195, 133, 134, 136, 0, 977, 0, 980,
	0, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	0, 997, 0, 1026, 1036, 0, 1365, 0, 0, 0,
	141, 162, 0, 0, 1176, 0, 0, 167, 167, 0,
	0, 1157, 1159, 0, 0, 0, 0, 121, 0, 0,
	1162, 1168, 1165, 1171, 0, 0, 0, 1173, 179, 180,
	0, 167, 0, 172, 167, 167, 1150, 0, 0, 0,
	197, 0, 0, 0, 0, 199, 263, 206, 0, 966,
	0, 1022, 1014, 1015, 1016, 0, 1021, 1023, 0, 0,
	924, 911, 0, 920, 0, 0, 937, 912, 0, 386,
	902, 1058, 1092, 1040, 0, 1124, 0, 0, 0, 0,
	0, 0, 1238, 1250, 0, 1243, 1244, 1272, 1372, 0,
	0, 0, 1260, 1373, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 238, 0, 239,
	240, 241, 228, 588, 590, 0, 0, 596, 962, 0,
	0, 0, 0, 1362, 1636, -2, -2, 1657, 0, 1984,
	1986, 1354, 0, 1800, 1356, 0, 0, -2, 0, 0,
	0, 1339, 1322, 0, 1389, 1387, 1323, 1324, 1458, 0,
	1427, 279, 0, 1482, 138, 0, 981, 982, 1966, 984,
	0, 986, 989, 0, 992, 2007, 0, 996, 0, 1005,
	1027, 0, 958, 0, 1032, 1033, 1034, 1147, 1148, 1038,
	0, 140, 142, 161, 1150, 0, 143, 150, 0, 0,
	97, 0, 0, 2067, 124, 122, 120, 1154, 99, 0,
	181, 187, 1149, 176, 189, 167, 0, 1163, 1169, 208,
	0, 209, 212, 0, 0, 912, 965, 0, 1013, 0,
	1024, 1025, 914, 0, 913, 0, 0, 0, 0, 0,
	387, 390, 0, 393, 0, 0, 1134, 0, 1140, 0,
	0, 0, 0, 1245, 1246, 402, 1266, 0, 0, 1272,
	1283, 250, 0, 0, 945, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 946, 1038, 0, 0, 1002, 0,
	255, 235, 0, 592, 0, 594, 0, 851, 853, 0,
	0, 1728, 1818, 0, 0, 1753, 1754, -2, 0, 1694,
	1802, 1804, 0, 1400, 1476, 979, 983, 0, 0, 0,
	1044, 0, 0, 998, 0, 1030, 1031, 966, 0, 958,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	171, 190, 1150, 205, 222, 0, 1093, 914, 0, 0,
	922, 0, 925, 0, 921, 918, 919, 958, 0, 391,
	392, 0, 1096, 0, 1141, 0, 0, 1247, 1248, 1473,
	1269, 1273, 0, 0, 1036, 1038, 912, 0, 591, 0,
	0, 856, 857, 0, 0, 0, 0, 1813, 1357, 1695,
	0, 0, 0, 0, 991, 1049, 0, 0, 0, 1028,
	1029, 1026, 0, 1007, 0, 1040, 145, 0, 1038, 0,
	970, 0, 0, 973, 0, 0, 125, 2067, 123, 0,
	167, 225, 0, 219, 217, 218, 907, 0, 0, 1018,
	1020, 0, 926, 966, 924, 1094, 1038, 0, 1036, 0,
	1239, 0, 273, 273, 958, 1036, 1473, 0, 273, 593,
	595, 1810, 1830, 1819, -2, 2301, 2073, 0, 1830, 1830,
	1805, 1806, 0, 0, 993, 1045, 1046, 0, 1041, 1042,
	1043, 2006, 994, 995, 1473, 1035, 0, 1044, 163, 958,
	967, 0, 0, 968, 0, 0, 128, 0, 130, 191,
	213, 0, 0, 0, 1017, 0, 0, 0, 0, 912,
	914, 1036, 0, 958, 0, 0, 252, 253, 966, 958,
	1001, 254, 1815, 0, 0, 1821, 1822, 1823, 1824, 1825,
	1816, 1817, 985, 0, 1047, 0, 1048, 0, 0, 0,
	1006, 0, 1049, 148, 971, 0, 974, 0, 126, 0,
	220, 221, 0, 1019, 915, 0, 917, 914, 923, 958,
	0, 966, 0, 1267, 0, 912, 966, 0, 1827, 1828,
	0, 0, 0, 1050, 0, 1053, 1054, 0, 1051, 0,
	1026, 0, 0, 0, 961, 916, 908, 966, 1038, 912,
	1036, 0, 1473, 912, 1826, 1829, 1820, 990, 1052, 1055,
	1056, 1037, 1008, 0, 0, 0, 957, 959, 960, 912,
	1036, 1473, 958, 1473, 999, 1473, 966, 0, 223, 0,
	1473, 958, 1137, 966, 1268, 1000, 972, 0, 0, 1135,
	966, 912, 0, 224, 912, 1473, 0, 1473, 1138, 966,
	1136, 975,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 517, 3, 523, 518, 3,
	528, 529, 521, 519, 533, 520, 530, 522, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 536, 3,
	509, 511, 510, 514, 532, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 526, 3, 527, 524, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 534, 516, 535, 512,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 513, 57852, 515, 57853, 525, 57854, 531,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1224
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1249
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1365
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1386
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1390
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1432
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1464
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1497
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1536
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1550
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1587
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1604
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1615
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1644
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1654
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1663
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1674
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1680
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1711
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1831
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2041
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2182
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2217
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2449
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2493
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2588
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2612
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2715
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2875
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2894
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2941
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2945
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3089
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3124
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3152
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3453
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3477
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3485
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3562
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3595
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4293
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4356
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4365
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4684
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4804
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4825
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4851
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4894
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4902
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4939
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4962
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4978
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5118
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "RESUME")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5394
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5409
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{

			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5443
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5459
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5464
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5491
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5505
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5520
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5618
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.str = ""
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5734
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5952
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5990
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6070
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6147
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6231
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6240
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = true
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{

			sqlVAL.union.val = true
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = false
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6367
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6381
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6393
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6405
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6415
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6425
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = nil
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6546
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6548
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6550
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6554
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6592
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6610
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6629
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6646
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = false
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = true
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = true
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = false
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6721
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.str = ""
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6774
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6780
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6850
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6856
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6868
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6874
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6888
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6894
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6911
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6912
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6916
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6927
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7023
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7027
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7229
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7409
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7633
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7668
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7669
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = true
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = nil
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = true
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = false
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = false
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = true
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7889
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7951
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7956
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8073
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8074
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8078
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8133
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8170
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8175
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8222
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8271
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8317
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8347
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8380
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = nil
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.str = tree.AstFull
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.str = tree.AstRight
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.str = tree.AstInner
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8500
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.str = tree.AstHash
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8649
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8657
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8676
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8686
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8706
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8755
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8768
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = types.Geography
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8793
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8801
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = nil
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = types.Int2
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = types.Int
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = types.Float4
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = types.Float
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = types.Bool
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = types.Float
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8927
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8933
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8955
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = types.String
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = true
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = false
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = types.Date
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9004
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9012
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9026
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9043
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9060
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = true
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = false
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = false
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = types.Interval
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9084
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = nil
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9213
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9591
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9812
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9838
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9862
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9892
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9903
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9904
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9928
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10190
		{
			return unimplemented(sqllex, "treat")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.str = ""
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10365
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10462
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.Any
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = tree.Some
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.All
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = tree.Div
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = tree.LT
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = tree.GT
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.LE
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = tree.GE
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = tree.NE
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.Like
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10824
		{
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10977
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10993
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11042
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11242
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.str = ""
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
