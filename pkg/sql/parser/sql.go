// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:917
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14376

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1692,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	270, 433,
	-2, 0,
	-1, 70,
	8, 880,
	29, 880,
	614, 880,
	615, 880,
	-2, 0,
	-1, 76,
	252, 258,
	537, 258,
	-2, 0,
	-1, 90,
	240, 1425,
	254, 1425,
	270, 429,
	407, 429,
	418, 1172,
	459, 429,
	473, 1172,
	522, 1172,
	549, 429,
	576, 1172,
	-2, 0,
	-1, 96,
	137, 1692,
	247, 1692,
	560, 1692,
	561, 1692,
	-2, 0,
	-1, 114,
	156, 1663,
	176, 1663,
	189, 1663,
	250, 1663,
	283, 1663,
	356, 1663,
	367, 1663,
	555, 1663,
	-2, 1634,
	-1, 156,
	164, 1004,
	269, 1004,
	410, 965,
	478, 965,
	521, 965,
	540, 1004,
	542, 965,
	-2, 0,
	-1, 161,
	4, 1694,
	21, 1694,
	22, 1694,
	23, 1694,
	24, 1694,
	25, 1694,
	26, 1694,
	27, 1694,
	28, 1694,
	30, 1694,
	31, 1694,
	37, 1694,
	41, 1694,
	43, 1694,
	44, 1694,
	46, 1694,
	47, 1694,
	48, 1694,
	49, 1694,
	50, 1694,
	51, 1694,
	52, 1694,
	53, 1694,
	54, 1694,
	56, 1694,
	57, 1694,
	58, 1694,
	59, 1694,
	61, 1694,
	62, 1694,
	63, 1694,
	64, 1694,
	65, 1694,
	66, 1694,
	67, 1694,
	71, 1694,
	72, 1694,
	73, 1694,
	74, 1694,
	76, 1694,
	77, 1694,
	78, 1694,
	82, 1694,
	83, 1694,
	84, 1694,
	85, 1694,
	86, 1694,
	87, 1694,
	88, 1694,
	89, 1694,
	92, 1694,
	93, 1694,
	94, 1694,
	95, 1694,
	96, 1694,
	98, 1694,
	100, 1694,
	101, 1694,
	102, 1694,
	103, 1694,
	104, 1694,
	105, 1694,
	107, 1694,
	108, 1694,
	109, 1694,
	111, 1694,
	112, 1694,
	113, 1694,
	121, 1694,
	122, 1694,
	123, 1694,
	124, 1694,
	125, 1694,
	127, 1694,
	128, 1694,
	129, 1694,
	130, 1694,
	132, 1694,
	133, 1694,
	134, 1694,
	136, 1694,
	137, 1694,
	138, 1694,
	140, 1694,
	141, 1694,
	142, 1694,
	145, 1694,
	146, 1694,
	147, 1694,
	149, 1694,
	150, 1694,
	151, 1694,
	153, 1694,
	154, 1694,
	155, 1694,
	157, 1694,
	158, 1694,
	159, 1694,
	160, 1694,
	161, 1694,
	162, 1694,
	163, 1694,
	164, 1694,
	165, 1694,
	166, 1694,
	167, 1694,
	168, 1694,
	169, 1694,
	170, 1694,
	171, 1694,
	172, 1694,
	173, 1694,
	175, 1694,
	181, 1694,
	182, 1694,
	183, 1694,
	184, 1694,
	188, 1694,
	190, 1694,
	191, 1694,
	192, 1694,
	194, 1694,
	197, 1694,
	198, 1694,
	199, 1694,
	200, 1694,
	201, 1694,
	202, 1694,
	203, 1694,
	204, 1694,
	205, 1694,
	206, 1694,
	207, 1694,
	208, 1694,
	209, 1694,
	210, 1694,
	212, 1694,
	213, 1694,
	215, 1694,
	216, 1694,
	218, 1694,
	219, 1694,
	220, 1694,
	221, 1694,
	222, 1694,
	223, 1694,
	224, 1694,
	225, 1694,
	226, 1694,
	227, 1694,
	229, 1694,
	230, 1694,
	232, 1694,
	233, 1694,
	234, 1694,
	235, 1694,
	236, 1694,
	240, 1694,
	241, 1694,
	242, 1694,
	243, 1694,
	246, 1694,
	247, 1694,
	248, 1694,
	249, 1694,
	251, 1694,
	253, 1694,
	254, 1694,
	256, 1694,
	258, 1694,
	259, 1694,
	260, 1694,
	262, 1694,
	266, 1694,
	267, 1694,
	268, 1694,
	269, 1694,
	270, 1694,
	271, 1694,
	273, 1694,
	274, 1694,
	275, 1694,
	277, 1694,
	278, 1694,
	280, 1694,
	281, 1694,
	284, 1694,
	285, 1694,
	286, 1694,
	287, 1694,
	288, 1694,
	289, 1694,
	290, 1694,
	293, 1694,
	294, 1694,
	295, 1694,
	296, 1694,
	298, 1694,
	299, 1694,
	300, 1694,
	301, 1694,
	302, 1694,
	303, 1694,
	304, 1694,
	305, 1694,
	306, 1694,
	307, 1694,
	308, 1694,
	309, 1694,
	310, 1694,
	311, 1694,
	312, 1694,
	313, 1694,
	314, 1694,
	315, 1694,
	316, 1694,
	317, 1694,
	318, 1694,
	319, 1694,
	321, 1694,
	323, 1694,
	324, 1694,
	325, 1694,
	326, 1694,
	327, 1694,
	328, 1694,
	329, 1694,
	330, 1694,
	331, 1694,
	332, 1694,
	333, 1694,
	334, 1694,
	335, 1694,
	336, 1694,
	337, 1694,
	338, 1694,
	339, 1694,
	341, 1694,
	342, 1694,
	344, 1694,
	346, 1694,
	347, 1694,
	348, 1694,
	349, 1694,
	351, 1694,
	352, 1694,
	353, 1694,
	354, 1694,
	355, 1694,
	358, 1694,
	360, 1694,
	362, 1694,
	363, 1694,
	364, 1694,
	365, 1694,
	368, 1694,
	369, 1694,
	370, 1694,
	372, 1694,
	374, 1694,
	375, 1694,
	376, 1694,
	377, 1694,
	378, 1694,
	379, 1694,
	380, 1694,
	381, 1694,
	382, 1694,
	383, 1694,
	384, 1694,
	385, 1694,
	386, 1694,
	388, 1694,
	389, 1694,
	390, 1694,
	391, 1694,
	392, 1694,
	393, 1694,
	394, 1694,
	395, 1694,
	396, 1694,
	397, 1694,
	398, 1694,
	399, 1694,
	400, 1694,
	401, 1694,
	402, 1694,
	404, 1694,
	405, 1694,
	406, 1694,
	408, 1694,
	409, 1694,
	410, 1694,
	411, 1694,
	412, 1694,
	413, 1694,
	414, 1694,
	415, 1694,
	416, 1694,
	417, 1694,
	418, 1694,
	419, 1694,
	420, 1694,
	422, 1694,
	424, 1694,
	425, 1694,
	426, 1694,
	432, 1694,
	433, 1694,
	434, 1694,
	436, 1694,
	437, 1694,
	438, 1694,
	439, 1694,
	440, 1694,
	441, 1694,
	442, 1694,
	443, 1694,
	444, 1694,
	445, 1694,
	447, 1694,
	448, 1694,
	449, 1694,
	451, 1694,
	452, 1694,
	453, 1694,
	454, 1694,
	455, 1694,
	456, 1694,
	457, 1694,
	459, 1694,
	460, 1694,
	461, 1694,
	462, 1694,
	463, 1694,
	464, 1694,
	465, 1694,
	466, 1694,
	467, 1694,
	468, 1694,
	469, 1694,
	470, 1694,
	471, 1694,
	473, 1694,
	474, 1694,
	475, 1694,
	476, 1694,
	477, 1694,
	478, 1694,
	480, 1694,
	481, 1694,
	482, 1694,
	483, 1694,
	484, 1694,
	485, 1694,
	487, 1694,
	488, 1694,
	489, 1694,
	490, 1694,
	491, 1694,
	492, 1694,
	493, 1694,
	494, 1694,
	496, 1694,
	498, 1694,
	499, 1694,
	500, 1694,
	501, 1694,
	502, 1694,
	503, 1694,
	504, 1694,
	505, 1694,
	506, 1694,
	507, 1694,
	508, 1694,
	509, 1694,
	510, 1694,
	511, 1694,
	512, 1694,
	513, 1694,
	514, 1694,
	515, 1694,
	517, 1694,
	518, 1694,
	520, 1694,
	521, 1694,
	523, 1694,
	524, 1694,
	525, 1694,
	526, 1694,
	527, 1694,
	528, 1694,
	529, 1694,
	530, 1694,
	532, 1694,
	533, 1694,
	534, 1694,
	535, 1694,
	536, 1694,
	538, 1694,
	540, 1694,
	541, 1694,
	542, 1694,
	543, 1694,
	544, 1694,
	545, 1694,
	546, 1694,
	548, 1694,
	549, 1694,
	550, 1694,
	551, 1694,
	553, 1694,
	554, 1694,
	557, 1694,
	558, 1694,
	559, 1694,
	560, 1694,
	561, 1694,
	562, 1694,
	563, 1694,
	564, 1694,
	566, 1694,
	569, 1694,
	570, 1694,
	571, 1694,
	572, 1694,
	573, 1694,
	574, 1694,
	576, 1694,
	577, 1694,
	578, 1694,
	579, 1694,
	580, 1694,
	581, 1694,
	582, 1694,
	583, 1694,
	588, 1694,
	589, 1694,
	590, 1694,
	591, 1694,
	592, 1694,
	593, 1694,
	-2, 0,
	-1, 162,
	1, 1542,
	135, 1542,
	258, 1542,
	343, 1542,
	405, 1542,
	414, 1542,
	597, 1542,
	627, 1542,
	-2, 0,
	-1, 164,
	1, 1542,
	627, 1542,
	-2, 0,
	-1, 165,
	1, 1542,
	627, 1542,
	-2, 0,
	-1, 166,
	1, 1542,
	537, 1542,
	627, 1542,
	-2, 0,
	-1, 198,
	156, 1662,
	176, 1662,
	189, 1662,
	250, 1662,
	283, 1662,
	356, 1662,
	367, 1662,
	555, 1662,
	-2, 1637,
	-1, 245,
	4, 1701,
	5, 1701,
	6, 1701,
	7, 1701,
	8, 1701,
	9, 1701,
	10, 1701,
	21, 1701,
	22, 1701,
	23, 1701,
	24, 1701,
	25, 1701,
	26, 1701,
	27, 1701,
	28, 1701,
	30, 1701,
	31, 1701,
	37, 1701,
	38, 1701,
	41, 1701,
	43, 1701,
	44, 1701,
	45, 1701,
	46, 1701,
	47, 1701,
	48, 1701,
	49, 1701,
	50, 1701,
	51, 1701,
	52, 1701,
	53, 1701,
	54, 1701,
	56, 1701,
	57, 1701,
	58, 1701,
	59, 1701,
	61, 1701,
	62, 1701,
	63, 1701,
	64, 1701,
	65, 1701,
	66, 1701,
	67, 1701,
	68, 1701,
	69, 1701,
	70, 1701,
	71, 1701,
	72, 1701,
	73, 1701,
	74, 1701,
	76, 1701,
	77, 1701,
	78, 1701,
	80, 1701,
	82, 1701,
	83, 1701,
	84, 1701,
	85, 1701,
	86, 1701,
	87, 1701,
	88, 1701,
	89, 1701,
	92, 1701,
	93, 1701,
	94, 1701,
	95, 1701,
	96, 1701,
	98, 1701,
	100, 1701,
	101, 1701,
	102, 1701,
	103, 1701,
	104, 1701,
	105, 1701,
	107, 1701,
	108, 1701,
	109, 1701,
	110, 1701,
	111, 1701,
	112, 1701,
	113, 1701,
	114, 1701,
	115, 1701,
	116, 1701,
	117, 1701,
	118, 1701,
	119, 1701,
	120, 1701,
	121, 1701,
	122, 1701,
	123, 1701,
	124, 1701,
	125, 1701,
	126, 1701,
	127, 1701,
	128, 1701,
	129, 1701,
	130, 1701,
	131, 1701,
	132, 1701,
	133, 1701,
	134, 1701,
	136, 1701,
	137, 1701,
	138, 1701,
	140, 1701,
	141, 1701,
	142, 1701,
	145, 1701,
	146, 1701,
	147, 1701,
	149, 1701,
	150, 1701,
	151, 1701,
	153, 1701,
	154, 1701,
	155, 1701,
	157, 1701,
	158, 1701,
	159, 1701,
	160, 1701,
	161, 1701,
	162, 1701,
	163, 1701,
	164, 1701,
	165, 1701,
	166, 1701,
	167, 1701,
	168, 1701,
	169, 1701,
	170, 1701,
	171, 1701,
	172, 1701,
	173, 1701,
	174, 1701,
	175, 1701,
	181, 1701,
	182, 1701,
	183, 1701,
	184, 1701,
	188, 1701,
	190, 1701,
	191, 1701,
	192, 1701,
	194, 1701,
	196, 1701,
	197, 1701,
	198, 1701,
	199, 1701,
	200, 1701,
	201, 1701,
	202, 1701,
	203, 1701,
	204, 1701,
	205, 1701,
	206, 1701,
	207, 1701,
	208, 1701,
	209, 1701,
	210, 1701,
	212, 1701,
	213, 1701,
	215, 1701,
	216, 1701,
	218, 1701,
	219, 1701,
	220, 1701,
	221, 1701,
	222, 1701,
	223, 1701,
	224, 1701,
	225, 1701,
	226, 1701,
	227, 1701,
	228, 1701,
	229, 1701,
	230, 1701,
	232, 1701,
	233, 1701,
	234, 1701,
	235, 1701,
	236, 1701,
	240, 1701,
	241, 1701,
	242, 1701,
	243, 1701,
	245, 1701,
	246, 1701,
	247, 1701,
	248, 1701,
	249, 1701,
	251, 1701,
	253, 1701,
	254, 1701,
	255, 1701,
	256, 1701,
	257, 1701,
	258, 1701,
	259, 1701,
	260, 1701,
	261, 1701,
	262, 1701,
	266, 1701,
	267, 1701,
	268, 1701,
	269, 1701,
	270, 1701,
	271, 1701,
	273, 1701,
	274, 1701,
	275, 1701,
	277, 1701,
	278, 1701,
	279, 1701,
	280, 1701,
	281, 1701,
	282, 1701,
	284, 1701,
	285, 1701,
	286, 1701,
	287, 1701,
	288, 1701,
	289, 1701,
	290, 1701,
	291, 1701,
	292, 1701,
	293, 1701,
	294, 1701,
	295, 1701,
	296, 1701,
	298, 1701,
	299, 1701,
	300, 1701,
	301, 1701,
	302, 1701,
	303, 1701,
	304, 1701,
	305, 1701,
	306, 1701,
	307, 1701,
	308, 1701,
	309, 1701,
	310, 1701,
	311, 1701,
	312, 1701,
	313, 1701,
	314, 1701,
	315, 1701,
	316, 1701,
	317, 1701,
	318, 1701,
	319, 1701,
	321, 1701,
	322, 1701,
	323, 1701,
	324, 1701,
	325, 1701,
	326, 1701,
	327, 1701,
	328, 1701,
	329, 1701,
	330, 1701,
	331, 1701,
	332, 1701,
	333, 1701,
	334, 1701,
	335, 1701,
	336, 1701,
	337, 1701,
	338, 1701,
	339, 1701,
	340, 1701,
	341, 1701,
	342, 1701,
	343, 1701,
	344, 1701,
	345, 1701,
	346, 1701,
	347, 1701,
	348, 1701,
	349, 1701,
	350, 1701,
	351, 1701,
	352, 1701,
	353, 1701,
	354, 1701,
	355, 1701,
	358, 1701,
	360, 1701,
	363, 1701,
	364, 1701,
	365, 1701,
	368, 1701,
	369, 1701,
	370, 1701,
	371, 1701,
	372, 1701,
	373, 1701,
	374, 1701,
	375, 1701,
	376, 1701,
	377, 1701,
	378, 1701,
	379, 1701,
	380, 1701,
	381, 1701,
	382, 1701,
	383, 1701,
	384, 1701,
	385, 1701,
	386, 1701,
	388, 1701,
	389, 1701,
	390, 1701,
	391, 1701,
	392, 1701,
	393, 1701,
	394, 1701,
	395, 1701,
	396, 1701,
	397, 1701,
	398, 1701,
	399, 1701,
	400, 1701,
	401, 1701,
	402, 1701,
	404, 1701,
	405, 1701,
	406, 1701,
	408, 1701,
	409, 1701,
	410, 1701,
	411, 1701,
	412, 1701,
	413, 1701,
	414, 1701,
	415, 1701,
	416, 1701,
	417, 1701,
	418, 1701,
	419, 1701,
	420, 1701,
	422, 1701,
	424, 1701,
	425, 1701,
	426, 1701,
	432, 1701,
	433, 1701,
	434, 1701,
	436, 1701,
	437, 1701,
	438, 1701,
	439, 1701,
	440, 1701,
	441, 1701,
	442, 1701,
	443, 1701,
	444, 1701,
	445, 1701,
	447, 1701,
	448, 1701,
	449, 1701,
	450, 1701,
	451, 1701,
	452, 1701,
	453, 1701,
	454, 1701,
	455, 1701,
	456, 1701,
	457, 1701,
	459, 1701,
	460, 1701,
	461, 1701,
	462, 1701,
	463, 1701,
	464, 1701,
	465, 1701,
	466, 1701,
	467, 1701,
	468, 1701,
	469, 1701,
	470, 1701,
	471, 1701,
	473, 1701,
	474, 1701,
	475, 1701,
	476, 1701,
	477, 1701,
	478, 1701,
	479, 1701,
	480, 1701,
	481, 1701,
	482, 1701,
	483, 1701,
	484, 1701,
	485, 1701,
	486, 1701,
	487, 1701,
	488, 1701,
	489, 1701,
	490, 1701,
	491, 1701,
	492, 1701,
	493, 1701,
	494, 1701,
	496, 1701,
	498, 1701,
	499, 1701,
	500, 1701,
	501, 1701,
	502, 1701,
	503, 1701,
	504, 1701,
	505, 1701,
	506, 1701,
	507, 1701,
	508, 1701,
	509, 1701,
	510, 1701,
	511, 1701,
	512, 1701,
	513, 1701,
	514, 1701,
	515, 1701,
	517, 1701,
	518, 1701,
	519, 1701,
	520, 1701,
	521, 1701,
	523, 1701,
	524, 1701,
	525, 1701,
	526, 1701,
	527, 1701,
	528, 1701,
	529, 1701,
	530, 1701,
	532, 1701,
	533, 1701,
	534, 1701,
	535, 1701,
	536, 1701,
	538, 1701,
	540, 1701,
	541, 1701,
	542, 1701,
	543, 1701,
	544, 1701,
	545, 1701,
	546, 1701,
	547, 1701,
	548, 1701,
	549, 1701,
	550, 1701,
	551, 1701,
	553, 1701,
	554, 1701,
	556, 1701,
	557, 1701,
	558, 1701,
	559, 1701,
	560, 1701,
	561, 1701,
	562, 1701,
	563, 1701,
	564, 1701,
	565, 1701,
	566, 1701,
	569, 1701,
	570, 1701,
	571, 1701,
	572, 1701,
	573, 1701,
	574, 1701,
	576, 1701,
	577, 1701,
	578, 1701,
	579, 1701,
	580, 1701,
	581, 1701,
	582, 1701,
	583, 1701,
	588, 1701,
	589, 1701,
	590, 1701,
	591, 1701,
	592, 1701,
	593, 1701,
	594, 1701,
	607, 1701,
	614, 1701,
	615, 1701,
	616, 1701,
	624, 1701,
	628, 1701,
	-2, 0,
	-1, 784,
	4, 1423,
	21, 1423,
	22, 1423,
	23, 1423,
	24, 1423,
	25, 1423,
	26, 1423,
	27, 1423,
	28, 1423,
	30, 1423,
	31, 1423,
	37, 1423,
	41, 1423,
	43, 1423,
	44, 1423,
	46, 1423,
	47, 1423,
	48, 1423,
	49, 1423,
	50, 1423,
	51, 1423,
	52, 1423,
	53, 1423,
	54, 1423,
	56, 1423,
	57, 1423,
	58, 1423,
	59, 1423,
	61, 1423,
	62, 1423,
	63, 1423,
	64, 1423,
	65, 1423,
	66, 1423,
	67, 1423,
	71, 1423,
	72, 1423,
	73, 1423,
	74, 1423,
	76, 1423,
	77, 1423,
	78, 1423,
	82, 1423,
	83, 1423,
	84, 1423,
	85, 1423,
	86, 1423,
	87, 1423,
	88, 1423,
	89, 1423,
	92, 1423,
	93, 1423,
	94, 1423,
	95, 1423,
	96, 1423,
	98, 1423,
	100, 1423,
	101, 1423,
	102, 1423,
	103, 1423,
	104, 1423,
	105, 1423,
	107, 1423,
	108, 1423,
	109, 1423,
	111, 1423,
	112, 1423,
	113, 1423,
	121, 1423,
	122, 1423,
	123, 1423,
	124, 1423,
	125, 1423,
	127, 1423,
	128, 1423,
	129, 1423,
	130, 1423,
	132, 1423,
	133, 1423,
	134, 1423,
	136, 1423,
	137, 1423,
	138, 1423,
	140, 1423,
	141, 1423,
	142, 1423,
	145, 1423,
	146, 1423,
	147, 1423,
	149, 1423,
	150, 1423,
	151, 1423,
	153, 1423,
	154, 1423,
	155, 1423,
	157, 1423,
	158, 1423,
	159, 1423,
	160, 1423,
	161, 1423,
	162, 1423,
	163, 1423,
	164, 1423,
	165, 1423,
	166, 1423,
	167, 1423,
	168, 1423,
	169, 1423,
	170, 1423,
	171, 1423,
	172, 1423,
	173, 1423,
	175, 1423,
	181, 1423,
	182, 1423,
	183, 1423,
	184, 1423,
	188, 1423,
	190, 1423,
	191, 1423,
	192, 1423,
	194, 1423,
	197, 1423,
	198, 1423,
	199, 1423,
	200, 1423,
	201, 1423,
	202, 1423,
	203, 1423,
	204, 1423,
	205, 1423,
	206, 1423,
	207, 1423,
	208, 1423,
	209, 1423,
	210, 1423,
	212, 1423,
	213, 1423,
	215, 1423,
	216, 1423,
	218, 1423,
	219, 1423,
	220, 1423,
	221, 1423,
	222, 1423,
	223, 1423,
	224, 1423,
	225, 1423,
	226, 1423,
	227, 1423,
	229, 1423,
	230, 1423,
	232, 1423,
	233, 1423,
	234, 1423,
	235, 1423,
	236, 1423,
	240, 1423,
	241, 1423,
	242, 1423,
	243, 1423,
	246, 1423,
	247, 1423,
	248, 1423,
	249, 1423,
	251, 1423,
	253, 1423,
	254, 1423,
	256, 1423,
	258, 1423,
	259, 1423,
	260, 1423,
	262, 1423,
	266, 1423,
	267, 1423,
	268, 1423,
	269, 1423,
	270, 1423,
	271, 1423,
	273, 1423,
	274, 1423,
	275, 1423,
	277, 1423,
	278, 1423,
	280, 1423,
	281, 1423,
	284, 1423,
	285, 1423,
	286, 1423,
	287, 1423,
	288, 1423,
	289, 1423,
	290, 1423,
	293, 1423,
	294, 1423,
	295, 1423,
	296, 1423,
	298, 1423,
	299, 1423,
	300, 1423,
	301, 1423,
	302, 1423,
	303, 1423,
	304, 1423,
	305, 1423,
	306, 1423,
	307, 1423,
	308, 1423,
	309, 1423,
	310, 1423,
	311, 1423,
	312, 1423,
	313, 1423,
	314, 1423,
	315, 1423,
	316, 1423,
	317, 1423,
	318, 1423,
	319, 1423,
	321, 1423,
	323, 1423,
	324, 1423,
	325, 1423,
	326, 1423,
	327, 1423,
	328, 1423,
	329, 1423,
	330, 1423,
	331, 1423,
	332, 1423,
	333, 1423,
	334, 1423,
	335, 1423,
	336, 1423,
	337, 1423,
	338, 1423,
	339, 1423,
	341, 1423,
	342, 1423,
	344, 1423,
	346, 1423,
	347, 1423,
	348, 1423,
	349, 1423,
	351, 1423,
	352, 1423,
	353, 1423,
	354, 1423,
	355, 1423,
	358, 1423,
	360, 1423,
	363, 1423,
	364, 1423,
	365, 1423,
	368, 1423,
	369, 1423,
	370, 1423,
	372, 1423,
	374, 1423,
	375, 1423,
	376, 1423,
	377, 1423,
	378, 1423,
	379, 1423,
	380, 1423,
	381, 1423,
	382, 1423,
	383, 1423,
	384, 1423,
	385, 1423,
	386, 1423,
	388, 1423,
	389, 1423,
	390, 1423,
	391, 1423,
	392, 1423,
	393, 1423,
	394, 1423,
	395, 1423,
	396, 1423,
	397, 1423,
	398, 1423,
	399, 1423,
	400, 1423,
	401, 1423,
	402, 1423,
	404, 1423,
	405, 1423,
	406, 1423,
	408, 1423,
	409, 1423,
	410, 1423,
	411, 1423,
	412, 1423,
	413, 1423,
	414, 1423,
	415, 1423,
	416, 1423,
	417, 1423,
	418, 1423,
	419, 1423,
	420, 1423,
	422, 1423,
	424, 1423,
	425, 1423,
	426, 1423,
	432, 1423,
	433, 1423,
	434, 1423,
	436, 1423,
	437, 1423,
	438, 1423,
	439, 1423,
	440, 1423,
	441, 1423,
	442, 1423,
	443, 1423,
	444, 1423,
	445, 1423,
	447, 1423,
	448, 1423,
	449, 1423,
	451, 1423,
	452, 1423,
	453, 1423,
	454, 1423,
	455, 1423,
	456, 1423,
	457, 1423,
	459, 1423,
	460, 1423,
	461, 1423,
	462, 1423,
	463, 1423,
	464, 1423,
	465, 1423,
	466, 1423,
	467, 1423,
	468, 1423,
	469, 1423,
	470, 1423,
	471, 1423,
	473, 1423,
	474, 1423,
	475, 1423,
	476, 1423,
	477, 1423,
	478, 1423,
	480, 1423,
	481, 1423,
	482, 1423,
	483, 1423,
	484, 1423,
	485, 1423,
	487, 1423,
	488, 1423,
	489, 1423,
	490, 1423,
	491, 1423,
	492, 1423,
	493, 1423,
	494, 1423,
	496, 1423,
	498, 1423,
	499, 1423,
	500, 1423,
	501, 1423,
	502, 1423,
	503, 1423,
	504, 1423,
	505, 1423,
	506, 1423,
	507, 1423,
	508, 1423,
	509, 1423,
	510, 1423,
	511, 1423,
	512, 1423,
	513, 1423,
	514, 1423,
	515, 1423,
	517, 1423,
	518, 1423,
	520, 1423,
	521, 1423,
	523, 1423,
	524, 1423,
	525, 1423,
	526, 1423,
	527, 1423,
	528, 1423,
	529, 1423,
	530, 1423,
	532, 1423,
	533, 1423,
	534, 1423,
	535, 1423,
	536, 1423,
	538, 1423,
	540, 1423,
	541, 1423,
	542, 1423,
	543, 1423,
	544, 1423,
	545, 1423,
	546, 1423,
	548, 1423,
	549, 1423,
	550, 1423,
	551, 1423,
	553, 1423,
	554, 1423,
	557, 1423,
	558, 1423,
	559, 1423,
	560, 1423,
	561, 1423,
	562, 1423,
	563, 1423,
	564, 1423,
	566, 1423,
	569, 1423,
	570, 1423,
	571, 1423,
	572, 1423,
	573, 1423,
	574, 1423,
	576, 1423,
	577, 1423,
	578, 1423,
	579, 1423,
	580, 1423,
	581, 1423,
	582, 1423,
	583, 1423,
	588, 1423,
	589, 1423,
	590, 1423,
	591, 1423,
	592, 1423,
	593, 1423,
	-2, 0,
	-1, 803,
	195, 2497,
	537, 2497,
	606, 2497,
	626, 2497,
	-2, 0,
	-1, 804,
	195, 2483,
	537, 2483,
	606, 2483,
	626, 2483,
	-2, 0,
	-1, 806,
	195, 2760,
	537, 2760,
	606, 2760,
	626, 2760,
	-2, 0,
	-1, 809,
	195, 2611,
	537, 2611,
	606, 2611,
	626, 2611,
	-2, 0,
	-1, 810,
	195, 2803,
	537, 2803,
	606, 2803,
	626, 2803,
	-2, 0,
	-1, 818,
	195, 2638,
	537, 2638,
	606, 2638,
	626, 2638,
	-2, 748,
	-1, 834,
	8, 879,
	29, 879,
	614, 879,
	615, 879,
	-2, 884,
	-1, 838,
	1, 2551,
	627, 2551,
	-2, 884,
	-1, 839,
	1, 2599,
	627, 2599,
	-2, 884,
	-1, 842,
	1, 2643,
	627, 2643,
	-2, 877,
	-1, 843,
	1, 2699,
	627, 2699,
	-2, 878,
	-1, 844,
	1, 2556,
	627, 2556,
	-2, 881,
	-1, 845,
	1, 2470,
	627, 2470,
	-2, 882,
	-1, 875,
	626, 2429,
	629, 2429,
	-2, 1090,
	-1, 876,
	626, 2431,
	629, 2431,
	-2, 1091,
	-1, 877,
	626, 2430,
	629, 2430,
	-2, 1092,
	-1, 878,
	629, 2355,
	-2, 1093,
	-1, 903,
	189, 277,
	-2, 0,
	-1, 927,
	45, 2402,
	-2, 0,
	-1, 928,
	576, 1401,
	-2, 1173,
	-1, 944,
	4, 1835,
	21, 1835,
	22, 1835,
	23, 1835,
	24, 1835,
	25, 1835,
	26, 1835,
	27, 1835,
	28, 1835,
	30, 1835,
	31, 1835,
	37, 1835,
	41, 1835,
	43, 1835,
	44, 1835,
	46, 1835,
	47, 1835,
	48, 1835,
	49, 1835,
	50, 1835,
	51, 1835,
	52, 1835,
	53, 1835,
	54, 1835,
	56, 1835,
	57, 1835,
	58, 1835,
	59, 1835,
	61, 1835,
	62, 1835,
	63, 1835,
	64, 1835,
	65, 1835,
	66, 1835,
	67, 1835,
	71, 1835,
	72, 1835,
	73, 1835,
	74, 1835,
	76, 1835,
	77, 1835,
	78, 1835,
	82, 1835,
	83, 1835,
	84, 1835,
	85, 1835,
	86, 1835,
	87, 1835,
	88, 1835,
	89, 1835,
	92, 1835,
	93, 1835,
	94, 1835,
	95, 1835,
	96, 1835,
	98, 1835,
	100, 1835,
	101, 1835,
	102, 1835,
	103, 1835,
	104, 1835,
	105, 1835,
	107, 1835,
	108, 1835,
	109, 1835,
	111, 1835,
	112, 1835,
	113, 1835,
	121, 1835,
	122, 1835,
	123, 1835,
	124, 1835,
	125, 1835,
	127, 1835,
	128, 1835,
	129, 1835,
	130, 1835,
	132, 1835,
	133, 1835,
	134, 1835,
	136, 1835,
	137, 1835,
	138, 1835,
	140, 1835,
	141, 1835,
	142, 1835,
	145, 1835,
	146, 1835,
	147, 1835,
	149, 1835,
	150, 1835,
	151, 1835,
	153, 1835,
	154, 1835,
	155, 1835,
	157, 1835,
	158, 1835,
	159, 1835,
	160, 1835,
	161, 1835,
	162, 1835,
	163, 1835,
	164, 1835,
	165, 1835,
	166, 1835,
	167, 1835,
	168, 1835,
	169, 1835,
	170, 1835,
	171, 1835,
	172, 1835,
	173, 1835,
	175, 1835,
	181, 1835,
	182, 1835,
	183, 1835,
	184, 1835,
	188, 1835,
	190, 1835,
	191, 1835,
	192, 1835,
	194, 1835,
	197, 1835,
	198, 1835,
	199, 1835,
	200, 1835,
	201, 1835,
	202, 1835,
	203, 1835,
	204, 1835,
	205, 1835,
	206, 1835,
	207, 1835,
	208, 1835,
	209, 1835,
	210, 1835,
	212, 1835,
	213, 1835,
	215, 1835,
	216, 1835,
	218, 1835,
	219, 1835,
	220, 1835,
	221, 1835,
	222, 1835,
	223, 1835,
	224, 1835,
	225, 1835,
	226, 1835,
	227, 1835,
	229, 1835,
	230, 1835,
	232, 1835,
	233, 1835,
	234, 1835,
	235, 1835,
	236, 1835,
	240, 1835,
	241, 1835,
	242, 1835,
	243, 1835,
	246, 1835,
	247, 1835,
	248, 1835,
	249, 1835,
	251, 1835,
	253, 1835,
	254, 1835,
	256, 1835,
	258, 1835,
	259, 1835,
	260, 1835,
	262, 1835,
	266, 1835,
	267, 1835,
	268, 1835,
	269, 1835,
	270, 1835,
	271, 1835,
	273, 1835,
	274, 1835,
	275, 1835,
	277, 1835,
	278, 1835,
	280, 1835,
	281, 1835,
	284, 1835,
	285, 1835,
	286, 1835,
	287, 1835,
	288, 1835,
	289, 1835,
	290, 1835,
	293, 1835,
	294, 1835,
	295, 1835,
	296, 1835,
	298, 1835,
	299, 1835,
	300, 1835,
	301, 1835,
	302, 1835,
	303, 1835,
	304, 1835,
	305, 1835,
	306, 1835,
	307, 1835,
	308, 1835,
	309, 1835,
	310, 1835,
	311, 1835,
	312, 1835,
	313, 1835,
	314, 1835,
	315, 1835,
	316, 1835,
	317, 1835,
	318, 1835,
	319, 1835,
	321, 1835,
	323, 1835,
	324, 1835,
	325, 1835,
	326, 1835,
	327, 1835,
	328, 1835,
	329, 1835,
	330, 1835,
	331, 1835,
	332, 1835,
	333, 1835,
	334, 1835,
	335, 1835,
	336, 1835,
	337, 1835,
	338, 1835,
	339, 1835,
	341, 1835,
	342, 1835,
	344, 1835,
	346, 1835,
	347, 1835,
	348, 1835,
	349, 1835,
	351, 1835,
	352, 1835,
	353, 1835,
	354, 1835,
	355, 1835,
	358, 1835,
	360, 1835,
	363, 1835,
	364, 1835,
	365, 1835,
	368, 1835,
	369, 1835,
	370, 1835,
	372, 1835,
	374, 1835,
	375, 1835,
	376, 1835,
	377, 1835,
	378, 1835,
	379, 1835,
	380, 1835,
	381, 1835,
	382, 1835,
	383, 1835,
	384, 1835,
	385, 1835,
	386, 1835,
	388, 1835,
	389, 1835,
	390, 1835,
	391, 1835,
	392, 1835,
	393, 1835,
	394, 1835,
	395, 1835,
	396, 1835,
	397, 1835,
	398, 1835,
	399, 1835,
	400, 1835,
	401, 1835,
	402, 1835,
	404, 1835,
	405, 1835,
	406, 1835,
	408, 1835,
	409, 1835,
	410, 1835,
	411, 1835,
	412, 1835,
	413, 1835,
	414, 1835,
	415, 1835,
	416, 1835,
	417, 1835,
	418, 1835,
	419, 1835,
	420, 1835,
	422, 1835,
	424, 1835,
	425, 1835,
	426, 1835,
	432, 1835,
	433, 1835,
	434, 1835,
	436, 1835,
	437, 1835,
	438, 1835,
	439, 1835,
	440, 1835,
	441, 1835,
	442, 1835,
	443, 1835,
	444, 1835,
	445, 1835,
	447, 1835,
	448, 1835,
	449, 1835,
	451, 1835,
	452, 1835,
	453, 1835,
	454, 1835,
	455, 1835,
	456, 1835,
	457, 1835,
	459, 1835,
	460, 1835,
	461, 1835,
	462, 1835,
	463, 1835,
	464, 1835,
	465, 1835,
	466, 1835,
	467, 1835,
	468, 1835,
	469, 1835,
	470, 1835,
	471, 1835,
	473, 1835,
	474, 1835,
	475, 1835,
	476, 1835,
	477, 1835,
	478, 1835,
	480, 1835,
	481, 1835,
	482, 1835,
	483, 1835,
	484, 1835,
	485, 1835,
	487, 1835,
	488, 1835,
	489, 1835,
	490, 1835,
	491, 1835,
	492, 1835,
	493, 1835,
	494, 1835,
	496, 1835,
	498, 1835,
	499, 1835,
	500, 1835,
	501, 1835,
	502, 1835,
	503, 1835,
	504, 1835,
	505, 1835,
	506, 1835,
	507, 1835,
	508, 1835,
	509, 1835,
	510, 1835,
	511, 1835,
	512, 1835,
	513, 1835,
	514, 1835,
	515, 1835,
	517, 1835,
	518, 1835,
	520, 1835,
	521, 1835,
	523, 1835,
	524, 1835,
	525, 1835,
	526, 1835,
	527, 1835,
	528, 1835,
	529, 1835,
	530, 1835,
	532, 1835,
	533, 1835,
	534, 1835,
	535, 1835,
	536, 1835,
	538, 1835,
	540, 1835,
	541, 1835,
	542, 1835,
	543, 1835,
	544, 1835,
	545, 1835,
	546, 1835,
	548, 1835,
	549, 1835,
	550, 1835,
	551, 1835,
	553, 1835,
	554, 1835,
	557, 1835,
	558, 1835,
	559, 1835,
	560, 1835,
	561, 1835,
	562, 1835,
	563, 1835,
	564, 1835,
	566, 1835,
	569, 1835,
	570, 1835,
	571, 1835,
	572, 1835,
	573, 1835,
	574, 1835,
	576, 1835,
	577, 1835,
	578, 1835,
	579, 1835,
	580, 1835,
	581, 1835,
	582, 1835,
	583, 1835,
	588, 1835,
	589, 1835,
	590, 1835,
	591, 1835,
	592, 1835,
	593, 1835,
	-2, 0,
	-1, 954,
	270, 433,
	-2, 0,
	-1, 1033,
	410, 966,
	478, 966,
	521, 966,
	542, 966,
	-2, 0,
	-1, 1034,
	410, 965,
	478, 965,
	521, 965,
	542, 965,
	-2, 897,
	-1, 1038,
	1, 1018,
	623, 1018,
	625, 1018,
	627, 1018,
	-2, 0,
	-1, 1040,
	1, 940,
	623, 940,
	625, 940,
	627, 940,
	-2, 0,
	-1, 1041,
	1, 944,
	623, 944,
	625, 944,
	627, 944,
	-2, 0,
	-1, 1042,
	1, 1089,
	189, 1089,
	623, 1089,
	625, 1089,
	627, 1089,
	-2, 0,
	-1, 1050,
	1, 971,
	623, 971,
	625, 971,
	627, 971,
	-2, 0,
	-1, 1057,
	1, 1018,
	623, 1018,
	625, 1018,
	627, 1018,
	-2, 0,
	-1, 1058,
	1, 1020,
	623, 1020,
	625, 1020,
	627, 1020,
	-2, 0,
	-1, 1059,
	1, 1023,
	623, 1023,
	625, 1023,
	627, 1023,
	-2, 0,
	-1, 1067,
	1, 1053,
	623, 1053,
	625, 1053,
	627, 1053,
	-2, 0,
	-1, 1068,
	1, 1055,
	623, 1055,
	625, 1055,
	627, 1055,
	-2, 0,
	-1, 1073,
	1, 1083,
	623, 1083,
	625, 1083,
	627, 1083,
	-2, 0,
	-1, 1127,
	176, 1705,
	189, 1705,
	283, 1705,
	356, 1705,
	-2, 1641,
	-1, 1143,
	176, 1704,
	189, 1704,
	283, 1704,
	356, 1704,
	-2, 1638,
	-1, 1170,
	626, 2428,
	-2, 756,
	-1, 1199,
	5, 2420,
	624, 2418,
	-2, 2409,
	-1, 1207,
	5, 2441,
	624, 2438,
	-2, 2429,
	-1, 1208,
	5, 2442,
	624, 2439,
	-2, 2430,
	-1, 1216,
	626, 2426,
	-2, 2408,
	-1, 1217,
	624, 2891,
	-2, 2427,
	-1, 1240,
	624, 2890,
	-2, 2443,
	-1, 1241,
	5, 1910,
	-2, 2861,
	-1, 1242,
	5, 1911,
	-2, 2862,
	-1, 1243,
	5, 1912,
	-2, 2876,
	-1, 1244,
	5, 1913,
	-2, 2840,
	-1, 1245,
	5, 1914,
	-2, 2874,
	-1, 1246,
	5, 1922,
	-2, 2853,
	-1, 1247,
	5, 1909,
	-2, 2849,
	-1, 1248,
	5, 1909,
	-2, 2848,
	-1, 1249,
	5, 1909,
	-2, 2867,
	-1, 1250,
	5, 1920,
	-2, 2842,
	-1, 1251,
	5, 1925,
	-2, 2841,
	-1, 1252,
	5, 1927,
	-2, 2886,
	-1, 1255,
	5, 1949,
	-2, 2879,
	-1, 1256,
	5, 1941,
	-2, 2880,
	-1, 1257,
	5, 1949,
	-2, 2881,
	-1, 1258,
	5, 1945,
	-2, 2882,
	-1, 1259,
	5, 1895,
	-2, 2854,
	-1, 1260,
	5, 1896,
	-2, 2855,
	-1, 1261,
	5, 1897,
	-2, 2843,
	-1, 1289,
	5, 1932,
	-2, 2887,
	-1, 1290,
	5, 1933,
	-2, 2877,
	-1, 1291,
	5, 1934,
	577, 1934,
	-2, 2844,
	-1, 1292,
	5, 1935,
	577, 1935,
	-2, 2845,
	-1, 1329,
	624, 2438,
	-2, 2429,
	-1, 1330,
	624, 2439,
	-2, 2430,
	-1, 1428,
	195, 2803,
	537, 2803,
	606, 2803,
	626, 2803,
	-2, 0,
	-1, 1433,
	1, 732,
	627, 732,
	-2, 1550,
	-1, 1580,
	376, 2403,
	436, 2403,
	480, 2403,
	616, 2403,
	-2, 2393,
	-1, 1586,
	195, 137,
	277, 137,
	341, 137,
	583, 137,
	-2, 2799,
	-1, 1587,
	195, 138,
	277, 138,
	341, 138,
	583, 138,
	-2, 2542,
	-1, 1588,
	195, 139,
	277, 139,
	341, 139,
	583, 139,
	-2, 2721,
	-1, 1594,
	628, 2403,
	-2, 2405,
	-1, 1614,
	1, 1398,
	441, 1353,
	480, 1353,
	600, 1353,
	623, 1398,
	625, 1398,
	627, 1398,
	-2, 1690,
	-1, 1620,
	211, 1495,
	231, 1495,
	449, 1495,
	-2, 0,
	-1, 1668,
	418, 1172,
	576, 1172,
	-2, 428,
	-1, 1685,
	45, 2401,
	-2, 1135,
	-1, 1692,
	1, 1398,
	623, 1398,
	625, 1398,
	627, 1398,
	-2, 1690,
	-1, 1700,
	4, 1423,
	21, 1423,
	22, 1423,
	23, 1423,
	24, 1423,
	25, 1423,
	26, 1423,
	27, 1423,
	28, 1423,
	30, 1423,
	31, 1423,
	37, 1423,
	41, 1423,
	43, 1423,
	44, 1423,
	46, 1423,
	47, 1423,
	48, 1423,
	49, 1423,
	50, 1423,
	51, 1423,
	52, 1423,
	53, 1423,
	54, 1423,
	56, 1423,
	57, 1423,
	58, 1423,
	59, 1423,
	61, 1423,
	62, 1423,
	63, 1423,
	64, 1423,
	65, 1423,
	66, 1423,
	67, 1423,
	71, 1423,
	72, 1423,
	73, 1423,
	74, 1423,
	76, 1423,
	77, 1423,
	78, 1423,
	82, 1423,
	83, 1423,
	84, 1423,
	85, 1423,
	86, 1423,
	87, 1423,
	88, 1423,
	89, 1423,
	92, 1423,
	93, 1423,
	94, 1423,
	95, 1423,
	96, 1423,
	98, 1423,
	100, 1423,
	101, 1423,
	102, 1423,
	103, 1423,
	104, 1423,
	105, 1423,
	107, 1423,
	108, 1423,
	109, 1423,
	111, 1423,
	112, 1423,
	113, 1423,
	121, 1423,
	122, 1423,
	123, 1423,
	124, 1423,
	125, 1423,
	127, 1423,
	128, 1423,
	129, 1423,
	130, 1423,
	132, 1423,
	133, 1423,
	134, 1423,
	136, 1423,
	137, 1423,
	138, 1423,
	140, 1423,
	141, 1423,
	142, 1423,
	145, 1423,
	146, 1423,
	147, 1423,
	149, 1423,
	150, 1423,
	151, 1423,
	153, 1423,
	154, 1423,
	155, 1423,
	157, 1423,
	158, 1423,
	159, 1423,
	160, 1423,
	161, 1423,
	162, 1423,
	163, 1423,
	164, 1423,
	165, 1423,
	166, 1423,
	167, 1423,
	168, 1423,
	169, 1423,
	170, 1423,
	171, 1423,
	172, 1423,
	173, 1423,
	181, 1423,
	182, 1423,
	183, 1423,
	184, 1423,
	188, 1423,
	190, 1423,
	191, 1423,
	192, 1423,
	194, 1423,
	197, 1423,
	198, 1423,
	199, 1423,
	200, 1423,
	201, 1423,
	202, 1423,
	203, 1423,
	204, 1423,
	205, 1423,
	206, 1423,
	207, 1423,
	208, 1423,
	209, 1423,
	210, 1423,
	212, 1423,
	213, 1423,
	215, 1423,
	216, 1423,
	218, 1423,
	219, 1423,
	220, 1423,
	221, 1423,
	222, 1423,
	223, 1423,
	224, 1423,
	225, 1423,
	226, 1423,
	227, 1423,
	229, 1423,
	230, 1423,
	232, 1423,
	233, 1423,
	234, 1423,
	235, 1423,
	236, 1423,
	241, 1423,
	242, 1423,
	243, 1423,
	246, 1423,
	247, 1423,
	248, 1423,
	249, 1423,
	251, 1423,
	253, 1423,
	254, 1423,
	256, 1423,
	258, 1423,
	259, 1423,
	260, 1423,
	262, 1423,
	266, 1423,
	267, 1423,
	268, 1423,
	269, 1423,
	270, 1423,
	271, 1423,
	273, 1423,
	274, 1423,
	275, 1423,
	277, 1423,
	278, 1423,
	280, 1423,
	281, 1423,
	284, 1423,
	285, 1423,
	286, 1423,
	287, 1423,
	288, 1423,
	289, 1423,
	290, 1423,
	293, 1423,
	294, 1423,
	295, 1423,
	296, 1423,
	298, 1423,
	299, 1423,
	300, 1423,
	301, 1423,
	302, 1423,
	303, 1423,
	304, 1423,
	305, 1423,
	306, 1423,
	307, 1423,
	308, 1423,
	309, 1423,
	310, 1423,
	311, 1423,
	312, 1423,
	313, 1423,
	314, 1423,
	315, 1423,
	316, 1423,
	317, 1423,
	318, 1423,
	319, 1423,
	321, 1423,
	323, 1423,
	324, 1423,
	325, 1423,
	326, 1423,
	327, 1423,
	328, 1423,
	329, 1423,
	330, 1423,
	331, 1423,
	332, 1423,
	333, 1423,
	334, 1423,
	335, 1423,
	336, 1423,
	337, 1423,
	338, 1423,
	339, 1423,
	341, 1423,
	342, 1423,
	346, 1423,
	347, 1423,
	348, 1423,
	349, 1423,
	351, 1423,
	352, 1423,
	353, 1423,
	354, 1423,
	355, 1423,
	358, 1423,
	360, 1423,
	361, 1423,
	363, 1423,
	364, 1423,
	365, 1423,
	368, 1423,
	369, 1423,
	370, 1423,
	372, 1423,
	374, 1423,
	375, 1423,
	376, 1423,
	377, 1423,
	378, 1423,
	379, 1423,
	380, 1423,
	381, 1423,
	382, 1423,
	383, 1423,
	384, 1423,
	385, 1423,
	386, 1423,
	388, 1423,
	389, 1423,
	390, 1423,
	391, 1423,
	392, 1423,
	393, 1423,
	394, 1423,
	395, 1423,
	396, 1423,
	397, 1423,
	398, 1423,
	399, 1423,
	400, 1423,
	401, 1423,
	402, 1423,
	404, 1423,
	405, 1423,
	406, 1423,
	408, 1423,
	409, 1423,
	410, 1423,
	411, 1423,
	412, 1423,
	413, 1423,
	414, 1423,
	415, 1423,
	416, 1423,
	417, 1423,
	418, 1423,
	419, 1423,
	420, 1423,
	422, 1423,
	424, 1423,
	425, 1423,
	426, 1423,
	432, 1423,
	433, 1423,
	434, 1423,
	436, 1423,
	437, 1423,
	438, 1423,
	439, 1423,
	440, 1423,
	441, 1423,
	442, 1423,
	443, 1423,
	444, 1423,
	445, 1423,
	447, 1423,
	448, 1423,
	449, 1423,
	451, 1423,
	452, 1423,
	453, 1423,
	454, 1423,
	455, 1423,
	456, 1423,
	457, 1423,
	459, 1423,
	460, 1423,
	461, 1423,
	462, 1423,
	463, 1423,
	464, 1423,
	465, 1423,
	466, 1423,
	467, 1423,
	468, 1423,
	469, 1423,
	470, 1423,
	471, 1423,
	473, 1423,
	474, 1423,
	475, 1423,
	476, 1423,
	477, 1423,
	478, 1423,
	480, 1423,
	481, 1423,
	482, 1423,
	483, 1423,
	484, 1423,
	485, 1423,
	487, 1423,
	488, 1423,
	489, 1423,
	490, 1423,
	491, 1423,
	492, 1423,
	493, 1423,
	494, 1423,
	496, 1423,
	498, 1423,
	499, 1423,
	500, 1423,
	501, 1423,
	502, 1423,
	503, 1423,
	504, 1423,
	505, 1423,
	506, 1423,
	507, 1423,
	508, 1423,
	509, 1423,
	510, 1423,
	511, 1423,
	512, 1423,
	513, 1423,
	514, 1423,
	515, 1423,
	517, 1423,
	518, 1423,
	520, 1423,
	521, 1423,
	523, 1423,
	524, 1423,
	525, 1423,
	526, 1423,
	527, 1423,
	528, 1423,
	529, 1423,
	530, 1423,
	532, 1423,
	533, 1423,
	534, 1423,
	535, 1423,
	536, 1423,
	538, 1423,
	540, 1423,
	541, 1423,
	542, 1423,
	543, 1423,
	544, 1423,
	545, 1423,
	546, 1423,
	548, 1423,
	549, 1423,
	550, 1423,
	551, 1423,
	553, 1423,
	554, 1423,
	557, 1423,
	558, 1423,
	559, 1423,
	560, 1423,
	561, 1423,
	562, 1423,
	563, 1423,
	564, 1423,
	566, 1423,
	569, 1423,
	570, 1423,
	571, 1423,
	572, 1423,
	573, 1423,
	574, 1423,
	576, 1423,
	577, 1423,
	578, 1423,
	579, 1423,
	580, 1423,
	581, 1423,
	582, 1423,
	583, 1423,
	588, 1423,
	589, 1423,
	590, 1423,
	591, 1423,
	592, 1423,
	593, 1423,
	-2, 0,
	-1, 1723,
	1, 573,
	623, 573,
	625, 573,
	627, 573,
	-2, 1661,
	-1, 1726,
	4, 2885,
	11, 2885,
	12, 2885,
	14, 2885,
	15, 2885,
	16, 2885,
	17, 2885,
	18, 2885,
	19, 2885,
	21, 2885,
	22, 2885,
	23, 2885,
	24, 2885,
	25, 2885,
	26, 2885,
	27, 2885,
	28, 2885,
	30, 2885,
	31, 2885,
	34, 2885,
	35, 2885,
	37, 2885,
	39, 2885,
	41, 2885,
	43, 2885,
	44, 2885,
	46, 2885,
	47, 2885,
	48, 2885,
	49, 2885,
	50, 2885,
	51, 2885,
	52, 2885,
	53, 2885,
	54, 2885,
	56, 2885,
	57, 2885,
	58, 2885,
	59, 2885,
	61, 2885,
	62, 2885,
	63, 2885,
	64, 2885,
	65, 2885,
	66, 2885,
	67, 2885,
	70, 2885,
	71, 2885,
	72, 2885,
	73, 2885,
	74, 2885,
	76, 2885,
	77, 2885,
	78, 2885,
	79, 2885,
	82, 2885,
	83, 2885,
	84, 2885,
	85, 2885,
	86, 2885,
	87, 2885,
	88, 2885,
	89, 2885,
	90, 2885,
	92, 2885,
	93, 2885,
	94, 2885,
	95, 2885,
	96, 2885,
	98, 2885,
	99, 2885,
	100, 2885,
	101, 2885,
	102, 2885,
	103, 2885,
	104, 2885,
	105, 2885,
	107, 2885,
	108, 2885,
	109, 2885,
	110, 2885,
	111, 2885,
	112, 2885,
	113, 2885,
	121, 2885,
	122, 2885,
	123, 2885,
	124, 2885,
	125, 2885,
	127, 2885,
	128, 2885,
	129, 2885,
	130, 2885,
	132, 2885,
	133, 2885,
	134, 2885,
	136, 2885,
	137, 2885,
	138, 2885,
	140, 2885,
	141, 2885,
	142, 2885,
	145, 2885,
	146, 2885,
	147, 2885,
	149, 2885,
	150, 2885,
	151, 2885,
	153, 2885,
	154, 2885,
	155, 2885,
	157, 2885,
	158, 2885,
	159, 2885,
	160, 2885,
	161, 2885,
	162, 2885,
	163, 2885,
	164, 2885,
	165, 2885,
	166, 2885,
	167, 2885,
	168, 2885,
	169, 2885,
	170, 2885,
	171, 2885,
	172, 2885,
	173, 2885,
	177, 2885,
	178, 2885,
	179, 2885,
	180, 2885,
	181, 2885,
	182, 2885,
	183, 2885,
	184, 2885,
	187, 2885,
	188, 2885,
	190, 2885,
	191, 2885,
	192, 2885,
	194, 2885,
	196, 2885,
	197, 2885,
	198, 2885,
	199, 2885,
	200, 2885,
	201, 2885,
	202, 2885,
	203, 2885,
	204, 2885,
	205, 2885,
	206, 2885,
	207, 2885,
	208, 2885,
	209, 2885,
	210, 2885,
	212, 2885,
	213, 2885,
	215, 2885,
	216, 2885,
	218, 2885,
	219, 2885,
	220, 2885,
	221, 2885,
	222, 2885,
	223, 2885,
	224, 2885,
	225, 2885,
	226, 2885,
	227, 2885,
	228, 2885,
	229, 2885,
	230, 2885,
	231, 2885,
	232, 2885,
	233, 2885,
	234, 2885,
	235, 2885,
	236, 2885,
	238, 2885,
	239, 2885,
	241, 2885,
	242, 2885,
	243, 2885,
	245, 2885,
	246, 2885,
	247, 2885,
	248, 2885,
	249, 2885,
	251, 2885,
	253, 2885,
	254, 2885,
	255, 2885,
	256, 2885,
	257, 2885,
	258, 2885,
	259, 2885,
	260, 2885,
	261, 2885,
	262, 2885,
	264, 2885,
	265, 2885,
	266, 2885,
	267, 2885,
	268, 2885,
	269, 2885,
	270, 2885,
	271, 2885,
	273, 2885,
	274, 2885,
	275, 2885,
	277, 2885,
	278, 2885,
	279, 2885,
	280, 2885,
	281, 2885,
	282, 2885,
	284, 2885,
	285, 2885,
	286, 2885,
	287, 2885,
	288, 2885,
	289, 2885,
	290, 2885,
	293, 2885,
	294, 2885,
	295, 2885,
	296, 2885,
	297, 2885,
	298, 2885,
	299, 2885,
	300, 2885,
	301, 2885,
	302, 2885,
	303, 2885,
	304, 2885,
	305, 2885,
	306, 2885,
	307, 2885,
	308, 2885,
	309, 2885,
	310, 2885,
	311, 2885,
	312, 2885,
	313, 2885,
	314, 2885,
	315, 2885,
	316, 2885,
	317, 2885,
	318, 2885,
	319, 2885,
	321, 2885,
	322, 2885,
	323, 2885,
	324, 2885,
	325, 2885,
	326, 2885,
	327, 2885,
	328, 2885,
	329, 2885,
	330, 2885,
	331, 2885,
	332, 2885,
	333, 2885,
	334, 2885,
	335, 2885,
	336, 2885,
	337, 2885,
	338, 2885,
	339, 2885,
	341, 2885,
	342, 2885,
	345, 2885,
	346, 2885,
	347, 2885,
	348, 2885,
	349, 2885,
	351, 2885,
	352, 2885,
	353, 2885,
	354, 2885,
	355, 2885,
	358, 2885,
	360, 2885,
	363, 2885,
	364, 2885,
	365, 2885,
	366, 2885,
	368, 2885,
	369, 2885,
	370, 2885,
	372, 2885,
	374, 2885,
	375, 2885,
	376, 2885,
	377, 2885,
	378, 2885,
	379, 2885,
	380, 2885,
	381, 2885,
	382, 2885,
	383, 2885,
	384, 2885,
	385, 2885,
	386, 2885,
	388, 2885,
	389, 2885,
	390, 2885,
	391, 2885,
	392, 2885,
	393, 2885,
	394, 2885,
	395, 2885,
	396, 2885,
	397, 2885,
	398, 2885,
	399, 2885,
	400, 2885,
	401, 2885,
	402, 2885,
	404, 2885,
	405, 2885,
	406, 2885,
	408, 2885,
	409, 2885,
	410, 2885,
	411, 2885,
	412, 2885,
	413, 2885,
	414, 2885,
	415, 2885,
	416, 2885,
	417, 2885,
	418, 2885,
	419, 2885,
	420, 2885,
	422, 2885,
	424, 2885,
	425, 2885,
	426, 2885,
	432, 2885,
	433, 2885,
	434, 2885,
	435, 2885,
	436, 2885,
	437, 2885,
	438, 2885,
	439, 2885,
	440, 2885,
	441, 2885,
	442, 2885,
	443, 2885,
	444, 2885,
	445, 2885,
	447, 2885,
	448, 2885,
	449, 2885,
	450, 2885,
	451, 2885,
	452, 2885,
	453, 2885,
	454, 2885,
	455, 2885,
	456, 2885,
	457, 2885,
	458, 2885,
	459, 2885,
	460, 2885,
	461, 2885,
	462, 2885,
	463, 2885,
	464, 2885,
	465, 2885,
	466, 2885,
	467, 2885,
	468, 2885,
	469, 2885,
	470, 2885,
	471, 2885,
	473, 2885,
	474, 2885,
	475, 2885,
	476, 2885,
	477, 2885,
	478, 2885,
	480, 2885,
	481, 2885,
	482, 2885,
	483, 2885,
	484, 2885,
	485, 2885,
	486, 2885,
	487, 2885,
	488, 2885,
	489, 2885,
	490, 2885,
	491, 2885,
	492, 2885,
	493, 2885,
	494, 2885,
	496, 2885,
	498, 2885,
	499, 2885,
	500, 2885,
	501, 2885,
	502, 2885,
	503, 2885,
	504, 2885,
	505, 2885,
	506, 2885,
	507, 2885,
	508, 2885,
	509, 2885,
	510, 2885,
	511, 2885,
	512, 2885,
	513, 2885,
	514, 2885,
	515, 2885,
	517, 2885,
	518, 2885,
	519, 2885,
	520, 2885,
	521, 2885,
	523, 2885,
	524, 2885,
	525, 2885,
	526, 2885,
	527, 2885,
	528, 2885,
	529, 2885,
	530, 2885,
	532, 2885,
	533, 2885,
	534, 2885,
	535, 2885,
	536, 2885,
	538, 2885,
	540, 2885,
	541, 2885,
	542, 2885,
	543, 2885,
	544, 2885,
	545, 2885,
	546, 2885,
	548, 2885,
	549, 2885,
	550, 2885,
	551, 2885,
	553, 2885,
	554, 2885,
	557, 2885,
	558, 2885,
	559, 2885,
	560, 2885,
	561, 2885,
	562, 2885,
	563, 2885,
	564, 2885,
	566, 2885,
	569, 2885,
	570, 2885,
	571, 2885,
	572, 2885,
	573, 2885,
	574, 2885,
	576, 2885,
	577, 2885,
	578, 2885,
	579, 2885,
	580, 2885,
	581, 2885,
	582, 2885,
	583, 2885,
	588, 2885,
	589, 2885,
	590, 2885,
	591, 2885,
	592, 2885,
	593, 2885,
	594, 2885,
	596, 2885,
	604, 2885,
	605, 2885,
	606, 2885,
	607, 2885,
	608, 2885,
	609, 2885,
	611, 2885,
	612, 2885,
	613, 2885,
	614, 2885,
	615, 2885,
	616, 2885,
	617, 2885,
	618, 2885,
	619, 2885,
	622, 2885,
	625, 2885,
	626, 2885,
	628, 2885,
	629, 2885,
	-2, 0,
	-1, 1731,
	195, 2760,
	537, 2760,
	606, 2760,
	626, 2760,
	-2, 0,
	-1, 1785,
	410, 966,
	478, 966,
	521, 966,
	542, 966,
	-2, 0,
	-1, 1796,
	1, 1495,
	623, 1495,
	625, 1495,
	627, 1495,
	-2, 0,
	-1, 1813,
	1, 961,
	623, 961,
	625, 961,
	627, 961,
	-2, 0,
	-1, 1814,
	1, 1005,
	623, 1005,
	625, 1005,
	627, 1005,
	-2, 0,
	-1, 1815,
	1, 1013,
	623, 1013,
	625, 1013,
	627, 1013,
	-2, 0,
	-1, 1818,
	1, 970,
	623, 970,
	625, 970,
	627, 970,
	-2, 0,
	-1, 1820,
	1, 976,
	623, 976,
	625, 976,
	627, 976,
	-2, 0,
	-1, 1823,
	1, 972,
	623, 972,
	625, 972,
	627, 972,
	-2, 0,
	-1, 1828,
	1, 986,
	623, 986,
	625, 986,
	627, 986,
	-2, 0,
	-1, 1862,
	1, 2742,
	623, 2742,
	625, 2742,
	626, 2742,
	627, 2742,
	-2, 0,
	-1, 1866,
	1, 1064,
	623, 1064,
	625, 1064,
	627, 1064,
	-2, 0,
	-1, 1883,
	1, 1545,
	627, 1545,
	-2, 1550,
	-1, 1886,
	176, 1704,
	189, 1704,
	283, 1704,
	356, 1704,
	-2, 1642,
	-1, 1986,
	156, 1663,
	176, 1663,
	189, 1663,
	250, 1663,
	283, 1663,
	356, 1663,
	367, 1663,
	555, 1663,
	-2, 2114,
	-1, 2047,
	625, 2289,
	-2, 0,
	-1, 2082,
	156, 1663,
	176, 1663,
	189, 1663,
	250, 1663,
	283, 1663,
	356, 1663,
	367, 1663,
	555, 1663,
	-2, 1796,
	-1, 2122,
	537, 2757,
	626, 2757,
	629, 2757,
	-2, 0,
	-1, 2139,
	624, 1937,
	-2, 1925,
	-1, 2171,
	195, 2757,
	626, 2757,
	629, 2757,
	-2, 0,
	-1, 2214,
	1, 734,
	627, 734,
	-2, 1550,
	-1, 2381,
	231, 272,
	-2, 2437,
	-1, 2382,
	231, 273,
	-2, 328,
	-1, 2493,
	1, 963,
	623, 963,
	625, 963,
	627, 963,
	-2, 0,
	-1, 2494,
	1, 1007,
	623, 1007,
	625, 1007,
	627, 1007,
	-2, 0,
	-1, 2495,
	1, 1015,
	623, 1015,
	625, 1015,
	627, 1015,
	-2, 0,
	-1, 2496,
	1, 1066,
	623, 1066,
	625, 1066,
	627, 1066,
	-2, 0,
	-1, 2537,
	1, 988,
	623, 988,
	625, 988,
	627, 988,
	-2, 0,
	-1, 2559,
	1, 1049,
	623, 1049,
	625, 1049,
	627, 1049,
	-2, 0,
	-1, 2606,
	456, 1731,
	457, 1731,
	-2, 1970,
	-1, 2637,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 1990,
	-1, 2638,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 1991,
	-1, 2639,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 1992,
	-1, 2640,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 1993,
	-1, 2641,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 1994,
	-1, 2642,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 1995,
	-1, 2643,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 1996,
	-1, 2644,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 1997,
	-1, 2656,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2009,
	-1, 2657,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2010,
	-1, 2658,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2011,
	-1, 2662,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2018,
	-1, 2668,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2022,
	-1, 2670,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2030,
	-1, 2671,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2031,
	-1, 2672,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2032,
	-1, 2673,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2033,
	-1, 2847,
	5, 2441,
	195, 2300,
	624, 2438,
	-2, 2429,
	-1, 2848,
	195, 2301,
	-2, 2836,
	-1, 2849,
	195, 2302,
	-2, 2637,
	-1, 2850,
	195, 2303,
	-2, 2515,
	-1, 2851,
	195, 2304,
	-2, 2575,
	-1, 2852,
	195, 2305,
	-2, 2622,
	-1, 2853,
	195, 2306,
	-2, 2755,
	-1, 2854,
	195, 2307,
	-2, 2097,
	-1, 2925,
	1, 1797,
	2, 1797,
	110, 1797,
	156, 1797,
	176, 1797,
	189, 1797,
	196, 1797,
	214, 1797,
	217, 1797,
	245, 1797,
	250, 1797,
	261, 1797,
	279, 1797,
	283, 1797,
	322, 1797,
	356, 1797,
	361, 1797,
	367, 1797,
	446, 1797,
	450, 1797,
	555, 1797,
	567, 1797,
	585, 1797,
	586, 1797,
	587, 1797,
	597, 1797,
	623, 1797,
	625, 1797,
	627, 1797,
	629, 1797,
	-2, 1796,
	-1, 2938,
	624, 2410,
	-2, 2424,
	-1, 2940,
	1, 345,
	585, 345,
	-2, 1690,
	-1, 2970,
	624, 1936,
	-2, 1926,
	-1, 3181,
	1, 1398,
	441, 1353,
	480, 1353,
	600, 1353,
	623, 1398,
	625, 1398,
	627, 1398,
	-2, 1690,
	-1, 3358,
	362, 1734,
	-2, 2875,
	-1, 3359,
	362, 1735,
	-2, 2739,
	-1, 3363,
	456, 2366,
	457, 2366,
	-2, 2095,
	-1, 3364,
	456, 2370,
	457, 2370,
	-2, 2096,
	-1, 3365,
	456, 2367,
	457, 2367,
	-2, 2095,
	-1, 3366,
	456, 2371,
	457, 2371,
	-2, 2096,
	-1, 3379,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2020,
	-1, 3380,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2024,
	-1, 3386,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2026,
	-1, 3613,
	1, 729,
	623, 729,
	625, 729,
	627, 729,
	-2, 1550,
	-1, 3805,
	45, 2401,
	-2, 1136,
	-1, 3810,
	1, 1398,
	623, 1398,
	625, 1398,
	627, 1398,
	-2, 1690,
	-1, 3916,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2028,
	-1, 3923,
	255, 0,
	257, 0,
	345, 0,
	-2, 2047,
	-1, 3991,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2076,
	-1, 3992,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2077,
	-1, 3993,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2078,
	-1, 3997,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2082,
	-1, 3998,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2083,
	-1, 3999,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2084,
	-1, 4047,
	624, 2411,
	-2, 2425,
	-1, 4253,
	626, 2992,
	-2, 1616,
	-1, 4309,
	255, 0,
	257, 0,
	345, 0,
	-2, 2048,
	-1, 4312,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2051,
	-1, 4313,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2053,
	-1, 4427,
	626, 2426,
	-2, 1433,
	-1, 4588,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2052,
	-1, 4589,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2054,
	-1, 4600,
	255, 0,
	-2, 2087,
	-1, 4788,
	255, 0,
	-2, 2088,
	-1, 5008,
	53, 0,
	228, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2839,
}

const sqlPrivate = 57344

const sqlLast = 144292

var sqlAct = [...]int{
	284, 3254, 3136, 5126, 5199, 4836, 5070, 1409, 4943, 3517,
	3106, 5054, 4657, 5007, 4942, 4880, 4994, 5020, 5140, 3793,
	4976, 4899, 4957, 4954, 4933, 1629, 5022, 4757, 2378, 1406,
	5021, 3794, 1465, 4734, 4639, 2274, 4721, 3041, 4057, 4705,
	3956, 5018, 4792, 5006, 4547, 4828, 4542, 4536, 4503, 3908,
	1401, 4662, 1153, 5079, 3224, 2456, 1749, 4423, 2616, 4292,
	4577, 4476, 3827, 4609, 3639, 1333, 4245, 2468, 4237, 4527,
	4865, 1604, 4529, 4424, 4161, 2880, 4404, 877, 2466, 4740,
	743, 2685, 2196, 1399, 3372, 3042, 3642, 4552, 3821, 3778,
	1895, 3645, 3276, 3702, 4192, 2624, 4194, 2088, 815, 1144,
	1484, 4211, 2126, 3857, 3767, 877, 3783, 4605, 3855, 3782,
	3243, 3627, 3785, 3240, 3213, 3629, 3628, 2952, 3760, 3759,
	1577, 3563, 2283, 4050, 2617, 2429, 4291, 3540, 3255, 3532,
	3238, 3500, 1747, 952, 4, 956, 754, 3121, 3271, 2464,
	1199, 1152, 188, 4348, 40, 3521, 2057, 2365, 2367, 3188,
	5055, 3137, 3666, 3523, 2918, 2361, 2311, 874, 278, 3570,
	277, 2295, 4017, 2621, 3499, 2033, 4793, 1994, 1964, 2698,
	3217, 947, 3356, 2920, 2763, 1687, 1404, 2366, 3150, 3270,
	2359, 811, 2351, 872, 2127, 2339, 2332, 1448, 1203, 1322,
	2262, 2266, 1883, 1206, 1378, 1210, 2898, 2877, 3225, 2194,
	2754, 2058, 1208, 2682, 1392, 2588, 2605, 2106, 1793, 1313,
	1467, 2586, 788, 1724, 3248, 2953, 2416, 1690, 878, 2354,
	879, 3067, 3786, 3066, 730, 2415, 1435, 2917, 752, 2981,
	1027, 3027, 2077, 1606, 2074, 883, 2028, 886, 188, 2888,
	2757, 1295, 1316, 4900, 2907, 2067, 2735, 2843, 1330, 824,
	113, 1978, 1896, 1463, 198, 1897, 2809, 2587, 2589, 1828,
	199, 796, 973, 883, 1389, 886, 2375, 1813, 807, 2442,
	2765, 1624, 1722, 1585, 5071, 1460, 1715, 5127, 2610, 1184,
	747, 771, 45, 744, 44, 756, 42, 2183, 867, 928,
	33, 31, 29, 1318, 1293, 1312, 1902, 1882, 3409, 1048,
	1635, 3403, 4031, 929, 4032, 1910, 1911, 3519, 1943, 1944,
	1945, 1954, 1955, 1956, 2185, 2185, 2185, 4058, 2185, 827,
	831, 2185, 2185, 5210, 5016, 4629, 5202, 2897, 1947, 1941,
	3740, 5190, 5189, 4626, 5159, 2897, 2897, 1913, 4661, 5157,
	5100, 5056, 5046, 4661, 2387, 5057, 2897, 1960, 5044, 5041,
	5038, 3836, 2897, 5042, 5039, 4623, 5004, 5003, 5002, 2206,
	2387, 2387, 3281, 4992, 1966, 4990, 4985, 4661, 4980, 4661,
	4743, 4979, 4661, 1912, 4952, 4661, 4919, 1628, 4661, 4912,
	2961, 4911, 4904, 2897, 1932, 2897, 2387, 4879, 1328, 1444,
	4876, 2387, 4858, 1929, 4661, 4790, 4493, 4375, 4771, 2961,
	4736, 1310, 4271, 4680, 4091, 4679, 4668, 2387, 4667, 2387,
	2387, 4660, 4661, 1296, 1296, 4661, 1910, 1911, 4616, 4590,
	4563, 2465, 2387, 2961, 3281, 4560, 4471, 1137, 4451, 3740,
	2897, 4311, 2897, 4261, 4255, 2961, 1444, 3850, 3850, 2206,
	1941, 1325, 4208, 1128, 3580, 3740, 4209, 2203, 1913, 1127,
	4122, 1149, 4090, 4042, 4123, 4040, 4091, 4043, 4024, 4041,
	3940, 3936, 2897, 3849, 2387, 2897, 1148, 3850, 4021, 1148,
	3418, 1935, 1936, 1937, 1938, 1966, 3419, 2983, 2760, 2957,
	3837, 1918, 3598, 3595, 1912, 3516, 3511, 3510, 3461, 2897,
	2897, 2897, 3462, 3459, 2890, 3451, 3449, 3460, 1143, 3452,
	2897, 3420, 3280, 3265, 3264, 2897, 3281, 2452, 2452, 3006,
	2960, 2950, 2942, 2897, 2961, 2897, 2387, 1356, 1348, 2896,
	2451, 2206, 1951, 2897, 2452, 1961, 1299, 2387, 1300, 2206,
	3371, 2897, 1940, 1942, 4920, 1297, 2203, 96, 4794, 4785,
	4773, 4743, 3281, 2711, 2712, 2713, 2730, 2731, 2732, 1957,
	4021, 1958, 2889, 4540, 4493, 2203, 4452, 4271, 1927, 1928,
	4210, 3113, 2288, 3026, 2733, 2220, 2184, 2200, 3219, 2206,
	1349, 2386, 3131, 2761, 3017, 2053, 1949, 1623, 4140, 3911,
	3883, 2075, 2344, 3838, 1795, 2934, 2933, 2932, 245, 2931,
	2930, 1933, 1918, 1301, 1298, 245, 1136, 1135, 1134, 1966,
	1133, 1132, 1131, 3839, 4554, 1130, 1126, 1125, 1910, 1911,
	1349, 1943, 1944, 1945, 1954, 1955, 1956, 1124, 1123, 2723,
	1122, 1121, 1120, 3327, 2792, 1119, 1118, 1117, 2719, 3470,
	3471, 1116, 1941, 1115, 1114, 1113, 1112, 1111, 247, 1959,
	1913, 1110, 1109, 1940, 1942, 247, 1108, 1107, 3470, 3471,
	1960, 3488, 3489, 3490, 1089, 2762, 1025, 2759, 1024, 1023,
	1948, 1022, 1021, 1020, 1019, 1018, 1017, 1966, 1016, 1910,
	1911, 1963, 1015, 1014, 1013, 1012, 1912, 1011, 1010, 1009,
	1008, 1007, 1006, 1005, 1004, 1003, 1002, 1932, 246, 1001,
	2186, 2186, 2186, 1000, 2186, 246, 1929, 2186, 2186, 999,
	998, 1913, 1933, 239, 997, 996, 2724, 2725, 2726, 2727,
	995, 994, 240, 993, 992, 991, 2718, 990, 989, 978,
	3470, 3471, 977, 3488, 3489, 3490, 4366, 3485, 2897, 1939,
	976, 3408, 971, 970, 963, 962, 961, 1912, 946, 945,
	200, 902, 901, 4307, 900, 899, 890, 200, 889, 888,
	5031, 887, 1934, 851, 822, 821, 1628, 4323, 2203, 2203,
	3470, 3471, 820, 802, 272, 5030, 271, 2203, 270, 269,
	268, 267, 266, 265, 1935, 1936, 1937, 1938, 264, 263,
	1952, 262, 1963, 261, 1918, 260, 259, 258, 257, 1411,
	1208, 256, 255, 2728, 2729, 254, 253, 252, 251, 3485,
	250, 249, 248, 4067, 4036, 3476, 3851, 3566, 3431, 3414,
	3405, 3307, 3198, 1965, 3233, 3034, 2965, 1208, 1208, 1208,
	2939, 4556, 2764, 3034, 3476, 1951, 2721, 2078, 1961, 3514,
	2924, 3470, 3471, 2578, 2247, 1940, 1942, 2790, 2205, 2036,
	2776, 245, 2774, 2101, 2005, 1918, 2035, 1877, 1631, 1456,
	2036, 1332, 5027, 5005, 156, 1487, 1909, 2035, 4989, 1208,
	1996, 1927, 1928, 1934, 4884, 1208, 1609, 4782, 1411, 1452,
	1453, 1454, 4652, 3515, 2039, 1614, 2206, 2993, 2184, 1949,
	2203, 4776, 4797, 2200, 2581, 2034, 4774, 4604, 1950, 1439,
	4561, 247, 3492, 1208, 1933, 1208, 3476, 1208, 1924, 1925,
	1931, 1953, 1930, 1926, 1609, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 3836, 3486, 1349, 2203, 4539, 4333,
	4381, 4346, 4345, 4332, 1965, 1759, 3470, 3471, 2889, 4339,
	1411, 1910, 1911, 4338, 3486, 1416, 3476, 1692, 4337, 4330,
	4329, 246, 1590, 2758, 1595, 1205, 4327, 1309, 4322, 4319,
	1609, 1349, 4318, 4221, 4207, 4071, 239, 1609, 1649, 4070,
	4069, 4046, 4012, 1913, 3492, 240, 1208, 4011, 1208, 4010,
	3932, 3927, 3561, 1609, 1963, 2974, 2003, 1383, 1386, 1627,
	3507, 3498, 1208, 3469, 1208, 3466, 3465, 2722, 3463, 3458,
	3457, 1431, 4128, 200, 5205, 1963, 1643, 1819, 3456, 1912,
	3032, 3453, 1396, 1433, 3450, 3430, 3486, 3476, 3413, 3406,
	1182, 3404, 3266, 2925, 1963, 1696, 1699, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 1998, 1997, 2747, 1995, 3587,
	2432, 1909, 1939, 1609, 2394, 1963, 1908, 2392, 1634, 883,
	1641, 886, 1647, 1612, 5148, 5147, 3470, 3471, 1965, 3488,
	3489, 3490, 1996, 1208, 5069, 1934, 1208, 5067, 1334, 3958,
	4944, 4222, 1582, 1480, 4863, 1574, 1579, 4848, 4844, 4306,
	4843, 4842, 4822, 3235, 4821, 1425, 3487, 4819, 4796, 4795,
	4769, 2688, 1459, 1952, 4555, 4755, 1963, 4752, 3470, 3471,
	1470, 1471, 188, 188, 4751, 3487, 4138, 4744, 4732, 1626,
	4731, 1625, 3476, 4676, 1685, 4647, 4602, 1918, 4585, 4584,
	1462, 1738, 1637, 1743, 1472, 1473, 1965, 3486, 4523, 4519,
	4516, 1764, 1727, 1729, 4494, 3485, 1963, 1757, 4365, 1762,
	4344, 4272, 4126, 2708, 2709, 2710, 2734, 2720, 2714, 1702,
	2716, 2717, 2715, 2702, 2703, 2704, 2705, 2706, 2707, 3031,
	1740, 4125, 4106, 2963, 3512, 4105, 4103, 3031, 3031, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 3487, 4027, 4015,
	3922, 1983, 1439, 3251, 3852, 1439, 3846, 3813, 3721, 3677,
	1648, 3644, 3589, 1725, 1637, 3435, 3434, 3429, 3395, 1636,
	3212, 1950, 1208, 1324, 3059, 1820, 2042, 1963, 1208, 2041,
	1149, 1924, 1925, 1931, 1953, 1930, 1926, 2040, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 2037, 1642, 4222,
	2694, 4799, 3476, 2029, 2027, 2972, 2971, 1887, 2936, 3481,
	3479, 3480, 3472, 3473, 3474, 3475, 3477, 3478, 2929, 2895,
	1718, 3482, 3483, 3484, 2772, 1982, 4798, 2791, 3481, 3479,
	3480, 3472, 3473, 3474, 3475, 3477, 3478, 2100, 1326, 1769,
	2056, 1466, 2051, 2050, 3476, 2049, 1837, 1739, 2529, 2048,
	1910, 1911, 1914, 1915, 1916, 1917, 1919, 1920, 3487, 2047,
	2046, 2045, 1716, 1758, 2044, 3234, 2043, 1985, 2024, 2023,
	3492, 2022, 2021, 2020, 1941, 2019, 2018, 2017, 2016, 2015,
	1881, 2014, 1913, 1208, 1208, 1208, 2013, 2012, 2011, 1208,
	2010, 2009, 1998, 3482, 3483, 3484, 1330, 1984, 1330, 1981,
	3481, 3479, 3480, 3472, 3473, 3474, 3475, 3477, 3478, 1966,
	1976, 1424, 3486, 1487, 1786, 1353, 1344, 1637, 1912, 4526,
	4377, 4315, 4066, 4039, 4030, 1208, 3417, 2927, 877, 1411,
	4624, 1822, 4379, 4065, 2144, 877, 1997, 1411, 3585, 1411,
	2104, 1979, 2055, 3472, 3473, 3474, 3475, 3477, 3478, 1888,
	3470, 3471, 3842, 3558, 3486, 1721, 1637, 2096, 2123, 3107,
	5139, 2288, 3470, 3471, 2064, 4852, 2173, 1466, 2175, 4845,
	4454, 4745, 4559, 1451, 1884, 245, 4497, 3680, 4496, 4495,
	4453, 1449, 1892, 1891, 1466, 4368, 4279, 1128, 4278, 1910,
	1911, 4277, 1963, 1127, 4276, 4275, 4274, 4273, 4092, 1411,
	2117, 4034, 2111, 2038, 4033, 1208, 1886, 2112, 245, 3854,
	3853, 3744, 3479, 3480, 3472, 3473, 3474, 3475, 3477, 3478,
	3742, 1913, 1149, 1905, 1906, 247, 1918, 3741, 2208, 1208,
	2061, 2062, 5023, 2286, 1963, 1444, 1328, 1487, 1328, 3085,
	2789, 188, 1450, 2775, 2092, 2773, 245, 245, 1296, 5096,
	5094, 2085, 5019, 4225, 1879, 2078, 4777, 1912, 247, 2110,
	2238, 4775, 1466, 1444, 2322, 2030, 2031, 3909, 3711, 2277,
	4152, 4741, 1785, 3487, 4651, 246, 3455, 1940, 1942, 2019,
	2212, 2245, 2019, 1464, 3454, 2118, 883, 1439, 886, 1325,
	239, 1325, 2167, 883, 245, 886, 247, 247, 2036, 240,
	3377, 2211, 1105, 3148, 3070, 2035, 1447, 2109, 246, 2226,
	4121, 3474, 3475, 3477, 3478, 3487, 1916, 1917, 1919, 1920,
	2105, 3646, 3796, 239, 3795, 4215, 3476, 200, 2076, 2138,
	1444, 2086, 240, 4086, 4814, 4087, 1933, 2007, 1763, 1744,
	2083, 4815, 2457, 4735, 247, 1794, 246, 246, 1149, 1308,
	1838, 1106, 5052, 4537, 4815, 3277, 3768, 2188, 4606, 1821,
	200, 239, 239, 4483, 1795, 2369, 4229, 4204, 1417, 2054,
	240, 240, 4158, 3470, 3471, 2004, 3488, 3489, 3490, 2341,
	3519, 4149, 2095, 4131, 2094, 3880, 2093, 3611, 3960, 2080,
	2091, 2090, 2089, 2368, 246, 2433, 3926, 2550, 200, 200,
	245, 2214, 1609, 1609, 2462, 2400, 3423, 4671, 2755, 239,
	2124, 5028, 1487, 2485, 1151, 1720, 1963, 2970, 240, 3482,
	3483, 3484, 1721, 2321, 3586, 2052, 3481, 3479, 3480, 3472,
	3473, 3474, 3475, 3477, 3478, 2032, 3486, 4643, 3776, 245,
	2426, 3068, 1695, 1619, 1420, 1382, 3250, 5043, 5040, 3832,
	247, 2190, 3485, 4097, 2192, 3125, 4837, 4543, 2379, 2384,
	2197, 3306, 1773, 4951, 2199, 2210, 3649, 1752, 3123, 2202,
	3480, 3472, 3473, 3474, 3475, 3477, 3478, 4116, 3247, 3128,
	3751, 5029, 5097, 3190, 1085, 2318, 4674, 2326, 5098, 247,
	2252, 941, 2253, 2336, 2355, 4670, 4649, 1934, 3903, 4171,
	246, 2287, 2260, 2261, 4700, 2331, 2241, 2233, 4440, 1609,
	1670, 1609, 3007, 1609, 1662, 239, 1963, 2964, 245, 2254,
	2255, 1103, 1835, 1451, 240, 2543, 2258, 2259, 3615, 1101,
	2284, 1609, 1609, 2541, 5201, 5131, 2282, 1099, 2227, 246,
	4853, 4693, 1445, 1836, 3109, 1609, 2328, 1097, 4682, 3476,
	4486, 2215, 200, 4485, 239, 1817, 2294, 1609, 1965, 1609,
	1609, 1609, 883, 240, 886, 2280, 5076, 4169, 247, 4170,
	1621, 4168, 1451, 1094, 2559, 2371, 2372, 2556, 4160, 4146,
	4145, 4143, 3030, 877, 4142, 4130, 4089, 2329, 3617, 4088,
	2422, 200, 1450, 3757, 2805, 4438, 2285, 3487, 3028, 3030,
	1671, 942, 3679, 4435, 2804, 1208, 2316, 3756, 2331, 2373,
	2331, 3713, 3579, 2484, 3428, 3028, 2356, 3492, 246, 3427,
	2427, 3426, 1626, 2494, 1625, 3425, 2281, 1834, 3381, 3146,
	1253, 2439, 2557, 239, 3145, 3130, 3119, 2315, 2327, 4672,
	2312, 1450, 240, 1208, 2335, 3709, 794, 1468, 1469, 1771,
	3111, 2460, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 3486,
	2558, 2489, 3101, 3100, 2470, 1441, 1816, 2760, 794, 4644,
	200, 2447, 3095, 3094, 3646, 2385, 3244, 3093, 3075, 1208,
	3074, 1208, 1720, 2096, 1445, 3035, 2951, 2495, 1208, 2669,
	1885, 2144, 2144, 1487, 2626, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 2408, 1208, 2449, 1208, 1208, 1208, 1208, 2407, 1963,
	2514, 883, 1725, 886, 1725, 2436, 3089, 2330, 2530, 2369,
	1446, 5132, 2477, 3472, 3473, 3474, 3475, 3477, 3478, 1149,
	1208, 1149, 2761, 2445, 1208, 1208, 2441, 2598, 2585, 2457,
	3478, 2476, 1208, 1468, 1469, 4710, 1208, 3881, 1208, 1208,
	1425, 2453, 5077, 2454, 4455, 1718, 1487, 2444, 1787, 2444,
	1468, 1469, 1208, 1208, 1208, 1208, 5134, 1920, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 2571, 1441, 245, 245,
	1817, 1434, 1442, 4396, 3710, 4434, 3470, 3471, 4386, 1147,
	3487, 1443, 2978, 2501, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 4436, 2493, 2596, 1766, 1208, 245, 2736,
	2737, 2596, 2755, 2504, 2762, 1878, 2759, 2955, 2406, 1330,
	2330, 4583, 2330, 2736, 2752, 1622, 1487, 3072, 247, 247,
	1708, 1201, 1707, 2576, 1706, 1330, 1705, 2568, 1468, 1469,
	2537, 1091, 1666, 3044, 1368, 2622, 2623, 2481, 1814, 4395,
	2800, 1208, 1487, 793, 245, 1875, 2138, 2138, 247, 2232,
	2231, 2609, 1446, 1466, 2240, 3485, 2594, 5135, 1833, 2846,
	2846, 2860, 2594, 2736, 1679, 793, 2881, 2883, 246, 246,
	3014, 5097, 2887, 1146, 944, 943, 2324, 3354, 2684, 2684,
	3284, 1816, 2570, 239, 239, 2584, 2583, 2582, 2597, 2590,
	1795, 2700, 240, 240, 247, 1795, 2941, 1128, 246, 2502,
	1128, 1128, 1815, 2613, 1445, 2751, 2614, 2615, 2580, 2357,
	1684, 2954, 1852, 239, 1442, 4100, 2937, 4830, 1767, 3322,
	200, 200, 240, 1443, 3058, 2548, 3482, 3483, 3484, 1890,
	1848, 3369, 3127, 3481, 3479, 3480, 3472, 3473, 3474, 3475,
	3477, 3478, 3124, 2592, 246, 1854, 4432, 1411, 1411, 1328,
	200, 3047, 3476, 2912, 3001, 3122, 3614, 795, 3890, 239,
	2977, 2535, 2904, 5025, 1444, 1328, 3126, 1296, 240, 2696,
	5137, 2764, 1149, 2692, 5163, 2498, 2235, 3002, 2085, 795,
	2690, 2492, 1149, 5133, 2749, 4113, 1149, 1772, 1487, 3889,
	1148, 2358, 4711, 2980, 2680, 2999, 200, 3057, 4127, 2958,
	2446, 1324, 1325, 1324, 2903, 4709, 1691, 188, 4805, 2666,
	1783, 4707, 1423, 2595, 4437, 3029, 742, 4184, 1325, 2595,
	1095, 3324, 2764, 2542, 2996, 2678, 2976, 1441, 1095, 4484,
	3949, 2540, 2855, 4419, 2872, 2885, 1095, 2144, 1439, 2842,
	2802, 2893, 2894, 737, 4832, 2803, 1096, 2911, 2806, 2916,
	2807, 2808, 2922, 2923, 2926, 2905, 2909, 2910, 4144, 3696,
	4706, 1689, 3486, 5143, 2038, 4141, 1326, 2083, 1326, 4412,
	3368, 4074, 1095, 4061, 3763, 1149, 3004, 4185, 3021, 849,
	3755, 1910, 1911, 3707, 3129, 1487, 987, 3335, 4708, 2593,
	3946, 3092, 2758, 4582, 3688, 2593, 2237, 3073, 3620, 3071,
	1830, 1609, 5109, 2345, 5118, 1941, 1444, 4111, 2352, 2567,
	282, 1411, 1446, 1913, 3036, 2391, 2390, 2577, 3181, 3697,
	2998, 4183, 2987, 2973, 3140, 4413, 2990, 3010, 2991, 5117,
	2030, 2031, 1208, 1208, 2236, 1208, 939, 2949, 938, 3005,
	1966, 2966, 1963, 2995, 2982, 4916, 5026, 3361, 3362, 1912,
	3012, 5165, 5084, 4297, 3689, 3033, 4296, 2997, 4430, 3884,
	877, 3046, 1411, 3695, 2569, 1668, 3120, 3090, 1849, 3223,
	2674, 3764, 3947, 3761, 1442, 5136, 4433, 3829, 1145, 3331,
	3216, 2500, 2364, 1443, 2664, 3830, 3008, 2667, 3013, 3105,
	2296, 2342, 891, 1609, 2675, 847, 3077, 2764, 3687, 4928,
	3267, 2676, 2185, 3338, 3633, 2681, 1609, 3185, 1609, 3011,
	4996, 4634, 4997, 3108, 1609, 2300, 2988, 3020, 4838, 898,
	3392, 3078, 2992, 3487, 3258, 2346, 1609, 3097, 2308, 3062,
	3039, 1665, 2138, 1367, 3096, 3231, 3003, 3272, 2663, 3099,
	3049, 3052, 2363, 3076, 3022, 3023, 4860, 3724, 3024, 3025,
	1411, 3390, 1411, 1691, 5024, 3141, 3091, 1918, 3275, 3193,
	3274, 3616, 3278, 3147, 3195, 1846, 792, 3186, 3182, 3183,
	3829, 3287, 3288, 2297, 1208, 3199, 3661, 1796, 3202, 3308,
	3204, 3309, 3294, 3295, 3296, 883, 2066, 886, 2309, 3110,
	1620, 1351, 3227, 3103, 3083, 3084, 3086, 3087, 3088, 3117,
	5062, 3098, 2325, 3310, 4513, 2070, 5083, 2025, 1940, 1942,
	5063, 3184, 1170, 3133, 3045, 1850, 1768, 3221, 883, 3583,
	886, 3134, 3135, 5141, 4831, 3304, 4431, 3249, 2323, 3191,
	3249, 3748, 2307, 188, 3269, 3660, 761, 4408, 2342, 2764,
	3279, 4914, 1208, 3337, 4409, 1626, 3285, 3196, 1208, 1208,
	3282, 1092, 3383, 2683, 2073, 4414, 4293, 3289, 2278, 3290,
	4579, 4595, 3260, 3262, 5107, 3210, 1444, 1933, 2291, 4962,
	2906, 3030, 2070, 5161, 3220, 3334, 3481, 3479, 3480, 3472,
	3473, 3474, 3475, 3477, 3478, 2301, 4915, 3050, 2071, 4465,
	1975, 3340, 979, 3342, 2746, 3433, 3387, 4411, 2677, 2940,
	3253, 3667, 2908, 738, 1208, 1208, 3263, 5166, 2679, 1889,
	1208, 3762, 2536, 3320, 1851, 4415, 2921, 1148, 4530, 980,
	3634, 2073, 848, 1208, 1208, 3261, 1725, 3388, 2292, 1208,
	1208, 3393, 1847, 3962, 2066, 1208, 5150, 2068, 4531, 5142,
	4112, 2691, 2665, 3242, 4525, 1853, 3303, 1963, 3301, 892,
	893, 4286, 2302, 2303, 2349, 2071, 2497, 3669, 3191, 2242,
	2243, 3313, 2491, 3315, 3312, 3317, 3314, 4621, 3316, 3311,
	3318, 3319, 2290, 850, 4489, 4419, 5144, 846, 2298, 4062,
	1208, 1208, 1208, 1357, 988, 3336, 1208, 1355, 739, 3384,
	1782, 1784, 1422, 3328, 4298, 4197, 1208, 2313, 2069, 3905,
	4197, 3352, 3104, 4578, 1801, 4195, 4881, 964, 4968, 4898,
	4195, 4412, 3416, 1208, 2347, 4405, 3343, 5082, 3360, 3345,
	2070, 4754, 4488, 4487, 4701, 3668, 2299, 4243, 1934, 2862,
	3351, 3349, 4514, 4403, 969, 3350, 3817, 3534, 3597, 740,
	2948, 741, 4407, 2414, 2063, 1354, 1347, 3370, 3355, 729,
	4410, 4220, 2609, 1899, 1900, 2547, 3411, 3412, 2348, 2072,
	4294, 3415, 2612, 2289, 2228, 5061, 2288, 4413, 4874, 2073,
	4342, 5171, 3571, 4001, 4052, 2319, 4669, 3407, 2186, 4763,
	2225, 3640, 4812, 1899, 4244, 2068, 4164, 4147, 4098, 1965,
	4199, 4096, 4420, 4421, 3818, 4199, 1894, 3809, 3636, 3232,
	895, 894, 3226, 2071, 3214, 1208, 1208, 1208, 1208, 2440,
	3382, 4406, 2434, 2428, 2420, 1208, 1208, 1208, 2399, 2314,
	1208, 2398, 4198, 4866, 3389, 2602, 2072, 4198, 3144, 4053,
	1208, 1330, 1487, 4882, 3391, 3945, 1208, 4867, 1208, 1659,
	1359, 3079, 4016, 3526, 3527, 4748, 2069, 1330, 4580, 981,
	982, 4934, 2304, 801, 3034, 3906, 4054, 2223, 4051, 4901,
	1898, 4082, 4528, 2549, 2221, 1487, 4246, 896, 897, 4548,
	3211, 4868, 4299, 2899, 1370, 4727, 4725, 1330, 4646, 1149,
	1487, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920,
	1898, 3652, 1411, 3051, 3422, 3509, 1899, 3648, 1910, 1911,
	3647, 3375, 2144, 2224, 3353, 2482, 1487, 4029, 3531, 2902,
	3530, 3528, 1824, 1823, 2474, 4203, 1411, 2463, 2396, 4193,
	1818, 3578, 1941, 4056, 1411, 2947, 3551, 1700, 1975, 2946,
	1913, 3599, 2305, 1900, 2945, 2944, 2943, 1714, 4870, 4825,
	3218, 1701, 1146, 3533, 1712, 3593, 1208, 4658, 2251, 4504,
	2901, 3538, 4216, 3055, 1324, 2900, 986, 1966, 1208, 3771,
	4300, 4104, 4869, 1900, 965, 966, 1912, 3560, 2603, 2438,
	1324, 1328, 840, 4002, 2072, 2277, 1411, 3565, 5104, 4408,
	4871, 4343, 2144, 3635, 4003, 4632, 4409, 1328, 4630, 4729,
	5170, 3189, 4093, 3877, 3596, 3581, 3283, 4414, 3612, 1208,
	3536, 2362, 4196, 1898, 3194, 3624, 3625, 4196, 841, 3192,
	3618, 2277, 3504, 3505, 3506, 1411, 3605, 1328, 2467, 1326,
	3080, 3081, 3685, 3557, 1325, 2368, 1439, 3650, 1776, 3569,
	3654, 3520, 4641, 3550, 1411, 1326, 1411, 4883, 4654, 4411,
	1325, 3699, 3535, 3701, 3573, 3574, 3575, 3576, 2310, 4747,
	4940, 4653, 1208, 1208, 983, 984, 4659, 4415, 2323, 3712,
	1487, 4826, 2341, 1802, 4728, 4083, 3564, 3725, 4055, 2341,
	1325, 1411, 4948, 4390, 1918, 2325, 4389, 3651, 3735, 3537,
	3656, 4642, 4931, 3658, 3549, 3637, 3584, 1411, 4349, 4018,
	3552, 3553, 2771, 4622, 3746, 3682, 4372, 2138, 3555, 1871,
	3556, 3727, 4970, 3729, 5108, 2563, 3733, 1873, 2320, 4713,
	3739, 5106, 1870, 2322, 1338, 3664, 1868, 3572, 5045, 1609,
	4388, 1842, 4856, 1840, 3602, 1940, 1942, 1170, 1170, 1170,
	1340, 3705, 1411, 1609, 3606, 1609, 4846, 1812, 1810, 1487,
	3613, 3686, 4628, 4941, 2141, 4601, 877, 1609, 3674, 3675,
	800, 3676, 2317, 2250, 4827, 3700, 3542, 1335, 3621, 1609,
	4094, 3765, 4383, 2110, 1808, 1571, 3643, 1806, 4341, 967,
	968, 1411, 4202, 3501, 1139, 1804, 1077, 2138, 3810, 3921,
	3632, 1798, 3590, 3591, 1933, 3592, 2324, 1713, 1330, 3766,
	3781, 3769, 4410, 3670, 1711, 3823, 3825, 3722, 3678, 3718,
	3719, 1141, 3720, 1341, 1792, 1790, 985, 2360, 1710, 1157,
	1609, 3691, 2288, 3801, 3878, 3601, 3875, 3714, 3603, 3604,
	3594, 3684, 1609, 3607, 1609, 3608, 3464, 3609, 3272, 3694,
	1342, 3394, 3215, 3808, 4420, 4421, 3118, 3272, 3112, 3717,
	3698, 3069, 4872, 2975, 2572, 2473, 3708, 3723, 4873, 1140,
	2458, 2103, 2099, 1874, 3736, 3543, 3834, 3502, 1751, 3901,
	3900, 3816, 3845, 3743, 1963, 2539, 3892, 1894, 3747, 3753,
	3099, 2506, 2321, 1339, 2377, 1487, 3326, 3734, 1487, 3692,
	4466, 3325, 3292, 3693, 2286, 2591, 3726, 1829, 2509, 3882,
	2419, 2397, 2565, 3745, 4470, 2174, 1078, 3893, 2564, 3754,
	1872, 2172, 4372, 4151, 883, 1869, 886, 3541, 3548, 1867,
	4150, 2008, 1208, 3819, 1841, 3873, 1839, 1765, 1208, 1208,
	1683, 2770, 1208, 1208, 1208, 3752, 1208, 3077, 1328, 3773,
	1811, 1809, 3804, 3826, 5017, 1208, 2144, 3758, 3806, 3805,
	4930, 4450, 4546, 3547, 1208, 1934, 188, 188, 4475, 1208,
	1093, 4463, 4401, 4400, 4242, 1487, 3874, 1807, 4233, 3871,
	1805, 3899, 5080, 4167, 1208, 3876, 3833, 4148, 1803, 4119,
	3831, 4117, 1487, 4095, 1797, 2132, 3843, 3844, 3898, 3840,
	3812, 1325, 2144, 2144, 1208, 1208, 3807, 1208, 1208, 1208,
	3824, 3797, 3245, 3237, 3230, 3222, 3207, 1791, 1789, 3206,
	3187, 1709, 2994, 2989, 2395, 1208, 1965, 2393, 2370, 1208,
	2343, 2144, 2144, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 3974, 1208, 3975, 3907, 2306, 3924, 2293,
	2279, 1149, 1208, 1208, 2144, 2207, 1083, 1082, 2204, 1208,
	3934, 3935, 2538, 3544, 3545, 3546, 2201, 2198, 2505, 2193,
	1208, 2376, 3886, 2191, 3887, 2187, 3888, 1166, 3904, 2178,
	4541, 1330, 1330, 3942, 3822, 1208, 5075, 3737, 5001, 1903,
	3896, 1305, 2352, 2116, 3373, 5098, 2229, 2217, 2218, 3902,
	276, 4530, 4824, 1079, 3346, 3344, 2575, 3180, 2342, 4982,
	1336, 1914, 1915, 1916, 1917, 1919, 1920, 1487, 1306, 4892,
	4562, 4531, 4482, 3929, 3931, 1098, 1100, 1102, 4048, 4387,
	1411, 1411, 3273, 3619, 4013, 2246, 1664, 3941, 4765, 3056,
	3030, 2138, 3030, 4758, 4254, 1411, 1411, 2288, 877, 1411,
	3957, 3948, 3950, 3951, 2573, 3964, 3028, 2496, 3053, 4059,
	4060, 1391, 2287, 2437, 2338, 1337, 4035, 1390, 1208, 3972,
	1865, 1866, 2533, 3973, 4072, 4073, 2622, 3965, 4079, 2528,
	4981, 4005, 3977, 2503, 3979, 4441, 4477, 2138, 2138, 1788,
	4784, 2337, 1461, 3374, 4656, 1208, 4014, 3060, 1910, 1911,
	4350, 2574, 4328, 1904, 188, 2622, 3980, 3665, 2915, 3738,
	3061, 4020, 1910, 1911, 3082, 4006, 2138, 2138, 1907, 1077,
	1418, 1328, 1328, 1358, 2216, 5092, 2333, 1458, 1208, 1208,
	1913, 3061, 1307, 1080, 4025, 4026, 5053, 3205, 4009, 4022,
	4023, 4230, 273, 4163, 1141, 2421, 3114, 1429, 3125, 2138,
	3952, 3123, 1391, 1571, 3132, 3116, 1391, 2285, 4939, 1138,
	4037, 1081, 3065, 832, 1208, 1208, 1912, 4162, 3063, 3115,
	1845, 4921, 1208, 3971, 1325, 1325, 3064, 4891, 4099, 4885,
	1912, 4823, 4749, 4720, 4633, 4240, 4232, 2334, 4219, 1216,
	726, 4045, 1609, 1609, 3811, 1609, 3252, 2886, 2213, 1609,
	2125, 5138, 1609, 4132, 4972, 4075, 883, 1411, 886, 4973,
	4655, 2141, 2141, 3102, 4181, 1084, 1618, 1617, 1142, 3582,
	2362, 5169, 3470, 3471, 1910, 1911, 4972, 4887, 4136, 1775,
	5111, 4973, 2144, 1628, 4038, 1774, 280, 280, 280, 1078,
	732, 733, 4320, 748, 732, 748, 759, 4159, 2766, 799,
	4064, 4175, 3329, 819, 4137, 4139, 4153, 2801, 826, 826,
	826, 4165, 2257, 3016, 4189, 2257, 280, 2256, 4124, 1170,
	2256, 3015, 1844, 4129, 1609, 1843, 4239, 1571, 4750, 4694,
	1208, 4479, 4474, 4247, 4473, 4316, 1324, 960, 1330, 1208,
	4290, 4063, 4186, 4187, 280, 4256, 3953, 3731, 1609, 4262,
	3728, 4212, 1324, 1609, 1609, 1609, 3077, 3332, 2002, 2001,
	4068, 3348, 1770, 2579, 1077, 5154, 5119, 4987, 4925, 4924,
	4923, 4855, 4854, 4801, 3258, 4201, 1609, 4226, 1609, 4723,
	4686, 4625, 1324, 4182, 1487, 4619, 4521, 4501, 3272, 1141,
	4080, 4251, 4172, 4439, 4081, 4248, 4378, 4267, 4227, 3141,
	4260, 1326, 4205, 4206, 4264, 4218, 4191, 4115, 4107, 4200,
	3815, 4179, 1487, 3814, 4190, 1208, 1208, 1326, 3657, 4214,
	4268, 1208, 1208, 2144, 3600, 4250, 1208, 1208, 4231, 1208,
	3333, 3323, 4282, 3300, 1208, 3299, 3298, 3297, 4236, 1083,
	1082, 3236, 4118, 3209, 4120, 1208, 3208, 1326, 3054, 2985,
	2979, 2968, 2967, 2956, 2695, 2566, 4235, 2534, 4234, 2527,
	2526, 1208, 2525, 4180, 4280, 4257, 3643, 2524, 2523, 4283,
	2435, 2409, 2405, 4249, 2404, 2403, 4252, 2138, 1328, 732,
	732, 2402, 2401, 4258, 1078, 4265, 1079, 280, 2181, 4266,
	2180, 2179, 2132, 2132, 2177, 4301, 2115, 2114, 1864, 1863,
	1799, 1678, 1571, 1677, 4314, 1676, 1675, 1674, 1673, 1672,
	4284, 1667, 1663, 1661, 4281, 1660, 1599, 4166, 1598, 1597,
	1478, 1477, 1330, 4285, 1476, 4310, 4295, 1475, 1474, 1421,
	1330, 1325, 1377, 1376, 1487, 1487, 1375, 1487, 1374, 1373,
	1372, 1371, 1369, 1364, 1330, 1363, 1362, 1361, 1360, 4302,
	953, 8, 1288, 4355, 2219, 1609, 1609, 1104, 1090, 4829,
	4418, 4417, 4416, 2562, 95, 1669, 915, 89, 1487, 2350,
	4114, 1054, 4969, 4859, 1652, 923, 4950, 4228, 3659, 3149,
	2508, 1800, 2510, 3559, 2928, 4913, 4324, 3432, 4791, 4594,
	2769, 2006, 3513, 1208, 91, 1192, 1238, 4512, 4373, 4374,
	4289, 4511, 4402, 4101, 1330, 3784, 1330, 4508, 4507, 4340,
	2129, 2131, 4376, 1156, 1490, 4995, 1080, 2230, 2138, 5160,
	1198, 2244, 2239, 2969, 2845, 4382, 4391, 4392, 4385, 1215,
	1212, 1411, 4429, 2133, 1083, 1082, 2135, 1214, 4449, 4363,
	1213, 1487, 2134, 1411, 1081, 4394, 1411, 2141, 2026, 4347,
	4458, 4445, 4446, 4461, 1211, 4442, 4354, 188, 1208, 4357,
	2128, 1487, 1328, 4428, 4238, 4364, 4352, 4353, 3256, 3841,
	1328, 4358, 4360, 4367, 1719, 4351, 1717, 1056, 2234, 2689,
	2753, 1079, 3421, 4356, 1328, 1999, 1172, 1194, 4397, 2750,
	1352, 1183, 1171, 1324, 4384, 3539, 3518, 3828, 1084, 4044,
	2601, 933, 4399, 1609, 1609, 4478, 4443, 4480, 4393, 3467,
	2756, 1343, 2869, 2861, 2857, 1325, 4371, 3610, 3246, 1880,
	4608, 1977, 3257, 1325, 1876, 1455, 1176, 2687, 1990, 3399,
	2611, 1411, 3835, 3564, 3562, 2962, 4975, 1325, 4532, 4444,
	3961, 3330, 4464, 1487, 1328, 2413, 1328, 4505, 1609, 1304,
	1303, 1350, 1302, 4956, 4481, 4953, 2340, 4549, 1326, 4515,
	4500, 3779, 3780, 2222, 3009, 2699, 3798, 4462, 1188, 4459,
	4499, 4502, 1593, 2554, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 3894, 3524, 1571, 4217, 1680, 4533, 4663, 1200, 1962,
	3176, 3175, 4818, 4425, 1487, 4425, 4492, 1325, 4472, 1325,
	1440, 4468, 4538, 1438, 1437, 4498, 1208, 1208, 1208, 4491,
	4490, 1080, 1436, 5128, 3143, 2353, 4110, 4109, 4108, 4550,
	4510, 244, 4506, 3367, 1487, 1901, 1893, 241, 243, 1208,
	4518, 4567, 1208, 1208, 4522, 4571, 4448, 1400, 4524, 1081,
	242, 4553, 1208, 3663, 4049, 2144, 4517, 3568, 5051, 4457,
	1208, 1208, 4460, 4134, 3770, 24, 4558, 833, 834, 4535,
	4551, 835, 3019, 2249, 4520, 1457, 4085, 1487, 829, 1609,
	23, 22, 21, 118, 4573, 4564, 1571, 4534, 2132, 43,
	4544, 4565, 20, 160, 1411, 158, 135, 4586, 155, 154,
	127, 153, 152, 1084, 4581, 151, 150, 149, 157, 148,
	4557, 147, 142, 146, 145, 144, 1487, 1580, 143, 141,
	1594, 1400, 139, 4627, 1208, 140, 134, 4591, 138, 137,
	136, 133, 4574, 132, 4575, 131, 130, 1208, 129, 128,
	126, 159, 125, 124, 123, 122, 1208, 121, 120, 119,
	812, 2144, 813, 62, 61, 117, 1571, 4603, 115, 116,
	19, 1208, 41, 4597, 1208, 14, 66, 4617, 67, 4618,
	4614, 4615, 18, 13, 36, 94, 107, 106, 1208, 105,
	37, 1208, 1571, 103, 1345, 102, 1324, 1324, 1487, 4666,
	35, 17, 1400, 1400, 16, 15, 1411, 100, 4636, 99,
	4637, 98, 34, 4703, 32, 11, 1609, 1609, 1609, 9,
	38, 4638, 4645, 2087, 12, 5, 4685, 4635, 1366, 193,
	192, 195, 2277, 1485, 191, 194, 93, 1330, 190, 189,
	280, 92, 280, 280, 30, 1395, 280, 1405, 4712, 10,
	185, 4739, 4224, 4631, 84, 187, 186, 184, 1419, 4722,
	2138, 1326, 1326, 4699, 4738, 4733, 819, 1487, 4726, 819,
	1609, 4683, 183, 4717, 4718, 182, 85, 4688, 82, 4759,
	181, 3781, 88, 180, 83, 87, 86, 28, 6, 65,
	7, 4576, 826, 4696, 4730, 3879, 110, 111, 39, 4687,
	80, 4764, 79, 78, 77, 1208, 1208, 27, 64, 4715,
	4714, 26, 177, 280, 225, 280, 280, 1395, 224, 280,
	280, 4746, 1208, 2144, 4742, 4719, 1405, 4724, 223, 222,
	221, 220, 4704, 4737, 219, 4762, 218, 4768, 1571, 4770,
	280, 4760, 1630, 213, 1411, 4675, 217, 1411, 215, 1411,
	1411, 214, 216, 212, 235, 234, 2138, 228, 1650, 227,
	4761, 4767, 233, 232, 231, 1657, 4766, 230, 1208, 4553,
	1208, 229, 1208, 4800, 226, 238, 4802, 1328, 4803, 4804,
	4780, 4781, 1330, 211, 1682, 210, 4779, 1405, 4772, 209,
	4689, 280, 280, 207, 1395, 1208, 4811, 1330, 4813, 203,
	206, 208, 205, 204, 4756, 202, 237, 236, 74, 175,
	176, 73, 4702, 174, 4783, 819, 173, 280, 280, 172,
	171, 170, 169, 168, 72, 4789, 4425, 179, 178, 1745,
	1325, 25, 2, 1, 4810, 1571, 0, 0, 0, 1988,
	1753, 0, 4809, 1993, 0, 960, 4806, 0, 0, 0,
	4677, 4678, 1330, 1330, 4841, 4833, 0, 4840, 0, 0,
	0, 4862, 0, 0, 0, 0, 1208, 0, 4834, 0,
	0, 0, 0, 1330, 0, 0, 1330, 0, 0, 4864,
	1609, 0, 0, 0, 4695, 0, 4697, 0, 4698, 4849,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 4851, 1208, 1208, 0, 0, 4877,
	4878, 0, 0, 0, 4857, 1208, 0, 0, 2138, 0,
	4875, 4909, 1328, 4910, 0, 0, 280, 0, 0, 0,
	4895, 0, 2141, 4897, 4889, 0, 4888, 1328, 4742, 4886,
	4894, 0, 0, 0, 0, 2383, 0, 0, 4903, 4906,
	280, 4902, 0, 0, 4908, 0, 4847, 4907, 0, 4926,
	0, 0, 0, 0, 4918, 1208, 1208, 0, 1326, 1208,
	0, 4425, 4905, 1609, 1411, 1325, 4927, 1411, 4922, 0,
	4917, 0, 0, 0, 0, 4861, 4425, 0, 4947, 0,
	1325, 0, 1328, 1328, 4929, 0, 4937, 4938, 4974, 0,
	0, 0, 4978, 4966, 4945, 0, 4967, 4946, 0, 4971,
	1594, 0, 2141, 1328, 4893, 0, 1328, 0, 4960, 0,
	0, 4977, 4955, 4958, 0, 0, 0, 0, 0, 4965,
	0, 0, 4998, 4964, 5000, 1208, 1208, 1208, 0, 0,
	4959, 4425, 4425, 0, 4963, 1325, 1325, 0, 0, 0,
	0, 0, 0, 4983, 0, 0, 0, 0, 0, 0,
	1594, 4988, 4425, 4991, 0, 4425, 1325, 0, 4999, 1325,
	0, 0, 1208, 0, 0, 5032, 0, 0, 5037, 5012,
	5013, 0, 5015, 5014, 0, 0, 0, 1324, 0, 0,
	5033, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5059, 0, 4850, 0, 1324,
	5034, 2102, 2277, 0, 0, 5060, 5066, 0, 0, 0,
	0, 0, 0, 0, 0, 5048, 5072, 0, 5050, 1208,
	0, 0, 0, 0, 0, 5035, 0, 1411, 5065, 4722,
	5064, 0, 5081, 0, 5058, 0, 0, 5074, 0, 0,
	4984, 5073, 1326, 0, 732, 0, 4986, 0, 5068, 0,
	1326, 0, 5099, 2132, 0, 0, 5089, 0, 5093, 1324,
	5091, 1324, 5090, 5095, 1326, 280, 0, 280, 5078, 0,
	5101, 280, 0, 5103, 0, 5105, 5087, 5088, 1330, 5102,
	1330, 0, 0, 5114, 1630, 1395, 2107, 280, 5113, 280,
	2113, 5121, 5110, 5124, 5120, 0, 0, 280, 5112, 748,
	0, 0, 5116, 0, 280, 4977, 5130, 0, 5129, 4955,
	0, 0, 4958, 0, 0, 5115, 0, 0, 0, 1411,
	2182, 0, 5122, 0, 1326, 2248, 1326, 5145, 0, 5146,
	0, 0, 280, 2132, 0, 5123, 5153, 5125, 0, 280,
	5152, 3867, 0, 0, 0, 5164, 5155, 5156, 5149, 1208,
	1208, 0, 0, 0, 3865, 0, 5151, 5162, 1208, 1208,
	0, 0, 5167, 5176, 3858, 0, 5158, 0, 0, 5172,
	0, 5178, 819, 5182, 0, 5187, 0, 5180, 5183, 5186,
	2606, 3258, 5185, 0, 5188, 0, 0, 0, 2267, 0,
	5191, 0, 0, 2268, 5179, 0, 1411, 0, 5181, 5192,
	5197, 5193, 0, 5196, 0, 0, 0, 5198, 5200, 5195,
	826, 3258, 826, 0, 0, 5184, 1208, 0, 1328, 5203,
	1328, 0, 826, 826, 5207, 5211, 5209, 0, 0, 5200,
	0, 0, 0, 5173, 5174, 0, 0, 5204, 5194, 0,
	0, 0, 0, 0, 0, 5206, 0, 0, 0, 3869,
	2425, 0, 948, 0, 0, 0, 2141, 0, 0, 0,
	0, 0, 5047, 0, 0, 5049, 3860, 4425, 0, 4425,
	0, 1325, 1571, 1325, 0, 0, 0, 0, 0, 0,
	75, 3859, 951, 950, 3470, 3471, 0, 3488, 3489, 3490,
	0, 5208, 0, 0, 2267, 0, 0, 0, 76, 2268,
	2388, 0, 2141, 2141, 0, 1571, 0, 3925, 2267, 0,
	2269, 0, 0, 2268, 0, 81, 0, 0, 0, 0,
	1571, 0, 0, 0, 0, 0, 2863, 0, 2273, 0,
	0, 2141, 2141, 0, 0, 0, 0, 3868, 0, 0,
	0, 0, 0, 0, 0, 0, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 0, 0, 3485, 2141, 0, 0, 0, 0, 280,
	0, 0, 0, 280, 0, 0, 0, 0, 3856, 0,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 1170, 0,
	0, 0, 0, 0, 0, 2270, 2275, 0, 0, 0,
	50, 0, 112, 0, 0, 0, 2269, 0, 96, 109,
	2555, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	2269, 0, 0, 280, 2273, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 280, 0, 5175, 2273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3476, 280, 0, 280, 0, 0, 0, 732, 0, 280,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	97, 819, 3396, 3397, 0, 960, 0, 2132, 0, 0,
	2271, 0, 0, 0, 0, 0, 0, 3867, 0, 0,
	1571, 0, 3866, 3861, 3862, 3863, 3864, 0, 0, 0,
	3865, 2270, 2275, 2693, 0, 280, 0, 1395, 280, 0,
	3858, 0, 0, 0, 0, 2270, 2275, 0, 3492, 1988,
	0, 0, 819, 2132, 2132, 0, 0, 1326, 0, 280,
	0, 3870, 0, 2278, 0, 0, 0, 2507, 0, 0,
	0, 0, 280, 280, 0, 280, 0, 280, 0, 280,
	0, 280, 2132, 2132, 0, 0, 0, 0, 0, 0,
	3486, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	0, 2625, 0, 0, 2868, 0, 2544, 0, 0, 2545,
	0, 2546, 0, 0, 0, 2132, 2271, 0, 0, 3622,
	0, 0, 0, 0, 2276, 3869, 280, 280, 280, 280,
	2271, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 3860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 101, 0, 799, 0, 3859, 0, 819,
	0, 0, 2141, 3623, 0, 3673, 0, 0, 0, 2278,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 2265,
	0, 0, 0, 2278, 3494, 3495, 3496, 3497, 0, 0,
	0, 0, 0, 0, 2767, 0, 0, 0, 0, 0,
	1400, 0, 1326, 0, 0, 0, 0, 1324, 1324, 0,
	0, 196, 104, 3868, 0, 108, 0, 1326, 0, 0,
	0, 1602, 0, 0, 0, 3671, 0, 0, 1324, 0,
	2276, 1324, 0, 0, 0, 1571, 0, 0, 1571, 2263,
	0, 0, 245, 0, 2276, 0, 0, 0, 0, 1400,
	955, 3487, 2701, 2272, 0, 156, 0, 0, 0, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3672,
	0, 0, 1326, 1326, 0, 0, 0, 0, 0, 0,
	0, 1400, 1400, 2264, 0, 0, 0, 0, 0, 0,
	2938, 0, 247, 1326, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 2141, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 1571, 0, 0, 161, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 1748, 0,
	0, 0, 1571, 0, 201, 0, 0, 0, 280, 0,
	0, 0, 246, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 280, 0, 732, 239, 0, 2272,
	0, 0, 0, 0, 0, 0, 240, 0, 280, 0,
	197, 0, 0, 2272, 0, 0, 0, 0, 3866, 3861,
	3862, 3863, 3864, 0, 0, 0, 0, 1580, 1777, 280,
	1405, 0, 0, 2132, 949, 0, 0, 3482, 3483, 3484,
	0, 3357, 0, 0, 3481, 3479, 3480, 3472, 3473, 3474,
	3475, 3477, 3478, 0, 0, 0, 0, 3870, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3018, 0, 280, 1405,
	0, 0, 748, 0, 748, 0, 0, 0, 2984, 0,
	0, 0, 0, 0, 280, 0, 0, 280, 0, 0,
	0, 280, 0, 280, 0, 0, 0, 1571, 1395, 0,
	280, 280, 0, 1405, 1405, 3000, 0, 0, 0, 0,
	280, 0, 2863, 2863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1910, 1911, 0, 0, 0, 0,
	1954, 1955, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 1941, 0,
	0, 0, 0, 0, 826, 826, 1913, 0, 826, 826,
	0, 0, 0, 76, 2132, 0, 1960, 3043, 0, 0,
	0, 0, 0, 1324, 0, 1324, 0, 0, 0, 280,
	81, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1912, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 280, 0, 0, 0,
	0, 0, 1929, 1594, 0, 0, 0, 819, 0, 0,
	0, 90, 0, 0, 1400, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	1326, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 280, 3138, 1630, 0,
	0, 0, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 112, 0, 1594,
	0, 1594, 0, 96, 109, 0, 280, 3197, 0, 2868,
	1935, 1936, 1937, 1938, 2863, 2863, 2863, 2863, 0, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 280, 0, 280,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 3917, 3918, 0, 0, 3241, 0, 0, 0,
	0, 1951, 0, 0, 1961, 97, 3043, 0, 732, 0,
	0, 1940, 1942, 0, 0, 2141, 0, 3138, 960, 3043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2868, 2868, 0, 0, 0, 0, 0, 1927, 1928, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	280, 1395, 280, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 1405, 280, 1571, 0, 1395, 0, 1395, 0,
	1395, 0, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988,
	3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998,
	3999, 4000, 1571, 4004, 0, 75, 0, 0, 0, 0,
	0, 2141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 280, 280, 280,
	280, 1395, 0, 0, 1395, 0, 280, 0, 0, 0,
	81, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 0, 0, 101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	280, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 2868, 2868, 2868, 2868, 196, 104, 0, 0,
	108, 0, 954, 0, 1571, 1571, 0, 1571, 0, 0,
	0, 1934, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 96, 109, 0, 2132, 245, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 1571, 1952,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2141, 0, 3470, 3471, 0, 3488, 3489,
	3490, 0, 0, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 97, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 2132, 0, 0, 0, 0, 246, 0, 0,
	0, 1571, 0, 0, 3485, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 1594, 1594, 0, 1950, 0, 0,
	3525, 240, 0, 0, 0, 197, 0, 0, 2455, 0,
	1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 0, 0, 2469, 2471, 0, 200,
	0, 0, 0, 3554, 0, 0, 0, 0, 3470, 3471,
	2475, 3488, 3489, 3490, 0, 0, 0, 0, 3567, 0,
	0, 0, 2483, 0, 2486, 2487, 2488, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 2959, 0,
	0, 0, 0, 1594, 3588, 0, 0, 0, 0, 0,
	280, 3476, 0, 0, 0, 0, 0, 0, 101, 0,
	0, 0, 0, 0, 0, 2425, 280, 0, 0, 0,
	0, 732, 2863, 2863, 0, 0, 732, 0, 0, 732,
	0, 0, 732, 732, 1571, 0, 0, 3485, 732, 0,
	0, 0, 0, 0, 0, 3493, 280, 0, 0, 0,
	0, 0, 0, 0, 2132, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 1571, 0, 196, 104, 0, 3492,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 280,
	0, 0, 0, 280, 280, 955, 0, 1571, 1910, 1911,
	156, 3486, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863,
	2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863,
	2863, 2863, 1941, 2863, 3476, 0, 0, 3043, 3043, 280,
	1913, 3630, 2107, 0, 0, 0, 1571, 247, 3043, 0,
	2113, 0, 0, 0, 0, 0, 0, 0, 1400, 3043,
	2113, 0, 3043, 2113, 0, 0, 2113, 1966, 0, 3630,
	0, 0, 0, 161, 0, 0, 1912, 0, 0, 0,
	0, 280, 280, 2107, 0, 280, 0, 1932, 0, 201,
	0, 1963, 0, 0, 1170, 0, 0, 246, 0, 0,
	0, 0, 2107, 0, 280, 0, 3704, 3704, 0, 0,
	0, 1395, 239, 0, 0, 0, 0, 0, 1571, 0,
	0, 240, 0, 0, 0, 197, 0, 3567, 0, 0,
	0, 0, 0, 3043, 0, 3043, 0, 3732, 3043, 2107,
	0, 0, 3043, 0, 3486, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 2107, 0, 0, 819, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3487, 0, 1935, 1936, 1937, 1938, 0, 0,
	2868, 2868, 0, 75, 1918, 0, 0, 1571, 0, 0,
	1395, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 3775, 81, 0,
	0, 3777, 3043, 0, 1963, 280, 0, 0, 0, 280,
	0, 0, 1405, 0, 0, 1940, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 3241, 0, 0, 1395, 0, 280, 0, 90,
	3043, 0, 732, 3895, 0, 0, 1485, 0, 0, 3043,
	2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868,
	2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868, 2868,
	0, 2868, 0, 0, 1933, 0, 0, 0, 0, 0,
	954, 0, 0, 0, 0, 3487, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 112, 0, 3885, 3482, 3483,
	3484, 96, 109, 0, 0, 3481, 3479, 3480, 3472, 3473,
	3474, 3475, 3477, 3478, 0, 0, 0, 3891, 0, 0,
	0, 1630, 0, 3938, 0, 1395, 280, 0, 280, 0,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	3954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 167, 280, 2065, 0, 0, 0,
	0, 0, 0, 75, 0, 47, 46, 0, 0, 0,
	0, 4600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 3959, 0, 0, 49, 0, 164, 0,
	0, 3482, 3483, 3484, 0, 1934, 3142, 0, 3481, 3479,
	3480, 3472, 3473, 3474, 3475, 3477, 3478, 48, 0, 90,
	0, 0, 0, 4648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 0, 1946, 0, 0, 4047, 51, 69, 0, 0,
	0, 0, 75, 0, 0, 52, 0, 0, 0, 0,
	58, 0, 0, 0, 0, 165, 1965, 0, 0, 0,
	76, 0, 0, 50, 0, 112, 0, 0, 0, 0,
	0, 96, 109, 0, 0, 0, 101, 81, 0, 70,
	280, 280, 0, 0, 0, 0, 0, 0, 1400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 732, 0, 0, 3286,
	0, 0, 0, 0, 53, 0, 0, 0, 90, 0,
	0, 3293, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 97, 196, 104, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 954,
	0, 0, 0, 0, 0, 245, 0, 0, 2425, 0,
	0, 0, 50, 955, 112, 0, 0, 0, 156, 0,
	96, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 97, 0, 0, 0, 0, 0, 0, 4817,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 3704, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 4839, 0, 0, 280, 0, 0,
	239, 0, 0, 0, 0, 0, 101, 0, 0, 240,
	3138, 1946, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 2107, 0, 280, 0, 0,
	0, 748, 748, 1405, 0, 0, 0, 1730, 0, 0,
	57, 0, 0, 0, 0, 60, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 280, 3241, 0,
	0, 3241, 2113, 59, 196, 104, 0, 280, 108, 0,
	0, 0, 55, 0, 0, 0, 166, 280, 0, 0,
	0, 0, 280, 0, 56, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 3043, 280, 156, 0,
	0, 0, 0, 0, 0, 101, 3138, 0, 0, 960,
	3043, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2863, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 196, 104, 0, 0, 108, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 1946, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	239, 0, 955, 2863, 0, 0, 0, 156, 0, 240,
	0, 0, 0, 197, 0, 4362, 0, 2425, 4325, 1946,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 200, 0, 0,
	3, 1400, 0, 0, 247, 0, 4380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1910, 1911, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 280, 0, 0, 0, 0, 201, 1630, 1913, 280,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 1966, 0, 0, 240, 0,
	0, 1405, 197, 1946, 1912, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 1405, 1932, 280, 1405, 0, 0,
	0, 0, 1946, 0, 1929, 0, 1728, 1946, 3043, 3043,
	0, 3630, 0, 0, 3704, 3043, 0, 0, 0, 0,
	0, 0, 0, 4427, 0, 4427, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3043, 0, 2113,
	0, 0, 0, 3630, 0, 1630, 1630, 280, 2107, 2868,
	0, 2863, 0, 0, 0, 0, 0, 0, 0, 0,
	4305, 2107, 0, 280, 2107, 0, 280, 0, 3704, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 1946, 0,
	0, 0, 1935, 1936, 1937, 1938, 1414, 3043, 0, 3043,
	280, 0, 1918, 0, 0, 0, 0, 0, 0, 2863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 1155, 1155, 0, 0, 0, 0,
	0, 2868, 0, 0, 2863, 0, 0, 0, 0, 3043,
	3043, 0, 1485, 0, 0, 3241, 3241, 0, 0, 0,
	0, 0, 3630, 1940, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 1584, 0, 0, 0, 0,
	0, 1600, 4592, 280, 0, 0, 0, 0, 0, 1927,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3749, 0, 0, 0, 0, 1632,
	0, 1638, 0, 1644, 0, 0, 0, 0, 1910, 1911,
	0, 0, 1933, 0, 0, 4592, 0, 0, 0, 0,
	0, 0, 3774, 0, 1946, 1946, 1946, 1946, 1946, 1946,
	1946, 1946, 1941, 0, 3802, 0, 0, 0, 0, 0,
	1913, 0, 0, 0, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2625, 0, 0, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 1736, 0, 1741, 0, 1912, 0, 0, 852,
	0, 0, 0, 0, 0, 3848, 0, 1932, 1755, 0,
	1760, 0, 1963, 0, 0, 0, 1929, 3872, 0, 0,
	0, 0, 0, 2867, 0, 863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 0, 2868,
	0, 0, 1946, 0, 1594, 865, 2625, 0, 0, 0,
	3043, 2113, 0, 2113, 0, 0, 4640, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 864, 0,
	1939, 0, 3920, 0, 0, 4664, 0, 4664, 0, 1825,
	0, 0, 1831, 0, 0, 0, 0, 2868, 0, 0,
	0, 0, 0, 1934, 1935, 1936, 1937, 1938, 0, 0,
	0, 0, 819, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 2868, 3704, 0, 1395, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 0, 0, 0, 2107, 0, 280, 0, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 1940, 1942, 0, 0, 0,
	0, 1400, 0, 4640, 0, 0, 4427, 0, 0, 1630,
	0, 0, 0, 3043, 0, 0, 0, 0, 0, 0,
	0, 1927, 1928, 0, 0, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 4753, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 794, 0, 0, 1933, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 280, 280, 0, 3167, 0, 859, 0, 0,
	0, 0, 0, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 3959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3157,
	3155, 0, 0, 0, 0, 0, 3159, 3161, 3151, 0,
	0, 0, 3704, 4808, 0, 0, 0, 0, 0, 0,
	0, 4640, 0, 0, 1963, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4427, 0, 0, 0, 0, 0, 0, 0, 3177,
	0, 0, 0, 0, 0, 0, 4427, 0, 0, 2059,
	2059, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 854, 0, 0,
	0, 4427, 4427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4427, 0, 280, 4427, 0, 0, 0, 858,
	0, 0, 0, 1204, 0, 2113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 793, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	279, 279, 279, 3153, 866, 0, 0, 0, 0, 4935,
	856, 0, 0, 0, 3169, 1155, 0, 4173, 4174, 0,
	0, 0, 0, 0, 4176, 4664, 0, 4177, 280, 0,
	884, 0, 0, 0, 0, 0, 0, 3168, 3158, 3156,
	3160, 3162, 3152, 3154, 3170, 3172, 0, 0, 1946, 0,
	0, 0, 0, 3043, 0, 3164, 3166, 3174, 884, 853,
	0, 0, 0, 0, 0, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 860, 280, 0,
	0, 3178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	3959, 0, 0, 855, 0, 0, 0, 1946, 0, 0,
	0, 1946, 0, 4263, 0, 0, 0, 0, 2469, 4269,
	4270, 0, 0, 0, 1630, 1946, 0, 0, 868, 869,
	0, 0, 0, 0, 1946, 1946, 1946, 1946, 1946, 1946,
	1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
	1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
	1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
	0, 0, 0, 0, 0, 1946, 0, 1946, 1946, 1946,
	1946, 0, 0, 1910, 1911, 0, 0, 0, 0, 2867,
	2867, 1327, 0, 0, 0, 0, 0, 4640, 0, 3171,
	0, 0, 0, 0, 1946, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3043, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 4427, 0, 4427,
	0, 1912, 1630, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 3179, 0,
	0, 1929, 0, 0, 0, 0, 0, 3163, 3165, 3173,
	0, 0, 0, 0, 0, 1946, 0, 0, 1946, 0,
	0, 1946, 0, 0, 1946, 0, 0, 0, 0, 0,
	1946, 1946, 1946, 1946, 1946, 1946, 1946, 0, 0, 0,
	0, 0, 0, 3043, 0, 0, 0, 0, 0, 0,
	4369, 4370, 0, 0, 0, 0, 0, 3915, 0, 0,
	3138, 0, 2838, 2839, 2840, 2841, 2834, 2835, 2836, 2837,
	0, 0, 0, 3043, 0, 0, 0, 0, 0, 1935,
	1936, 1937, 1938, 0, 0, 0, 0, 3138, 0, 1918,
	0, 0, 0, 0, 0, 0, 1946, 0, 0, 3491,
	0, 2867, 2867, 2867, 2867, 0, 0, 0, 1946, 0,
	1946, 2531, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1942, 0, 0, 0, 2814, 2815, 2816, 2817, 2560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1927, 1928, 2826, 2827,
	2828, 2829, 2822, 2823, 2824, 2825, 2830, 2831, 2832, 2833,
	0, 0, 0, 0, 0, 2600, 0, 2604, 0, 0,
	0, 0, 0, 0, 2618, 0, 0, 0, 2469, 1933,
	0, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 0, 2668, 0,
	2670, 2671, 2672, 2673, 0, 0, 0, 0, 0, 0,
	0, 2810, 2811, 2812, 2813, 2818, 2819, 2820, 2821, 0,
	0, 0, 0, 0, 0, 0, 2697, 0, 0, 4566,
	0, 4568, 4569, 4570, 0, 4572, 0, 0, 1987, 1963,
	0, 0, 2748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2778, 2781,
	2784, 2787, 0, 0, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956,
	0, 0, 2859, 0, 2871, 2873, 2878, 1939, 0, 0,
	0, 0, 0, 0, 1947, 1941, 0, 0, 0, 0,
	0, 0, 0, 1913, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1960, 4620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 1946, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 279, 279, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 1937,
	1938, 4716, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917,
	1919, 1920, 0, 1910, 1911, 0, 0, 279, 0, 279,
	279, 0, 0, 279, 279, 0, 0, 0, 1951, 0,
	0, 1961, 0, 0, 0, 0, 0, 1941, 1940, 1942,
	0, 0, 0, 0, 884, 1913, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 1957, 0, 1958, 0, 0,
	0, 0, 0, 0, 1927, 1928, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 1912, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 279, 279, 1933, 0, 0,
	0, 1929, 0, 0, 0, 0, 1946, 1946, 0, 2867,
	2867, 0, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 279, 279, 3491, 3491, 0, 0, 1946, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 3914, 0, 0,
	0, 0, 0, 1946, 0, 0, 1948, 0, 3200, 3201,
	0, 3203, 0, 0, 0, 0, 0, 1963, 0, 1935,
	1936, 1937, 1938, 0, 0, 0, 0, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2867,
	2867, 2867, 2867, 2867, 2867, 2867, 2867, 2867, 2867, 2867,
	2867, 2867, 2867, 2867, 2867, 2867, 2867, 2867, 2867, 0,
	2867, 3491, 3491, 3491, 3491, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	1940, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 2469, 1946, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 1927, 1928, 0, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3321, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 1967, 1968, 0, 0, 0, 1946,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926,
	0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920,
	0, 0, 0, 0, 0, 3445, 0, 0, 0, 3446,
	0, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	3379, 3380, 1946, 1946, 0, 0, 3386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 779, 0, 3400, 3401, 0, 0, 0,
	0, 2748, 0, 0, 0, 0, 0, 0, 0, 2081,
	0, 1327, 0, 0, 762, 279, 0, 0, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 2081, 279, 0, 0, 0, 0, 0, 0,
	0, 884, 0, 0, 0, 0, 3410, 1331, 884, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 3424, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 0, 0, 0, 279, 0, 0, 3436,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1910, 1911, 767, 0, 0, 0,
	1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917,
	1919, 1920, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 768, 0, 0, 0, 0, 1913, 0, 0, 1946,
	1946, 0, 0, 1946, 3491, 3491, 1946, 0, 0, 0,
	1946, 2878, 2878, 2878, 769, 0, 0, 1946, 770, 0,
	0, 0, 0, 1966, 0, 0, 2059, 0, 0, 0,
	1946, 0, 1912, 0, 3529, 794, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 1929, 1946, 1946, 1946, 1946, 1946, 0, 0,
	0, 784, 0, 1946, 0, 1946, 0, 0, 3491, 3491,
	3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491,
	3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 0, 0,
	0, 3491, 0, 0, 1946, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 3385, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 1937, 1938, 0, 0, 0, 0, 0, 0,
	1918, 0, 1155, 279, 0, 0, 0, 884, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	0, 1940, 1942, 0, 0, 3662, 791, 0, 772, 0,
	0, 0, 0, 279, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 1927, 1928, 279,
	1946, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	773, 0, 0, 0, 0, 279, 0, 279, 0, 0,
	0, 1946, 1946, 279, 0, 0, 0, 0, 3715, 3716,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 0, 0, 0, 0, 0, 0,
	774, 0, 0, 0, 0, 789, 790, 0, 787, 279,
	0, 0, 279, 0, 782, 0, 0, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 884, 279, 0, 279,
	1963, 279, 0, 279, 904, 279, 0, 0, 0, 0,
	0, 776, 0, 783, 0, 0, 1946, 0, 0, 0,
	0, 777, 0, 0, 0, 906, 0, 0, 0, 0,
	907, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	0, 786, 0, 0, 75, 0, 0, 0, 0, 0,
	279, 279, 279, 279, 0, 0, 795, 0, 1939, 0,
	1946, 1946, 76, 0, 0, 1946, 1946, 780, 0, 1946,
	1946, 908, 0, 925, 1946, 0, 0, 0, 1946, 81,
	0, 1934, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2867, 909,
	0, 0, 0, 0, 910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 954, 0, 0, 0, 1331, 0, 0, 0, 0,
	2867, 0, 905, 0, 0, 0, 112, 0, 2618, 0,
	0, 0, 96, 109, 3912, 3913, 0, 0, 3916, 0,
	0, 0, 3919, 0, 0, 912, 0, 0, 0, 913,
	0, 3923, 0, 1331, 0, 0, 0, 0, 0, 0,
	3930, 936, 0, 0, 0, 3529, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 0, 0,
	3943, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 97, 0, 0, 0, 0, 1331,
	3966, 3967, 0, 3968, 3969, 3970, 1331, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 3976, 1331, 0, 0, 3978, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 4007, 4008,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4019, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 4028, 0, 0, 1946, 1946, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 1946, 3491, 2867, 0,
	0, 0, 279, 0, 1946, 0, 0, 1946, 914, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 279, 916,
	0, 279, 0, 0, 0, 279, 0, 279, 0, 0,
	0, 0, 0, 0, 279, 279, 0, 101, 0, 1941,
	0, 0, 0, 0, 279, 3491, 2867, 1913, 0, 0,
	0, 917, 0, 0, 0, 0, 1910, 1911, 0, 0,
	0, 0, 1946, 0, 4084, 0, 0, 0, 0, 0,
	1946, 2867, 0, 0, 1966, 0, 0, 0, 1946, 0,
	1941, 926, 0, 1912, 0, 0, 0, 1946, 1913, 1946,
	0, 4102, 0, 793, 1932, 196, 104, 0, 0, 108,
	0, 0, 0, 1929, 0, 0, 903, 0, 0, 927,
	0, 0, 0, 279, 0, 1966, 0, 0, 918, 0,
	0, 0, 0, 0, 1912, 4133, 245, 279, 0, 0,
	0, 0, 0, 0, 955, 1932, 0, 0, 0, 156,
	279, 0, 0, 0, 1929, 924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3378,
	4154, 4155, 919, 0, 0, 0, 920, 939, 0, 938,
	0, 0, 921, 0, 0, 0, 247, 279, 0, 0,
	0, 1935, 1936, 1937, 1938, 3491, 0, 922, 0, 279,
	279, 1918, 931, 0, 0, 0, 0, 0, 940, 0,
	937, 0, 161, 0, 0, 0, 0, 795, 0, 0,
	0, 0, 0, 1946, 3491, 0, 0, 1946, 201, 0,
	884, 0, 1935, 1936, 1937, 1938, 246, 0, 0, 0,
	0, 0, 1918, 0, 0, 0, 3491, 0, 0, 0,
	0, 239, 1940, 1942, 0, 0, 0, 0, 0, 0,
	240, 279, 0, 884, 197, 1331, 0, 1331, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 0, 1331, 0, 0, 0, 2059, 0, 200, 0,
	0, 0, 0, 1940, 1942, 4259, 0, 1946, 0, 0,
	0, 0, 0, 2145, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 1927,
	1928, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 279, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4303, 4304, 0, 0, 0, 0, 4308, 4309, 0,
	0, 0, 4312, 4313, 0, 0, 0, 0, 0, 0,
	4317, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4321, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 279, 279, 279, 279, 0, 0, 4326, 1946, 0,
	279, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 0, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 114, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 1331, 0, 1965, 1946, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4469, 0, 0, 0, 0, 0,
	0, 0, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 1331, 0,
	1331, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1129, 0, 0, 0, 0, 0,
	1331, 1331, 0, 0, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 1331, 1331,
	1331, 0, 0, 0, 1327, 0, 0, 1910, 1911, 0,
	1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0,
	1327, 0, 0, 1314, 0, 0, 0, 0, 0, 0,
	1947, 1941, 4587, 4588, 4589, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	2081, 0, 0, 0, 0, 2618, 0, 0, 4598, 4599,
	0, 0, 279, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 1912, 4607, 4610, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 279, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 2145, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4665, 0, 0, 0, 0, 0, 0,
	0, 0, 4673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 1936, 1937, 1938, 4681, 0, 0,
	1155, 0, 0, 1918, 0, 279, 279, 0, 0, 279,
	0, 0, 0, 0, 4690, 0, 2081, 4692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 1951, 1331, 0, 1961, 0, 0,
	0, 0, 0, 0, 1940, 1942, 0, 0, 1947, 1941,
	0, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 1957, 0, 1958, 0, 0, 0, 1960, 0, 0,
	1927, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 1949, 0,
	0, 0, 0, 1912, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 1933, 1932, 1331, 0, 0, 0, 0,
	0, 279, 0, 1929, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 4816, 0, 0, 0, 4820, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 1939, 1951, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 0, 0,
	279, 0, 279, 0, 1934, 0, 0, 0, 0, 1957,
	0, 1958, 0, 0, 0, 0, 0, 1331, 1927, 1928,
	0, 0, 4890, 281, 281, 281, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 1949, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 2618, 0, 0, 1965, 2145, 0, 0, 0,
	0, 4610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 114, 0, 0, 0,
	1948, 0, 1155, 0, 0, 0, 0, 0, 0, 0,
	1331, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922,
	1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0,
	0, 2744, 0, 0, 0, 2745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	0, 5011, 5011, 5011, 1327, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 114,
	0, 114, 1331, 114, 0, 0, 0, 0, 5036, 0,
	0, 0, 0, 0, 0, 1331, 0, 1331, 0, 0,
	1952, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 1150, 114, 114, 0, 0,
	0, 0, 0, 0, 0, 5011, 0, 0, 0, 0,
	0, 0, 114, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 4331, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5011, 5168, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 279, 0, 1129, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 1992, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 1941, 0, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 2082, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 1331, 0, 275, 275, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 1935, 1936,
	1937, 1938, 0, 1327, 1331, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 1331, 2081, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 0, 0, 0, 1331, 0, 0, 0, 1951,
	279, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 0, 0, 0, 0, 0, 0, 281, 0, 281,
	281, 0, 0, 281, 0, 0, 1957, 2081, 1958, 2081,
	0, 0, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 1933, 0,
	279, 2145, 0, 0, 0, 0, 0, 779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 1491, 281, 281, 279, 0, 281, 281, 762, 0,
	0, 0, 1491, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 764, 0, 0, 0, 1963, 1331,
	0, 0, 0, 0, 0, 765, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 281,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 1491, 281, 281, 0, 0, 0, 785,
	0, 0, 0, 0, 0, 0, 1939, 0, 1331, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 1331, 0, 1331, 0, 0, 0, 1331, 1934,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 1491,
	0, 0, 770, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1331, 1150, 784, 1150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 1950, 0, 1331, 0, 0,
	0, 0, 0, 0, 781, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 2145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 773, 0, 0, 0, 1129, 0,
	0, 1129, 1129, 0, 0, 0, 0, 0, 0, 0,
	2145, 2145, 0, 0, 0, 0, 279, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 793, 0, 0, 0,
	0, 0, 0, 2145, 774, 0, 0, 0, 0, 789,
	790, 0, 787, 0, 0, 0, 0, 2686, 782, 0,
	0, 775, 0, 0, 0, 0, 0, 0, 281, 0,
	1331, 1331, 0, 0, 0, 0, 0, 1150, 0, 1491,
	0, 0, 0, 0, 281, 281, 281, 1986, 0, 0,
	0, 1986, 0, 0, 281, 2081, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 776, 1331, 783, 0, 0,
	2081, 0, 0, 0, 0, 777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	778, 0, 0, 0, 279, 786, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 0, 0, 1314, 2081, 2081, 1381, 0, 1381,
	1381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2082, 0, 0, 0, 0, 0, 2081, 0, 279, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	1209, 1331, 1331, 0, 1331, 0, 0, 0, 1331, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1734, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 281, 0, 1491, 1491,
	281, 0, 0, 0, 0, 0, 0, 1331, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 1331, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 1331, 0, 0,
	0, 0, 0, 1331, 0, 0, 281, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1855, 0, 0, 0, 0, 281, 0,
	281, 0, 2145, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 1491, 0, 1491,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 114,
	0, 114, 0, 0, 0, 0, 0, 1491, 1491, 0,
	0, 2081, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 1491, 281, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 1491, 1491, 1491, 0, 0,
	0, 285, 0, 0, 0, 0, 281, 0, 114, 0,
	0, 114, 0, 0, 0, 0, 0, 114, 0, 281,
	281, 0, 281, 0, 281, 0, 281, 0, 281, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 1331, 1331, 0, 1331, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 1331, 0, 0, 0, 0,
	0, 0, 0, 281, 281, 281, 281, 1331, 876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 0, 1331, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2108, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2686, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 1331, 0, 1986, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1331, 1331, 1331, 1331, 1331, 1331,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 1331, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 281, 0, 0, 0, 281, 0,
	281, 0, 0, 0, 0, 1331, 0, 281, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 0, 0, 0, 0, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 1331, 1331, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2411, 0, 0, 0,
	2418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2431, 0, 0, 0, 1331, 0, 0, 1331,
	281, 1491, 0, 0, 0, 0, 0, 0, 2443, 0,
	2443, 0, 281, 281, 0, 0, 2450, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 1489, 0, 0, 0, 0,
	0, 0, 2145, 0, 0, 0, 1611, 0, 0, 0,
	0, 0, 2418, 0, 0, 2479, 0, 0, 0, 114,
	114, 0, 114, 0, 281, 0, 281, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 2499, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	2515, 0, 2517, 0, 2519, 0, 2521, 0, 2522, 1491,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 114, 1491, 114, 1491, 0, 1331, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	1611, 0, 1491, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 2551, 2552, 2553, 0, 281, 0, 281,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 1331, 0, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 1611, 281, 281, 281, 281, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	114, 114, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 2935, 0, 0, 1610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1941,
	0, 0, 0, 0, 1610, 0, 0, 1913, 0, 0,
	0, 2986, 0, 0, 1381, 0, 0, 1960, 1381, 0,
	1381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 2431, 0, 0,
	0, 0, 0, 1912, 0, 0, 0, 1331, 114, 1331,
	0, 0, 0, 1489, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 1314, 1314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 281, 1489, 0, 0,
	281, 281, 2418, 2418, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 1957,
	0, 1958, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2418, 0, 1949, 0, 0, 0,
	0, 0, 0, 2431, 0, 0, 0, 0, 281, 281,
	0, 1933, 281, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 0, 1491, 0, 3291, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 876, 3302, 0, 3305,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 1611, 1611, 0, 0, 0, 114, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 1314, 281, 0, 0, 0, 0, 1491,
	0, 1491, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 281, 1491, 3339, 1592, 3341, 1592, 0, 1939,
	0, 0, 281, 3347, 0, 1491, 281, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 281, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 3376, 0, 1611,
	1952, 1611, 0, 1611, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	1491, 1611, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 1611,
	1611, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 281, 1491, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 1314, 1950, 0,
	0, 0, 281, 0, 0, 1314, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 4936,
	0, 0, 0, 1610, 1610, 0, 0, 0, 0, 0,
	0, 1491, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 1610, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 1610, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	1610, 1610, 1610, 1491, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 876, 3577, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 1910, 1911, 0, 1943, 1944, 1945,
	1954, 1955, 1956, 0, 0, 0, 1381, 0, 0, 0,
	1592, 1592, 1489, 0, 0, 0, 0, 1947, 1941, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3626, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1488, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 0, 0, 3681, 3683,
	0, 0, 2431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 1491, 1491,
	0, 1491, 0, 0, 0, 1491, 0, 0, 1491, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 1489, 0,
	1935, 1936, 1937, 1938, 281, 0, 0, 1488, 0, 0,
	1918, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 1940, 1942, 0, 1491, 0, 0, 0, 0, 1491,
	1491, 1491, 3799, 0, 0, 0, 3803, 1488, 1957, 0,
	1958, 0, 0, 0, 0, 0, 0, 1927, 1928, 0,
	0, 0, 1491, 0, 1491, 1489, 0, 0, 281, 0,
	1491, 0, 0, 1488, 0, 1949, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 2686, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 3897, 0, 1592, 0, 0, 0, 0,
	1963, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 1611, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 3910, 0, 0, 0, 1611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	1491, 1491, 0, 1491, 0, 0, 0, 114, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 1934, 0, 0, 1491, 0, 114, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 281, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	281, 0, 1610, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 1491,
	1491, 876, 0, 0, 0, 0, 0, 1924, 1925, 1931,
	1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 0, 0, 0, 0, 0, 0,
	281, 114, 3928, 0, 1610, 0, 0, 114, 0, 1491,
	281, 0, 0, 0, 1491, 0, 0, 1610, 0, 1610,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 0,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 1941, 0, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 1491, 0, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 2431, 0, 0, 0, 1929, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 2431, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 4213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2431,
	0, 0, 0, 0, 4241, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 1491, 0, 1935, 1936, 1937, 1938,
	0, 0, 0, 281, 0, 0, 1918, 0, 0, 0,
	0, 0, 1491, 1491, 1491, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4287, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 1940, 1942, 0,
	0, 0, 0, 1491, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 1958, 0, 0, 0,
	0, 0, 0, 1927, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	281, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 0, 1611, 0, 1611, 0, 0, 0, 1489,
	0, 0, 0, 0, 1939, 0, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 0, 1611,
	0, 281, 0, 0, 0, 0, 1491, 1934, 0, 0,
	0, 0, 0, 0, 4447, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2431, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 0, 1611, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 1489, 0,
	2431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 281, 0, 0, 0, 0,
	0, 1488, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0,
	1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 1610, 0, 0, 0,
	1488, 0, 0, 0, 0, 0, 0, 876, 1610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 4650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 1488,
	0, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1941, 0, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 1488, 0, 0, 0, 0, 0, 4778,
	1592, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1611, 0, 1611, 0, 0, 0, 1611,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1938, 0, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 1951,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 0, 0, 0, 0, 0, 0, 0, 1611, 876,
	0, 0, 0, 1611, 1611, 1611, 1957, 0, 1958, 0,
	0, 4896, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 1611, 0,
	0, 0, 0, 1949, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4949, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 1610, 0, 1610, 0, 0, 0,
	1610, 0, 0, 1610, 0, 4993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 1489, 1939, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1611, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	0, 0, 0, 0, 1610, 1610, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 1610, 0, 1610,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 0, 0, 1611, 1611, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 0, 0, 0, 0, 1488, 1488, 0, 1488, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1910,
	1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 1941, 0, 0, 0, 1489, 0, 1611,
	0, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 1489, 1912, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 1929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 0, 1611, 1611, 1611, 1610,
	0, 0, 0, 0, 0, 1935, 1936, 1937, 1938, 0,
	0, 0, 0, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 1610, 1610, 1610, 1610,
	1610, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1488, 0, 1489, 0, 0,
	1611, 0, 0, 0, 0, 0, 1951, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 1940, 1942, 0, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 1958, 0, 0, 0, 0,
	0, 0, 1927, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	1610, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 1610, 1610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923,
	1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1486,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 1492, 297, 298, 1493, 1494, 1495,
	0, 1496, 674, 1497, 1498, 1499, 299, 1500, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 1501, 679, 311, 312, 313,
	314, 315, 316, 1502, 1503, 0, 317, 680, 681, 682,
	1504, 318, 319, 683, 1505, 1572, 1506, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 1507, 329, 330, 331,
	328, 332, 1508, 333, 1610, 334, 335, 336, 337, 338,
	339, 1509, 340, 341, 342, 1272, 343, 344, 345, 1510,
	1511, 1513, 1512, 1514, 1515, 1516, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 1517, 356, 352, 354,
	1518, 357, 355, 358, 1519, 359, 360, 361, 1520, 1521,
	362, 363, 364, 1522, 365, 366, 367, 1523, 368, 369,
	370, 1524, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 1525,
	286, 1526, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 1527, 389, 390, 391, 1528, 392,
	1529, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 1530, 405, 692, 1531,
	693, 406, 1532, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 1275, 413, 414, 1533, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 1534,
	1274, 501, 423, 697, 698, 1535, 699, 1536, 424, 425,
	1276, 700, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 1537, 436, 438,
	437, 1538, 439, 701, 1279, 440, 441, 1280, 1539, 442,
	443, 444, 445, 446, 447, 450, 1540, 1541, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 1542, 288,
	1283, 495, 496, 497, 498, 1543, 702, 499, 703, 502,
	503, 1544, 0, 504, 0, 505, 1545, 1546, 507, 508,
	509, 1547, 1548, 510, 511, 704, 1284, 512, 1285, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 1549, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 1550, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 1551, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 1552, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 1553, 593, 594,
	592, 595, 596, 597, 1554, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 1555, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 1556, 627, 628, 0, 624, 615, 1557, 629, 630,
	631, 632, 633, 634, 635, 636, 1558, 637, 715, 716,
	717, 718, 1559, 647, 1560, 638, 639, 640, 641, 719,
	642, 720, 1561, 643, 644, 645, 646, 0, 648, 649,
	1562, 1563, 650, 651, 653, 655, 656, 652, 654, 657,
	1564, 658, 1565, 0, 659, 660, 661, 721, 722, 723,
	1566, 663, 662, 664, 665, 666, 724, 667, 668, 1567,
	1568, 1569, 1570, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 2913, 0, 0,
	0, 0, 0, 0, 0, 2914, 289, 290, 292, 291,
	293, 294, 295, 296, 1492, 297, 298, 1493, 1494, 1495,
	0, 1496, 674, 1497, 1498, 1499, 299, 1500, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 1501, 679, 311, 312, 313,
	314, 315, 316, 1502, 1503, 0, 317, 680, 681, 682,
	1504, 318, 319, 683, 1505, 1572, 1506, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 1507, 329, 330, 331,
	328, 332, 1508, 333, 0, 334, 335, 336, 337, 338,
	339, 1509, 340, 341, 342, 1272, 343, 344, 345, 1510,
	1511, 1513, 1512, 1514, 1515, 1516, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 1517, 356, 352, 354,
	1518, 357, 355, 358, 1519, 359, 360, 361, 1520, 1521,
	362, 363, 364, 1522, 365, 366, 367, 1523, 368, 369,
	370, 1524, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 1525,
	286, 1526, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 1527, 389, 390, 391, 1528, 392,
	1529, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 1530, 405, 692, 1531,
	693, 406, 1532, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 1275, 413, 414, 1533, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 1534,
	1274, 501, 423, 697, 698, 1535, 699, 1536, 424, 425,
	1276, 700, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 1537, 436, 438,
	437, 1538, 439, 701, 1279, 440, 441, 1280, 1539, 442,
	443, 444, 445, 446, 447, 450, 1540, 1541, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 1542, 288,
	1283, 495, 496, 497, 498, 1543, 702, 499, 703, 502,
	503, 1544, 0, 504, 0, 505, 1545, 1546, 507, 508,
	509, 1547, 1548, 510, 511, 704, 1284, 512, 1285, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 1549, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 1550, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 1551, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 1552, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 1553, 593, 594,
	592, 595, 596, 597, 1554, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 1555, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 1556, 627, 628, 0, 624, 615, 1557, 629, 630,
	631, 632, 633, 634, 635, 636, 1558, 637, 715, 716,
	717, 718, 1559, 647, 1560, 638, 639, 640, 641, 719,
	642, 720, 1561, 643, 644, 645, 646, 0, 648, 649,
	1562, 1563, 650, 651, 653, 655, 656, 652, 654, 657,
	1564, 658, 1565, 0, 659, 660, 661, 721, 722, 723,
	1566, 663, 662, 664, 665, 666, 724, 667, 668, 1567,
	1568, 1569, 1570, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 3937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3939, 289, 290, 292, 291, 293, 294,
	295, 296, 1492, 297, 298, 1493, 1494, 1495, 0, 1496,
	674, 1497, 1498, 1499, 299, 1500, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 1501, 679, 311, 312, 313, 314, 315,
	316, 1502, 1503, 0, 317, 680, 681, 682, 1504, 318,
	319, 683, 1505, 1572, 1506, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 1507, 329, 330, 331, 328, 332,
	1508, 333, 0, 334, 335, 336, 337, 338, 339, 1509,
	340, 341, 342, 1272, 343, 344, 345, 1510, 1511, 1513,
	1512, 1514, 1515, 1516, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 1517, 356, 352, 354, 1518, 357,
	355, 358, 1519, 359, 360, 361, 1520, 1521, 362, 363,
	364, 1522, 365, 366, 367, 1523, 368, 369, 370, 1524,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 1525, 286, 1526,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 1527, 389, 390, 391, 1528, 392, 1529, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 1530, 405, 692, 1531, 693, 406,
	1532, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 1275, 413, 414, 1533, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 1534, 1274, 501,
	423, 697, 698, 1535, 699, 1536, 424, 425, 1276, 700,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 1537, 436, 438, 437, 1538,
	439, 701, 1279, 440, 441, 1280, 1539, 442, 443, 444,
	445, 446, 447, 450, 1540, 1541, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1542, 288, 1283, 495,
	496, 497, 498, 1543, 702, 499, 703, 502, 503, 1544,
	0, 504, 0, 505, 1545, 1546, 507, 508, 509, 1547,
	1548, 510, 511, 704, 1284, 512, 1285, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	1549, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 1550, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 1551, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 1552,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 1553, 593, 594, 592, 595,
	596, 597, 1554, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	1555, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 1556,
	627, 628, 0, 624, 615, 1557, 629, 630, 631, 632,
	633, 634, 635, 636, 1558, 637, 715, 716, 717, 718,
	1559, 647, 1560, 638, 639, 640, 641, 719, 642, 720,
	1561, 643, 644, 645, 646, 0, 648, 649, 1562, 1563,
	650, 651, 653, 655, 656, 652, 654, 657, 1564, 658,
	1565, 0, 659, 660, 661, 721, 722, 723, 1566, 663,
	662, 664, 665, 666, 724, 667, 668, 1567, 1568, 1569,
	1570, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4361, 289, 290, 292, 291,
	293, 294, 295, 296, 1492, 297, 298, 1493, 1494, 1495,
	0, 1496, 674, 1497, 1498, 1499, 299, 1500, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 1501, 679, 311, 312, 313,
	314, 315, 316, 1502, 1503, 0, 317, 680, 681, 682,
	1504, 318, 319, 683, 1505, 1572, 1506, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 1507, 329, 330, 331,
	328, 332, 1508, 333, 0, 334, 335, 336, 337, 338,
	339, 1509, 340, 341, 342, 1272, 343, 344, 345, 1510,
	1511, 1513, 1512, 1514, 1515, 1516, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 1517, 356, 352, 354,
	1518, 357, 355, 358, 1519, 359, 360, 361, 1520, 1521,
	362, 363, 364, 1522, 365, 366, 367, 1523, 368, 369,
	370, 1524, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 1525,
	286, 1526, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 1527, 389, 390, 391, 1528, 392,
	1529, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 1530, 405, 692, 1531,
	693, 406, 1532, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 1275, 413, 414, 1533, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 1534,
	1274, 501, 423, 697, 698, 1535, 699, 1536, 424, 425,
	1276, 700, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 1537, 436, 438,
	437, 1538, 439, 701, 1279, 440, 441, 1280, 1539, 442,
	443, 444, 445, 446, 447, 450, 1540, 1541, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 1542, 288,
	1283, 495, 496, 497, 498, 1543, 702, 499, 703, 502,
	503, 1544, 0, 504, 0, 505, 1545, 1546, 507, 508,
	509, 1547, 1548, 510, 511, 704, 1284, 512, 1285, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 1549, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 1550, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 1551, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 1552, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 1553, 593, 594,
	592, 595, 596, 597, 1554, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 1555, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 1556, 627, 628, 0, 624, 615, 1557, 629, 630,
	631, 632, 633, 634, 635, 636, 1558, 637, 715, 716,
	717, 718, 1559, 647, 1560, 638, 639, 640, 641, 719,
	642, 720, 1561, 643, 644, 645, 646, 0, 648, 649,
	1562, 1563, 650, 651, 653, 655, 656, 652, 654, 657,
	1564, 658, 1565, 0, 659, 660, 661, 721, 722, 723,
	1566, 663, 662, 664, 665, 666, 724, 667, 668, 1567,
	1568, 1569, 1570, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4359, 289, 290,
	292, 291, 293, 294, 295, 296, 1492, 297, 298, 1493,
	1494, 1495, 0, 1496, 674, 1497, 1498, 1499, 299, 1500,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 1501, 679, 311,
	312, 313, 314, 315, 316, 1502, 1503, 0, 317, 680,
	681, 682, 1504, 318, 319, 683, 1505, 1572, 1506, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 1507, 329,
	330, 331, 328, 332, 1508, 333, 0, 334, 335, 336,
	337, 338, 339, 1509, 340, 341, 342, 1272, 343, 344,
	345, 1510, 1511, 1513, 1512, 1514, 1515, 1516, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 1517, 356,
	352, 354, 1518, 357, 355, 358, 1519, 359, 360, 361,
	1520, 1521, 362, 363, 364, 1522, 365, 366, 367, 1523,
	368, 369, 370, 1524, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 1525, 286, 1526, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 1527, 389, 390, 391,
	1528, 392, 1529, 1273, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 1530, 405,
	692, 1531, 693, 406, 1532, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 1275, 413, 414, 1533, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 1534, 1274, 501, 423, 697, 698, 1535, 699, 1536,
	424, 425, 1276, 700, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 1537,
	436, 438, 437, 1538, 439, 701, 1279, 440, 441, 1280,
	1539, 442, 443, 444, 445, 446, 447, 450, 1540, 1541,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1542, 288, 1283, 495, 496, 497, 498, 1543, 702, 499,
	703, 502, 503, 1544, 0, 504, 0, 505, 1545, 1546,
	507, 508, 509, 1547, 1548, 510, 511, 704, 1284, 512,
	1285, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 1549, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	1550, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 1551, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 1552, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 1553,
	593, 594, 592, 595, 596, 597, 1554, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 1555, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 1556, 627, 628, 0, 624, 615, 1557,
	629, 630, 631, 632, 633, 634, 635, 636, 1558, 637,
	715, 716, 717, 718, 1559, 647, 1560, 638, 639, 640,
	641, 719, 642, 720, 1561, 643, 644, 645, 646, 0,
	648, 649, 1562, 1563, 650, 651, 653, 655, 656, 652,
	654, 657, 1564, 658, 1565, 0, 659, 660, 661, 721,
	722, 723, 1566, 663, 662, 664, 665, 666, 724, 667,
	668, 1567, 1568, 1569, 1570, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4593, 289, 290, 292, 291, 293, 294,
	295, 296, 1492, 297, 298, 1493, 1494, 1495, 0, 1496,
	674, 1497, 1498, 1499, 299, 1500, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 1501, 679, 311, 312, 313, 314, 315,
	316, 1502, 1503, 0, 317, 680, 681, 682, 1504, 318,
	319, 683, 1505, 1572, 1506, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 1507, 329, 330, 331, 328, 332,
	1508, 333, 0, 334, 335, 336, 337, 338, 339, 1509,
	340, 341, 342, 1272, 343, 344, 345, 1510, 1511, 1513,
	1512, 1514, 1515, 1516, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 1517, 356, 352, 354, 1518, 357,
	355, 358, 1519, 359, 360, 361, 1520, 1521, 362, 363,
	364, 1522, 365, 366, 367, 1523, 368, 369, 370, 1524,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 1525, 286, 1526,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 1527, 389, 390, 391, 1528, 392, 1529, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 1530, 405, 692, 1531, 693, 406,
	1532, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 1275, 413, 414, 1533, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 1534, 1274, 501,
	423, 697, 698, 1535, 699, 1536, 424, 425, 1276, 700,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 1537, 436, 438, 437, 1538,
	439, 701, 1279, 440, 441, 1280, 1539, 442, 443, 444,
	445, 446, 447, 450, 1540, 1541, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1542, 288, 1283, 495,
	496, 497, 498, 1543, 702, 499, 703, 502, 503, 1544,
	0, 504, 0, 505, 1545, 1546, 507, 508, 509, 1547,
	1548, 510, 511, 704, 1284, 512, 1285, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	1549, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 1550, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 1551, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 1552,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 1553, 593, 594, 592, 595,
	596, 597, 1554, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	1555, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 1556,
	627, 628, 0, 624, 615, 1557, 629, 630, 631, 632,
	633, 634, 635, 636, 1558, 637, 715, 716, 717, 718,
	1559, 647, 1560, 638, 639, 640, 641, 719, 642, 720,
	1561, 643, 644, 645, 646, 0, 648, 649, 1562, 1563,
	650, 651, 653, 655, 656, 652, 654, 657, 1564, 658,
	1565, 0, 659, 660, 661, 721, 722, 723, 1566, 663,
	662, 664, 665, 666, 724, 667, 668, 1567, 1568, 1569,
	1570, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4456,
	289, 290, 292, 291, 293, 294, 295, 296, 1492, 297,
	298, 1493, 1494, 1495, 0, 1496, 674, 1497, 1498, 1499,
	299, 1500, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 1501,
	679, 311, 312, 313, 314, 315, 316, 1502, 1503, 0,
	317, 680, 681, 682, 1504, 318, 319, 683, 1505, 1572,
	1506, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	1507, 329, 330, 331, 328, 332, 1508, 333, 0, 334,
	335, 336, 337, 338, 339, 1509, 340, 341, 342, 1272,
	343, 344, 345, 1510, 1511, 1513, 1512, 1514, 1515, 1516,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	1517, 356, 352, 354, 1518, 357, 355, 358, 1519, 359,
	360, 361, 1520, 1521, 362, 363, 364, 1522, 365, 366,
	367, 1523, 368, 369, 370, 1524, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 1525, 286, 1526, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 1527, 389,
	390, 391, 1528, 392, 1529, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	1530, 405, 692, 1531, 693, 406, 1532, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	1533, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 1534, 1274, 501, 423, 697, 698, 1535,
	699, 1536, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 1537, 436, 438, 437, 1538, 439, 701, 1279, 440,
	441, 1280, 1539, 442, 443, 444, 445, 446, 447, 450,
	1540, 1541, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 1542, 288, 1283, 495, 496, 497, 498, 1543,
	702, 499, 703, 502, 503, 1544, 0, 504, 0, 505,
	1545, 1546, 507, 508, 509, 1547, 1548, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 1549, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 1550, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	1551, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 1552, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 1553, 593, 594, 592, 595, 596, 597, 1554, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 1555, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 1556, 627, 628, 0, 624,
	615, 1557, 629, 630, 631, 632, 633, 634, 635, 636,
	1558, 637, 715, 716, 717, 718, 1559, 647, 1560, 638,
	639, 640, 641, 719, 642, 720, 1561, 643, 644, 645,
	646, 0, 648, 649, 1562, 1563, 650, 651, 653, 655,
	656, 652, 654, 657, 1564, 658, 1565, 0, 659, 660,
	661, 721, 722, 723, 1566, 663, 662, 664, 665, 666,
	724, 667, 668, 1567, 1568, 1569, 1570, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4288, 289, 290, 292, 291,
	293, 294, 295, 296, 1492, 297, 298, 1493, 1494, 1495,
	0, 1496, 674, 1497, 1498, 1499, 299, 1500, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 1501, 679, 311, 312, 313,
	314, 315, 316, 1502, 1503, 0, 317, 680, 681, 682,
	1504, 318, 319, 683, 1505, 1572, 1506, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 1507, 329, 330, 331,
	328, 332, 1508, 333, 0, 334, 335, 336, 337, 338,
	339, 1509, 340, 341, 342, 1272, 343, 344, 345, 1510,
	1511, 1513, 1512, 1514, 1515, 1516, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 1517, 356, 352, 354,
	1518, 357, 355, 358, 1519, 359, 360, 361, 1520, 1521,
	362, 363, 364, 1522, 365, 366, 367, 1523, 368, 369,
	370, 1524, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 1525,
	286, 1526, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 1527, 389, 390, 391, 1528, 392,
	1529, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 1530, 405, 692, 1531,
	693, 406, 1532, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 1275, 413, 414, 1533, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 1534,
	1274, 501, 423, 697, 698, 1535, 699, 1536, 424, 425,
	1276, 700, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 1537, 436, 438,
	437, 1538, 439, 701, 1279, 440, 441, 1280, 1539, 442,
	443, 444, 445, 446, 447, 450, 1540, 1541, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 1542, 288,
	1283, 495, 496, 497, 498, 1543, 702, 499, 703, 502,
	503, 1544, 0, 504, 0, 505, 1545, 1546, 507, 508,
	509, 1547, 1548, 510, 511, 704, 1284, 512, 1285, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 1549, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 1550, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 1551, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 1552, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 1553, 593, 594,
	592, 595, 596, 597, 1554, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 1555, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 1556, 627, 628, 0, 624, 615, 1557, 629, 630,
	631, 632, 633, 634, 635, 636, 1558, 637, 715, 716,
	717, 718, 1559, 647, 1560, 638, 639, 640, 641, 719,
	642, 720, 1561, 643, 644, 645, 646, 0, 648, 649,
	1562, 1563, 650, 651, 653, 655, 656, 652, 654, 657,
	1564, 658, 1565, 0, 659, 660, 661, 721, 722, 723,
	1566, 663, 662, 664, 665, 666, 724, 667, 668, 1567,
	1568, 1569, 1570, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3955, 289, 290, 292, 291, 293, 294, 295, 296,
	1492, 297, 298, 1493, 1494, 1495, 0, 1496, 674, 1497,
	1498, 1499, 299, 1500, 300, 301, 1271, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 1501, 679, 311, 312, 313, 314, 315, 316, 1502,
	1503, 0, 317, 680, 681, 682, 1504, 318, 319, 683,
	1505, 1572, 1506, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 1507, 329, 330, 331, 328, 332, 1508, 333,
	0, 334, 335, 336, 337, 338, 339, 1509, 340, 341,
	342, 1272, 343, 344, 345, 1510, 1511, 1513, 1512, 1514,
	1515, 1516, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 1517, 356, 352, 354, 1518, 357, 355, 358,
	1519, 359, 360, 361, 1520, 1521, 362, 363, 364, 1522,
	365, 366, 367, 1523, 368, 369, 370, 1524, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 1525, 286, 1526, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	1527, 389, 390, 391, 1528, 392, 1529, 1273, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 1530, 405, 692, 1531, 693, 406, 1532, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 1275,
	413, 414, 1533, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 1534, 1274, 501, 423, 697,
	698, 1535, 699, 1536, 424, 425, 1276, 700, 1277, 426,
	427, 428, 1278, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 1537, 436, 438, 437, 1538, 439, 701,
	1279, 440, 441, 1280, 1539, 442, 443, 444, 445, 446,
	447, 450, 1540, 1541, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 1281, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 1282, 493, 481, 1542, 288, 1283, 495, 496, 497,
	498, 1543, 702, 499, 703, 502, 503, 1544, 0, 504,
	0, 505, 1545, 1546, 507, 508, 509, 1547, 1548, 510,
	511, 704, 1284, 512, 1285, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 1549, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 1550, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 1551, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 1552, 567, 568,
	569, 1286, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 1553, 593, 594, 592, 595, 596, 597,
	1554, 598, 599, 581, 582, 600, 601, 1287, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 1555, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 1556, 627, 628,
	0, 624, 615, 1557, 629, 630, 631, 632, 633, 634,
	635, 636, 1558, 637, 715, 716, 717, 718, 1559, 647,
	1560, 638, 639, 640, 641, 719, 642, 720, 1561, 643,
	644, 645, 646, 0, 648, 649, 1562, 1563, 650, 651,
	653, 655, 656, 652, 654, 657, 1564, 658, 1565, 0,
	659, 660, 661, 721, 722, 723, 1566, 663, 662, 664,
	665, 666, 724, 667, 668, 1567, 1568, 1569, 1570, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3772, 289, 290,
	292, 291, 293, 294, 295, 296, 1492, 297, 298, 1493,
	1494, 1495, 0, 1496, 674, 1497, 1498, 1499, 299, 1500,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 1501, 679, 311,
	312, 313, 314, 315, 316, 1502, 1503, 0, 317, 680,
	681, 682, 1504, 318, 319, 683, 1505, 1572, 1506, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 1507, 329,
	330, 331, 328, 332, 1508, 333, 0, 334, 335, 336,
	337, 338, 339, 1509, 340, 341, 342, 1272, 343, 344,
	345, 1510, 1511, 1513, 1512, 1514, 1515, 1516, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 1517, 356,
	352, 354, 1518, 357, 355, 358, 1519, 359, 360, 361,
	1520, 1521, 362, 363, 364, 1522, 365, 366, 367, 1523,
	368, 369, 370, 1524, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 1525, 286, 1526, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 1527, 389, 390, 391,
	1528, 392, 1529, 1273, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 1530, 405,
	692, 1531, 693, 406, 1532, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 1275, 413, 414, 1533, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 1534, 1274, 501, 423, 697, 698, 1535, 699, 1536,
	424, 425, 1276, 700, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 1537,
	436, 438, 437, 1538, 439, 701, 1279, 440, 441, 1280,
	1539, 442, 443, 444, 445, 446, 447, 450, 1540, 1541,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1542, 288, 1283, 495, 496, 497, 498, 1543, 702, 499,
	703, 502, 503, 1544, 0, 504, 0, 505, 1545, 1546,
	507, 508, 509, 1547, 1548, 510, 511, 704, 1284, 512,
	1285, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 1549, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	1550, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 1551, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 1552, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 1553,
	593, 594, 592, 595, 596, 597, 1554, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 1555, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 1556, 627, 628, 0, 624, 615, 1557,
	629, 630, 631, 632, 633, 634, 635, 636, 1558, 637,
	715, 716, 717, 718, 1559, 647, 1560, 638, 639, 640,
	641, 719, 642, 720, 1561, 643, 644, 645, 646, 0,
	648, 649, 1562, 1563, 650, 651, 653, 655, 656, 652,
	654, 657, 1564, 658, 1565, 0, 659, 660, 661, 721,
	722, 723, 1566, 663, 662, 664, 665, 666, 724, 667,
	668, 1567, 1568, 1569, 1570, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2768, 289, 290, 292, 291, 293, 294,
	295, 296, 1492, 297, 298, 1493, 1494, 1495, 0, 1496,
	674, 1497, 1498, 1499, 299, 1500, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 1501, 679, 311, 312, 313, 314, 315,
	316, 1502, 1503, 0, 317, 680, 681, 682, 1504, 318,
	319, 683, 1505, 1572, 1506, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 1507, 329, 330, 331, 328, 332,
	1508, 333, 0, 334, 335, 336, 337, 338, 339, 1509,
	340, 341, 342, 1272, 343, 344, 345, 1510, 1511, 1513,
	1512, 1514, 1515, 1516, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 1517, 356, 352, 354, 1518, 357,
	355, 358, 1519, 359, 360, 361, 1520, 1521, 362, 363,
	364, 1522, 365, 366, 367, 1523, 368, 369, 370, 1524,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 1525, 286, 1526,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 1527, 389, 390, 391, 1528, 392, 1529, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 1530, 405, 692, 1531, 693, 406,
	1532, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 1275, 413, 414, 1533, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 1534, 1274, 501,
	423, 697, 698, 1535, 699, 1536, 424, 425, 1276, 700,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 1537, 436, 438, 437, 1538,
	439, 701, 1279, 440, 441, 1280, 1539, 442, 443, 444,
	445, 446, 447, 450, 1540, 1541, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1542, 288, 1283, 495,
	496, 497, 498, 1543, 702, 499, 703, 502, 503, 1544,
	0, 504, 0, 505, 1545, 1546, 507, 508, 509, 1547,
	1548, 510, 511, 704, 1284, 512, 1285, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	1549, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 1550, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 1551, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 1552,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 1553, 593, 594, 592, 595,
	596, 597, 1554, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	1555, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 1556,
	627, 628, 0, 624, 615, 1557, 629, 630, 631, 632,
	633, 634, 635, 636, 1558, 637, 715, 716, 717, 718,
	1559, 647, 1560, 638, 639, 640, 641, 719, 642, 720,
	1561, 643, 644, 645, 646, 0, 648, 649, 1562, 1563,
	650, 651, 653, 655, 656, 652, 654, 657, 1564, 658,
	1565, 0, 659, 660, 661, 721, 722, 723, 1566, 663,
	662, 664, 665, 666, 724, 667, 668, 1567, 1568, 1569,
	1570, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 1483, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2389,
	289, 290, 292, 291, 293, 294, 295, 296, 1492, 297,
	298, 1493, 1494, 1495, 0, 1496, 674, 1497, 1498, 1499,
	299, 1500, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 1501,
	679, 311, 312, 313, 314, 315, 316, 1502, 1503, 0,
	317, 680, 681, 682, 1504, 318, 319, 683, 1505, 1572,
	1506, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	1507, 329, 330, 331, 328, 332, 1508, 333, 0, 334,
	335, 336, 337, 338, 339, 1509, 340, 341, 342, 1272,
	343, 344, 345, 1510, 1511, 1513, 1512, 1514, 1515, 1516,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	1517, 356, 352, 354, 1518, 357, 355, 358, 1519, 359,
	360, 361, 1520, 1521, 362, 363, 364, 1522, 365, 366,
	367, 1523, 368, 369, 370, 1524, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 1525, 286, 1526, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 1527, 389,
	390, 391, 1528, 392, 1529, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	1530, 405, 692, 1531, 693, 406, 1532, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	1533, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 1534, 1274, 501, 423, 697, 698, 1535,
	699, 1536, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 1537, 436, 438, 437, 1538, 439, 701, 1279, 440,
	441, 1280, 1539, 442, 443, 444, 445, 446, 447, 450,
	1540, 1541, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 1542, 288, 1283, 495, 496, 497, 498, 1543,
	702, 499, 703, 502, 503, 1544, 0, 504, 0, 505,
	1545, 1546, 507, 508, 509, 1547, 1548, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 1549, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 1550, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	1551, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 1552, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 1553, 593, 594, 592, 595, 596, 597, 1554, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 1555, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 1556, 627, 628, 0, 624,
	615, 1557, 629, 630, 631, 632, 633, 634, 635, 636,
	1558, 637, 715, 716, 717, 718, 1559, 647, 1560, 638,
	639, 640, 641, 719, 642, 720, 1561, 643, 644, 645,
	646, 0, 648, 649, 1562, 1563, 650, 651, 653, 655,
	656, 652, 654, 657, 1564, 658, 1565, 0, 659, 660,
	661, 721, 722, 723, 1566, 663, 662, 664, 665, 666,
	724, 667, 668, 1567, 1568, 1569, 1570, 669, 670, 725,
	671, 672, 673, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 1492, 297,
	298, 1493, 1494, 1495, 0, 1496, 674, 1497, 1498, 1499,
	299, 1500, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 1501,
	679, 311, 312, 313, 314, 315, 316, 1502, 1503, 0,
	317, 680, 681, 682, 1504, 318, 319, 683, 1505, 1572,
	1506, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	1507, 329, 330, 331, 328, 332, 1508, 333, 0, 334,
	335, 336, 337, 338, 339, 1509, 340, 341, 342, 1272,
	343, 344, 345, 1510, 1511, 1513, 1512, 1514, 1515, 1516,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	1517, 356, 352, 354, 1518, 357, 355, 358, 1519, 359,
	360, 361, 1520, 1521, 362, 363, 364, 1522, 365, 366,
	367, 1523, 368, 369, 370, 1524, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 1525, 286, 1526, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 1527, 389,
	390, 391, 1528, 392, 1529, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	1530, 405, 692, 1531, 693, 406, 1532, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	1533, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 1534, 1274, 501, 423, 697, 698, 1535,
	699, 1536, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 1537, 436, 438, 437, 1538, 439, 701, 1279, 440,
	441, 1280, 1539, 442, 443, 444, 445, 446, 447, 450,
	1540, 1541, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 1542, 288, 1283, 495, 496, 497, 498, 1543,
	702, 499, 703, 502, 503, 1544, 0, 504, 0, 505,
	1545, 1546, 507, 508, 509, 1547, 1548, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 1549, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 1550, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	1551, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 1552, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 1553, 593, 594, 592, 595, 596, 597, 1554, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 1555, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 1556, 627, 628, 0, 624,
	615, 1557, 629, 630, 631, 632, 633, 634, 635, 636,
	1558, 637, 715, 716, 717, 718, 1559, 647, 1560, 638,
	639, 640, 641, 719, 642, 720, 1561, 643, 644, 645,
	646, 0, 648, 649, 1562, 1563, 650, 651, 653, 655,
	656, 652, 654, 657, 1564, 658, 1565, 0, 659, 660,
	661, 721, 722, 723, 1566, 663, 662, 664, 665, 666,
	724, 667, 668, 1567, 1568, 1569, 1570, 669, 670, 725,
	671, 672, 673, 2743, 0, 1207, 1179, 1180, 1181, 1177,
	1178, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	2740, 297, 298, 0, 0, 0, 0, 0, 1231, 1195,
	0, 0, 299, 0, 300, 301, 1271, 302, 303, 304,
	305, 306, 307, 308, 675, 1244, 0, 309, 1251, 310,
	1250, 0, 1261, 311, 312, 313, 314, 315, 316, 1197,
	1230, 1162, 317, 1291, 1292, 682, 0, 318, 319, 1237,
	0, 1218, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227, 1223,
	1222, 1226, 346, 347, 348, 349, 350, 1254, 351, 353,
	1248, 1247, 1167, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 2741, 0, 362, 1239, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	1173, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 1262, 1263, 384, 1186, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 1246, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 1273, 393, 394,
	395, 1259, 1260, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 1269, 0, 1196, 406, 0, 407,
	408, 409, 410, 411, 412, 1232, 1233, 1236, 500, 1275,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 1274, 501, 423, 1241,
	1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277, 426,
	427, 428, 1278, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 1270,
	1279, 440, 441, 1280, 0, 442, 443, 444, 445, 446,
	447, 450, 1225, 1224, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 1281, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 1282, 493, 481, 1164, 288, 1283, 495, 496, 497,
	498, 1187, 1235, 499, 1249, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 1284, 512, 1285, 1264, 513, 514, 1174, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 1265,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 1245, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 1286, 570, 571, 572, 573, 574, 1175, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	1228, 598, 599, 581, 582, 600, 601, 1287, 602, 603,
	604, 605, 606, 607, 608, 1243, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 1290,
	618, 619, 620, 621, 1266, 625, 626, 0, 627, 628,
	1161, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 1255, 1256, 1257, 1258, 0, 647,
	0, 638, 639, 640, 641, 1267, 642, 1268, 1185, 643,
	644, 645, 646, 0, 648, 649, 0, 1168, 650, 651,
	653, 655, 656, 652, 654, 657, 1229, 658, 0, 0,
	659, 660, 661, 721, 1252, 1289, 2739, 663, 662, 664,
	665, 666, 724, 667, 668, 0, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 1158, 1159, 2742, 0, 0,
	0, 0, 0, 0, 0, 1191, 2738, 0, 1151, 1189,
	1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 1231, 1195, 0, 0, 299, 0, 300,
	301, 1271, 302, 303, 304, 305, 306, 307, 308, 675,
	1244, 0, 309, 1251, 310, 1250, 0, 1261, 311, 312,
	313, 314, 315, 316, 1197, 1230, 1162, 317, 1291, 1292,
	682, 0, 318, 319, 1237, 0, 1218, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 1272, 343, 344, 345,
	1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347, 348,
	349, 350, 1254, 351, 353, 1248, 1247, 1167, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 1239, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 1173, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 1262, 1263, 384,
	1186, 286, 0, 0, 0, 0, 0, 385, 386, 387,
	1246, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 1273, 393, 394, 395, 1259, 1260, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 1269,
	0, 1196, 406, 0, 407, 408, 409, 410, 411, 412,
	1232, 1233, 1236, 500, 1275, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 287, 420, 421, 422,
	0, 1274, 501, 423, 1241, 1242, 0, 1202, 0, 424,
	425, 1276, 1234, 1277, 426, 427, 428, 1278, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 1270, 1279, 440, 441, 1280, 0,
	442, 443, 444, 445, 446, 447, 450, 1225, 1224, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 1281, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 1282, 493, 481, 1164,
	288, 1283, 495, 496, 497, 498, 1187, 1235, 499, 1249,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 1284, 512, 1285,
	1264, 513, 514, 1174, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 1265, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 1245, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 1286, 570, 571, 572,
	573, 574, 1175, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 245, 593,
	594, 592, 595, 596, 597, 1228, 598, 599, 581, 582,
	600, 601, 1287, 602, 603, 604, 605, 606, 607, 608,
	1243, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 1290, 618, 619, 620, 621, 1266,
	625, 626, 0, 627, 628, 1161, 624, 615, 247, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 1255,
	1256, 1257, 1258, 0, 647, 0, 638, 639, 640, 641,
	1267, 642, 1268, 1185, 643, 644, 645, 646, 0, 648,
	649, 0, 1168, 650, 651, 653, 655, 656, 652, 654,
	657, 1229, 658, 0, 0, 659, 660, 661, 1726, 1252,
	1289, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	0, 0, 0, 239, 669, 670, 725, 671, 672, 673,
	1165, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	1158, 1159, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1991, 1989, 0, 0, 1189, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	245, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	247, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	1726, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 239, 669, 670, 725, 671,
	672, 673, 1165, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 1207, 1179, 1180, 1181, 1177, 1178,
	1190, 0, 1991, 3398, 0, 0, 1189, 0, 0, 0,
	0, 289, 290, 292, 291, 293, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 1231, 1195, 0,
	0, 299, 0, 300, 301, 1271, 302, 303, 304, 305,
	306, 307, 308, 675, 1244, 0, 309, 1251, 310, 1250,
	0, 1261, 311, 312, 313, 314, 315, 316, 1197, 1230,
	1162, 317, 1291, 1292, 682, 0, 318, 319, 1237, 0,
	1218, 0, 320, 321, 322, 323, 324, 325, 326, 327,
	0, 0, 329, 330, 331, 328, 332, 0, 333, 0,
	334, 335, 336, 337, 338, 339, 0, 340, 341, 342,
	1272, 343, 344, 345, 1221, 1219, 1220, 1227, 1223, 1222,
	1226, 346, 347, 348, 349, 350, 1254, 351, 353, 1248,
	1247, 1167, 356, 352, 354, 0, 357, 355, 358, 0,
	359, 360, 361, 0, 0, 362, 1239, 364, 0, 365,
	366, 367, 0, 368, 369, 370, 0, 371, 372, 1173,
	373, 374, 375, 377, 379, 376, 378, 380, 381, 382,
	383, 1262, 1263, 384, 1186, 286, 0, 0, 0, 0,
	0, 385, 386, 387, 1246, 0, 0, 0, 388, 0,
	389, 390, 391, 0, 392, 0, 1273, 393, 394, 395,
	1259, 1260, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 1269, 0, 1196, 406, 0, 407, 408,
	409, 410, 411, 412, 1232, 1233, 1236, 500, 1275, 413,
	414, 0, 415, 416, 417, 418, 419, 0, 0, 0,
	287, 420, 421, 422, 0, 1274, 501, 423, 1241, 1242,
	0, 1202, 0, 424, 425, 1276, 1234, 1277, 426, 427,
	428, 1278, 429, 0, 0, 0, 430, 431, 432, 433,
	434, 435, 0, 436, 438, 437, 0, 439, 1270, 1279,
	440, 441, 1280, 0, 442, 443, 444, 445, 446, 447,
	450, 1225, 1224, 448, 449, 451, 452, 0, 453, 454,
	456, 459, 455, 457, 458, 460, 473, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 475,
	0, 474, 1281, 476, 477, 478, 479, 480, 487, 489,
	490, 485, 486, 488, 491, 492, 494, 482, 483, 484,
	1282, 493, 481, 1164, 288, 1283, 495, 496, 497, 498,
	1187, 1235, 499, 1249, 502, 503, 0, 0, 504, 0,
	505, 0, 0, 507, 508, 509, 0, 0, 510, 511,
	704, 1284, 512, 1285, 1264, 513, 514, 1174, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	706, 526, 527, 528, 707, 529, 530, 531, 1265, 532,
	709, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 544, 1245, 545, 546, 548, 547,
	549, 0, 550, 0, 551, 552, 553, 0, 0, 0,
	0, 0, 554, 555, 557, 0, 558, 559, 560, 561,
	556, 562, 563, 564, 565, 566, 0, 567, 568, 569,
	1286, 570, 571, 572, 573, 574, 1175, 575, 0, 576,
	577, 584, 585, 586, 578, 579, 580, 587, 588, 589,
	590, 591, 245, 593, 594, 592, 595, 596, 597, 1228,
	598, 599, 581, 582, 600, 601, 1287, 602, 603, 604,
	605, 606, 607, 608, 1243, 0, 609, 0, 610, 611,
	612, 613, 614, 616, 583, 617, 622, 623, 1290, 618,
	619, 620, 621, 1266, 625, 626, 0, 627, 628, 1161,
	624, 615, 247, 629, 630, 631, 632, 633, 634, 635,
	636, 0, 637, 1255, 1256, 1257, 1258, 0, 647, 0,
	638, 639, 640, 641, 1267, 642, 1268, 1185, 643, 644,
	645, 646, 0, 648, 649, 0, 1168, 650, 651, 653,
	655, 656, 652, 654, 657, 1229, 658, 0, 0, 659,
	660, 661, 1726, 1252, 1289, 0, 663, 662, 664, 665,
	666, 724, 667, 668, 0, 0, 0, 239, 669, 670,
	725, 671, 672, 673, 1165, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 1158, 1159, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 1991, 1989, 0, 0, 1189, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 2874, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 2879, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 2875, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 2876, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 2788,
	0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 289, 290,
	292, 291, 293, 294, 295, 296, 1191, 297, 298, 0,
	1189, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 288, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 2786, 0, 2785, 1189, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 0, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 0, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 2783, 0, 2782,
	1189, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 288, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 2780, 0, 2779, 1189, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 0, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 0, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 2777, 0, 1827,
	1189, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 288, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 1826, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 1154, 0, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 289, 290, 292, 291, 293, 294, 295,
	296, 1191, 297, 298, 0, 1189, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 0, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 1169, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 0, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 0,
	0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 289, 290,
	292, 291, 293, 294, 295, 296, 1191, 297, 298, 0,
	1189, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 4961, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 288, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 1169, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 0, 0, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 289, 290, 292, 291, 293, 294, 295,
	296, 1191, 297, 298, 0, 1189, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 0, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 2620, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 2619, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 0, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 0,
	0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 289, 290,
	292, 291, 293, 294, 295, 296, 1191, 297, 298, 0,
	1189, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 4684, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 288, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 1169, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 0, 0, 1207, 1179, 1180, 1181,
	1177, 1178, 1190, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 289, 290, 292, 291, 293, 294, 295,
	296, 1191, 297, 298, 0, 1189, 0, 0, 0, 1231,
	1195, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 675, 1244, 0, 309, 1251,
	310, 1250, 0, 1261, 311, 312, 313, 314, 315, 316,
	1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318, 319,
	1237, 0, 1218, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227,
	1223, 1222, 1226, 346, 347, 348, 349, 350, 1254, 351,
	353, 1248, 1247, 1167, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 1173, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 1262, 1263, 384, 1186, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 1246, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 1259, 1260, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 1269, 0, 1196, 406, 0,
	407, 408, 409, 410, 411, 412, 1232, 1233, 1236, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 1274, 501, 423,
	1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	1270, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 1225, 1224, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 1164, 288, 1283, 495, 496,
	497, 498, 1187, 1235, 499, 1249, 502, 503, 0, 0,
	504, 0, 505, 1169, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 1284, 512, 1285, 1264, 513, 514, 1174,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	1265, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 1245, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 1175, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 1228, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 1243, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	1290, 618, 619, 620, 621, 1266, 625, 626, 0, 627,
	628, 1161, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 1255, 1256, 1257, 1258, 0,
	647, 0, 638, 639, 640, 641, 1267, 642, 1268, 1185,
	643, 644, 645, 646, 0, 648, 649, 0, 1168, 650,
	651, 653, 655, 656, 652, 654, 657, 1229, 658, 0,
	0, 659, 660, 661, 721, 1252, 1289, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 1165, 0, 0, 0,
	0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0, 1160,
	0, 0, 0, 0, 0, 0, 1158, 1159, 289, 290,
	292, 291, 293, 294, 295, 296, 1191, 297, 298, 0,
	1189, 0, 0, 0, 1231, 1195, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 1244, 0, 309, 1251, 310, 1250, 0, 1261, 311,
	312, 313, 314, 315, 316, 1197, 1230, 1162, 317, 1291,
	1292, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 1254, 351, 353, 1248, 1247, 1167, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 1239, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 1173, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 1186, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 1246, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 1259, 1260, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 1196, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 1241, 1242, 0, 1202, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	1164, 4253, 1283, 495, 496, 497, 498, 1187, 1235, 499,
	1249, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 1174, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 1245, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 1175, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 1243, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 1290, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 1161, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	1255, 1256, 1257, 1258, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 1185, 643, 644, 645, 646, 0,
	648, 649, 0, 1168, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	1252, 1289, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 1158, 1159, 2060, 1207, 1179, 1180, 1181, 1177, 1178,
	1190, 1191, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 289, 290, 292, 291, 293, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 1231, 1195, 0,
	0, 299, 0, 300, 301, 1271, 302, 303, 304, 305,
	306, 307, 308, 675, 1244, 0, 309, 1251, 310, 1250,
	0, 1261, 311, 312, 313, 314, 315, 316, 1197, 1230,
	1162, 317, 1291, 1292, 682, 0, 318, 319, 1237, 0,
	1218, 0, 320, 321, 322, 323, 324, 325, 326, 327,
	0, 0, 329, 330, 331, 328, 332, 0, 333, 0,
	334, 335, 336, 337, 338, 339, 0, 340, 341, 342,
	1272, 343, 344, 345, 1221, 1219, 1220, 1227, 1223, 1222,
	1226, 346, 347, 348, 349, 350, 1254, 351, 353, 1248,
	1247, 1167, 356, 352, 354, 0, 357, 355, 358, 0,
	359, 360, 361, 0, 0, 362, 1239, 364, 0, 365,
	366, 367, 0, 368, 369, 370, 0, 371, 372, 1173,
	373, 374, 375, 377, 379, 376, 378, 380, 381, 382,
	383, 1262, 1263, 384, 1186, 286, 0, 0, 0, 0,
	0, 385, 386, 387, 1246, 0, 0, 0, 388, 0,
	389, 390, 391, 0, 392, 0, 1273, 393, 394, 395,
	1259, 1260, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 1269, 0, 1196, 406, 0, 407, 408,
	409, 410, 411, 412, 1232, 1233, 1236, 500, 1275, 413,
	414, 0, 415, 416, 417, 418, 419, 0, 0, 0,
	287, 420, 421, 422, 0, 1274, 501, 423, 1241, 1242,
	0, 1202, 0, 424, 425, 1276, 1234, 1277, 426, 427,
	428, 1278, 429, 0, 0, 0, 430, 431, 432, 433,
	434, 435, 0, 436, 438, 437, 0, 439, 1270, 1279,
	440, 441, 1280, 0, 442, 443, 444, 445, 446, 447,
	450, 1225, 1224, 448, 449, 451, 452, 0, 453, 454,
	456, 459, 455, 457, 458, 460, 473, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 475,
	0, 474, 1281, 476, 477, 478, 479, 480, 487, 489,
	490, 485, 486, 488, 491, 492, 494, 482, 483, 484,
	1282, 493, 481, 1164, 288, 1283, 495, 496, 497, 498,
	1187, 1235, 499, 1249, 502, 503, 0, 0, 504, 0,
	505, 0, 0, 507, 508, 509, 0, 0, 510, 511,
	704, 1284, 512, 1285, 1264, 513, 514, 1174, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	706, 526, 527, 528, 707, 529, 530, 531, 1265, 532,
	709, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 544, 1245, 545, 546, 548, 547,
	549, 0, 550, 0, 551, 552, 553, 0, 0, 0,
	0, 0, 554, 555, 557, 0, 558, 559, 560, 561,
	556, 562, 563, 564, 565, 566, 0, 567, 568, 569,
	1286, 570, 571, 572, 573, 574, 1175, 575, 0, 576,
	577, 584, 585, 586, 578, 579, 580, 587, 588, 589,
	590, 591, 0, 593, 594, 592, 595, 596, 597, 1228,
	598, 599, 581, 582, 600, 601, 1287, 602, 603, 604,
	605, 606, 607, 608, 1243, 0, 609, 0, 610, 611,
	612, 613, 614, 616, 583, 617, 622, 623, 1290, 618,
	619, 620, 621, 1266, 625, 626, 0, 627, 628, 1161,
	624, 615, 0, 629, 630, 631, 632, 633, 634, 635,
	636, 0, 637, 1255, 1256, 1257, 1258, 0, 647, 0,
	638, 639, 640, 641, 1267, 642, 1268, 1185, 643, 644,
	645, 646, 0, 648, 649, 0, 1168, 650, 651, 653,
	655, 656, 652, 654, 657, 1229, 658, 0, 0, 659,
	660, 661, 721, 1252, 1289, 3933, 663, 662, 664, 665,
	666, 724, 667, 668, 0, 0, 0, 0, 669, 670,
	725, 671, 672, 673, 1165, 0, 0, 0, 0, 1207,
	1179, 1180, 1181, 1177, 1178, 1190, 0, 1160, 0, 0,
	0, 0, 0, 0, 1158, 1159, 289, 290, 292, 291,
	293, 294, 295, 296, 1191, 297, 298, 0, 1189, 0,
	0, 0, 1231, 1195, 0, 0, 299, 0, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 1244,
	0, 309, 1251, 310, 1250, 0, 1261, 311, 312, 313,
	314, 315, 316, 1197, 1230, 1162, 317, 1291, 1292, 682,
	0, 318, 319, 1237, 0, 1218, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 1272, 343, 344, 345, 1221,
	1219, 1220, 1227, 1223, 1222, 1226, 346, 347, 348, 349,
	350, 1254, 351, 353, 1248, 1247, 1167, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 1239, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 1173, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 1262, 1263, 384, 1186,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 1246,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 1273, 393, 394, 395, 1259, 1260, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 1269, 0,
	1196, 406, 0, 407, 408, 409, 410, 411, 412, 1232,
	1233, 1236, 500, 1275, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	1274, 501, 423, 1241, 1242, 0, 1202, 0, 424, 425,
	1276, 1234, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 1270, 1279, 440, 441, 1280, 0, 442,
	443, 444, 445, 446, 447, 450, 1225, 1224, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 1164, 288,
	1283, 495, 496, 497, 498, 1187, 1235, 499, 1249, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 1284, 512, 1285, 1264,
	513, 514, 1174, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 1265, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	1245, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 1175, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 1228, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 1243,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 1290, 618, 619, 620, 621, 1266, 625,
	626, 0, 627, 628, 1161, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 1255, 1256,
	1257, 1258, 0, 647, 0, 638, 639, 640, 641, 1267,
	642, 1268, 1185, 643, 644, 645, 646, 0, 648, 649,
	0, 1168, 650, 651, 653, 655, 656, 652, 654, 657,
	1229, 658, 0, 0, 659, 660, 661, 721, 1252, 1289,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 0,
	0, 0, 0, 669, 670, 725, 671, 672, 673, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 1158,
	1159, 2060, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 1191,
	0, 0, 0, 1189, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 2879, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 1191, 1989, 0,
	2884, 1189, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 2882, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	2870, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 2858, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	2856, 0, 2847, 2854, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 2850, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	2851, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 2852, 460, 2849, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 2853,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	2848, 673, 1165, 0, 0, 2844, 0, 2847, 2854, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	2850, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 2851, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 2852, 460, 2849,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 2853, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 2848, 673, 1165, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 0, 0, 0, 0, 0, 0,
	1997, 0, 1191, 0, 0, 0, 1189, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 2599, 297, 298, 0, 0, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	2561, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 2532, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1832, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 1761, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1756, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 1742, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1737, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 1646, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1645, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1640, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1639, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 1633, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1601, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 1583, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 1587,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 1588, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 1586, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	1415, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 5010, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 5009, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 5008, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 5010, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 5009, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	4612, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 4613, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 4611, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 3365, 3366, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 3363, 3364, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 1158, 1159, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1165, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 1160, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 1162, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 1167, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 1164, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	1174, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 1175,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 1161, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 1168,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1165, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	1160, 0, 0, 0, 0, 0, 0, 2607, 2608, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 0, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 1276, 1234, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 288, 1283, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 0, 0, 0, 0, 0, 1207, 1179, 1180,
	1181, 1177, 1178, 1190, 0, 2866, 0, 0, 0, 0,
	0, 0, 2864, 2865, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 1195, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 1244, 0, 309,
	1251, 310, 1250, 0, 1261, 311, 312, 313, 314, 315,
	316, 1197, 1230, 0, 317, 1291, 1292, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 1254,
	351, 353, 1248, 1247, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 1239,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 1173, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 1186, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 1246, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 1259, 1260, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 1196, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 1241, 1242, 0, 1202, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 0, 288, 1283, 495,
	496, 497, 498, 1187, 1235, 499, 1249, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 1245, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 3358,
	3359, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 1243, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 1290, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 1255, 1256, 1257, 1258,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	1185, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 1252, 1289, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 1207, 1179, 1180, 1181, 1177, 1178, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 2242, 2243, 289,
	290, 292, 291, 293, 294, 295, 296, 1191, 297, 298,
	0, 1189, 0, 0, 0, 1231, 1195, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 0, 1244, 0, 309, 1251, 310, 1250, 0, 1261,
	311, 312, 313, 314, 315, 316, 1197, 1230, 1162, 317,
	1291, 1292, 682, 0, 318, 319, 1237, 0, 1218, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 5010, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346,
	347, 348, 349, 350, 1254, 351, 353, 1248, 1247, 1167,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 1239, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 1173, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 1262,
	1263, 384, 1186, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 1246, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 1259, 1260,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 1269, 0, 1196, 406, 0, 407, 408, 409, 410,
	411, 412, 1232, 1233, 1236, 500, 0, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 287, 420,
	421, 422, 0, 1274, 501, 423, 1241, 1242, 0, 1202,
	0, 424, 425, 0, 1234, 0, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 1270, 1279, 440, 441,
	0, 0, 442, 443, 444, 445, 446, 447, 450, 1225,
	1224, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 1164, 288, 0, 495, 496, 497, 498, 1187, 1235,
	499, 1249, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 1264, 513, 514, 1174, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 1265, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 1245, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 1175, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 1228, 598, 599,
	581, 582, 600, 601, 0, 602, 603, 604, 605, 606,
	607, 608, 1243, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 1290, 618, 619, 620,
	621, 1266, 625, 626, 0, 627, 628, 1161, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 1255, 1256, 1257, 1258, 0, 647, 0, 638, 639,
	640, 641, 1267, 642, 1268, 1185, 643, 644, 645, 646,
	0, 5009, 649, 0, 1168, 650, 651, 653, 655, 656,
	652, 654, 657, 1229, 658, 0, 0, 659, 660, 661,
	721, 1252, 1289, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 0, 0, 0, 1151, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 1159, 289, 290, 292, 291, 293, 294,
	295, 296, 1191, 297, 298, 0, 1189, 0, 0, 0,
	1231, 0, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 1230, 0, 317, 680, 681, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 1315, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 0, 288, 1283, 495,
	496, 497, 498, 0, 1235, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 1321, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	1323, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 245, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 0, 624, 615, 247, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 1726, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 1329,
	239, 669, 670, 725, 671, 672, 673, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 1231, 0, 0, 1319, 299, 2084, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 1230, 0, 317, 680, 681, 682,
	0, 318, 319, 1237, 0, 1218, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 1272, 343, 344, 345, 1221,
	1219, 1220, 1227, 1223, 1222, 1226, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 1262, 1263, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 1269, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1232,
	1233, 1236, 500, 1275, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	1274, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	1276, 1234, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 1315, 436, 438,
	437, 0, 439, 1270, 1279, 440, 441, 1280, 0, 442,
	443, 444, 445, 446, 447, 450, 1225, 1224, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 0, 288,
	1283, 495, 496, 497, 498, 0, 1235, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 1321, 507, 508,
	509, 0, 0, 510, 511, 704, 1284, 512, 1285, 1264,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 1265, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 1323, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 245, 593, 594,
	592, 595, 596, 597, 1228, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 1266, 625,
	626, 0, 627, 628, 0, 624, 615, 247, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 1267,
	642, 1268, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	1229, 658, 0, 0, 659, 660, 661, 1726, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 3522,
	0, 1329, 239, 669, 670, 725, 671, 672, 673, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 1231, 0, 0, 1319, 299, 2084,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 1230, 0, 317, 680,
	681, 682, 0, 318, 319, 1237, 0, 1218, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 1262, 1263,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	1269, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 1232, 1233, 1236, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 1274, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 1276, 1234, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 1315,
	436, 438, 437, 0, 439, 1270, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 1225, 1224,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	0, 288, 1283, 495, 496, 497, 498, 0, 1235, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 1321,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 1264, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 1265, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 711, 1323, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1228, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	1266, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 1267, 642, 1268, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 1229, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 1311, 0, 1329, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 1231, 0, 0, 1319,
	299, 1317, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 1230, 0,
	317, 680, 681, 682, 0, 318, 319, 1237, 0, 1218,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 1272,
	343, 344, 345, 1221, 1219, 1220, 1227, 1223, 1222, 1226,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	1262, 1263, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 1269, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 1232, 1233, 1236, 500, 1275, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 0, 1274, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 1276, 1234, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 1315, 436, 438, 437, 0, 439, 1270, 1279, 440,
	441, 1280, 0, 442, 443, 444, 445, 446, 447, 450,
	1225, 1224, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 0, 288, 1283, 495, 496, 497, 498, 0,
	1235, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 1321, 507, 508, 509, 0, 0, 510, 511, 704,
	1284, 512, 1285, 1264, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 1265, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 1323, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 1228, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 1266, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 1267, 642, 1268, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 1229, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 0, 0, 1329, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 1231, 0,
	0, 1319, 299, 1317, 300, 301, 1271, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	1230, 0, 317, 680, 681, 682, 0, 318, 319, 1237,
	0, 1218, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 1272, 343, 344, 345, 1221, 1219, 1220, 1227, 1223,
	1222, 1226, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 1262, 1263, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 1273, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 1269, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 1232, 1233, 1236, 500, 1275,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 1274, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 1276, 1234, 1277, 426,
	427, 428, 1278, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 1315, 436, 438, 437, 0, 439, 1270,
	1279, 440, 441, 1280, 0, 442, 443, 444, 445, 446,
	447, 450, 1225, 1224, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 1281, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 1282, 493, 481, 0, 288, 1283, 495, 496, 497,
	498, 0, 1235, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 1321, 507, 508, 509, 0, 0, 510,
	511, 704, 1284, 512, 1285, 1264, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 1265,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 1286, 570, 571, 572, 573, 574, 711, 1323, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	1228, 598, 599, 581, 582, 600, 601, 1287, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 1266, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 1267, 642, 1268, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 1229, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 0, 0, 1329, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	1231, 0, 0, 1319, 299, 1317, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 1230, 0, 317, 680, 681, 682, 0, 318,
	319, 1237, 0, 1218, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 1221, 1219, 1220,
	1227, 1223, 1222, 1226, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 1262, 1263, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 1269, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 1232, 1233, 1236,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 1274, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 1276, 1234,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 1270, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 1225, 1224, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 0, 288, 1283, 495,
	496, 497, 498, 0, 1235, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 1264, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 1265, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1228, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 1266, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 1267, 642, 1268,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 1229, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 1329,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 1231, 0, 0, 0, 299, 4426, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 1230, 0, 317, 680, 681, 682,
	0, 318, 319, 1237, 0, 1218, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 1272, 343, 344, 345, 1221,
	1219, 1220, 1227, 1223, 1222, 1226, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 1262, 1263, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 1269, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1232,
	1233, 1236, 500, 1275, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	1274, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	1276, 1234, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 1270, 1279, 440, 441, 1280, 0, 442,
	443, 444, 445, 446, 447, 450, 1225, 1224, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 0, 288,
	1283, 495, 496, 497, 498, 0, 1235, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 1284, 512, 1285, 1264,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 1265, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 1323, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 1228, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 1266, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 1267,
	642, 1268, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	1229, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 0,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 2711, 2712, 2713, 2730, 2731, 2732, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 2733, 0, 674, 0, 0, 0, 299, 1981,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 1966, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 2723, 0, 329,
	330, 331, 328, 332, 0, 333, 2719, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 2724, 2725, 2726, 2727, 385, 386,
	387, 689, 0, 0, 2718, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 2728, 2729, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 2721, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 2722, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 1965, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	1608, 2708, 2709, 2710, 2734, 2720, 2714, 0, 2716, 2717,
	2715, 2702, 2703, 2704, 2705, 2706, 2707, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 299, 0, 300,
	301, 1271, 302, 303, 304, 305, 306, 307, 308, 675,
	676, 0, 309, 677, 310, 678, 0, 679, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 680, 681,
	682, 0, 318, 319, 683, 0, 1572, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 1272, 343, 344, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 351, 353, 684, 685, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 686, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 687, 688, 384,
	0, 286, 0, 0, 0, 0, 0, 385, 386, 387,
	689, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 1273, 393, 394, 395, 690, 691, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 692,
	0, 693, 406, 0, 407, 408, 409, 410, 411, 412,
	694, 695, 696, 500, 1275, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 0, 420, 421, 422,
	0, 1274, 501, 423, 697, 698, 0, 699, 0, 424,
	425, 1276, 700, 1277, 426, 427, 428, 1278, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 701, 1279, 440, 441, 1280, 0,
	442, 443, 444, 445, 446, 447, 450, 0, 0, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 1281, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 1282, 493, 481, 0,
	0, 1283, 495, 496, 497, 498, 0, 702, 499, 703,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 1284, 512, 1285,
	705, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 708, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 710, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 1286, 570, 571, 572,
	573, 574, 711, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 245, 593,
	594, 592, 595, 596, 597, 0, 598, 599, 581, 582,
	600, 601, 1287, 602, 603, 604, 605, 606, 607, 608,
	712, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 713, 618, 619, 620, 621, 714,
	625, 626, 0, 627, 628, 0, 624, 615, 247, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 715,
	716, 717, 718, 0, 647, 0, 638, 639, 640, 641,
	719, 642, 720, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 0, 658, 0, 0, 659, 660, 661, 1726, 722,
	723, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	1723, 0, 1608, 239, 669, 670, 725, 671, 672, 673,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 299,
	200, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	245, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	247, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	1726, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 239, 669, 670, 725, 671,
	672, 673, 1608, 1607, 240, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 200, 0, 0, 674, 0, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1608, 1607, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 1750, 0, 0, 674, 0, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1608, 1607, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 3847, 0, 0, 674, 0, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 2472, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1608, 2381, 0, 0, 0, 0, 2382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 1750, 0, 0, 674, 0, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 2380, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 0, 0, 669, 670, 725, 671,
	672, 673, 1608, 1607, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 1750, 0, 0, 674, 0, 0, 0, 299,
	0, 300, 301, 1271, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 1572, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 1272, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 286, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 1273, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 1275, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 1274, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 1276, 700, 1277, 426, 427, 428, 1278,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 1279, 440, 441,
	1280, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	1281, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 1282, 493,
	481, 0, 0, 1283, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 1284,
	512, 1285, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 1286, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 1287, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 1151, 0, 283, 0, 669, 670, 725, 671,
	672, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 292, 291, 293, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 299, 1732, 300, 301, 0, 302, 303, 304, 305,
	306, 307, 308, 675, 676, 0, 309, 677, 310, 678,
	0, 679, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 680, 681, 682, 0, 318, 319, 683, 0,
	0, 0, 320, 321, 322, 323, 324, 325, 326, 327,
	0, 0, 329, 330, 331, 328, 332, 0, 333, 0,
	334, 335, 336, 337, 338, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 351, 353, 684,
	685, 0, 356, 352, 354, 0, 357, 355, 358, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 368, 369, 370, 0, 371, 372, 686,
	373, 374, 375, 377, 379, 376, 378, 380, 381, 382,
	383, 687, 688, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 689, 0, 0, 0, 388, 0,
	389, 390, 391, 0, 392, 0, 0, 393, 394, 395,
	690, 691, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 692, 0, 693, 406, 0, 407, 408,
	409, 410, 411, 412, 694, 695, 696, 500, 0, 413,
	414, 0, 415, 416, 417, 418, 419, 0, 0, 0,
	0, 420, 421, 422, 0, 0, 501, 423, 697, 698,
	0, 699, 0, 424, 425, 0, 700, 0, 426, 427,
	428, 0, 429, 0, 0, 0, 430, 431, 432, 433,
	434, 435, 0, 436, 438, 437, 0, 439, 701, 0,
	440, 441, 0, 0, 442, 443, 444, 445, 446, 447,
	450, 0, 0, 448, 449, 451, 452, 0, 453, 454,
	456, 459, 455, 457, 458, 460, 473, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 475,
	0, 474, 0, 476, 477, 478, 479, 480, 487, 489,
	490, 485, 486, 488, 491, 492, 494, 482, 483, 484,
	0, 493, 481, 0, 0, 0, 495, 496, 497, 498,
	0, 702, 499, 703, 502, 503, 0, 0, 504, 0,
	505, 0, 0, 507, 508, 509, 0, 0, 510, 511,
	704, 0, 512, 0, 705, 513, 514, 506, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	706, 526, 527, 528, 707, 529, 530, 531, 708, 532,
	709, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 544, 710, 545, 546, 548, 547,
	549, 0, 550, 0, 551, 552, 553, 0, 0, 0,
	0, 0, 554, 555, 557, 0, 558, 559, 560, 561,
	556, 562, 563, 564, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 711, 575, 0, 576,
	577, 584, 585, 586, 578, 579, 580, 587, 588, 589,
	590, 591, 245, 593, 594, 592, 595, 596, 597, 0,
	598, 599, 581, 582, 600, 601, 0, 602, 603, 604,
	605, 606, 607, 608, 712, 0, 609, 0, 610, 611,
	612, 613, 614, 616, 583, 617, 622, 623, 713, 618,
	619, 620, 621, 714, 625, 626, 0, 627, 628, 0,
	624, 615, 247, 629, 630, 631, 632, 633, 634, 635,
	636, 0, 637, 715, 716, 717, 718, 0, 647, 0,
	638, 639, 640, 641, 719, 642, 720, 0, 643, 644,
	645, 646, 0, 648, 649, 0, 0, 650, 651, 653,
	655, 656, 652, 654, 657, 0, 658, 0, 0, 659,
	660, 661, 1726, 722, 723, 0, 663, 662, 664, 665,
	666, 724, 667, 668, 0, 0, 283, 239, 669, 670,
	725, 671, 672, 673, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 299, 200, 300, 301, 0, 302, 303,
	304, 305, 306, 307, 308, 675, 676, 0, 309, 677,
	310, 678, 0, 679, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 680, 681, 682, 0, 318, 319,
	683, 0, 0, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 351,
	353, 684, 685, 0, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 686, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 687, 688, 384, 0, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 689, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 0, 393,
	394, 395, 690, 691, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 692, 0, 693, 406, 0,
	407, 408, 409, 410, 411, 412, 694, 695, 696, 500,
	0, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 0, 501, 423,
	697, 698, 0, 699, 0, 424, 425, 0, 700, 0,
	426, 427, 428, 0, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	701, 0, 440, 441, 0, 0, 442, 443, 444, 445,
	446, 447, 450, 0, 0, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 0, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 0, 493, 481, 0, 288, 0, 495, 496,
	497, 498, 0, 702, 499, 703, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 0, 512, 0, 705, 513, 514, 506,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	708, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 710, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 711, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 0, 598, 599, 581, 582, 600, 601, 0, 602,
	603, 604, 605, 606, 607, 608, 712, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	713, 618, 619, 620, 621, 714, 625, 626, 0, 627,
	628, 0, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 715, 716, 717, 718, 0,
	647, 0, 638, 639, 640, 641, 719, 642, 720, 0,
	643, 644, 645, 646, 0, 648, 649, 0, 0, 650,
	651, 653, 655, 656, 652, 654, 657, 0, 658, 0,
	0, 659, 660, 661, 721, 722, 723, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 0, 0, 283, 3139,
	669, 670, 725, 671, 672, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 292, 291, 293,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 299, 2098, 300, 301, 0,
	302, 303, 304, 305, 306, 307, 308, 675, 676, 0,
	309, 677, 310, 678, 0, 679, 311, 312, 313, 314,
	315, 316, 0, 0, 0, 317, 680, 681, 682, 0,
	318, 319, 683, 0, 0, 0, 320, 321, 322, 323,
	324, 325, 326, 327, 0, 0, 329, 330, 331, 328,
	332, 0, 333, 0, 334, 335, 336, 337, 338, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 351, 353, 684, 685, 0, 356, 352, 354, 0,
	357, 355, 358, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 368, 369, 370,
	0, 371, 372, 686, 373, 374, 375, 377, 379, 376,
	378, 380, 381, 382, 383, 687, 688, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 689, 0,
	0, 0, 388, 0, 389, 390, 391, 0, 392, 0,
	0, 393, 394, 395, 690, 691, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 692, 0, 693,
	406, 0, 407, 408, 409, 410, 411, 412, 694, 695,
	696, 500, 0, 413, 414, 0, 415, 416, 417, 418,
	419, 0, 0, 0, 0, 420, 421, 422, 0, 0,
	501, 423, 697, 698, 0, 699, 0, 424, 425, 0,
	700, 0, 426, 427, 428, 0, 429, 0, 0, 0,
	430, 431, 432, 433, 434, 435, 0, 436, 438, 437,
	0, 439, 701, 0, 440, 441, 0, 0, 442, 443,
	444, 445, 446, 447, 450, 0, 0, 448, 449, 451,
	452, 0, 453, 454, 456, 459, 455, 457, 458, 460,
	473, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 475, 0, 474, 0, 476, 477, 478,
	479, 480, 487, 489, 490, 485, 486, 488, 491, 492,
	494, 482, 483, 484, 0, 493, 481, 0, 0, 0,
	495, 496, 497, 498, 0, 702, 499, 703, 502, 503,
	0, 0, 504, 0, 505, 0, 0, 507, 508, 509,
	0, 0, 510, 511, 704, 0, 512, 0, 705, 513,
	514, 506, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 524, 525, 706, 526, 527, 528, 707, 529,
	530, 531, 708, 532, 709, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 544, 710,
	545, 546, 548, 547, 549, 0, 550, 0, 551, 552,
	553, 0, 0, 0, 0, 0, 554, 555, 557, 0,
	558, 559, 560, 561, 556, 562, 563, 564, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	711, 575, 0, 576, 577, 584, 585, 586, 578, 579,
	580, 587, 588, 589, 590, 591, 0, 593, 594, 592,
	595, 596, 597, 0, 598, 599, 581, 582, 600, 601,
	0, 602, 603, 604, 605, 606, 607, 608, 712, 0,
	609, 0, 610, 611, 612, 613, 614, 616, 583, 617,
	622, 623, 713, 618, 619, 620, 621, 714, 625, 626,
	0, 627, 628, 0, 624, 615, 0, 629, 630, 631,
	632, 633, 634, 635, 636, 0, 637, 715, 716, 717,
	718, 0, 647, 0, 638, 639, 640, 641, 719, 642,
	720, 0, 643, 644, 645, 646, 0, 648, 649, 0,
	0, 650, 651, 653, 655, 656, 652, 654, 657, 0,
	658, 0, 0, 659, 660, 661, 721, 722, 723, 0,
	663, 662, 664, 665, 666, 724, 667, 668, 0, 0,
	1329, 0, 669, 670, 725, 671, 672, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 1231, 0, 0, 0, 299, 5177, 300,
	301, 1271, 302, 303, 304, 305, 306, 307, 308, 675,
	676, 0, 309, 677, 310, 678, 0, 679, 311, 312,
	313, 314, 315, 316, 0, 1230, 0, 317, 680, 681,
	682, 0, 318, 319, 1237, 0, 1218, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 1272, 343, 344, 345,
	1221, 1219, 1220, 1227, 1223, 1222, 1226, 346, 347, 348,
	349, 350, 0, 351, 353, 684, 685, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 686, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 1262, 1263, 384,
	0, 286, 0, 0, 0, 0, 0, 385, 386, 387,
	689, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 1273, 393, 394, 395, 690, 691, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 1269,
	0, 693, 406, 0, 407, 408, 409, 410, 411, 412,
	1232, 1233, 1236, 500, 1275, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 287, 420, 421, 422,
	0, 1274, 501, 423, 697, 698, 0, 699, 0, 424,
	425, 1276, 1234, 1277, 426, 427, 428, 1278, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 1270, 1279, 440, 441, 1280, 0,
	442, 443, 444, 445, 446, 447, 450, 1225, 1224, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 1281, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 1282, 493, 481, 0,
	288, 1283, 495, 496, 497, 498, 0, 1235, 499, 703,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 1284, 512, 1285,
	1264, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 1265, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 710, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 1286, 570, 571, 572,
	573, 574, 711, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 0, 593,
	594, 592, 595, 596, 597, 1228, 598, 599, 581, 582,
	600, 601, 1287, 602, 603, 604, 605, 606, 607, 608,
	712, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 713, 618, 619, 620, 621, 1266,
	625, 626, 0, 627, 628, 0, 624, 615, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 715,
	716, 717, 718, 0, 647, 0, 638, 639, 640, 641,
	1267, 642, 1268, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 1229, 658, 0, 0, 659, 660, 661, 721, 722,
	723, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	283, 0, 0, 0, 669, 670, 725, 671, 672, 673,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 299, 0, 300,
	301, 0, 302, 303, 304, 305, 306, 307, 308, 675,
	676, 0, 309, 677, 310, 678, 0, 679, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 680, 681,
	682, 0, 318, 319, 683, 0, 0, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 351, 353, 684, 685, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 686, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 687, 688, 384,
	0, 286, 0, 0, 0, 0, 0, 385, 386, 387,
	689, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 0, 393, 394, 395, 690, 691, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 692,
	0, 693, 406, 0, 407, 408, 409, 410, 411, 412,
	694, 695, 696, 500, 0, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 287, 420, 421, 422,
	0, 0, 501, 423, 697, 698, 0, 699, 0, 424,
	425, 0, 700, 0, 426, 427, 428, 0, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 701, 0, 440, 441, 0, 0,
	442, 443, 444, 445, 446, 447, 450, 0, 0, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 0, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 0, 493, 481, 0,
	288, 0, 495, 496, 497, 498, 0, 702, 499, 703,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 0, 512, 0,
	705, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 708, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 710, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 711, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 0, 593,
	594, 592, 595, 596, 597, 0, 598, 599, 581, 582,
	600, 601, 0, 602, 603, 604, 605, 606, 607, 608,
	712, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 713, 618, 619, 620, 621, 714,
	625, 626, 0, 627, 628, 0, 624, 615, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 715,
	716, 717, 718, 0, 647, 0, 638, 639, 640, 641,
	719, 642, 720, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 0, 658, 0, 0, 659, 660, 661, 721, 722,
	723, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	283, 0, 0, 0, 669, 670, 725, 671, 672, 673,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 299, 3800, 300,
	301, 0, 302, 303, 304, 305, 306, 307, 308, 675,
	676, 0, 309, 677, 310, 678, 0, 679, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 680, 681,
	682, 0, 318, 319, 683, 0, 0, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 351, 353, 684, 685, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 686, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 687, 688, 384,
	0, 286, 0, 0, 0, 0, 0, 385, 386, 387,
	689, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 0, 393, 394, 395, 690, 691, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 692,
	0, 693, 406, 0, 407, 408, 409, 410, 411, 412,
	694, 695, 696, 500, 0, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 287, 420, 421, 422,
	0, 0, 501, 423, 697, 698, 0, 699, 0, 424,
	425, 0, 700, 0, 426, 427, 428, 0, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 701, 0, 440, 441, 0, 0,
	442, 443, 444, 445, 446, 447, 450, 0, 0, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 0, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 0, 493, 481, 0,
	288, 0, 495, 496, 497, 498, 0, 702, 499, 703,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 0, 512, 0,
	705, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 708, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 710, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 711, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 0, 593,
	594, 592, 595, 596, 597, 0, 598, 599, 581, 582,
	600, 601, 0, 602, 603, 604, 605, 606, 607, 608,
	712, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 713, 618, 619, 620, 621, 714,
	625, 626, 0, 627, 628, 0, 624, 615, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 715,
	716, 717, 718, 0, 647, 0, 638, 639, 640, 641,
	719, 642, 720, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 0, 658, 0, 0, 659, 660, 661, 721, 722,
	723, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	283, 0, 0, 0, 669, 670, 725, 671, 672, 673,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 299, 1720, 300,
	301, 0, 302, 303, 304, 305, 306, 307, 308, 675,
	676, 0, 309, 677, 310, 678, 0, 679, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 680, 681,
	682, 0, 318, 319, 683, 0, 0, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 351, 353, 684, 685, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 686, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 687, 688, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	689, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 0, 393, 394, 395, 690, 691, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 692,
	0, 693, 406, 0, 407, 408, 409, 410, 411, 412,
	694, 695, 696, 500, 0, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 0, 420, 421, 422,
	0, 0, 501, 423, 697, 698, 0, 699, 0, 424,
	425, 0, 700, 0, 426, 427, 428, 0, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 701, 0, 440, 441, 0, 0,
	442, 443, 444, 445, 446, 447, 450, 0, 0, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 0, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 0, 493, 481, 0,
	0, 0, 495, 496, 497, 498, 0, 702, 499, 703,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 704, 0, 512, 0,
	705, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 706, 526, 527, 528,
	707, 529, 530, 531, 708, 532, 709, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 710, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 711, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 0, 593,
	594, 592, 595, 596, 597, 0, 598, 599, 581, 582,
	600, 601, 0, 602, 603, 604, 605, 606, 607, 608,
	712, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 713, 618, 619, 620, 621, 714,
	625, 626, 0, 627, 628, 0, 624, 615, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 715,
	716, 717, 718, 0, 647, 0, 638, 639, 640, 641,
	719, 642, 720, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 0, 658, 0, 0, 659, 660, 661, 721, 722,
	723, 0, 663, 662, 664, 665, 666, 724, 667, 668,
	0, 0, 283, 0, 669, 670, 725, 671, 672, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 292, 291, 293, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 299,
	3259, 300, 301, 0, 302, 303, 304, 305, 306, 307,
	308, 675, 676, 0, 309, 677, 310, 678, 0, 679,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	680, 681, 682, 0, 318, 319, 683, 0, 0, 0,
	320, 321, 322, 323, 324, 325, 326, 327, 0, 0,
	329, 330, 331, 328, 332, 0, 333, 0, 334, 335,
	336, 337, 338, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 351, 353, 684, 685, 0,
	356, 352, 354, 0, 357, 355, 358, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 368, 369, 370, 0, 371, 372, 686, 373, 374,
	375, 377, 379, 376, 378, 380, 381, 382, 383, 687,
	688, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 689, 0, 0, 0, 388, 0, 389, 390,
	391, 0, 392, 0, 0, 393, 394, 395, 690, 691,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 692, 0, 693, 406, 0, 407, 408, 409, 410,
	411, 412, 694, 695, 696, 500, 0, 413, 414, 0,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 420,
	421, 422, 0, 0, 501, 423, 697, 698, 0, 699,
	0, 424, 425, 0, 700, 0, 426, 427, 428, 0,
	429, 0, 0, 0, 430, 431, 432, 433, 434, 435,
	0, 436, 438, 437, 0, 439, 701, 0, 440, 441,
	0, 0, 442, 443, 444, 445, 446, 447, 450, 0,
	0, 448, 449, 451, 452, 0, 453, 454, 456, 459,
	455, 457, 458, 460, 473, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 475, 0, 474,
	0, 476, 477, 478, 479, 480, 487, 489, 490, 485,
	486, 488, 491, 492, 494, 482, 483, 484, 0, 493,
	481, 0, 0, 0, 495, 496, 497, 498, 0, 702,
	499, 703, 502, 503, 0, 0, 504, 0, 505, 0,
	0, 507, 508, 509, 0, 0, 510, 511, 704, 0,
	512, 0, 705, 513, 514, 506, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 706, 526,
	527, 528, 707, 529, 530, 531, 708, 532, 709, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 544, 710, 545, 546, 548, 547, 549, 0,
	550, 0, 551, 552, 553, 0, 0, 0, 0, 0,
	554, 555, 557, 0, 558, 559, 560, 561, 556, 562,
	563, 564, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 711, 575, 0, 576, 577, 584,
	585, 586, 578, 579, 580, 587, 588, 589, 590, 591,
	0, 593, 594, 592, 595, 596, 597, 0, 598, 599,
	581, 582, 600, 601, 0, 602, 603, 604, 605, 606,
	607, 608, 712, 0, 609, 0, 610, 611, 612, 613,
	614, 616, 583, 617, 622, 623, 713, 618, 619, 620,
	621, 714, 625, 626, 0, 627, 628, 0, 624, 615,
	0, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	637, 715, 716, 717, 718, 0, 647, 0, 638, 639,
	640, 641, 719, 642, 720, 0, 643, 644, 645, 646,
	0, 648, 649, 0, 0, 650, 651, 653, 655, 656,
	652, 654, 657, 0, 658, 0, 0, 659, 660, 661,
	721, 722, 723, 0, 663, 662, 664, 665, 666, 724,
	667, 668, 0, 0, 283, 0, 669, 670, 725, 671,
	672, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 292, 291, 293, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 299, 3958, 300, 301, 0, 302, 303, 304, 305,
	306, 307, 308, 675, 676, 0, 309, 677, 310, 678,
	0, 679, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 680, 681, 682, 0, 318, 319, 683, 0,
	0, 0, 320, 321, 322, 323, 324, 325, 326, 327,
	0, 0, 329, 330, 331, 328, 332, 0, 333, 0,
	334, 335, 336, 337, 338, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 351, 353, 684,
	685, 0, 356, 352, 354, 0, 357, 355, 358, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 368, 369, 370, 0, 371, 372, 686,
	373, 374, 375, 377, 379, 376, 378, 380, 381, 382,
	383, 687, 688, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 689, 0, 0, 0, 388, 0,
	389, 390, 391, 0, 392, 0, 0, 393, 394, 395,
	690, 691, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 692, 0, 693, 406, 0, 407, 408,
	409, 410, 411, 412, 694, 695, 696, 500, 0, 413,
	414, 0, 415, 416, 417, 418, 419, 0, 0, 0,
	0, 420, 421, 422, 0, 0, 501, 423, 697, 698,
	0, 699, 0, 424, 425, 0, 700, 0, 426, 427,
	428, 0, 429, 0, 0, 0, 430, 431, 432, 433,
	434, 435, 0, 436, 438, 437, 0, 439, 701, 0,
	440, 441, 0, 0, 442, 443, 444, 445, 446, 447,
	450, 0, 0, 448, 449, 451, 452, 0, 453, 454,
	456, 459, 455, 457, 458, 460, 473, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 475,
	0, 474, 0, 476, 477, 478, 479, 480, 487, 489,
	490, 485, 486, 488, 491, 492, 494, 482, 483, 484,
	0, 493, 481, 0, 0, 0, 495, 496, 497, 498,
	0, 702, 499, 703, 502, 503, 0, 0, 504, 0,
	505, 0, 0, 507, 508, 509, 0, 0, 510, 511,
	704, 0, 512, 0, 705, 513, 514, 506, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	706, 526, 527, 528, 707, 529, 530, 531, 708, 532,
	709, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 544, 710, 545, 546, 548, 547,
	549, 0, 550, 0, 551, 552, 553, 0, 0, 0,
	0, 0, 554, 555, 557, 0, 558, 559, 560, 561,
	556, 562, 563, 564, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 711, 575, 0, 576,
	577, 584, 585, 586, 578, 579, 580, 587, 588, 589,
	590, 591, 0, 593, 594, 592, 595, 596, 597, 0,
	598, 599, 581, 582, 600, 601, 0, 602, 603, 604,
	605, 606, 607, 608, 712, 0, 609, 0, 610, 611,
	612, 613, 614, 616, 583, 617, 622, 623, 713, 618,
	619, 620, 621, 714, 625, 626, 0, 627, 628, 0,
	624, 615, 0, 629, 630, 631, 632, 633, 634, 635,
	636, 0, 637, 715, 716, 717, 718, 0, 647, 0,
	638, 639, 640, 641, 719, 642, 720, 0, 643, 644,
	645, 646, 0, 648, 649, 0, 0, 650, 651, 653,
	655, 656, 652, 654, 657, 0, 658, 0, 0, 659,
	660, 661, 721, 722, 723, 0, 663, 662, 664, 665,
	666, 724, 667, 668, 975, 0, 875, 0, 669, 670,
	725, 671, 672, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 299, 2459, 300, 301, 0, 302, 303,
	304, 305, 306, 307, 308, 675, 676, 0, 309, 677,
	310, 678, 0, 679, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 680, 681, 682, 0, 318, 319,
	683, 0, 0, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 882, 350, 0, 351,
	353, 684, 685, 0, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 686, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 687, 688, 384, 0, 286, 0, 0,
	0, 0, 0, 385, 386, 387, 689, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 972, 0, 393,
	394, 395, 690, 691, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 692, 0, 693, 406, 0,
	407, 408, 409, 410, 411, 412, 694, 695, 696, 500,
	0, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 287, 420, 421, 422, 0, 0, 501, 423,
	697, 698, 0, 699, 0, 424, 425, 0, 700, 0,
	426, 427, 428, 0, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	701, 0, 440, 441, 0, 0, 442, 443, 444, 445,
	446, 447, 450, 0, 0, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 0, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 0, 493, 481, 0, 288, 0, 495, 496,
	497, 498, 0, 702, 499, 703, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 704, 0, 512, 0, 705, 513, 514, 506,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 706, 526, 527, 528, 707, 529, 530, 531,
	708, 532, 709, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 710, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 711, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 0, 598, 599, 581, 582, 600, 601, 0, 602,
	603, 604, 605, 606, 607, 608, 712, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	713, 618, 619, 620, 621, 714, 625, 626, 0, 627,
	974, 0, 624, 615, 880, 629, 630, 631, 632, 633,
	881, 635, 636, 0, 637, 715, 716, 717, 718, 0,
	647, 0, 638, 639, 640, 641, 719, 642, 720, 0,
	643, 644, 645, 646, 0, 648, 649, 0, 0, 650,
	651, 653, 655, 656, 652, 654, 657, 0, 658, 0,
	0, 659, 660, 661, 721, 722, 723, 0, 663, 662,
	664, 665, 666, 724, 667, 668, 2143, 0, 0, 0,
	669, 670, 725, 671, 672, 673, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 292, 291, 293, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 885, 0,
	0, 0, 0, 299, 0, 300, 301, 1271, 302, 303,
	304, 305, 306, 307, 308, 0, 2149, 0, 309, 2139,
	310, 2155, 0, 2162, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 2165, 2166, 0, 0, 318, 319,
	0, 0, 1572, 0, 320, 321, 322, 323, 324, 325,
	326, 327, 0, 0, 329, 330, 331, 328, 332, 0,
	333, 0, 334, 335, 336, 337, 338, 339, 0, 340,
	341, 342, 1272, 343, 344, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 349, 350, 1254, 351,
	353, 2153, 2152, 0, 356, 352, 354, 0, 357, 355,
	358, 0, 359, 360, 361, 0, 0, 362, 1239, 364,
	0, 365, 366, 367, 0, 368, 369, 370, 0, 371,
	372, 0, 373, 374, 375, 377, 379, 376, 378, 380,
	381, 382, 383, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 2151, 0, 0, 0,
	388, 0, 389, 390, 391, 0, 392, 0, 1273, 393,
	394, 395, 2160, 2161, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 0,
	407, 408, 409, 410, 411, 412, 0, 0, 0, 500,
	1275, 413, 414, 0, 415, 416, 417, 418, 419, 0,
	0, 0, 0, 420, 421, 422, 0, 1274, 501, 423,
	2146, 2147, 0, 2142, 0, 424, 425, 1276, 0, 1277,
	426, 427, 428, 1278, 429, 0, 0, 0, 430, 431,
	432, 433, 434, 435, 0, 436, 438, 437, 0, 439,
	0, 1279, 440, 441, 1280, 0, 442, 443, 444, 445,
	446, 447, 450, 0, 0, 448, 449, 451, 452, 0,
	453, 454, 456, 459, 455, 457, 458, 460, 473, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 475, 0, 474, 1281, 476, 477, 478, 479, 480,
	487, 489, 490, 485, 486, 488, 491, 492, 494, 482,
	483, 484, 1282, 493, 481, 0, 0, 1283, 495, 496,
	497, 498, 0, 0, 499, 2154, 502, 503, 0, 0,
	504, 0, 505, 0, 0, 507, 508, 509, 0, 0,
	510, 511, 0, 1284, 512, 1285, 0, 513, 514, 506,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 2136, 526, 527, 528, 2137, 529, 530, 531,
	0, 532, 0, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 544, 2150, 545, 546,
	548, 547, 549, 0, 550, 0, 551, 552, 553, 0,
	0, 0, 0, 0, 554, 555, 557, 0, 558, 559,
	560, 561, 556, 562, 563, 564, 565, 566, 0, 567,
	568, 569, 1286, 570, 571, 572, 573, 574, 0, 575,
	0, 576, 577, 584, 585, 586, 578, 579, 580, 587,
	588, 589, 590, 591, 0, 593, 594, 592, 595, 596,
	597, 0, 598, 599, 581, 582, 600, 601, 1287, 602,
	603, 604, 605, 606, 607, 608, 2148, 0, 609, 0,
	610, 611, 612, 613, 614, 616, 583, 617, 622, 623,
	2164, 618, 619, 620, 621, 0, 625, 626, 0, 627,
	628, 0, 624, 615, 0, 629, 630, 631, 632, 633,
	634, 635, 636, 0, 637, 2156, 2157, 2158, 2159, 0,
	647, 0, 638, 639, 640, 641, 0, 642, 0, 0,
	643, 644, 645, 646, 0, 648, 649, 0, 0, 650,
	651, 653, 655, 656, 652, 654, 657, 0, 658, 0,
	0, 659, 660, 661, 0, 2140, 2163, 0, 663, 662,
	664, 665, 666, 0, 667, 668, 0, 0, 0, 875,
	669, 670, 0, 671, 672, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 4078, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	2130, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 882,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 4077, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 880, 629, 630,
	631, 632, 633, 881, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 4076, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 875,
	0, 0, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 2170, 297, 298, 0, 0, 0,
	0, 885, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 882,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 2169, 588, 589, 590, 591, 0, 2171, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 880, 629, 630,
	631, 632, 633, 881, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 2168, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 875,
	0, 0, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 2121, 297, 298, 0, 0, 0,
	0, 885, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 882,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 2120, 588, 589, 590, 591, 0, 2122, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 880, 629, 630,
	631, 632, 633, 881, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 2119, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 873,
	0, 875, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 885, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 882, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 880,
	629, 630, 631, 632, 633, 881, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 875, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 885, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 882, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 880,
	629, 630, 631, 632, 633, 881, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 875, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 885, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 882, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 2511, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 2512, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 880,
	629, 630, 631, 632, 633, 881, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 2513, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 885, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 1608, 1607, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 885, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 1572, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 1274, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 1276, 700,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 0, 0, 1283, 495,
	496, 497, 498, 4178, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1608, 1607, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 1271, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 1572, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 1272, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 1273,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 1275, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 1274, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 1276, 700,
	1277, 426, 427, 428, 1278, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 1279, 440, 441, 1280, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 1281, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 1282, 493, 481, 0, 0, 1283, 495,
	496, 497, 498, 3750, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 1284, 512, 1285, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 1286, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 1287,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 0, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 1781, 0, 1608,
	1607, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	1271, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 1572, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 1272, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 1780, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 1273, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 1275, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	1274, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	1276, 700, 1277, 426, 427, 428, 1278, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 1279, 440, 441, 1280, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 1281, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 1282, 493, 481, 0, 0,
	1283, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 1284, 512, 1285, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 1779, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 1286, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 1778, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 1287, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 0,
	0, 0, 0, 669, 670, 725, 671, 672, 673, 1653,
	0, 1608, 1607, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 1271, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 1572, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 1272, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 1273, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 1655, 695, 696, 500, 1275, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 1274, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 1276, 700, 1277, 426, 427, 428, 1278, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 1279, 440, 441, 1280,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 1281,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 1282, 493, 481,
	0, 0, 1283, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 1284, 512,
	1285, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 1286, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 1287, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 0, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 1603, 0, 1608, 1607, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 1572,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 1272,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 1274, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 1279, 440,
	441, 1280, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 0, 0, 1283, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 0, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 1608, 1607, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 1572,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 1272,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 1274, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 1279, 440,
	441, 1280, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 0, 0, 1283, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1608, 1607, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 1572,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 1272,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 1274, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 1279, 440,
	441, 1280, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 0, 0, 1283, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1608, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 1271, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 1572,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 1272,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 1273, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 1275, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 1274, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 1276, 700, 1277, 426, 427, 428,
	1278, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 1279, 440,
	441, 1280, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 1281, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 1282,
	493, 481, 0, 0, 1283, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	1284, 512, 1285, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 1286,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 1287, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 3044, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 3792, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 3048, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 3791, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 3047, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 3788,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 3790, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 3787, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 3046, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 3789, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 3044, 318, 319, 683, 0, 0,
	3038, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 3040, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 3048, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 3047, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3037, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 3046, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 3045, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1861, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	1860, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 1859, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 288, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 1862, 579, 580, 587, 588,
	589, 590, 591, 0, 1858, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 1856, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 1857, 662, 664,
	665, 666, 724, 667, 668, 1576, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 1578, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 288, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 1321, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1573, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1575,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 1321, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 1479,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 1481, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 1321,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 758, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 757, 295, 296, 746, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 749, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	755, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 751, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 745, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	746, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 749, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 750, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 751, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 283, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	746, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 749, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 750, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 751, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 283, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	746, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 749, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 4188, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 751, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 283, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 288, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 1321, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 283, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 3690, 493, 481, 0, 288, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 3229, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 3228, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 288, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 283, 0, 0,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 288, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 2417, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 2480, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 2424,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 2423, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 2410, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 2412, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 288, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 2374, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 288, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 1321, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1698, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 1697, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 288, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1596, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 288, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1589, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1591,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 1398,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 1397, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 1388, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 286, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 1387, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 287,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 288, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1385, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 286, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 1384, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 287, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 288, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1380, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 286, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 1379, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 287, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 288, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 727, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	286, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 287, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 288,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 274,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 749, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 750, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 751,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 2520, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 2518, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 2516, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 2430, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 2195, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 286, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 2189, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 287, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 288, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 959, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 958, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 957, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 830, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 836, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 845, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 838, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 844, 840, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 841, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 839, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 842, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 843, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 837, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 283, 0, 0, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 3791, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 4509, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1426, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 1429, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 1427, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 818, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 817, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	816, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	1430, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 814, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1426, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	1429, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 1427,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 818, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 817, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 816, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 1430, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 814, 716,
	717, 718, 0, 647, 0, 638, 1428, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 825,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 823, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 736, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 735, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	734, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 3139, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 4807, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 3631, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 4398, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	4135, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 2919, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 3139, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 3268, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 2325, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	817, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 816, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 814, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 2490, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 2478, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1754, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1746, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 808,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 804, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 809, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 818, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 817, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 816, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 1731, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	814, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 1704, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 1703, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1688, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 1686, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1681, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1658, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1656,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 1651,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 1613, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1581, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 319, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 711, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 715, 716, 717, 718, 0, 647,
	0, 638, 639, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 1432, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 817, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	816, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 814, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 1403, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 1402,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 1394,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 1393, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 283, 0, 0, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 1346, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 828, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 808, 0, 283, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 675, 676, 0, 309, 677, 310,
	678, 0, 679, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 680, 681, 682, 0, 318, 804, 683,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 803,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 351, 353,
	684, 685, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	686, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 687, 688, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 689, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 690, 691, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 692, 0, 693, 406, 0, 407,
	408, 409, 410, 411, 412, 694, 695, 696, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 697,
	698, 0, 699, 0, 424, 425, 0, 700, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 701,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	809, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 818, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 702, 499, 703, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 704, 0, 512, 0, 705, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 706, 526, 527, 528, 707, 529, 530, 531, 708,
	532, 709, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 710, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 817, 571, 572, 573, 574, 805, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 816, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 806, 597,
	0, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 712, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 713,
	618, 619, 620, 621, 714, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 814, 716, 717, 718, 0, 647,
	0, 638, 810, 640, 641, 719, 642, 720, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 721, 722, 723, 0, 663, 662, 664,
	665, 666, 724, 667, 668, 797, 0, 283, 0, 669,
	670, 725, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 675, 676, 0, 309,
	677, 310, 678, 0, 679, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 680, 681, 682, 0, 318,
	319, 683, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	351, 353, 684, 685, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 686, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 687, 688, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 689, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 690, 691, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 692, 0, 693, 406,
	0, 407, 408, 409, 410, 411, 412, 694, 695, 696,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 697, 698, 0, 699, 0, 424, 425, 0, 700,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 701, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 702, 499, 703, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 704, 0, 512, 0, 705, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 706, 526, 527, 528, 707, 529, 530,
	531, 708, 532, 709, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 710, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 711,
	575, 0, 576, 577, 798, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 0, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 712, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 713, 618, 619, 620, 621, 714, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 715, 716, 717, 718,
	0, 647, 0, 638, 639, 640, 641, 719, 642, 720,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 721, 722, 723, 0, 663,
	662, 664, 665, 666, 724, 667, 668, 760, 0, 283,
	0, 669, 670, 725, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 675, 676,
	0, 309, 677, 310, 678, 0, 679, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 680, 681, 682,
	0, 318, 319, 683, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 351, 353, 684, 685, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 686, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 687, 688, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 689,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 690, 691, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 692, 0,
	693, 406, 0, 407, 408, 409, 410, 411, 412, 694,
	695, 696, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 697, 698, 0, 699, 0, 424, 425,
	0, 700, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 701, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 702, 499, 703, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 704, 0, 512, 0, 705,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 706, 526, 527, 528, 707,
	529, 530, 531, 708, 532, 709, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	710, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 711, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 0, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 712,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 713, 618, 619, 620, 621, 714, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 715, 716,
	717, 718, 0, 647, 0, 638, 639, 640, 641, 719,
	642, 720, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 721, 722, 723,
	0, 663, 662, 664, 665, 666, 724, 667, 668, 753,
	0, 283, 0, 669, 670, 725, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	675, 676, 0, 309, 677, 310, 678, 0, 679, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 680,
	681, 682, 0, 318, 319, 683, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 351, 353, 684, 685, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 686, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 687, 688,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 689, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 690, 691, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	692, 0, 693, 406, 0, 407, 408, 409, 410, 411,
	412, 694, 695, 696, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 697, 698, 0, 699, 0,
	424, 425, 0, 700, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 701, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 702, 499,
	703, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 704, 0, 512,
	0, 705, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 706, 526, 527,
	528, 707, 529, 530, 531, 708, 532, 709, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 710, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 711, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 0, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 712, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 713, 618, 619, 620, 621,
	714, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	715, 716, 717, 718, 0, 647, 0, 638, 639, 640,
	641, 719, 642, 720, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 721,
	722, 723, 0, 663, 662, 664, 665, 666, 724, 667,
	668, 731, 0, 283, 0, 669, 670, 725, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3820, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	817, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 816, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 814, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3730, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3706, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3703, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3655, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3653, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3641, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3638, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 3239, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	798, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 2448, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 0,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 1365, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 406, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 710, 545, 546, 1294, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 283, 0, 0, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 675, 676, 0, 309, 677, 310, 678, 0,
	679, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 680, 681, 682, 0, 318, 319, 683, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 351, 353, 684, 685,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 686, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	687, 688, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 689, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 690,
	691, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 692, 0, 693, 0, 0, 407, 408, 409,
	410, 411, 412, 694, 695, 696, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 697, 698, 0,
	699, 0, 424, 425, 0, 700, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 701, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	702, 499, 703, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 704,
	0, 512, 0, 705, 513, 514, 506, 515, 516, 0,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 706,
	526, 527, 528, 707, 529, 530, 531, 708, 532, 709,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 0, 543, 544, 710, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 711, 0, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 0, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 712, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 713, 618, 619,
	620, 621, 714, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 715, 716, 717, 718, 0, 647, 0, 638,
	639, 640, 641, 719, 642, 720, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 721, 722, 723, 0, 663, 662, 664, 665, 666,
	724, 667, 668, 1694, 0, 1410, 0, 669, 670, 725,
	671, 672, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 292, 291, 293, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 0, 300, 301, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 0, 0, 0, 318, 319, 0,
	0, 0, 0, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 329, 330, 331, 328, 332, 0, 333,
	0, 334, 335, 336, 337, 338, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 0, 0, 0, 0, 0,
	0, 1412, 346, 347, 348, 349, 350, 0, 351, 353,
	0, 0, 0, 356, 352, 354, 0, 357, 355, 358,
	0, 359, 360, 361, 0, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 368, 369, 370, 0, 371, 372,
	0, 373, 374, 375, 377, 379, 376, 378, 380, 381,
	382, 383, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 0, 0, 0, 0, 388,
	0, 389, 390, 391, 0, 392, 0, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 0, 407,
	408, 409, 410, 411, 412, 1693, 0, 0, 500, 0,
	413, 414, 0, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 420, 421, 422, 0, 0, 501, 423, 0,
	0, 0, 0, 0, 424, 425, 0, 0, 0, 426,
	427, 428, 0, 429, 0, 0, 0, 430, 431, 432,
	433, 434, 435, 0, 436, 438, 437, 0, 439, 0,
	0, 440, 441, 0, 0, 442, 443, 444, 445, 446,
	447, 450, 0, 0, 448, 449, 451, 452, 0, 453,
	454, 456, 459, 455, 457, 458, 460, 473, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	475, 0, 474, 0, 476, 477, 478, 479, 480, 487,
	489, 490, 485, 486, 488, 491, 492, 494, 482, 483,
	484, 0, 493, 481, 0, 0, 0, 495, 496, 497,
	498, 0, 0, 499, 0, 502, 503, 0, 0, 504,
	0, 505, 0, 0, 507, 508, 509, 0, 0, 510,
	511, 0, 0, 512, 0, 0, 513, 514, 506, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 0, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 0, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 544, 0, 545, 546, 548,
	547, 549, 0, 550, 0, 551, 552, 553, 0, 0,
	0, 0, 0, 554, 555, 557, 0, 558, 559, 560,
	561, 556, 562, 563, 564, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 0, 575, 0,
	576, 577, 584, 585, 586, 578, 579, 580, 587, 588,
	589, 590, 591, 0, 593, 594, 592, 595, 596, 597,
	1413, 598, 599, 581, 582, 600, 601, 0, 602, 603,
	604, 605, 606, 607, 608, 0, 0, 609, 0, 610,
	611, 612, 613, 614, 616, 583, 617, 622, 623, 0,
	618, 619, 620, 621, 0, 625, 626, 0, 627, 628,
	0, 624, 615, 0, 629, 630, 631, 632, 633, 634,
	635, 636, 0, 637, 0, 0, 0, 0, 0, 647,
	0, 638, 639, 640, 641, 0, 642, 0, 0, 643,
	644, 645, 646, 0, 648, 649, 0, 0, 650, 651,
	653, 655, 656, 652, 654, 657, 0, 658, 0, 0,
	659, 660, 661, 0, 0, 0, 0, 663, 662, 664,
	665, 666, 0, 667, 668, 1616, 0, 1410, 0, 669,
	670, 0, 671, 672, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 292, 291, 293, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 0, 300, 301, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 0, 0, 0, 318,
	319, 0, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 326, 327, 0, 0, 329, 330, 331, 328, 332,
	0, 333, 0, 334, 335, 336, 337, 338, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 0, 0, 0,
	0, 0, 0, 1412, 346, 347, 348, 349, 350, 0,
	351, 353, 0, 0, 0, 356, 352, 354, 0, 357,
	355, 358, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 368, 369, 370, 0,
	371, 372, 0, 373, 374, 375, 377, 379, 376, 378,
	380, 381, 382, 383, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 0, 0, 0,
	0, 388, 0, 389, 390, 391, 0, 392, 0, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	0, 407, 408, 409, 410, 411, 412, 1615, 0, 0,
	500, 0, 413, 414, 0, 415, 416, 417, 418, 419,
	0, 0, 0, 0, 420, 421, 422, 0, 0, 501,
	423, 0, 0, 0, 0, 0, 424, 425, 0, 0,
	0, 426, 427, 428, 0, 429, 0, 0, 0, 430,
	431, 432, 433, 434, 435, 0, 436, 438, 437, 0,
	439, 0, 0, 440, 441, 0, 0, 442, 443, 444,
	445, 446, 447, 450, 0, 0, 448, 449, 451, 452,
	0, 453, 454, 456, 459, 455, 457, 458, 460, 473,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 475, 0, 474, 0, 476, 477, 478, 479,
	480, 487, 489, 490, 485, 486, 488, 491, 492, 494,
	482, 483, 484, 0, 493, 481, 0, 0, 0, 495,
	496, 497, 498, 0, 0, 499, 0, 502, 503, 0,
	0, 504, 0, 505, 0, 0, 507, 508, 509, 0,
	0, 510, 511, 0, 0, 512, 0, 0, 513, 514,
	506, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 0, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 0, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 544, 0, 545,
	546, 548, 547, 549, 0, 550, 0, 551, 552, 553,
	0, 0, 0, 0, 0, 554, 555, 557, 0, 558,
	559, 560, 561, 556, 562, 563, 564, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 0,
	575, 0, 576, 577, 584, 585, 586, 578, 579, 580,
	587, 588, 589, 590, 591, 0, 593, 594, 592, 595,
	596, 597, 1413, 598, 599, 581, 582, 600, 601, 0,
	602, 603, 604, 605, 606, 607, 608, 0, 0, 609,
	0, 610, 611, 612, 613, 614, 616, 583, 617, 622,
	623, 0, 618, 619, 620, 621, 0, 625, 626, 0,
	627, 628, 0, 624, 615, 0, 629, 630, 631, 632,
	633, 634, 635, 636, 0, 637, 0, 0, 0, 0,
	0, 647, 0, 638, 639, 640, 641, 0, 642, 0,
	0, 643, 644, 645, 646, 0, 648, 649, 0, 0,
	650, 651, 653, 655, 656, 652, 654, 657, 0, 658,
	0, 0, 659, 660, 661, 0, 0, 0, 0, 663,
	662, 664, 665, 666, 0, 667, 668, 1408, 0, 1410,
	0, 669, 670, 0, 671, 672, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 292, 291,
	293, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 300, 301,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 0, 0,
	0, 318, 319, 0, 0, 0, 0, 320, 321, 322,
	323, 324, 325, 326, 327, 0, 0, 329, 330, 331,
	328, 332, 0, 333, 0, 334, 335, 336, 337, 338,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 0,
	0, 0, 0, 0, 0, 1412, 346, 347, 348, 349,
	350, 0, 351, 353, 0, 0, 0, 356, 352, 354,
	0, 357, 355, 358, 0, 359, 360, 361, 0, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 368, 369,
	370, 0, 371, 372, 0, 373, 374, 375, 377, 379,
	376, 378, 380, 381, 382, 383, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 0,
	0, 0, 0, 388, 0, 389, 390, 391, 0, 392,
	0, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 0, 407, 408, 409, 410, 411, 412, 1407,
	0, 0, 500, 0, 413, 414, 0, 415, 416, 417,
	418, 419, 0, 0, 0, 0, 420, 421, 422, 0,
	0, 501, 423, 0, 0, 0, 0, 0, 424, 425,
	0, 0, 0, 426, 427, 428, 0, 429, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 0, 436, 438,
	437, 0, 439, 0, 0, 440, 441, 0, 0, 442,
	443, 444, 445, 446, 447, 450, 0, 0, 448, 449,
	451, 452, 0, 453, 454, 456, 459, 455, 457, 458,
	460, 473, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 475, 0, 474, 0, 476, 477,
	478, 479, 480, 487, 489, 490, 485, 486, 488, 491,
	492, 494, 482, 483, 484, 0, 493, 481, 0, 0,
	0, 495, 496, 497, 498, 0, 0, 499, 0, 502,
	503, 0, 0, 504, 0, 505, 0, 0, 507, 508,
	509, 0, 0, 510, 511, 0, 0, 512, 0, 0,
	513, 514, 506, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 0, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 0, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 544,
	0, 545, 546, 548, 547, 549, 0, 550, 0, 551,
	552, 553, 0, 0, 0, 0, 0, 554, 555, 557,
	0, 558, 559, 560, 561, 556, 562, 563, 564, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 0, 575, 0, 576, 577, 584, 585, 586, 578,
	579, 580, 587, 588, 589, 590, 591, 0, 593, 594,
	592, 595, 596, 597, 1413, 598, 599, 581, 582, 600,
	601, 0, 602, 603, 604, 605, 606, 607, 608, 0,
	0, 609, 0, 610, 611, 612, 613, 614, 616, 583,
	617, 622, 623, 0, 618, 619, 620, 621, 0, 625,
	626, 0, 627, 628, 0, 624, 615, 0, 629, 630,
	631, 632, 633, 634, 635, 636, 0, 637, 0, 0,
	0, 0, 0, 647, 0, 638, 639, 640, 641, 0,
	642, 0, 0, 643, 644, 645, 646, 0, 648, 649,
	0, 0, 650, 651, 653, 655, 656, 652, 654, 657,
	0, 658, 0, 0, 659, 660, 661, 0, 0, 0,
	0, 663, 662, 664, 665, 666, 0, 667, 668, 2209,
	0, 1410, 0, 669, 670, 0, 671, 672, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	292, 291, 293, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	300, 301, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 0,
	0, 0, 0, 318, 319, 0, 0, 0, 0, 320,
	321, 322, 323, 324, 325, 326, 327, 0, 0, 329,
	330, 331, 328, 332, 0, 333, 0, 334, 335, 336,
	337, 338, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 0, 0, 0, 0, 0, 0, 1412, 346, 347,
	348, 349, 350, 0, 351, 353, 0, 0, 0, 356,
	352, 354, 0, 357, 355, 358, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	368, 369, 370, 0, 371, 372, 0, 373, 374, 375,
	377, 379, 376, 378, 380, 381, 382, 383, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 0, 0, 0, 0, 388, 0, 389, 390, 391,
	0, 392, 0, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 0, 407, 408, 409, 410, 411,
	412, 0, 0, 0, 500, 0, 413, 414, 0, 415,
	416, 417, 418, 419, 0, 0, 0, 0, 420, 421,
	422, 0, 0, 501, 423, 0, 0, 0, 0, 0,
	424, 425, 0, 0, 0, 426, 427, 428, 0, 429,
	0, 0, 0, 430, 431, 432, 433, 434, 435, 0,
	436, 438, 437, 0, 439, 0, 0, 440, 441, 0,
	0, 442, 443, 444, 445, 446, 447, 450, 0, 0,
	448, 449, 451, 452, 0, 453, 454, 456, 459, 455,
	457, 458, 460, 473, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 475, 0, 474, 0,
	476, 477, 478, 479, 480, 487, 489, 490, 485, 486,
	488, 491, 492, 494, 482, 483, 484, 0, 493, 481,
	0, 0, 0, 495, 496, 497, 498, 0, 0, 499,
	0, 502, 503, 0, 0, 504, 0, 505, 0, 0,
	507, 508, 509, 0, 0, 510, 511, 0, 0, 512,
	0, 0, 513, 514, 506, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 0, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 0, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 544, 0, 545, 546, 548, 547, 549, 0, 550,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 554,
	555, 557, 0, 558, 559, 560, 561, 556, 562, 563,
	564, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 0, 575, 0, 576, 577, 584, 585,
	586, 578, 579, 580, 587, 588, 589, 590, 591, 0,
	593, 594, 592, 595, 596, 597, 1413, 598, 599, 581,
	582, 600, 601, 0, 602, 603, 604, 605, 606, 607,
	608, 0, 0, 609, 0, 610, 611, 612, 613, 614,
	616, 583, 617, 622, 623, 0, 618, 619, 620, 621,
	0, 625, 626, 0, 627, 628, 0, 624, 615, 0,
	629, 630, 631, 632, 633, 634, 635, 636, 0, 637,
	0, 0, 0, 0, 0, 647, 0, 638, 639, 640,
	641, 0, 642, 0, 0, 643, 644, 645, 646, 0,
	648, 649, 0, 0, 650, 651, 653, 655, 656, 652,
	654, 657, 0, 658, 0, 0, 659, 660, 661, 0,
	0, 0, 0, 663, 662, 664, 665, 666, 0, 667,
	668, 2176, 0, 1410, 0, 669, 670, 0, 671, 672,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 292, 291, 293, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 0, 300, 301, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 0, 0, 0, 0, 318, 319, 0, 0, 0,
	0, 320, 321, 322, 323, 324, 325, 326, 327, 0,
	0, 329, 330, 331, 328, 332, 0, 333, 0, 334,
	335, 336, 337, 338, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 0, 0, 0, 0, 0, 0, 1412,
	346, 347, 348, 349, 350, 0, 351, 353, 0, 0,
	0, 356, 352, 354, 0, 357, 355, 358, 0, 359,
	360, 361, 0, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 368, 369, 370, 0, 371, 372, 0, 373,
	374, 375, 377, 379, 376, 378, 380, 381, 382, 383,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 0, 0, 0, 0, 388, 0, 389,
	390, 391, 0, 392, 0, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 0, 407, 408, 409,
	410, 411, 412, 0, 0, 0, 500, 0, 413, 414,
	0, 415, 416, 417, 418, 419, 0, 0, 0, 0,
	420, 421, 422, 0, 0, 501, 423, 0, 0, 0,
	0, 0, 424, 425, 0, 0, 0, 426, 427, 428,
	0, 429, 0, 0, 0, 430, 431, 432, 433, 434,
	435, 0, 436, 438, 437, 0, 439, 0, 0, 440,
	441, 0, 0, 442, 443, 444, 445, 446, 447, 450,
	0, 0, 448, 449, 451, 452, 0, 453, 454, 456,
	459, 455, 457, 458, 460, 473, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 475, 0,
	474, 0, 476, 477, 478, 479, 480, 487, 489, 490,
	485, 486, 488, 491, 492, 494, 482, 483, 484, 0,
	493, 481, 0, 0, 0, 495, 496, 497, 498, 0,
	0, 499, 0, 502, 503, 0, 0, 504, 0, 505,
	0, 0, 507, 508, 509, 0, 0, 510, 511, 0,
	0, 512, 0, 0, 513, 514, 506, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 0,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 0,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 544, 0, 545, 546, 548, 547, 549,
	0, 550, 0, 551, 552, 553, 0, 0, 0, 0,
	0, 554, 555, 557, 0, 558, 559, 560, 561, 556,
	562, 563, 564, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 0, 575, 0, 576, 577,
	584, 585, 586, 578, 579, 580, 587, 588, 589, 590,
	591, 0, 593, 594, 592, 595, 596, 597, 1413, 598,
	599, 581, 582, 600, 601, 0, 602, 603, 604, 605,
	606, 607, 608, 0, 0, 609, 0, 610, 611, 612,
	613, 614, 616, 583, 617, 622, 623, 0, 618, 619,
	620, 621, 0, 625, 626, 0, 627, 628, 0, 624,
	615, 0, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 637, 0, 0, 0, 0, 0, 647, 0, 638,
	639, 640, 641, 0, 642, 0, 0, 643, 644, 645,
	646, 0, 648, 649, 0, 0, 650, 651, 653, 655,
	656, 652, 654, 657, 0, 658, 0, 0, 659, 660,
	661, 0, 0, 0, 0, 663, 662, 664, 665, 666,
	1410, 667, 668, 0, 0, 0, 0, 669, 670, 0,
	671, 672, 673, 0, 0, 0, 0, 289, 290, 292,
	291, 293, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 300,
	301, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 0, 309, 0, 310, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 0, 0,
	0, 0, 318, 319, 0, 0, 0, 0, 320, 321,
	322, 323, 324, 325, 326, 327, 0, 0, 329, 330,
	331, 328, 332, 0, 333, 0, 334, 335, 336, 337,
	338, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	0, 0, 0, 0, 0, 0, 1412, 346, 347, 348,
	349, 350, 0, 351, 353, 0, 0, 0, 356, 352,
	354, 0, 357, 355, 358, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 368,
	369, 370, 0, 371, 372, 0, 373, 374, 375, 377,
	379, 376, 378, 380, 381, 382, 383, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	0, 0, 0, 0, 388, 0, 389, 390, 391, 0,
	392, 0, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 0, 407, 408, 409, 410, 411, 412,
	0, 0, 0, 500, 0, 413, 414, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 0, 420, 421, 422,
	0, 0, 501, 423, 0, 0, 0, 0, 0, 424,
	425, 0, 0, 0, 426, 427, 428, 0, 429, 0,
	0, 0, 430, 431, 432, 433, 434, 435, 0, 436,
	438, 437, 0, 439, 0, 0, 440, 441, 0, 0,
	442, 443, 444, 445, 446, 447, 450, 0, 0, 448,
	449, 451, 452, 0, 453, 454, 456, 459, 455, 457,
	458, 460, 473, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 475, 0, 474, 0, 476,
	477, 478, 479, 480, 487, 489, 490, 485, 486, 488,
	491, 492, 494, 482, 483, 484, 0, 493, 481, 0,
	0, 0, 495, 496, 497, 498, 0, 0, 499, 0,
	502, 503, 0, 0, 504, 0, 505, 0, 0, 507,
	508, 509, 0, 0, 510, 511, 0, 0, 512, 0,
	0, 513, 514, 506, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 524, 525, 0, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 0, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	544, 0, 545, 546, 548, 547, 549, 0, 550, 0,
	551, 552, 553, 0, 0, 0, 0, 0, 554, 555,
	557, 0, 558, 559, 560, 561, 556, 562, 563, 564,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 0, 575, 0, 576, 577, 584, 585, 586,
	578, 579, 580, 587, 588, 589, 590, 591, 0, 593,
	594, 592, 595, 596, 597, 1413, 598, 599, 581, 582,
	600, 601, 0, 602, 603, 604, 605, 606, 607, 608,
	0, 0, 609, 0, 610, 611, 612, 613, 614, 616,
	583, 617, 622, 623, 0, 618, 619, 620, 621, 0,
	625, 626, 0, 627, 628, 0, 624, 615, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 0, 637, 0,
	0, 0, 0, 0, 647, 0, 638, 639, 640, 641,
	0, 642, 0, 0, 643, 644, 645, 646, 0, 648,
	649, 0, 0, 650, 651, 653, 655, 656, 652, 654,
	657, 0, 658, 0, 0, 659, 660, 661, 0, 0,
	0, 0, 663, 662, 664, 665, 666, 0, 667, 668,
	0, 0, 0, 0, 669, 670, 0, 671, 672, 673,
	1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 1941, 0, 0, 0, 0, 0,
	1910, 1911, 1913, 1943, 1944, 1945, 1954, 1955, 1956, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 1941, 0, 0, 0, 0, 1966,
	0, 0, 1913, 0, 0, 0, 0, 0, 1912, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 1936, 1937, 1938,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 1936, 1937, 1938,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 1940, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 1958, 1951, 0, 0,
	1961, 0, 0, 1927, 1928, 0, 0, 1940, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 1957, 0, 1958, 0, 0, 0,
	0, 0, 0, 1927, 1928, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 1934, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1941, 0, 0, 1952, 0, 0, 1965, 0,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1965, 0,
	0, 0, 0, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0,
	1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 3443, 0,
	0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0,
	1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 3442, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1910,
	1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 1941, 0, 1951, 0, 0, 1961, 0,
	0, 1913, 0, 0, 0, 1940, 1942, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 1958, 0, 0, 0, 1966, 0,
	0, 1927, 1928, 0, 0, 0, 0, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 1949,
	0, 0, 0, 0, 0, 0, 0, 1929, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 1935, 1936, 1937, 1938, 0,
	0, 0, 0, 0, 1963, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 1951, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 1940, 1942, 1947, 1941,
	0, 0, 1939, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1957, 0, 1958, 0, 1960, 0, 0,
	0, 0, 1927, 1928, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	1949, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1932, 1933, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 1951, 1939, 0, 1961, 2745, 0, 0, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 1957,
	0, 1958, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 1949, 0, 0, 0,
	0, 0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1941, 1965, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	1929, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923,
	1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0,
	0, 0, 0, 4932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1938, 1934, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1951,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 1947, 1941, 1965, 0, 0, 0, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 1957, 0, 1958, 0,
	1960, 0, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 1949, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1933, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 1959, 0, 0, 4835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1910, 1911, 0, 1943, 1944, 1945,
	1954, 1955, 1956, 0, 0, 1951, 1939, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 1947, 1941, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 1934,
	0, 0, 1957, 0, 1958, 0, 1960, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 1952, 0, 1949,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1933, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	1935, 1936, 1937, 1938, 0, 1950, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 0, 0, 0, 4787, 0, 0, 0,
	1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0,
	0, 1951, 1939, 0, 1961, 0, 0, 0, 0, 0,
	0, 1940, 1942, 1947, 1941, 0, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 1934, 0, 0, 1957, 0,
	1958, 0, 1960, 0, 0, 0, 0, 1927, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 1952, 0, 1949, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	1933, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 1935, 1936, 1937, 1938,
	0, 1950, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 4786, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 1951, 1939, 0,
	1961, 0, 0, 0, 0, 0, 0, 1940, 1942, 1947,
	1941, 0, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 1934, 0, 0, 1957, 0, 1958, 0, 1960, 0,
	0, 0, 0, 1927, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 1952,
	0, 1949, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 1933, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 1935, 1936, 1937, 1938, 0, 1950, 0, 0,
	0, 0, 1918, 0, 0, 0, 0, 1924, 1925, 1931,
	1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 0, 0, 0, 0, 4596, 0,
	0, 0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 0, 0, 1951, 1939, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 1947, 1941, 0, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 1934, 0, 0,
	1957, 0, 1958, 0, 1960, 0, 0, 0, 0, 1927,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 1952, 0, 1949, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1938, 0, 1950, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0,
	1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0,
	0, 0, 0, 0, 4422, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1951,
	1939, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 1947, 1941, 0, 0, 0, 0, 0, 0, 0,
	1913, 0, 0, 1934, 0, 0, 1957, 0, 1958, 0,
	1960, 0, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 1952, 0, 1949, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1933, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 0, 1950,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 0,
	4336, 0, 0, 0, 1910, 1911, 0, 1943, 1944, 1945,
	1954, 1955, 1956, 0, 0, 1951, 1939, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 1947, 1941, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 1934,
	0, 0, 1957, 0, 1958, 0, 1960, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 1952, 0, 1949,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1933, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	1935, 1936, 1937, 1938, 0, 1950, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 0, 0, 0, 4335, 0, 0, 0,
	1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 0,
	0, 1951, 1939, 0, 1961, 0, 0, 0, 0, 0,
	0, 1940, 1942, 1947, 1941, 0, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 1934, 0, 0, 1957, 0,
	1958, 0, 1960, 0, 0, 0, 0, 1927, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 1952, 0, 1949, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	1933, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 1935, 1936, 1937, 1938,
	0, 1950, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 4334, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 1951, 1939, 0,
	1961, 0, 0, 0, 0, 0, 0, 1940, 1942, 1947,
	1941, 0, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 1934, 0, 0, 1957, 0, 1958, 0, 1960, 0,
	0, 0, 0, 1927, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 1952,
	0, 1949, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 1933, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 1935, 1936, 1937, 1938, 0, 1950, 0, 0,
	0, 0, 1918, 0, 0, 0, 0, 1924, 1925, 1931,
	1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 0, 0, 0, 0, 3963, 0,
	0, 0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 0, 0, 1951, 1939, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 1947, 1941, 0, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 1934, 0, 0,
	1957, 0, 1958, 0, 1960, 0, 0, 0, 0, 1927,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 1952, 0, 1949, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1938, 0, 1950, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0,
	1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0,
	0, 0, 0, 0, 3440, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1951,
	1939, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 1947, 1941, 0, 0, 0, 0, 0, 0, 0,
	1913, 0, 0, 1934, 0, 0, 1957, 0, 1958, 0,
	1960, 0, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 1952, 0, 1949, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1933, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 0, 1950,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 0,
	3439, 0, 0, 0, 1910, 1911, 0, 1943, 1944, 1945,
	1954, 1955, 1956, 0, 0, 1951, 1939, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 1947, 1941, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 1934,
	0, 0, 1957, 0, 1958, 0, 1960, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 1952, 0, 1949,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1933, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	1935, 1936, 1937, 1938, 0, 1950, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 0, 0, 0, 3438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 1939, 0, 1961, 0, 0, 0, 0, 0,
	0, 1940, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 1957, 0,
	1958, 0, 0, 0, 0, 0, 0, 1927, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 1949, 0, 0, 0, 0,
	0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956,
	1933, 0, 0, 0, 0, 2355, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1941, 1965, 0, 0, 0,
	0, 0, 0, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 3437, 0, 0, 0, 0, 2356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 1937,
	1938, 1934, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 1910, 1911, 0,
	1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1951, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 1940, 1942,
	1947, 1941, 1965, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 1957, 0, 1958, 0, 1960,
	0, 0, 0, 0, 1927, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 1949, 0, 0, 1912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 0,
	2288, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1925, 1931,
	1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915, 1916,
	1917, 1919, 1920, 0, 0, 1959, 3402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 2286, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 1935, 1936, 1937, 1938, 0, 0, 0,
	0, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1941, 0, 1951, 1939, 0, 1961, 0, 0,
	1913, 0, 0, 0, 1940, 1942, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 1957, 0, 1958, 0, 0, 0, 1966, 0, 0,
	1927, 1928, 0, 0, 0, 0, 1912, 0, 0, 0,
	2357, 0, 0, 0, 0, 0, 1952, 1932, 1949, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 1935, 1936, 1937, 1938, 0, 0,
	0, 0, 0, 1963, 1918, 5086, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926,
	0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920,
	0, 0, 0, 0, 0, 1951, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 0, 0, 0,
	2287, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 1958, 0, 0, 0, 0, 0,
	0, 1927, 1928, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 1933, 0, 0, 1910, 1911, 0,
	1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 1941, 0, 0, 0, 1965, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 2285, 0, 0, 0, 1960,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 1948, 0, 1912, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5085, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922,
	1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 1935, 1936, 1937, 1938, 0, 0, 0,
	0, 0, 0, 1918, 0, 3502, 0, 0, 0, 0,
	0, 3501, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 1951, 0, 1965, 1961, 0, 0,
	0, 0, 0, 0, 1940, 1942, 0, 0, 1947, 1941,
	0, 0, 0, 0, 3373, 0, 0, 1913, 0, 0,
	0, 1957, 0, 1958, 0, 0, 0, 1960, 0, 0,
	1927, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 1949, 0,
	0, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 1932, 0, 0, 0, 0, 0,
	0, 1950, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 3374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1941, 1939, 1951, 0, 2891, 1961, 0, 0, 1913, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 1957,
	0, 1958, 0, 0, 0, 1966, 0, 0, 1927, 1928,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 1932, 1949, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 1935, 1936, 1937, 1938, 0, 0, 0, 0,
	0, 1963, 1918, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922,
	1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0,
	0, 0, 0, 1951, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 1958, 0, 0, 0, 0, 0, 0, 1927,
	1928, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 1933, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1941,
	0, 0, 0, 1965, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 1948, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 4691, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1941, 0, 1951, 0, 1965, 1961, 0, 0, 1913, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 1958, 0, 0, 0, 1966, 0, 0, 1927, 1928,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 1949, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 1935, 1936, 1937, 1938, 0, 0, 0, 0,
	0, 1963, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955,
	1956, 0, 0, 1951, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 1947, 1941, 0, 0, 1939,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	1957, 0, 1958, 0, 1960, 0, 0, 0, 0, 1927,
	1928, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 1949, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 1932, 1933, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1938, 0, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 1951,
	1939, 0, 1961, 0, 0, 0, 0, 0, 0, 1940,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 1957, 0, 1958, 0,
	0, 0, 0, 0, 0, 1927, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 1949, 0, 0, 0, 0, 0, 1910,
	1911, 0, 1943, 1944, 1945, 1954, 1955, 1956, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 1941, 1965, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 1929, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 1936, 1937, 1938, 1934,
	0, 0, 0, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 1951, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 1940, 1942, 1947, 1941,
	1965, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1957, 0, 1958, 0, 1960, 4467, 0,
	0, 0, 1927, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	1949, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930,
	1926, 0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919,
	1920, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 4156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1941, 0, 1951, 1939, 0, 1961, 0, 0, 1913, 0,
	0, 0, 1940, 1942, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 1957,
	0, 1958, 0, 0, 0, 1966, 0, 0, 1927, 1928,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1932, 1949, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 1935, 1936, 1937, 1938, 0, 0, 0, 0,
	0, 1963, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923,
	1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0,
	0, 0, 0, 1951, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 1958, 0, 0, 0, 0, 0, 0, 1927,
	1928, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 1933, 0, 0, 1910, 1911, 0, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1941,
	0, 0, 0, 1965, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 1948, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 1935, 1936, 1937, 1938, 0, 0, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 3508,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 1965, 1961, 0, 0, 0, 0,
	0, 0, 1940, 1942, 0, 0, 3944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 1958, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1941, 0, 0, 0, 3503, 0, 0, 1939,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 1910, 1911, 1966, 1943, 1944,
	1945, 1954, 1955, 1956, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1947, 1941,
	1952, 0, 0, 0, 0, 0, 1929, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 1951, 0, 0, 1961, 0,
	0, 1935, 1936, 1937, 1938, 1940, 1942, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 1958, 0, 0, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 1951, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 1940, 1942, 1933, 0, 0, 0, 1910, 1911,
	0, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1957,
	0, 1958, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 1947, 1941, 0, 0, 0, 3441, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	1960, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 1948, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 3468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 1937, 1938, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 1951, 1965, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 1957, 0, 1958, 0, 0, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 1924, 1925,
	1931, 1953, 1930, 1926, 1963, 1923, 1921, 1922, 1914, 1915,
	1916, 1917, 1919, 1920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 1911, 0, 1943, 1944, 1945, 1954, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1941, 0, 0, 0, 0,
	0, 0, 1939, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 1910, 1911,
	1966, 1943, 1944, 1945, 1954, 1955, 1956, 0, 0, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1947, 1941, 1952, 0, 0, 0, 0, 0, 1929,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 1937,
	1938, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1931, 1953, 1930, 1926, 0, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 0, 1951, 0,
	0, 1961, 0, 0, 1935, 1936, 1937, 1938, 1940, 1942,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 1958, 0, 0,
	0, 0, 0, 0, 1927, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 1951, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 1940, 1942, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 1958, 0, 0, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 1910, 1911, 0, 1943,
	1944, 1945, 1954, 1955, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 1947,
	1941, 0, 0, 0, 1963, 1939, 0, 0, 1913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 1952, 0, 0, 0,
	0, 0, 1939, 0, 1929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 1937, 1938, 1965, 0, 0, 0,
	0, 0, 1918, 0, 0, 0, 0, 2461, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 1925, 1931, 1953, 1930, 1926,
	0, 1923, 1921, 1922, 1914, 1915, 1916, 1917, 1919, 1920,
	0, 0, 0, 1951, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 1940, 1942, 0, 0, 0, 0, 0,
	1026, 0, 1077, 0, 0, 0, 0, 0, 0, 0,
	1957, 1950, 1958, 0, 0, 0, 0, 0, 0, 1927,
	1928, 1924, 1925, 1931, 1953, 1930, 1926, 1034, 1923, 1921,
	1922, 1914, 1915, 1916, 1917, 1919, 1920, 1949, 0, 0,
	0, 0, 0, 0, 1049, 0, 1032, 1031, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 1033, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 1088, 0, 1061, 0, 0,
	0, 0, 0, 0, 0, 1046, 1047, 0, 0, 0,
	1959, 0, 0, 0, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 1038, 0, 0, 0, 0, 0, 1039,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1040, 0, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 1934, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 1044,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1052, 1050, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 1062,
	0, 0, 1083, 1082, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1085, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 1931, 1953, 1930, 1926, 0, 1923, 1921, 1922, 1914,
	1915, 1916, 1917, 1919, 1920, 0, 0, 0, 0, 1037,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	1070, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	1068, 0, 0, 0, 0, 0, 0, 0, 1086, 1063,
	0, 0, 1055, 1053, 0, 0, 1058, 0, 0, 0,
	0, 0, 1059, 0, 0, 1028, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1072, 0, 1060, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 1065, 0, 0, 0, 0, 0, 0, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1069,
}

var sqlPact = [...]int{
	7093, -1000, -1000, -1000, -1000, 175, -1000, -1000, 174, 173,
	171, 170, 169, 168, 165, 164, 161, 160, 159, -1000,
	-1000, 158, 156, 154, -1000, -1000, 152, -1000, -1000, 151,
	-1000, 146, 145, 144, -1000, -1000, 143, -1000, 142, -1000,
	-1000, -1000, -1000, 141, 139, 137, 95847, 95265, 96427, 2448,
	121999, 104559, 2274, 84801, 121417, 84219, 120835, 2221, 9801, 120253,
	2911, 136, -1000, 119671, 135, 128, 127, -1000, 103977, 119089,
	101651, 2215, -1000, 126, -1000, 8087, 73697, 124, 122, 121,
	119, 2450, 118, -1000, 117, 115, -1000, -1000, 114, -1000,
	10312, 1574, -1000, 112, 111, -1000, 5240, 101069, 109, 108,
	107, 2765, 106, 105, 70792, 103, 95, 92, 2650, 3014,
	-1000, -1000, 2275, -1000, -1000, 91, 90, 88, 87, 86,
	84, 83, 78, 77, 73, 72, 66, 62, -1000, 59,
	58, 57, 56, 55, -1000, 54, 53, 52, -1000, 51,
	-1000, 50, 48, 47, 46, 45, 41, 39, 38, 37,
	36, 35, 34, 32, 31, 29, 143698, -1000, -1000, 27,
	-1000, 2089, 1791, 1765, 1755, 1747, 1739, 981, 20, 19,
	15, 14, 10, 9, 8, 7, 6, 4, 0, -1,
	-2, -5, -6, -7, -9, -10, -20, -21, 123, -22,
	-25, -26, -27, -29, -30, -31, 3232, 3739, -1000, 1883,
	1632, 32282, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130699,
	122579, -33, -101, -34, -1000, 3539, 945, 58519, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 225,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 434, 3093,
	712, -1000, -1000, -1000, 118507, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2445, -19, -1000, 2145, -1000, -1000, -1000,
	-1000, -1000, 711, -1000, 2444, 2383, 322, 2379, -1000, -1000,
	-1000, 3610, 2597, 4046, 4045, 4044, 4043, 4041, 130119, 1971,
	4040, 2664, 4039, 4038, 4037, 4036, 4034, 4031, 4030, -1000,
	94683, 1089, 94101, 93519, 3615, 117927, 92937, 117345, 133025, 50228,
	1586, 3607, -1000, -1000, -1000, -1000, -1000, -1000, 122579, -1000,
	1088, -1000, -1000, 4027, 2270, 707, 103395, -1000, -1000, 116763,
	2029, -1000, -1000, -1000, 933, 1206, 34662, 34662, 34662, 223,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3621, -1000, -1000,
	-1000, -1000, 122579, 2837, 2837, 1474, 1253, 1253, 2837, 2837,
	-1000, -1000, -1000, -1000, -1000, -1000, 4026, 4025, 4022, 4019,
	4018, -1000, -1000, 83637, 24949, 83055, 82473, 116181, 49633, 92355,
	91773, 4017, 4016, 4014, 49038, 78399, 115599, 132443, 3738, 3737,
	1087, 2144, 1538, -1000, -1000, -1000, -1000, -1000, -1000, -52,
	75437, 3775, 122579, -1000, 222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48443, 1187, 47848, 994, 47253, 956, 115017, -1000,
	-1000, -1000, -1000, 77807, -1000, 114435, 2596, 4013, 4011, 1189,
	4010, 3484, 1969, 4009, 1987, 1271, 4007, 4006, 4005, 4004,
	4003, 4001, 3999, 1602, 113853, 3191, 1664, 113271, 1848, 131861,
	1086, 91191, 96427, 2747, 112689, 1559, 1555, -1000, -1000, -1000,
	-1000, 3266, 3002, 2995, 1280, -1000, -1000, -1000, -1000, 62028,
	7202, 6883, -1000, -1000, 12655, 112107, 64978, 96427, 96427, -1000,
	-1000, -1000, -1000, -1000, -1000, 46658, 1148, 46063, 1557, 111525,
	-1000, -1000, 62618, 3123, 1121, -1000, -1000, -1000, -1000, -1000,
	110943, 45468, 923, 44873, 1556, 122579, -1000, 3188, 2054, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3860, 1680,
	3777, 2857, 77215, 2268, 1415, 3562, 3263, 3262, 1563, 2131,
	3239, 3998, 2762, 3233, 3225, 3222, 3196, 3195, 1620, 2720,
	995, 2713, 31687, 3158, 1895, 44278, 1578, 1568, 3181, 3179,
	3820, 3677, 2114, 2188, 2170, 2203, 81891, 3997, 3996, 3528,
	3174, 3170, 2949, 3165, -1000, 3118, 1583, 221, -1000, -1000,
	-1000, -1000, -1000, -1000, 1472, -1000, -1000, -1000, -1000, -1000,
	86541, -1000, -1000, 1627, -1000, -1000, 1627, -1000, -1000, -1000,
	-1000, -1000, 1373, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3665, -1000,
	2187, -1000, -1000, -1000, 2667, 3510, 3510, 3510, 3605, 411,
	406, -1000, 123, -1000, -1000, 143117, -1000, -1000, 50823, 50823,
	50823, 50823, 50823, 50823, 50823, 50823, 2277, -1000, 706, -1000,
	-1000, 739, -1000, 695, 621, 547, -1000, -1000, -1000, -1000,
	-1000, -1000, 693, -1000, -1000, -1000, -1000, -1000, -1000, 3775,
	-1000, 27980, -1000, -1000, -1000, 404, 688, 50823, -1000, -1000,
	3854, 3853, 971, -1000, 218, 969, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3182, 687,
	686, -1000, 684, 683, 682, 677, 675, -1000, 674, -1000,
	673, 672, 671, 669, 668, 667, 665, 664, -1000, 2167,
	-1000, -1000, -1000, -1000, -1000, -1000, 600, 599, 599, 599,
	-1000, 1078, -1000, -1000, -1000, 261, 593, 250, 583, 575,
	572, -1000, 662, 660, 657, 656, 655, 645, 641, 639,
	638, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1068, -1000,
	-1000, -1000, -1000, -54, 122579, -1000, 434, -54, -1000, -1000,
	636, -1000, 36465, 36465, 36465, -1000, -1000, 2443, 50823, -1000,
	2584, -1000, -47, -47, 879, 60265, -1000, 57355, 879, 369,
	761, 66142, -1000, 3117, -1000, -1000, 633, 217, -1000, -1000,
	-1000, -1000, 25539, 3116, 122579, 122579, 122579, 96427, 96427, 96427,
	122579, 3995, 3994, 3401, 50823, -1000, -1000, 73115, 134766, 97007,
	-1000, -1000, 3711, 71372, 72535, 3172, 134766, 3166, 134189, 3992,
	-1000, -1000, -1000, -1000, -1000, 3370, 3989, 3988, 3986, -1000,
	122579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 249, 3366,
	-1000, -1000, 100487, 249, 3364, -1000, 249, 3360, -1000, 99907,
	-1000, -1000, 2395, 3358, -1000, -1000, 254, 3357, -1000, -1000,
	-1000, 251, 3349, -1000, -1000, 212, -100, 3346, -1000, -1000,
	-1000, -1000, -1000, -1000, 143117, -1000, -1000, -1000, 133607, -1000,
	3520, -1000, 122579, -1000, 50823, -1000, -1000, 3709, 1769, 3543,
	3652, -1000, -1000, -64, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2643, 2621, 1167, 2470, -1000, 3411, 2105, 34662, 3472,
	-1000, -1000, -1000, -1000, -1000, 208, 25539, 2967, -1000, -1000,
	122579, -1000, 122579, 2837, 2837, -1000, -1000, -1000, 3809, 3807,
	2837, 2837, 122579, 122579, -1000, -1000, -1000, -1000, -1000, -1000,
	5273, 3341, 1287, -1000, 2469, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2252, 3340, -1000, 2411, 3338, 2112,
	-1000, -1000, 2732, -1000, 139456, 1489, -1000, -1000, -1000, -1000,
	3178, 3311, -46, -1000, -1000, 2338, -1000, -1000, -1000, -1000,
	139250, -1000, 3036, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2066, -1000, 1382, 3309, -1000, 2854, 2854, 90609,
	3332, 64388, 62618, 75437, -58, -1000, -1000, -1000, -1000, -102,
	-1000, 24353, 143117, -1000, -1000, -1000, -1000, 1911, 143117, 878,
	-1000, -1000, 3308, -1000, 143117, 875, -1000, -1000, 3305, -1000,
	2718, -1000, 3162, -1000, -1000, 2538, 2535, 1038, -1000, 3980,
	-1000, -1000, 3979, -1000, 3973, 3972, 3970, -1000, 1871, 2119,
	3969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 90029,
	2442, -1000, -1000, 88283, 3161, -1000, 2531, 3650, -1000, 89447,
	1084, -1000, 998, 2530, -1000, 99327, 991, 2529, -1000, 3968,
	3611, 2789, 998, 2526, -1000, -1000, -1000, -1000, -1000, 1013,
	-1000, 68466, -1000, 68466, -1000, 1780, -1000, 129539, -47, 96427,
	3775, -1000, -105, -1000, -1000, -1000, 945, -1000, 61446, -1000,
	61446, 102813, 78989, 975, 3115, 70210, 143060, -1000, 1037, -1000,
	-1000, 143117, -1000, -1000, -1000, 2717, -1000, -208, 2847, -1000,
	78989, 63798, 3110, 2714, -1000, 143117, -1000, -1000, -1000, -1000,
	143117, -1000, -1000, -1000, 78989, 88283, -1000, 110361, 88865, -1000,
	-1000, 1575, 2703, -1000, -1000, -1000, 78989, 1402, 78989, 78989,
	78989, -1000, 109779, -1000, -1000, 2239, 1365, 3514, 2233, 96427,
	-1000, 1919, -1000, -1000, -1000, 3550, 3329, 122579, -1000, -1000,
	3159, -1000, 74857, 98747, -1000, 98167, -1000, 97587, -1000, 96427,
	-1000, 96427, -1000, 3966, 3965, 3960, -1000, -1000, 3958, -1000,
	3957, 3541, -1000, 1266, 43683, 143117, 3534, -1000, 3955, 2173,
	3158, 143117, -1000, 3323, 1751, 1743, 122579, -1000, -1000, 122579,
	-1000, 122579, -1000, -1000, -1000, 2459, 1682, -1000, -1000, 2642,
	-1000, -1000, -1000, 1030, -1000, -1000, 96427, 96427, 96427, 96427,
	1329, -1000, 43088, -1000, -1000, 3163, 3953, 1847, -1000, 1902,
	-1000, 3109, 3527, -1000, 1561, 1915, 207, 3859, -1000, -1000,
	255, -1000, -1000, -64, -1000, 128959, -1000, 2667, -1000, 122579,
	-1000, 2637, 3138, 3156, 1789, 2458, 2780, -1000, 42493, 2702,
	54393, 2468, 123, -1000, -1000, 123, 123, 33472, -1000, -1000,
	71372, 71372, 25539, 1381, 50823, 50823, 50823, 50823, 50823, 50823,
	50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823,
	50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823,
	50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823, 50823,
	2216, 50823, 1372, 50823, 50823, 50823, 50823, 2111, -1000, -1000,
	2097, 457, 2204, 621, -1000, -1000, -1000, 3763, 3763, 3763,
	658, 658, 658, 12351, 12351, 596, 3952, 739, -1000, 50823,
	-1000, 116, 60847, 50823, 26131, -1000, 406, 11386, 2615, -1000,
	402, 26756, -1000, -1000, -1000, 27980, 547, 41868, 50823, 1044,
	143117, -1000, -1000, 1760, 3790, 23757, 3199, 2938, 620, 840,
	838, 31062, 30437, 29812, 29187, 835, 622, 50823, 50823, 50823,
	50823, 50823, 50823, 50823, 50823, -1000, -1000, 3799, -1000, 3790,
	-1000, -1000, -1000, -1000, 3790, 1291, 1281, 3790, -1000, 3790,
	3790, 8691, 8691, 41273, 40678, 40083, 54988, 39488, 50823, 28592,
	38893, 38298, -1000, 122579, -54, 3708, 50823, 299, -1000, 140335,
	-1000, 299, 299, 615, -106, 143117, 2715, 2715, 59101, 2369,
	2291, 2291, 2291, -1000, 879, 18355, 879, 108039, 2308, 879,
	879, 204, 231, 388, 56773, 2584, 108039, 724, 614, -37,
	-38, -40, -1000, -1000, -41, -42, -1000, -1000, 96427, 604,
	26131, 25539, 194, 2154, -113, 2741, 2740, -1000, 2739, 2734,
	-1000, 2730, 2439, -1000, -1000, -1000, 1940, -114, 1369, 96427,
	122579, 1544, 3951, -108, -1000, 6255, -115, -1000, 1115, 190,
	3790, -1000, -1000, -1000, -1000, -1000, 3950, 3949, -1000, 1060,
	602, 601, 351, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 600, 599, 599, 599, -1000, 261, 593, 250, 583,
	575, 572, -1000, -1000, -1000, -1000, -1000, 3108, 96427, 122579,
	1519, 3948, 85381, -100, 97007, -60, -1000, -1000, 122579, -1000,
	-1000, -1000, 3947, -1000, 96427, -1000, -1000, 96427, 249, 3304,
	-1000, 96427, -1000, 96427, 248, 3303, -1000, -1000, 122579, -1000,
	96427, 96427, -1000, 122579, 122579, 122579, 134766, 134766, 247, -1000,
	96427, 856, -116, 1191, -64, -1000, -1000, -1000, -1000, 1627,
	-1000, 1973, -1000, -1000, -1000, -1000, -1000, -1000, 1612, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 971, -1000, -1000,
	-1000, -1000, 3812, 3804, -55, -1000, -1000, 25539, -1000, 2011,
	-1000, -1000, -1000, -1000, 122579, 122579, -1000, -1000, 122579, 122579,
	-1000, -1000, -66, 1738, 533, 1368, -1000, 81309, 2550, 3511,
	3946, 2771, 3492, 1777, -1000, 1681, 570, -1000, 3618, 86541,
	3675, 3683, 1384, -1000, 3106, -1000, -1000, -1000, 931, 1837,
	1890, 1363, 1361, 86541, 2411, -1000, 71372, -1000, 2779, 3601,
	1253, 1396, 1253, 1253, 1379, -1000, 86541, 1884, 1360, 1356,
	1355, -1000, -1000, 2070, 2063, -1000, -1000, 109199, -1000, 1346,
	1345, 3734, 3665, 2318, 773, 2049, -1000, 1487, 1333, 3103,
	-1000, -1000, -68, 3653, 3676, 1384, -1000, 3101, 1319, -1000,
	-1000, -1000, 3597, 96427, 25539, 1644, 1631, 1655, 1877, 1318,
	-57, -1000, 3660, 1689, -1000, 88283, 88283, 105139, 122579, 3745,
	78989, -1000, 2563, 1317, 1312, -1000, 1043, 8259, 3433, -1000,
	134766, 1043, 1043, 2091, 3301, 2820, 1674, -1000, 2838, 858,
	2833, -1000, -1000, -1000, 858, -58, 75437, 122579, 186, -1000,
	116, 50823, 50823, 116, 50823, 116, -1000, 3639, 3300, 3297,
	3944, -1000, -1000, -1000, -1000, -1000, 3941, 2095, 2660, -1000,
	-1000, 566, 2521, 3097, 122579, 2748, -61, 96427, -1000, 74277,
	3296, 134766, 2411, 2519, -1000, -1000, 87703, -1000, 3295, 434,
	2516, -1000, 661, 3939, 3294, -1000, 128379, -1000, 3520, 1370,
	3293, 1131, 1042, 3707, -1000, 1042, 69046, -1000, 122579, -1000,
	-47, 5955, 80149, -121, -122, 387, -1000, 108619, 122579, 122579,
	3459, 2104, 2102, -1000, 988, 62618, -1000, 62618, -123, -1000,
	-208, 2825, 1634, 62618, -1000, 975, 975, 858, -1000, 858,
	-1000, 96427, 3153, -1000, -1000, 78989, 975, 975, 975, -1000,
	-1000, -1000, -1000, 3935, 3934, 3933, 3931, -1000, -1000, 997,
	96427, 122579, 96427, -1000, -1000, 1652, -1000, 185, -1000, 134766,
	-1000, 134766, 122579, 96427, -1000, 997, 122579, 997, 122579, 997,
	122579, 997, 997, -1000, -1000, -1000, -1000, -1000, 116, -1000,
	-1000, 143117, -1000, 50823, -1000, -1000, 1676, 3929, 1804, -1000,
	3152, -1000, 3147, -1000, -3, -1000, -1000, 3794, 1993, -1000,
	3852, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3928,
	143117, -1000, 2223, -1000, -1000, -1000, -1000, 96427, 96427, 96427,
	96427, 122579, 3431, -1000, 122579, 3429, 96427, -1000, 3857, -1000,
	-1000, 86541, -1000, 2637, 3138, -1000, -1000, -1000, -1000, -1000,
	-1000, 1795, 2399, -1000, 2698, -1000, 1653, -1000, -1000, -1000,
	143117, 55583, -1000, -1000, 143117, 1951, -1000, 53798, 53203, -1000,
	-1000, 1842, 96427, 2752, -1000, 2752, -99, -1000, 140144, 2695,
	96427, -1000, -1000, -1000, -1000, -1000, 927, 920, 920, 1398,
	1398, 1398, 1398, 3637, 1259, 2947, 405, 5953, 5953, 6727,
	6727, 6727, 6727, 6727, 5953, 2330, 658, 658, 2330, 2330,
	2330, 2330, 2330, 658, 658, 658, 5953, 5953, 5953, 658,
	12351, 143455, 10674, 50823, 50823, 1311, 2096, 457, 9933, 50823,
	10715, 10715, 10715, 10715, -1000, 2337, -1000, -1000, -1000, -1000,
	3096, 564, 54988, 54988, -1000, -1000, -1000, -1000, 27368, 50823,
	-1000, -1000, -1000, -1000, 37673, -1000, -1000, 138973, -331, 386,
	-1000, 184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 384, -98, 102, -1000, 50823,
	50823, 50823, 383, -1000, 183, 50823, 122579, -1000, 135827, 723,
	-153, -1000, -124, 1478, -1000, 50823, -1000, -1000, 1308, -1000,
	1304, 1302, 1297, -1000, 563, 380, -1000, 182, -1000, 2283,
	562, 561, 50823, -1000, -1000, -1000, -1000, -1000, 138767, -1000,
	-1000, 138561, -1000, -1000, 138355, -1000, -1000, 138149, -1000, -1000,
	-1000, -1000, -1000, 142667, 135379, 135349, 17678, 9140, 16951, 16119,
	-129, 379, -130, 376, 911, 903, 373, 365, 364, -132,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -137, 363, -1000, 3091, -98, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 361, -1000, 360, -1000, 142434,
	-98, 358, 6444, -1000, 54988, 54988, 54988, 54988, -1000, 356,
	-1000, 139936, -1000, 142377, 37078, 37078, 37078, 355, 141984, 50823,
	-98, -138, -1000, -139, -1000, -1000, 530, -140, 1015, 36465,
	57937, 25539, -1000, 1015, 1015, 50823, -1000, 50823, 2709, -1000,
	-1000, -1000, -1000, 2707, 2436, 2715, 59101, -1000, -1000, -1000,
	-1000, 108039, -1000, 3775, 3176, -1000, 108039, -1000, -1000, 122579,
	434, -1000, 108039, 108039, 25539, 879, -1000, 879, 108039, 748,
	-1000, -1000, -1000, -1000, -1000, 347, 67306, 102, 181, 25539,
	998, -1000, -1000, 2827, 2827, 2827, 2827, 2827, 96427, -1000,
	-1000, 134766, 1295, -62, -93, 2824, -1000, 3743, -1000, 2191,
	-1000, 71372, -1000, 736, 1021, 25539, -1000, -1000, -1000, 558,
	-1000, 3790, 3790, -1000, 3790, 134766, 3085, 288, 2823, -1000,
	2437, -59, 287, 134766, 3922, -1000, -1000, 249, -1000, 96427,
	249, 249, -1000, 96427, 96427, 2395, -1000, 254, -1000, 251,
	-1000, -1000, -100, -1000, 1020, 34662, -1000, 1627, -1000, -1000,
	1662, -1000, 2107, -1000, 1275, -1000, -1000, 34662, -1000, 3462,
	-1000, 1892, -1000, -1000, -1000, -1000, 5153, 122579, 122579, 96427,
	-1000, 106299, 122579, -1000, 2255, 134766, -1000, 2515, 127799, 2498,
	127219, 71372, -1000, -1000, 557, 952, 2694, 2691, 1119, 122579,
	122579, 2685, 126639, 126059, -1000, 3916, 122579, 2181, 50823, 106299,
	3594, 2373, 5259, 116, 116, -1000, 116, -1000, -1000, 555,
	1255, 96427, 96427, 122579, 134766, 96427, 1978, -1000, -1000, -1000,
	-1000, -1000, 87121, -1000, -1000, 1253, -1000, -1000, -1000, 1253,
	2411, 1943, 122579, 134766, 96427, 134766, 125479, 124899, -1000, -1000,
	1876, 122579, -1000, -1000, -1000, -1000, 1441, -1000, 773, 1294,
	3082, 50823, 50823, 2218, 116, 116, -1000, 116, 554, 25539,
	2071, -1000, 3122, 122579, 3845, 124319, 3842, 122579, 122579, 122579,
	134766, 3512, 122579, -1000, -1000, -1000, -184, -1000, 841, 834,
	-102, -1000, 3745, -1000, 825, 122579, 134766, -1000, 123739, 8259,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2209, 76623, 1137,
	122579, 1382, -1000, -1000, 1873, 1290, 1276, 86541, 2222, 1867,
	1979, 134766, 62618, 989, 62618, 2784, -1000, -1000, 23161, -1000,
	143117, 143117, -1000, 143117, -1000, 74277, 78989, 122579, -1000, -1000,
	1082, 122579, 80729, 955, 3292, 67886, -102, 975, 78989, 96427,
	-61, 2748, 122579, -1000, -1000, 2411, 3287, 434, 2514, -1000,
	134766, 3705, 3281, 553, 3911, 3908, -1000, 96427, 2435, 2511,
	-1000, -1000, 123159, 3385, 773, 122579, 1015, 59101, 2084, -1000,
	65560, 1097, 122579, 1991, 285, -1000, -1000, -1000, -23, 122579,
	-1000, 756, -1000, -1000, 5955, 5955, 975, -184, 552, 63208,
	-162, -1000, 180, 550, 824, 823, -1000, 5003, -1000, -208,
	-1000, 78989, 988, 62618, 3081, -208, 2822, 3079, -1000, -1000,
	1018, -1000, 1475, 975, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -48, 1967, 122579, -100, -100,
	-74, -62, -1000, 997, -1000, 997, -1000, 997, -1000, -1000,
	-1000, 143117, -1000, -1000, -1000, 1772, 1741, 122579, -1000, 3137,
	-1000, 122579, -1000, -1000, 25539, 122579, 96427, 25539, 96427, 3131,
	3130, -1000, -1000, -1000, 122579, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1158, -1000, 1951, 2397, -1000, 547, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2622, -1000,
	-63, 33472, 892, -1000, -1000, 96427, -49, 50823, 50823, 9342,
	8732, 50823, 54988, 54988, -1000, 50823, 8007, -1000, -1000, -1000,
	-1000, -1000, 3044, 546, 50823, 71372, 5263, 1582, -1000, 346,
	15423, 2330, -1000, 50823, -1000, 529, -1000, 345, 35870, -1000,
	140815, 99, -164, -1000, 18965, -98, -165, -1000, -1000, 734,
	-1000, 3381, -1000, 50823, 141695, 2589, 2128, 1986, 1811, 3790,
	3841, 22565, -1000, 69628, 1023, 2326, 137943, -1000, -1000, -1000,
	-1000, 71372, 71372, 50823, 50823, -1000, 50823, 50823, 50823, -1000,
	-1000, -1000, 3790, 929, -1000, -1000, -1000, 929, -1000, -1000,
	1253, -1000, 1253, -1000, 50823, -1000, -1000, 3038, 50823, -1000,
	71372, 71372, 54988, 54988, 54988, 54988, 54988, 54988, 54988, 54988,
	54988, 54988, 54988, 54988, 54988, 54988, 54988, 54988, 54988, 54988,
	54988, 54988, 2690, 54988, 3761, 3761, 3761, 749, -1000, 3128,
	3038, 50823, 50823, 71372, 344, 342, 337, -1000, 50823, -98,
	-1000, -1000, 10324, 545, -1000, 2603, -1000, 2935, -1000, 50823,
	-1000, -161, -1000, 2584, -1000, -1000, 2935, 2935, -167, 143117,
	59101, 59101, -1000, 544, 50823, 2706, -1000, -1000, 721, -327,
	-1000, 818, -1000, -1000, -1000, -1000, -1000, -1000, 815, -1000,
	434, -1000, -1000, -1000, 178, 108039, 108039, 720, -1000, -170,
	-1000, -1000, -172, -1000, 3702, 336, 25539, -1000, 1015, 2778,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2728, -270, 134766,
	134766, 1866, 2375, 3836, -1000, 3792, 731, 719, 177, 3790,
	335, 334, 330, -100, 134766, 134766, 1864, 71955, 134766, -1000,
	-1000, -1000, 249, -1000, -1000, -1000, 248, -1000, -1000, -1000,
	-1000, 2798, -1000, -64, -1000, -1000, -1000, 50823, -1000, 966,
	-1000, -1000, 3509, 534, 1272, 1269, -1000, -173, -1000, 812,
	-1000, -1000, -1000, -1000, 2989, -1000, 3274, -1000, 2508, -1000,
	1104, 2505, 2018, -1000, 50823, 532, 2781, 531, 528, 3906,
	2220, 3905, 1130, 3272, 2395, 3270, 2395, -1000, -1000, -1000,
	939, -1000, 143117, -175, -1000, 2373, -1000, 527, 508, -1000,
	-66, 1721, 525, 1268, 1016, -1000, -1000, 50823, 50823, 107459,
	-1000, 468, 3503, -50, -1000, -1000, -1000, 1858, 1267, 1264,
	-1000, -1000, -1000, -1000, 2411, 1851, 1263, 1262, -1000, -1000,
	-1000, -1000, -1000, 2504, -1000, -1000, 3268, 1014, -1000, 3197,
	3190, 897, 122579, 50823, 50823, 141504, 141298, -1000, 1005, -1000,
	-1000, 50823, -1000, -68, 1261, 3666, 2503, 96427, -1000, 2395,
	3264, 1254, -1000, 1250, -1000, -1000, -1000, 3657, 3654, 1239,
	105139, 78989, 78989, 3745, 62618, -1000, -1000, -1000, 78989, -1000,
	-1000, 76033, -1000, -1000, 1043, 122579, 134766, 96427, 1901, -1000,
	-1000, 85381, 85961, 122579, 2820, -100, 858, -1000, 2614, 858,
	989, 3037, -1000, 2723, -1000, 1000, 96427, 3901, 329, -183,
	-69, 71372, -1000, -1000, -1000, -1000, 2498, 96427, 122579, 1305,
	2772, 122579, 122579, 3699, -1000, 2453, 595, 96427, 886, -1000,
	3775, -1000, -1000, -1000, 999, -1000, 3646, 96427, 3697, 3259,
	998, 116, 96427, 3821, -1000, -1000, 3696, 96427, 3255, 2426,
	2501, 2651, 773, 79569, 998, 2310, -79, -1000, 1991, 35257,
	3499, -191, -1000, -1000, -1000, 1015, 69046, 59101, 50823, 3898,
	-192, -1000, -1000, -1000, -1000, -1000, 105139, 78989, 975, 122579,
	122579, 3895, 78989, 78989, 78989, -72, 507, -1000, 811, 810,
	809, -1000, -1000, -1000, -1000, -1000, -1000, 808, 805, 802,
	800, 988, -1000, -1000, -208, 62618, 988, 62618, 116, -1000,
	2346, 96427, -1000, 21969, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 997, 3835, -102, -1000, -1000, -1000, 2236, 2466, 2236,
	1960, 1957, -1000, -1000, 2392, -1000, -1000, -1000, -1000, 2749,
	3504, 25539, 3651, 10715, 50823, 50823, 7725, 1035, 709, 10715,
	50823, 50823, 71372, 597, -194, 50823, 50823, -1000, 50823, 718,
	143117, -1000, 3830, 50823, 327, 324, -1000, -1000, -1000, 3784,
	-1000, -1000, -1000, 143117, 50823, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 323, -1000, 131, -1000, -1000, -1000, 131279, -1000,
	50823, 321, 3589, -1000, 315, 314, 11594, 294, 137737, 137531,
	137325, 313, -1000, -1000, 308, 304, 143117, 3128, 143117, -1000,
	-1000, 915, 915, 1371, 1371, 1371, 1371, 3761, 1077, 1359,
	820, 2025, 2025, 2025, 618, 749, 749, 2025, 2025, 2025,
	749, 3033, 2687, 506, 637, -1000, -1000, 143117, 143117, 297,
	-1000, -1000, -1000, -98, 296, 10324, -1000, 2931, 3587, 143117,
	-1000, 59101, 2931, 2931, -1000, -1000, 2436, 122579, 143117, 59101,
	-1000, 3176, -1000, 20175, 19573, -1000, 25539, -1000, -1000, -1000,
	-1000, 3775, -1000, 67306, -1000, 504, -1000, 100, -1000, 2778,
	-1000, 799, -1000, -1000, 78989, 78989, 2827, -1000, 2945, -270,
	-190, 122579, -1000, -1000, 717, 3894, 730, 25539, 295, -1000,
	-1000, -1000, -100, -100, 122579, 3027, 96427, 122579, 1515, -100,
	-1000, -1000, -1000, 3456, 143117, 2991, 2915, 2912, 122579, 122579,
	-1000, 106299, 34662, 1577, 106879, 122579, 3254, -1000, 3253, -1000,
	1119, 2696, 137119, 59683, -1000, 59683, 122579, -1000, -1000, -1000,
	-1000, 2075, 1692, 3891, 1178, -1000, 3553, 122579, -1000, 122579,
	-1000, -1000, -1000, 106299, -1000, 122579, 122579, 96427, 122579, -1000,
	134766, 3234, -197, 143117, -73, -1000, 794, -1000, 1388, -1000,
	21373, 122579, 134766, 96427, 122579, 134766, 96427, 3252, 122579, 2271,
	-1000, -1000, 3167, -1000, 143117, 141021, 116, 50823, 3187, -199,
	25539, -1000, 3829, 3827, 3249, 3557, -1000, 122579, 3826, 122579,
	96427, 3449, -1000, -1000, -1000, 996, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1822, 1236, 1233, 2422, 2421, 2370, -74,
	2222, 989, -75, 500, -1000, 793, -1000, -1000, 792, 790,
	989, -1000, 78989, 62618, 3885, 434, -1000, 2767, -1000, 102231,
	80729, 2389, -1000, -1000, 496, 122579, 122579, 495, -1000, 116,
	-1000, 3884, 106299, 494, -1000, 2339, -1000, 716, -1000, 2557,
	134766, 2411, 116, 96427, -1000, 986, 434, 293, -76, -1000,
	3377, 1110, 25539, 96427, 3243, 2655, 773, 79569, -1000, 1370,
	2780, -1000, -77, -1000, 460, 116, 2310, -1000, -79, 143117,
	-1000, 786, -200, 265, -1000, 3447, -1000, -1000, -205, -1000,
	-1000, 5359, 5359, 78989, 62618, 78989, 78989, 78989, 62618, 78989,
	-1000, 988, 858, -1000, -208, -1000, 2523, -1000, -1000, -1000,
	-1000, -1000, -1000, 25539, 1831, -1000, 485, 484, -1000, -1000,
	-1000, -1000, 3504, 10715, 10715, 50823, 50823, 50823, 10715, 597,
	-206, -1000, 10715, 10715, -98, -1000, -1000, 140815, -1000, -1000,
	-1000, 143117, -1000, 20777, 2241, -1000, 136913, -1000, 33472, -1000,
	-1000, 50823, 50823, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54988, 3010, 482, 71372, -1000, -1000, 262, 992, 50823,
	52608, 2584, 992, 992, -1000, -207, -1000, -1000, -1000, 3775,
	-1000, 3775, 100, -1000, -1000, 3883, 25539, -1000, 78989, -1000,
	-1000, -1000, 2363, -1000, -1000, 3151, -182, 728, -1000, 3879,
	-1000, -1000, 138, 134766, 3007, 130, 2817, -1000, 116, -1000,
	-1000, -1000, -1000, -1000, -1000, 2814, 3695, -1000, 2047, -1000,
	122579, 122579, -1000, 122579, -1000, 25539, 122579, 2917, 1307, -1000,
	952, 2672, 481, 54988, 1156, 96427, 870, 2888, 2875, -1000,
	3729, 3581, 2872, -214, -1000, 122579, 50823, 122579, -217, -219,
	2486, -1000, -1000, 1155, 1277, 50823, 1146, -1000, -1000, -1000,
	71372, 479, 2395, 2395, -1000, -220, -222, -1000, -1000, -1000,
	50823, 1231, 122579, 34067, -1000, 3878, 3503, -1000, -1000, -1000,
	-1000, -1000, -1000, 122579, -1000, 122579, -1000, 50823, -1000, 140624,
	50823, 1224, -1000, -1000, -1000, 3824, 2395, 25539, 2395, -1000,
	2395, 3557, 1174, 2424, 122579, 134766, 96427, 1797, 1797, 2980,
	-1000, -1000, -1000, 2619, 2619, 78989, 62618, 62618, -1000, -87,
	989, -1000, 3694, 2238, 3877, -1000, -1000, -1000, -1000, 2670,
	-1000, -1000, -1000, 122579, 2669, 2891, 59683, 476, 474, 122579,
	976, -1000, -225, 80729, 955, 953, -1000, -88, 473, -1000,
	785, -1000, -1000, -1000, -1000, 434, -1000, 2782, 3693, -1000,
	3823, 470, 463, 122579, 2420, 461, 25539, 3497, 773, 79569,
	-1000, 3385, 1991, -1000, 2495, 122579, 3491, -1000, 2780, 457,
	-1000, 975, 456, 975, -1000, -227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 988, -89, -1000, 857, 852,
	-1000, -1000, 96427, 96427, 50823, 50823, -1000, 10715, 10715, 10715,
	-1000, 242, -1000, -1000, 2310, 3577, -1000, -90, 136707, 136501,
	6577, 54988, 71372, -230, -1000, -1000, 122579, 143117, -91, -1000,
	143117, 455, 454, 401, -1000, -1000, -1000, 623, 598, -1000,
	-1000, -1000, -1000, 134766, 3871, -1000, 134766, -100, 134766, 134766,
	1801, -1000, 105719, 122579, -1000, -1000, 2018, 2254, -1000, -1000,
	-1000, 122579, 2499, -1000, -1000, -1000, 987, 50823, 637, 54988,
	453, 50823, -1000, 450, 448, 3692, 3421, -1000, 2755, 2985,
	2072, 59683, -1000, 3504, -1000, 136224, -1000, 1109, 2057, -1000,
	-1000, -1000, -1000, 143117, 54988, 3557, 59683, -1000, -1000, 447,
	446, 143117, 444, 783, 3001, -1000, -1000, -1000, -1000, -1000,
	143117, 116, 143117, 443, 3666, -1000, -1000, -1000, -1000, 2395,
	96427, 779, -1000, -1000, -1000, 1223, -1000, -1000, -1000, -1000,
	3870, 3869, 2987, 85381, -1000, -233, -1000, -1000, -1000, 2087,
	116, 955, -1000, -1000, 2389, 440, -1000, 974, 2799, 2799,
	-235, 59683, 59683, -238, 2405, 2770, -1000, 239, 3690, 953,
	-1000, 3768, -1000, 3430, 3430, 50823, 3688, 3446, -1000, 116,
	-1000, 3821, 59683, -1000, 96427, 59683, 2408, 2159, 2636, 79569,
	-1000, 2651, -1000, -1000, -243, 122579, 1991, -1000, -1000, 78989,
	-1000, -1000, -1000, 2523, -1000, 122579, -1000, 122579, -1000, -1000,
	-244, -246, -1000, 2189, 50823, 33472, -1000, -1000, 6577, -249,
	-1000, -95, -1000, 3682, 52608, 3868, 3867, 3866, -1000, -1000,
	-270, -1000, -100, -100, -100, 122579, -1000, 2035, -1000, 2498,
	-1000, -1000, 3241, -1000, 2924, 437, 136018, 637, 2613, 122579,
	14594, 2411, 2411, -1000, 3669, 2974, -1000, -1000, 2218, 436,
	-1000, -1000, -1000, -1000, 892, 122579, 974, 2914, 96427, 637,
	1116, -251, 2236, 2236, 50823, 32877, 2251, -1000, 50823, -1000,
	-1000, 3557, 62618, 134766, -1000, -1000, 134766, 2407, -1000, 2966,
	3771, -1000, 2405, 122579, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1109, -254, -257, -1000,
	-1000, 3545, -1000, 3436, 2767, 116, -1000, -1000, -1000, -259,
	143117, 116, 3865, 986, 233, -260, 1110, -262, 96427, 2046,
	-1000, 773, -1000, 2655, 1015, 3394, -1000, -267, -1000, -268,
	-269, -1000, -1000, 228, 52013, 52013, 52013, -98, -99, -1000,
	122579, 435, -1000, -1000, -1000, -1000, -1000, 129, -1000, -1000,
	3219, 876, -1000, 849, 2027, 227, 1120, 140, 125, -1000,
	-1000, -1000, 2872, -1000, 122579, -1000, -1000, -1000, 876, 434,
	-1000, 50823, 1109, -275, -1000, 1096, -276, -1000, 1095, -277,
	-1000, 2983, -1000, -283, 2395, -1000, -270, 247, 1797, 985,
	3638, -1000, -1000, -1000, 2624, -284, -1000, -1000, 2072, 1109,
	2218, 2423, -1000, 2238, 976, -1000, -1000, -1000, -1000, -1000,
	1109, 433, 2072, 430, 1622, 773, -1000, -1000, 1253, 3497,
	3392, 1442, 975, -1000, -1000, -1000, 3265, -1000, 56178, 2378,
	1956, 139647, 3265, 3265, -1000, -1000, 134766, 122579, 974, 3617,
	-1000, 867, 866, 1571, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1015, -285, -1000, 2613, 143117, 974, -1000, 2236,
	2807, -1000, 2236, 2976, -1000, 2246, -1000, -1000, -1000, -1000,
	2969, -1000, 1898, 3749, -1000, -1000, 974, 122579, 2218, 2072,
	974, 1932, 1907, 3864, 955, 2405, 2072, 59683, 2218, 59683,
	2202, -1000, 122579, -1000, 2159, 1411, -1000, 1763, -1000, -1000,
	1903, 3717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -100,
	-1000, -1000, 774, -1000, 3408, -1000, 1142, 2256, 2256, -1000,
	-1000, 849, -1000, -1000, 421, -1000, 420, -1000, 134766, 2331,
	-1000, -1000, -1000, -1000, 974, 2218, 1015, -1000, 3863, -1000,
	2405, -1000, 2218, -286, 974, -291, 2257, -1000, -1000, -102,
	2046, -1000, 1754, 69046, 1955, -1000, -1000, 2298, 51418, 50823,
	-1000, 3747, -1000, -1000, 2700, -1000, 2872, 50823, 50823, 247,
	66724, 1015, 974, -1000, -1000, 2624, 974, 1109, 1015, 2072,
	-1000, 773, 1622, 69046, -278, -1000, -1000, -1000, 143117, -1000,
	-1000, -1000, -1000, -293, -294, -1000, -184, 105139, -1000, 1015,
	-1000, 1015, 2072, -1000, 2218, 134766, 2202, -278, -1000, 2218,
	1217, -299, -1000, -1000, 2218, 974, -1000, -1000, -1000, -1000,
	-1000, 370, -1000, 974, 1015, 50823, 1015, -1000, -302, -1000,
	2218, -1000,
}

var sqlPgo = [...]int{
	0, 4713, 4712, 4711, 4708, 4707, 4704, 4703, 4702, 4701,
	4700, 4699, 4696, 4693, 4691, 156, 4690, 4689, 4688, 4687,
	4686, 4685, 4683, 4682, 4681, 4680, 4679, 4673, 4669, 4665,
	4663, 4655, 4654, 4651, 4647, 4644, 4643, 4642, 4639, 4637,
	4635, 4634, 4633, 4632, 4631, 4628, 4626, 4623, 4616, 4614,
	4611, 4610, 4609, 4608, 4598, 4594, 4592, 4591, 4588, 4587,
	4584, 4583, 4582, 4580, 4578, 4577, 4576, 4575, 4571, 60,
	4570, 4569, 4568, 4567, 4566, 4565, 4564, 4563, 4562, 4560,
	4558, 4556, 4555, 4552, 4537, 4536, 4535, 4534, 4532, 4531,
	79, 4530, 292, 4529, 4524, 4521, 4519, 4518, 4516, 4515,
	4514, 4511, 4510, 4509, 4505, 291, 4504, 133, 171, 4503,
	4500, 4050, 4499, 4495, 290, 4494, 4492, 4491, 4489, 4487,
	300, 4485, 4484, 4481, 4480, 4475, 4473, 4470, 4469, 4467,
	4466, 4465, 4464, 56, 132, 4463, 4462, 144, 4458, 4456,
	4455, 4452, 4450, 4449, 4448, 4445, 4444, 4443, 4442, 268,
	181, 4440, 286, 4439, 4438, 4437, 4435, 4434, 4433, 4432,
	4431, 4430, 4429, 4428, 4426, 4425, 4423, 4421, 4420, 4419,
	4418, 4416, 4415, 4412, 4409, 4408, 4405, 4404, 4403, 4402,
	4401, 4399, 4398, 4397, 4396, 4395, 4392, 4391, 4390, 4389,
	4388, 4386, 4385, 4383, 267, 230, 159, 4382, 4379, 284,
	282, 4373, 4372, 4371, 4370, 4368, 4366, 4365, 4363, 4362,
	4361, 4358, 4357, 4355, 4354, 151, 2, 55, 4353, 4348,
	104, 96, 94, 92, 103, 108, 4347, 123, 4344, 135,
	115, 4343, 116, 111, 19, 31, 250, 260, 11165, 254,
	4340, 4328, 4327, 258, 205, 4326, 255, 4325, 4323, 4321,
	4318, 4317, 4316, 84, 49, 219, 4315, 4314, 155, 180,
	191, 190, 185, 186, 287, 64, 110, 88, 66, 44,
	16, 93, 243, 21, 3, 277, 4313, 274, 6, 150,
	11, 27, 4312, 4304, 4303, 4300, 3739, 113, 4292, 280,
	261, 178, 4291, 4290, 4289, 1010, 4288, 4287, 61, 249,
	204, 137, 130, 37, 138, 4285, 166, 177, 34, 4284,
	173, 86, 4282, 4281, 100, 95, 8503, 12456, 4273, 4272,
	120, 83, 125, 3550, 160, 158, 215, 207, 176, 175,
	50, 220, 218, 188, 140, 4268, 269, 4266, 3692, 82,
	199, 168, 6066, 4265, 4264, 4263, 89, 4262, 114, 4261,
	4259, 70, 15, 4, 8, 152, 36, 35, 14, 4256,
	59, 126, 48, 23, 4255, 22, 4253, 4252, 4251, 4250,
	47, 4249, 65, 179, 4245, 4241, 298, 4240, 99, 58,
	57, 4236, 25, 229, 4235, 239, 145, 4234, 4232, 271,
	216, 194, 4230, 75, 246, 4229, 4228, 4227, 4226, 4225,
	4224, 146, 1, 128, 4222, 4221, 162, 4220, 63, 257,
	211, 4219, 62, 4218, 4217, 198, 54, 161, 296, 208,
	244, 129, 245, 196, 247, 4214, 4213, 4212, 197, 4211,
	4210, 240, 174, 4209, 4201, 264, 299, 91, 46, 90,
	252, 87, 206, 172, 4200, 214, 4199, 4197, 297, 192,
	226, 41, 5, 45, 106, 109, 4196, 9, 251, 169,
	234, 127, 4195, 7116, 2789, 3269, 4192, 4191, 164, 131,
	81, 143, 167, 279, 102, 4190, 4189, 3527, 4187, 4186,
	4185, 4182, 200, 4180, 4179, 4178, 154, 227, 232, 4177,
	124, 73, 51, 20, 153, 295, 293, 121, 242, 209,
	276, 4176, 4174, 4169, 201, 4168, 78, 139, 170, 213,
	272, 68, 4164, 184, 4160, 163, 2081, 74, 165, 4154,
	236, 4148, 4142, 4140, 4137, 4136, 4133, 4130, 1850, 256,
	4129, 4124, 4123, 32, 210, 4122, 278, 270, 253, 97,
	52, 4121, 98, 3658, 4120, 195, 233, 71, 7, 4119,
	29, 4117, 4825, 67, 4115, 0, 13350, 9609, 11816, 13601,
	4114, 2370, 4113, 4111, 4110, 222, 85, 4108, 4107, 4105,
	112, 4103, 101, 4102, 4101, 76, 4097, 24, 17, 18,
	26, 30, 945, 193, 4096, 4095, 189, 148, 141, 4094,
	294, 241, 4092, 4091, 4090, 4089, 107, 4088, 42, 4087,
	40, 4086, 4085, 43, 13, 53, 4084, 4083, 157, 4082,
	117, 225, 4081, 183, 4080, 80, 147, 4079, 4078, 4077,
	72, 69, 273, 223, 221, 122, 4076, 289, 4075, 212,
	4074, 4073, 28, 4072, 4071, 259, 119, 118, 38, 266,
	149, 39, 187, 231, 4070, 4069, 182, 4067, 4066, 4065,
	281, 4064, 3642, 275, 4063, 33, 4062, 4061, 4060, 12,
	4059, 4058, 217, 3410, 4057, 4054, 10, 4052, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	13, 13, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 53, 53, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 39, 41, 40, 34, 34, 35,
	35, 36, 37, 37, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 42, 42, 22,
	22, 44, 44, 23, 23, 45, 45, 622, 622, 622,
	623, 623, 624, 624, 624, 26, 47, 19, 20, 20,
	20, 20, 625, 625, 625, 625, 38, 27, 48, 31,
	31, 31, 31, 31, 218, 218, 218, 218, 25, 25,
	43, 43, 261, 261, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 618, 618, 263, 263, 262, 250,
	250, 251, 251, 252, 252, 626, 626, 264, 264, 264,
	265, 265, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 517, 517, 517, 548, 548, 548, 548, 550,
	550, 645, 645, 646, 646, 646, 646, 646, 136, 136,
	414, 414, 414, 57, 57, 57, 57, 57, 613, 613,
	220, 220, 220, 222, 222, 221, 221, 221, 221, 221,
	81, 81, 632, 632, 631, 630, 630, 630, 633, 633,
	633, 219, 219, 219, 132, 132, 132, 132, 132, 132,
	132, 132, 133, 133, 134, 134, 223, 223, 223, 225,
	225, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 229, 18, 18, 18, 115, 115,
	115, 115, 115, 115, 115, 110, 110, 552, 552, 553,
	553, 214, 214, 215, 215, 215, 215, 216, 216, 217,
	217, 217, 72, 72, 226, 226, 228, 228, 227, 227,
	227, 227, 227, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 62, 62, 62, 62, 63,
	63, 70, 70, 70, 70, 70, 70, 70, 70, 196,
	196, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 78, 78, 78, 78, 78, 647,
	647, 647, 647, 647, 647, 647, 647, 647, 647, 647,
	647, 647, 647, 647, 647, 647, 647, 647, 648, 648,
	649, 649, 650, 650, 651, 651, 651, 651, 651, 651,
	651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
	651, 651, 651, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	87, 87, 374, 374, 337, 337, 88, 88, 88, 89,
	89, 90, 90, 74, 74, 611, 611, 390, 390, 508,
	508, 75, 619, 619, 619, 621, 621, 620, 620, 92,
	92, 413, 413, 93, 93, 93, 93, 93, 93, 94,
	94, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	102, 102, 102, 102, 102, 103, 103, 103, 100, 100,
	100, 97, 97, 97, 96, 96, 96, 101, 101, 101,
	610, 326, 326, 99, 99, 99, 98, 98, 98, 391,
	391, 104, 104, 104, 104, 338, 105, 105, 105, 105,
	105, 105, 105, 105, 108, 108, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 510,
	510, 4, 4, 256, 256, 255, 255, 255, 255, 5,
	5, 5, 259, 259, 258, 257, 106, 106, 106, 475,
	475, 111, 111, 111, 429, 429, 112, 112, 112, 112,
	112, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 615, 615, 383, 383, 289, 289, 289, 289,
	124, 124, 124, 124, 125, 125, 125, 125, 126, 126,
	201, 201, 142, 142, 142, 142, 141, 141, 141, 141,
	141, 141, 141, 141, 64, 64, 64, 65, 65, 66,
	66, 67, 67, 68, 68, 69, 69, 69, 69, 69,
	145, 145, 642, 642, 147, 144, 144, 144, 144, 144,
	143, 143, 146, 146, 146, 146, 148, 150, 150, 150,
	150, 150, 149, 149, 149, 149, 149, 151, 151, 542,
	542, 399, 399, 540, 540, 562, 562, 541, 541, 344,
	344, 344, 344, 344, 345, 345, 345, 551, 551, 551,
	551, 551, 551, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 202,
	202, 202, 203, 203, 207, 207, 208, 208, 208, 209,
	209, 209, 206, 206, 206, 204, 204, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 212, 212, 210,
	210, 211, 211, 653, 653, 652, 652, 213, 213, 213,
	213, 213, 177, 177, 177, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 400, 400, 180, 180,
	180, 164, 164, 153, 153, 153, 153, 153, 153, 153,
	158, 158, 158, 158, 158, 158, 158, 158, 154, 154,
	166, 166, 166, 166, 166, 159, 159, 160, 160, 160,
	161, 161, 161, 161, 188, 188, 163, 163, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 155, 155, 155,
	155, 168, 168, 168, 168, 436, 436, 436, 194, 194,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 191, 191, 191, 191,
	191, 191, 634, 634, 635, 635, 635, 184, 184, 184,
	184, 184, 184, 489, 489, 178, 178, 178, 178, 183,
	183, 183, 183, 186, 186, 186, 186, 419, 419, 175,
	175, 175, 176, 176, 176, 181, 181, 193, 182, 375,
	375, 179, 179, 185, 185, 185, 185, 187, 187, 187,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 157,
	157, 157, 157, 189, 189, 174, 174, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 654, 654,
	170, 170, 170, 169, 169, 169, 169, 172, 172, 173,
	173, 173, 173, 173, 173, 171, 162, 192, 612, 612,
	608, 608, 608, 608, 608, 608, 608, 608, 609, 609,
	609, 609, 614, 614, 116, 116, 116, 116, 116, 116,
	116, 127, 127, 127, 127, 127, 127, 127, 130, 130,
	117, 117, 117, 117, 117, 117, 117, 120, 120, 118,
	118, 118, 118, 119, 119, 82, 82, 82, 82, 82,
	17, 17, 17, 83, 83, 280, 280, 234, 234, 234,
	362, 362, 235, 235, 352, 352, 352, 352, 230, 230,
	231, 231, 232, 233, 233, 84, 84, 655, 655, 655,
	627, 627, 627, 628, 628, 628, 628, 628, 628, 346,
	346, 347, 347, 455, 455, 455, 455, 455, 350, 350,
	350, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	360, 361, 361, 353, 353, 359, 358, 358, 357, 357,
	356, 356, 354, 355, 355, 355, 364, 364, 363, 366,
	366, 365, 454, 571, 571, 573, 573, 573, 573, 573,
	573, 573, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 437,
	437, 656, 656, 657, 658, 569, 569, 569, 570, 565,
	565, 566, 566, 566, 566, 566, 348, 348, 349, 349,
	349, 349, 567, 568, 381, 381, 493, 572, 572, 574,
	574, 576, 659, 659, 659, 659, 659, 659, 660, 660,
	660, 453, 453, 452, 452, 451, 451, 372, 372, 577,
	577, 577, 577, 578, 578, 578, 578, 578, 581, 580,
	579, 579, 579, 579, 579, 86, 86, 86, 416, 416,
	415, 415, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 198, 198, 292,
	292, 292, 80, 80, 80, 14, 14, 14, 14, 14,
	14, 14, 307, 307, 15, 15, 15, 629, 629, 629,
	85, 85, 85, 85, 85, 85, 370, 370, 370, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 617, 617, 616, 616, 293,
	293, 662, 662, 91, 91, 91, 91, 91, 91, 91,
	91, 511, 511, 512, 512, 79, 79, 79, 79, 79,
	438, 438, 435, 435, 434, 434, 380, 380, 491, 491,
	491, 492, 297, 297, 298, 298, 253, 253, 253, 33,
	32, 24, 24, 28, 28, 29, 29, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 30, 30, 50, 50,
	50, 50, 51, 51, 51, 51, 54, 54, 55, 55,
	49, 49, 49, 49, 52, 52, 46, 46, 56, 56,
	56, 56, 56, 636, 638, 638, 637, 637, 641, 641,
	641, 641, 641, 641, 639, 639, 640, 640, 643, 643,
	644, 644, 123, 123, 128, 128, 128, 128, 128, 129,
	129, 129, 129, 131, 131, 131, 131, 140, 140, 197,
	197, 197, 197, 197, 197, 197, 58, 58, 58, 58,
	71, 71, 71, 71, 138, 664, 664, 664, 139, 139,
	139, 663, 663, 290, 290, 448, 448, 449, 449, 665,
	665, 450, 450, 450, 450, 450, 283, 282, 284, 284,
	285, 285, 77, 77, 77, 273, 273, 272, 274, 274,
	275, 275, 270, 270, 554, 554, 277, 277, 277, 278,
	278, 266, 266, 267, 267, 268, 268, 269, 269, 281,
	281, 549, 549, 666, 666, 114, 114, 114, 200, 200,
	336, 336, 336, 445, 445, 445, 373, 373, 304, 304,
	447, 447, 447, 447, 447, 412, 412, 412, 199, 199,
	388, 388, 402, 402, 403, 403, 505, 505, 404, 121,
	121, 122, 122, 137, 137, 238, 238, 236, 236, 236,
	236, 236, 236, 236, 236, 243, 243, 244, 244, 245,
	245, 246, 247, 247, 247, 247, 392, 392, 248, 248,
	248, 237, 237, 237, 239, 239, 239, 239, 239, 239,
	239, 242, 242, 242, 242, 249, 249, 249, 241, 241,
	588, 588, 588, 590, 590, 592, 592, 591, 591, 587,
	587, 589, 589, 661, 661, 418, 418, 418, 369, 371,
	367, 367, 368, 368, 378, 378, 376, 377, 377, 379,
	379, 490, 490, 490, 254, 254, 254, 409, 409, 409,
	409, 410, 410, 441, 441, 439, 439, 439, 439, 440,
	440, 442, 442, 442, 443, 443, 444, 444, 406, 406,
	407, 407, 408, 408, 408, 408, 471, 471, 240, 240,
	240, 385, 385, 385, 386, 386, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 462, 462, 460,
	460, 460, 460, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 495, 496, 496, 387, 387, 497, 446, 446,
	606, 606, 606, 607, 607, 488, 488, 498, 498, 498,
	498, 498, 498, 486, 486, 487, 487, 506, 507, 507,
	422, 422, 422, 422, 420, 420, 423, 423, 423, 423,
	423, 421, 421, 499, 499, 499, 499, 411, 411, 500,
	500, 500, 500, 501, 502, 502, 503, 503, 456, 457,
	457, 513, 513, 513, 513, 515, 384, 384, 384, 384,
	384, 564, 563, 563, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 530, 530, 530, 530, 530,
	530, 530, 516, 516, 516, 516, 516, 520, 520, 520,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 521, 521, 526, 526, 527, 527, 527, 522, 523,
	528, 528, 528, 528, 667, 667, 532, 532, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 518, 518, 518,
	525, 525, 525, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 430, 430, 432, 432,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 465, 465, 465, 465, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	582, 582, 582, 582, 582, 582, 582, 582, 467, 467,
	585, 585, 586, 586, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 593, 593, 594, 594, 596,
	596, 597, 597, 598, 599, 599, 599, 600, 601, 601,
	595, 595, 602, 602, 602, 602, 603, 603, 604, 604,
	604, 604, 604, 605, 605, 605, 605, 605, 477, 477,
	478, 478, 484, 484, 484, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	343, 343, 342, 294, 294, 294, 294, 294, 294, 397,
	397, 395, 395, 395, 398, 398, 396, 396, 394, 394,
	393, 393, 474, 474, 472, 472, 476, 476, 424, 424,
	531, 531, 531, 531, 531, 531, 531, 531, 425, 425,
	425, 433, 426, 426, 427, 427, 427, 427, 427, 468,
	469, 428, 428, 428, 470, 470, 479, 483, 483, 482,
	481, 481, 480, 480, 458, 458, 459, 459, 405, 405,
	668, 668, 401, 401, 504, 504, 504, 504, 340, 340,
	389, 389, 339, 339, 331, 331, 332, 332, 332, 332,
	382, 382, 485, 485, 533, 533, 534, 534, 535, 535,
	536, 536, 537, 538, 539, 473, 473, 315, 314, 301,
	302, 313, 312, 311, 300, 303, 308, 309, 310, 305,
	306, 322, 321, 320, 271, 276, 327, 328, 328, 330,
	330, 329, 329, 317, 318, 319, 509, 299, 333, 333,
	334, 334, 334, 335, 335, 335, 335, 295, 295, 296,
	296, 323, 323, 324, 325, 325, 316, 316, 316, 286,
	286, 286, 287, 287, 288, 288, 547, 547, 544, 544,
	544, 545, 545, 545, 546, 546, 546, 546, 543, 543,
	543, 543, 543, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	556, 556, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	558, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 561, 561,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 4, 3, 1, 2, 2, 2, 2, 2, 4,
	6, 3, 1, 2, 2, 7, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 1, 2,
	2, 2, 9, 2, 1, 0, 1, 1, 0, 1,
	2, 0, 2, 2, 0, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 6, 4,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 10, 11, 9, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 6, 1, 3, 1, 2, 0, 1,
	2, 3, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 3, 0, 4, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 8, 11, 5, 4, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 14, 16, 3, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 627, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-197, -202, -203, -204, -213, -3, -57, -59, -73, -92,
	-94, -105, -115, -114, -116, -124, -132, -127, -110, -64,
	-137, -141, -152, -198, -199, -200, 33, 32, 104, 83,
	160, 133, 142, 211, 401, 449, 461, 417, 147, 440,
	422, -146, -147, 480, -58, -71, -139, -138, 76, 134,
	176, 432, -6, -14, -18, 30, 48, -60, -61, -62,
	-63, 65, -80, -76, -87, -81, -74, -75, -78, -647,
	106, -589, -95, -98, -131, -651, 168, 230, -117, -118,
	-119, 383, -125, -126, 442, -128, -129, -130, 445, 169,
	-66, -65, 162, -236, -238, -144, -143, -145, -201, -153,
	-154, -155, -156, -157, -158, -159, -161, -188, -162, -163,
	-164, -165, -166, -167, -171, -191, -168, -169, -170, -173,
	-172, -174, -179, -175, -176, -177, -178, -180, -181, -183,
	-184, -185, -186, -187, -189, -190, 485, -182, -192, -160,
	-193, 548, 52, 501, 85, 152, 453, 21, -7, -8,
	-9, -10, -11, -12, -13, -17, -16, -56, -4, -5,
	-77, -79, -82, -83, -84, -91, -85, -86, -588, -96,
	-97, -100, -102, -103, -99, -101, 441, 600, -239, -237,
	624, 564, -21, -26, -22, -23, -25, -27, -24, -28,
	-29, -30, -42, -47, -44, -45, -43, -46, -48, -49,
	-50, -51, -52, -53, -54, -55, -32, -38, -39, -33,
	-34, -35, -36, -37, -40, -41, -19, -20, -31, 587,
	596, -242, -240, -241, -249, 472, 572, 522, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, -338, 2, -317, -323, -324, -325, -316,
	-286, -558, -561, 4, -555, -559, 175, 240, 344, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 41,
	43, 44, 46, 47, 48, 49, 50, 51, 52, 56,
	58, 62, 63, 64, 65, 66, 67, 71, 76, 77,
	82, 83, 84, 85, 86, 87, 88, 89, 95, 92,
	93, 94, 96, 98, 100, 101, 102, 103, 104, 105,
	107, 108, 109, 111, 112, 113, 121, 122, 123, 124,
	125, 127, 133, 128, 134, 137, 132, 136, 138, 140,
	141, 142, 145, 146, 147, 149, 150, 151, 153, 154,
	155, 157, 158, 160, 161, 162, 165, 163, 166, 164,
	167, 168, 169, 170, 173, 181, 182, 183, 188, 190,
	191, 192, 194, 197, 198, 199, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 212, 216, 218, 219, 220,
	221, 222, 223, 229, 230, 232, 233, 234, 235, 236,
	241, 242, 243, 247, 253, 254, 258, 259, 260, 262,
	266, 267, 268, 269, 270, 271, 273, 275, 274, 277,
	280, 281, 284, 285, 286, 287, 288, 289, 293, 294,
	290, 295, 296, 298, 299, 302, 300, 303, 304, 301,
	305, 307, 308, 309, 310, 311, 312, 313, 314, 315,
	316, 317, 318, 306, 321, 319, 323, 324, 325, 326,
	327, 342, 337, 338, 339, 331, 332, 328, 333, 329,
	330, 334, 335, 341, 336, 346, 347, 348, 349, 352,
	227, 246, 354, 355, 358, 360, 377, 363, 364, 365,
	368, 369, 372, 375, 376, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 388, 389, 391, 392, 393, 395,
	396, 397, 399, 401, 402, 404, 405, 406, 408, 409,
	410, 411, 412, 413, 414, 416, 417, 419, 418, 420,
	422, 424, 425, 426, 432, 433, 440, 434, 436, 437,
	438, 439, 441, 442, 443, 444, 445, 447, 448, 449,
	451, 452, 453, 454, 455, 457, 459, 460, 464, 465,
	466, 482, 483, 504, 461, 462, 463, 467, 468, 469,
	470, 471, 475, 473, 474, 476, 477, 478, 480, 481,
	484, 485, 487, 488, 489, 490, 491, 492, 493, 496,
	498, 499, 500, 501, 502, 521, 503, 505, 509, 510,
	511, 512, 506, 507, 520, 514, 515, 517, 518, 523,
	524, 525, 526, 527, 528, 529, 530, 532, 540, 541,
	542, 543, 545, 548, 549, 550, 551, 538, 553, 554,
	557, 558, 562, 559, 563, 560, 561, 564, 566, 569,
	570, 571, 577, 576, 578, 579, 580, 582, 583, 588,
	589, 591, 592, 593, 37, 53, 54, 57, 59, 61,
	72, 73, 74, 78, 129, 130, 159, 171, 172, 184,
	200, 201, 213, 215, 224, 225, 226, 248, 249, 251,
	256, 278, 351, 353, 370, 374, 390, 394, 398, 400,
	415, 456, 494, 508, 513, 533, 534, 535, 536, 544,
	546, 572, 573, 574, 581, 590, -338, 2, -317, 361,
	-310, 2, -286, -286, 401, 29, 2, 29, 389, 474,
	525, 527, 2, -615, -383, 2, 29, -289, -286, 106,
	211, 472, -310, 2, -615, 211, -383, 26, 2, -286,
	2, 375, 23, 28, 69, 80, 102, 145, 170, 193,
	197, -650, 377, 409, 459, 476, 520, 530, 545, 2,
	576, 299, 473, 522, 240, 124, 550, 467, -629, 464,
	465, 375, 407, 451, 214, 565, -290, 2, 461, -286,
	299, 2, 627, 98, 77, 456, 477, -149, 2, 289,
	541, -150, -151, -148, 533, -542, 467, 451, 321, -286,
	627, 627, 627, 29, -299, 2, -286, -299, 2, -205,
	2, -299, -652, -212, -211, -210, 22, 433, 183, 271,
	195, 231, 326, 404, 194, 50, 522, 240, 467, 124,
	518, 627, 2, 522, 380, 576, 473, 124, 412, 240,
	550, 197, 145, 28, 71, 48, 467, -629, 601, 602,
	299, 131, -613, 2, -608, 4, -559, -555, -332, -331,
	522, 528, 124, -325, -316, 616, -324, 627, 627, 627,
	627, 2, 259, 260, 411, 410, 477, 478, 29, 627,
	627, 627, 627, 464, 2, 170, 23, 28, 69, 97,
	102, 131, 193, 197, 366, -648, 377, 409, 476, 520,
	524, 530, 545, -628, 503, 71, 439, 467, -627, -629,
	299, 550, 145, -434, 124, 289, 209, 558, 527, 525,
	556, 137, 247, 561, 560, 627, 627, -108, 2, 624,
	33, 32, -107, -111, 147, 480, -229, 522, 252, 2,
	-286, 627, 627, 627, 2, 259, 260, 464, 465, 29,
	627, 627, 195, -608, 518, 2, 627, 627, 627, 2,
	29, 259, 260, 464, 465, 252, 2, 71, 469, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 2, -195, 477, 503,
	220, 49, 48, 77, 29, 408, 82, 381, 125, 131,
	154, 551, 212, 240, 241, 267, 97, 98, -436, 46,
	260, 71, 259, 465, -634, 464, -489, 523, 468, 474,
	517, 89, 271, 461, 541, 543, 106, 566, 452, 593,
	412, 413, 515, 426, 290, 163, 196, 4, 124, 321,
	451, 479, 275, 274, 533, 289, 460, 384, 87, 627,
	-661, 2, 522, -663, 2, 541, 541, 2, -663, 2,
	-663, 2, -663, 2, -664, 541, 590, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, -237, -239, -238,
	627, 627, 627, 627, 627, 627, 627, -195, 477, 2,
	77, 29, 29, -376, -378, 555, 250, 156, 367, -236,
	-238, 2, -588, -540, 2, -463, -562, -465, 614, 615,
	607, 519, 70, -342, 343, 594, -477, 131, 556, 361,
	-561, -466, -479, 159, 377, 456, -398, 8, 9, 5,
	6, 7, -295, -467, -473, 547, 174, 350, -335, 628,
	10, 624, -585, -238, -478, 38, 215, 68, -544, -334,
	-296, -516, 251, -333, -316, -582, -583, 4, -555, -556,
	-545, -519, -527, -523, -524, -530, -286, -558, 80, 115,
	116, 114, 119, 118, 292, 291, 120, 117, 479, 565,
	69, 37, 224, 225, 256, 351, 226, 78, -584, 146,
	-557, 248, 249, 494, 54, 415, 184, 130, 129, 353,
	59, 57, 573, -528, 126, 533, 534, 535, 536, 200,
	201, 61, 171, 172, 374, 398, 513, 544, 546, 213,
	278, 45, 110, 196, 245, 228, 255, 257, 261, 279,
	282, 322, 340, 345, 371, 373, 450, 486, -667, 574,
	508, 72, 73, -590, 418, -591, -310, -590, 627, 627,
	629, 627, -367, -369, -371, 2, 29, 143, 624, 2,
	-494, 2, -495, -499, -238, 272, -498, 624, -496, 622,
	-317, 362, -586, 457, -582, -583, -295, -316, -334, 4,
	-555, -557, 626, -372, 624, 124, 467, 522, 81, 240,
	97, 170, 197, -429, 624, -286, 29, 361, 537, 629,
	-368, 406, -475, 624, 361, 364, 195, 364, 63, 303,
	2, 2, 2, 2, 2, 224, -286, 522, 123, 2,
	270, 2, 2, 2, 2, 2, 2, 2, -391, 224,
	2, -317, 576, -391, 224, 2, -391, 224, 2, -435,
	2, 91, -300, 224, 2, -286, -326, 224, 2, -321,
	-323, -330, 224, 2, -328, -286, -550, 224, 2, -548,
	4, -555, 120, 479, -463, 2, -137, 2, 63, -286,
	576, 2, 482, 2, 624, -149, 2, 74, 541, 45,
	477, -150, 2, -449, 2, -450, -282, -283, -284, -506,
	-285, 258, 405, 414, 597, 135, 343, 593, -642, 195,
	606, 537, -540, -540, -540, -399, 626, -207, 56, -299,
	-653, -652, -653, -538, 29, -533, 8, -534, 614, 615,
	-538, -538, -653, -653, 2, 2, 2, 2, 2, 2,
	-499, 224, -317, 2, -314, -543, 4, -555, -559, -556,
	-560, -558, 29, 32, 33, 34, 36, 38, 39, 40,
	42, 60, 68, 69, 75, 79, 81, 91, 97, 106,
	114, 115, 117, 116, 118, 119, 120, 131, 135, 139,
	143, 144, 148, 152, 156, 174, 176, 189, 193, 195,
	211, 214, 217, 231, 244, 250, 252, 272, 276, 283,
	291, 292, 343, 350, 356, 361, 362, 366, 367, 387,
	403, 421, 446, 472, 479, 497, 516, 522, 531, 537,
	539, 547, 555, 556, 565, 567, 575, 584, 585, 586,
	587, -561, 80, 2, -499, 224, 2, -320, 224, -499,
	-323, 2, -300, 2, -463, -622, 529, 166, 434, 2,
	-339, 224, -317, -319, -323, -321, 2, 2, 2, 2,
	-463, 2, -552, 2, -547, 10, -546, 5, 4, -555,
	-559, -556, -328, 2, -548, 224, 2, 29, 29, 576,
	406, 252, 537, 629, -389, -331, -332, -539, 8, -382,
	-286, 626, -463, 2, -137, -120, 2, 189, -463, 224,
	2, -137, 224, 2, -463, 224, 2, -137, 224, 2,
	-286, 2, -630, 2, -552, 224, 224, -286, 2, 303,
	2, 2, 545, 2, 102, 522, 123, 2, 438, -649,
	459, 549, 2, 2, 2, 2, 2, 2, 2, 522,
	-305, 2, -286, 189, 506, -328, 224, -329, 2, 473,
	-662, 418, -548, 224, 2, 576, -321, 224, 2, -321,
	240, 254, -300, 224, 2, 527, 525, 527, 525, 195,
	2, 252, 2, 252, 2, -500, 2, -501, -495, -502,
	622, 362, -510, 2, -509, -546, 572, -108, 624, -108,
	624, 477, 624, -552, -317, -317, -463, 2, -137, -120,
	2, -463, 2, -137, 2, -286, 2, -134, -552, -133,
	624, 195, 566, -286, 2, -463, 2, -137, -120, 2,
	-463, 2, -137, 2, -229, 189, 2, 124, 522, -195,
	2, 189, 567, 2, 8, 2, 231, -552, 468, 413,
	181, 2, 482, 2, 483, 77, -436, 593, 77, 195,
	2, 195, 2, -419, 2, 587, 406, 195, 2, 2,
	-612, 2, 361, 195, 2, 195, 2, 195, 2, 195,
	2, 195, 2, -194, 478, 542, 521, 410, 260, 2,
	-137, 584, -120, 260, 259, -463, 584, 2, -635, 189,
	465, -463, 2, 540, 269, 164, 195, -419, 2, 195,
	2, 195, 2, 5, 2, 43, 411, 504, 2, 258,
	405, 504, 2, 502, 2, -317, 522, 576, 473, 124,
	29, 2, 464, 2, 2, 92, 93, 195, 2, 195,
	2, 210, 195, 2, 195, 522, -400, 626, 593, 2,
	-411, -499, -448, -449, -448, 537, -376, -378, -195, 482,
	2, -243, -409, -245, 189, -439, -440, -246, 283, 176,
	356, -247, -418, 29, 143, -418, -418, 63, 625, 625,
	11, 12, 79, 43, 614, 615, 616, 617, 187, 618,
	619, 612, 613, 611, 604, 605, 609, 264, 265, 99,
	608, 606, 90, 297, 458, 177, 178, 179, 180, 435,
	238, 35, 239, 14, 15, 16, -342, 34, 366, 282,
	594, 228, 486, 607, 17, 18, 19, 255, 257, 345,
	53, 231, -294, 377, -341, 519, 70, -463, -463, -463,
	-463, -463, -463, -463, -463, 373, 624, -405, -458, 622,
	-238, 624, 624, 624, 624, -539, -238, -463, -477, 625,
	-396, 624, -238, -477, -472, 624, 456, 622, 624, -480,
	-463, 5, 5, 5, 624, 626, -593, 588, 189, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 400, -521, 624, -520, 624,
	-520, -520, 577, -518, 624, 596, 589, 624, -518, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 577, 629, -590, -372, 624, -401, -504, -463,
	616, -401, -401, 361, -393, -463, 110, -422, 261, 322,
	196, 279, 450, 245, -460, 628, -460, -488, 596, -238,
	-496, -316, -238, -498, 624, -494, -488, -109, -539, -92,
	-105, -114, -137, -152, -199, -200, 616, -317, 624, 195,
	624, 626, -543, 195, -382, -300, -327, -286, -317, -333,
	-334, -339, -311, -286, 2, 2, 142, -393, -608, 550,
	467, 29, 473, -550, -289, 39, -474, -513, -514, -564,
	628, -563, -516, -526, -522, -525, 390, 394, -545, 57,
	573, -528, 251, 4, -555, -557, 248, 249, 494, 54,
	415, 184, 130, 129, 353, 59, 533, 534, 535, 536,
	200, 201, 61, 574, 508, 72, 73, -608, 550, 467,
	29, 473, 189, -550, 189, -550, 2, 2, 159, 2,
	2, 2, -286, -264, 629, 67, 443, 159, -391, 224,
	-264, 159, -264, 159, -340, 224, -339, -264, 159, -264,
	629, 159, -264, 629, 159, 626, 629, 159, -550, 2,
	-435, -542, -393, 39, -449, 2, 131, 4, 5, -665,
	629, 281, -345, 296, 342, 219, 362, 591, 354, 135,
	-551, 5, 4, -473, -485, 131, 289, 251, -533, -535,
	9, -536, 614, 615, -541, -540, 113, 626, -543, -208,
	246, 41, -299, -299, -653, -653, 8, 8, -653, -653,
	-299, -299, -261, 436, 480, 376, -260, 25, 30, 147,
	242, 327, 570, 165, -357, 243, 441, -354, 380, 159,
	498, 559, -622, -625, 463, 529, 166, 434, 94, 354,
	480, 376, 436, 159, -415, -417, 39, 122, 327, 375,
	64, 234, 301, 302, 501, 581, 159, 480, 376, 436,
	376, -15, -275, 25, 147, -277, -272, 480, -625, 103,
	436, 600, 441, 386, 514, 403, -625, -622, 277, -624,
	583, 341, -263, 498, 559, -622, -625, 463, 436, -262,
	-359, -354, 380, 159, 628, 25, 147, 436, 480, 376,
	-645, -646, 30, -256, -255, 25, 147, 480, 562, -259,
	231, -258, 25, 436, 376, -616, -307, -587, 231, 587,
	159, -307, -307, -499, 224, -639, 189, 2, -632, -133,
	273, 5, 10, -552, -133, -389, 629, 629, -543, 616,
	465, 464, 159, 159, 159, 159, 260, 189, 343, 343,
	587, 2, 2, 2, 2, 2, 197, -627, -650, 2,
	2, -317, 224, -374, 361, -611, -390, 522, -317, 189,
	343, 45, -320, 224, 2, -323, 576, -616, 343, -322,
	224, -317, 39, 624, 343, 2, -435, 2, 240, -587,
	343, -500, -336, -317, -495, -336, 480, -310, 39, -460,
	-317, 625, 629, -510, -510, -552, -217, 587, 195, 624,
	-229, 587, 587, 260, -507, 629, -506, 231, -553, -552,
	-134, -552, 439, 195, 260, -552, -611, -300, 2, -317,
	2, 522, 262, -552, -217, 231, -552, -552, -552, -542,
	29, 483, 2, -194, 478, 542, 93, 483, 2, -317,
	522, 124, 240, 83, -639, 189, 2, -286, -614, 189,
	-609, 451, 467, 550, -608, -317, 124, -317, 124, -317,
	124, -317, -317, 2, 2, 2, 2, 2, 88, 2,
	-137, -463, 2, 88, 2, 48, 499, -635, 189, 2,
	540, 2, 540, 2, -286, -286, -286, 356, 503, 281,
	587, -317, -317, -317, -318, -323, 468, 523, 551, 465,
	-463, 2, -654, 2, 195, 189, 2, 522, 240, 522,
	240, 124, 195, 77, 124, 29, 522, 462, 626, 4,
	-264, 629, -290, -243, -409, -542, -410, -409, -244, -243,
	-246, 189, 414, 560, 327, 484, 266, -440, -439, 29,
	-463, -444, 183, 326, -463, -442, -465, 614, 615, -534,
	-536, -392, 354, -237, -237, -237, -379, -490, -463, 403,
	240, -515, -513, -513, -315, -543, 533, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, 282, 228, 486, 53, 231, -463, 537,
	-463, -463, -463, -463, 319, 343, 350, 547, 174, 557,
	143, 354, -668, 516, 42, -470, -238, -397, 624, -484,
	36, 497, 29, -477, 624, 2, -458, -463, -459, -343,
	-341, -286, 614, 615, 616, 617, 618, 619, 604, 605,
	606, 14, 15, 16, 609, 613, 611, 612, 187, 99,
	608, 297, 458, 90, 177, 178, 179, 180, 264, 265,
	17, 18, 19, 35, 607, -394, -393, -393, 625, 575,
	29, 143, 616, 2, 625, 629, 39, 625, -463, -394,
	-476, -472, -393, -483, -482, 584, -430, -431, 592, 306,
	127, 222, 304, -432, 471, -537, 8, -543, 616, -594,
	182, 214, 624, 625, 2, 625, 2, 625, -463, 2,
	625, -463, 2, 625, -463, 2, 625, -463, 2, 625,
	2, 625, 2, -463, -463, -463, -463, -463, -463, -463,
	-393, 8, -537, -537, 533, 533, -537, -537, -537, -529,
	390, 391, 392, 393, 284, 285, 286, 287, 394, 395,
	396, 397, 311, 312, 313, 314, 307, 308, 309, 310,
	315, 316, 317, 318, 205, 206, 207, 208, 201, 202,
	203, 204, -529, -424, 2, -531, -393, 4, 592, 306,
	127, 222, 304, 471, 5, -424, 2, -425, 2, -463,
	-393, -426, -464, -465, 614, 615, 607, -342, -477, -427,
	2, -463, -394, -463, 60, 276, 539, -428, -463, 195,
	-393, -393, 2, -393, 2, -591, 39, -393, -385, 629,
	195, 39, 4, -385, -385, 624, 625, 629, -423, 218,
	300, 295, 254, -423, -494, -422, 261, -420, 371, -420,
	-420, -488, -301, 622, 630, -543, -488, -487, -486, 39,
	-310, 368, -488, -488, 626, 625, -487, 623, -606, 624,
	627, 627, 627, 627, 627, -317, 624, -393, -543, 626,
	505, 2, 625, 255, 255, 255, 255, 255, 361, 457,
	625, 537, -610, -326, -330, 523, 2, 587, -107, 363,
	625, 629, -384, 38, 622, 626, -537, 2, 2, -532,
	577, 624, 624, -431, 624, 195, -610, -330, 523, 2,
	-615, -383, -383, 537, -286, 2, -317, -391, -264, 159,
	-391, -391, -264, 629, 159, -300, -321, -326, -328, -330,
	-286, -548, -550, -264, -322, -642, 625, 541, -450, -344,
	414, 496, 437, 475, 518, 9, 9, 629, -543, -209,
	466, 327, -299, -299, -299, -299, 629, -643, 97, 537,
	81, 624, 467, -279, 290, 537, -454, 224, 81, -565,
	97, -303, -566, -286, 75, 556, 403, 193, 157, -643,
	97, 403, -643, 97, 2, 242, 97, 480, 503, 624,
	29, 63, -499, 43, 43, 29, -623, -624, 277, 195,
	593, 522, 240, 467, 537, 537, -499, -417, -513, 122,
	301, 302, 63, -538, -538, 63, -538, -538, -538, 587,
	-320, -499, 467, 537, 537, 537, 424, 424, -272, -150,
	537, 537, 29, -195, 444, 131, -666, 606, 424, 277,
	-624, 537, 195, 629, 43, 43, 29, -623, 195, 537,
	-339, -301, 571, 44, 571, 44, 571, 537, 44, 467,
	537, 629, 44, -255, -611, -611, -216, -215, -286, 5,
	-382, -258, -552, -257, 325, 537, 537, -15, 480, -617,
	-291, 109, 333, 294, 334, 101, 330, 100, 329, 107,
	331, 108, 332, 578, 346, 579, 347, 66, 328, 305,
	335, 500, 336, 580, 348, -292, -293, 150, 382, 569,
	124, -548, -15, -15, 480, 376, 436, 159, -640, 231,
	29, -629, 231, -507, 231, -507, -331, -286, 626, -137,
	-463, -463, -137, -463, -137, 48, 159, 159, 2, 2,
	-662, 270, 624, -348, 343, 195, -382, -508, 252, 629,
	-390, -608, 159, -548, -416, -415, 343, -322, 224, 2,
	159, -372, 343, 153, 624, 412, 2, 159, -302, 224,
	-287, -286, -435, -266, 526, 159, -413, 567, -445, -137,
	624, 131, 39, -445, -402, -403, -505, -404, -303, 624,
	-310, -460, -108, -509, 625, 625, 625, -216, 365, -229,
	-373, -304, -303, 123, 416, 416, -223, 587, -133, -134,
	625, 629, -507, 231, 506, -134, -552, -217, -217, -507,
	-507, -317, 189, -552, -217, -217, -217, 2, 2, 2,
	2, -419, -317, -300, -339, -317, 29, 626, -550, -550,
	-330, -326, -419, -300, -419, -300, -419, -300, -419, -419,
	-137, -463, 503, 2, 477, 189, 189, 626, -419, 8,
	-375, 446, 5, 2, 412, 124, 522, 380, 240, -317,
	-339, -317, -339, -300, 124, -300, 125, -317, 4, -499,
	-410, -244, 362, 266, 484, -442, -443, -465, 456, 457,
	-443, 456, 457, 8, 9, 8, 9, -248, 488, 349,
	-391, 629, -253, 40, 139, 266, -317, 593, 155, -463,
	-463, 537, -668, 516, -470, 155, -463, 319, 350, 547,
	174, 557, 143, 354, 195, 624, -464, -464, 625, -395,
	-463, -463, 623, 632, 625, 626, 625, -378, 629, -376,
	-463, -393, -393, 625, 626, -393, -382, 623, 623, 629,
	625, -481, -482, 148, -463, 537, 537, 537, 537, 624,
	625, 626, -599, 372, 624, 624, -463, 625, 625, 625,
	625, 39, 629, 629, 629, 625, 629, 629, 629, 625,
	625, 625, 629, 625, 593, 593, 625, 625, 625, 625,
	629, 625, 629, 625, 195, 625, 625, -433, 387, 625,
	11, 12, 614, 615, 616, 617, 187, 618, 619, 612,
	613, 611, 604, 605, 606, 90, 297, 458, 14, 15,
	16, -342, 255, 231, -464, -464, -464, -464, 625, -468,
	-469, 195, 189, 39, -428, -428, -428, 625, 195, -393,
	625, 625, 624, -592, 299, 343, 625, -457, -456, 585,
	-504, -386, 2, -494, -312, -543, -457, -457, -393, -463,
	261, 261, -421, 567, 361, -423, -494, -487, -539, -462,
	-461, 191, 40, 139, 337, 338, 339, 227, 192, -487,
	-310, -372, -487, -487, -543, -488, -488, -486, 625, -607,
	-539, 625, -387, -497, -586, -378, 626, -543, -226, -587,
	-196, 5, 350, -196, -196, -196, -196, -317, -550, 537,
	537, 231, 26, 388, -513, 622, 623, 8, -543, 624,
	-537, -537, -537, -550, 195, 195, 231, 361, 195, -548,
	2, -264, -391, -264, -264, -339, -340, -264, -264, -264,
	-414, 587, -540, -449, 554, 86, 414, 533, -540, 121,
	466, -260, 436, 480, -303, -303, -317, -233, -232, -230,
	-286, 5, -327, 209, 425, -548, 343, -454, 224, -265,
	343, 224, -311, -513, 624, -437, 589, 266, 266, 567,
	-303, -311, 266, 224, -303, 224, -311, 2, -311, -618,
	414, 355, -463, -231, -230, 63, -355, 288, 412, 344,
	-261, 436, 480, 376, -137, -137, -137, 624, -642, 567,
	142, -317, -339, -317, -327, -548, -322, 480, 376, 436,
	340, -333, -538, -538, -415, 480, 376, 436, -327, -548,
	-320, -548, -271, 224, -286, -271, 224, 467, -300, 424,
	593, 47, -666, 537, 195, -463, -463, -262, -137, -137,
	-137, 624, -301, -263, 436, 5, 224, -303, 5, -303,
	224, 5, -286, -303, -327, -548, -646, 25, 147, -303,
	629, 606, 606, -259, 606, -327, -548, -291, 382, -552,
	350, 563, -300, -616, -307, 467, 537, 537, -499, -636,
	-637, 211, 449, 467, 452, -550, -133, -220, 587, -133,
	-214, 235, 616, -613, -552, -286, 576, -286, -346, -349,
	-347, -303, -455, -454, -569, -570, -565, 282, 240, 556,
	254, 175, 97, -234, -235, 589, 587, 159, -337, -317,
	622, -217, -552, -317, -508, -328, -329, 159, -372, 343,
	-548, 39, 159, 624, 2, 2, -321, 361, 343, -302,
	224, -267, 149, -666, -300, -457, -386, -412, -447, 446,
	361, -373, 572, -310, -412, -388, 629, 195, 606, 626,
	-373, -503, 616, -108, -108, -217, 624, 624, -552, 625,
	629, 626, 624, 606, 606, -225, 365, -224, 151, 268,
	253, 490, 491, 492, 493, 141, 489, 128, 324, 236,
	528, -507, -552, -223, -134, 195, -507, 231, 195, -67,
	587, 522, -217, 628, 452, -286, -419, -419, -419, 477,
	477, -286, 189, -382, -313, -543, -300, -317, -314, -339,
	189, 189, -300, 560, -443, 362, 293, -490, -254, 595,
	-317, 628, -463, -463, 155, 155, -463, -464, -464, -463,
	155, 195, 624, -463, -474, 34, 34, 625, 629, -459,
	-463, -341, 625, 575, -378, -378, 625, 616, -543, 628,
	625, -472, 152, -463, 531, 306, 222, 304, -432, 304,
	-432, -432, -537, 5, -543, 616, -600, -306, 624, -286,
	585, -377, 367, 625, -515, -513, -463, -463, -463, -463,
	-463, -537, -518, -518, -533, -533, -463, -468, -463, -515,
	-513, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, 143, 343, 354, -464, -469, -468, -463, -463, -513,
	625, 625, 625, -393, -107, 624, 299, -406, 214, -463,
	-507, 629, -406, -406, 625, -494, -494, 624, -463, 261,
	623, 629, 631, 606, 606, -372, 626, -486, -487, 623,
	625, 629, 625, 629, -446, 39, 625, -543, -457, -228,
	-227, 140, 56, 111, 138, 350, 255, -638, 587, -550,
	-550, 467, 364, 5, 8, 622, 623, 626, -537, 625,
	625, 625, -550, -550, 467, -608, 550, 467, 29, -550,
	-264, -264, 123, 327, -463, -206, 587, 589, 537, 537,
	625, 629, 606, 63, 231, 159, 343, 569, 343, -566,
	157, -571, -463, 624, 240, 624, 624, 2, -250, -251,
	-252, 147, 480, 25, -644, 2, 567, 159, -264, 159,
	-264, 591, 625, 629, -355, 624, 624, 537, 467, -279,
	537, 587, -393, -463, -218, 131, -542, -625, 628, -625,
	628, 467, 537, 537, 467, 537, 537, 343, 159, 587,
	173, 173, 593, -271, -463, -463, 189, 537, 587, -393,
	537, -517, 51, 27, 343, -321, -264, 159, 537, 537,
	550, 480, -215, -552, -552, -133, -552, -552, 350, -15,
	-327, -548, -322, 480, 376, 436, -615, -615, 211, -330,
	-640, -507, -222, 365, -221, 151, 448, 141, 268, 236,
	-507, -220, 195, 252, 587, -322, 2, 625, 625, 629,
	629, -572, -265, -317, -302, 240, 240, -309, -287, 39,
	358, 358, 624, -317, -88, 587, -506, -539, -619, 587,
	45, -320, 39, 159, -616, -137, -322, -511, -512, 5,
	39, -317, 159, 361, 343, -268, 275, -666, -547, -587,
	-378, -412, -401, 344, 95, 625, -457, -403, -386, -463,
	2, 625, -216, -552, -217, -229, -304, 2, -553, -552,
	-552, 629, 624, 606, 606, 606, 606, 606, 606, 606,
	-223, -507, -133, -223, -134, -137, 365, -317, 616, -419,
	5, -361, -360, 380, 354, -361, 456, 456, 362, 183,
	271, -253, -301, -463, -463, 155, 34, 34, -463, -463,
	-474, 625, -463, -463, -393, 623, 5, -463, 625, 625,
	8, -463, 625, 626, -601, -286, -463, 625, 63, 625,
	625, 629, 629, 625, 625, 625, 625, 625, 625, 625,
	-469, 195, 143, 354, 624, 625, 625, -107, -471, 217,
	63, -494, -471, -471, -421, -382, -494, -461, -301, 622,
	-301, 622, -543, -539, -497, 624, 626, -227, 606, -552,
	-552, -196, 211, -638, -638, 587, -330, 623, 2, 622,
	-543, 625, -330, 195, -610, -330, 523, 123, 189, 221,
	221, -303, -303, -232, -540, 522, 456, -271, 403, -454,
	159, 159, -573, 97, -575, 79, 175, 106, 343, 350,
	556, 403, 75, 131, 361, 421, -656, -657, -658, 39,
	598, 599, 625, -380, -491, -586, 624, -286, -380, -382,
	343, 511, 131, 361, 343, 131, 361, 582, 123, 2,
	550, 82, -303, -311, -230, -382, -382, -317, -327, -548,
	167, 625, 629, 606, 2, 616, 616, -327, -548, -322,
	-327, -548, -320, 159, -271, 378, 173, 537, -137, -463,
	167, 625, -301, 5, 5, 159, -298, 79, -303, 5,
	-303, -321, 123, 587, 467, 537, 537, 361, 361, 364,
	-636, -637, -220, 629, 624, 606, 606, 606, -220, -553,
	-133, 2, -372, -362, 242, -303, -570, -567, -568, 403,
	-455, -574, -576, 175, 403, -350, 624, -302, -287, 624,
	-137, 2, -233, 624, -348, 365, 623, -621, 365, -620,
	121, 141, -548, -416, -137, -322, -370, 587, -372, 625,
	629, 153, -438, 567, -301, -317, 159, -269, 274, -666,
	-547, -266, -441, -439, 144, 624, 361, -137, -378, 606,
	625, 625, 123, 625, -224, -225, -552, -133, -552, -552,
	-552, -133, -552, -223, -507, -507, -68, -69, 240, 97,
	385, -314, 522, 240, 624, 624, -253, -463, -463, -463,
	625, -378, -543, 616, -595, 380, 625, -490, -463, -463,
	-464, 195, 624, -474, 625, -596, 586, -463, -407, -408,
	-463, 454, 112, 215, -596, -596, 625, -539, -539, 2,
	-552, 364, 2, 537, 622, 2, 195, -550, 195, 195,
	231, -137, 231, 39, 424, -454, -311, -311, -315, -308,
	-286, 175, 224, 350, 582, -437, 266, 624, -464, 560,
	-317, 624, 2, 223, 223, 31, 63, -659, 135, 244,
	625, 629, -492, -297, -286, -463, -492, 625, 625, 350,
	560, 350, 582, -463, 560, -513, 624, -264, -264, 625,
	625, -463, 537, -542, 104, -540, 2, -625, -271, -300,
	-463, 189, -463, 537, 5, -264, -315, -264, -264, -298,
	550, 360, -327, -548, -322, -641, 523, 474, 551, 468,
	198, 455, -641, 189, -221, -222, -552, -133, -133, -220,
	39, -356, -357, 2, -572, 266, -308, 266, 233, 158,
	-380, 624, 624, -382, -655, 587, 625, -346, -234, -89,
	-90, 538, -506, 629, 624, 606, -372, 327, 123, 39,
	5, 624, 624, -286, 361, 624, -301, -281, 96, -666,
	-547, -267, -412, 344, -382, 97, -441, -470, -217, 624,
	-217, 625, -223, 629, 29, 624, 29, 624, -317, -339,
	-393, -393, 625, -378, 63, 629, 625, 625, -464, -474,
	625, -597, -598, -306, 629, 624, 624, 481, 623, 623,
	-550, 2, -550, -550, -550, 467, -271, 403, -286, -566,
	-575, -308, 343, -235, 567, 587, -463, -464, -288, 624,
	-463, 624, 624, 39, 131, 244, 136, 229, -453, -660,
	105, 512, 232, -491, -253, 625, -452, 567, 421, -464,
	-298, -380, 624, 624, 624, 606, 195, -137, 624, -517,
	-264, -321, 606, 537, 2, 2, 195, -615, 625, -631,
	419, -137, -234, 624, -235, -351, 84, 98, 132, 223,
	199, 241, 503, 509, 29, -351, 625, -380, -380, 625,
	-352, 361, 123, 327, 625, 39, -90, 9, -620, -621,
	-463, 39, 123, -137, -511, -380, -317, -380, 361, -273,
	-272, 283, -547, -268, 625, -311, -412, -553, -69, -382,
	-382, 625, 625, -602, 412, 457, 216, -393, -379, 625,
	629, 39, -408, 2, 2, 2, -638, -330, 424, -265,
	159, 218, 625, -577, 298, -286, 625, -416, -416, 39,
	136, 229, -358, -354, 624, -254, -492, -235, 218, -317,
	-626, 567, 625, -364, -363, -360, -366, -365, -360, -393,
	-540, 104, 378, -393, -298, -133, -550, -550, 361, -633,
	196, -632, 5, 10, -352, -381, -493, -303, -452, 625,
	625, 85, 123, -362, -137, 625, -137, 2, -370, 625,
	625, -438, 625, -317, -270, -554, 424, 426, -666, -269,
	-457, 144, 625, 625, 625, 625, -603, -604, 53, 553,
	113, -463, -603, -603, -598, -600, 195, 175, -451, 596,
	-578, -581, -580, 603, 487, 196, 379, 625, 511, 581,
	625, 625, -659, -382, -451, -372, -463, -452, 625, 629,
	572, 625, 629, 572, 625, 195, 625, -264, -638, -264,
	-641, -219, 587, 48, -280, -279, 625, 629, -453, -452,
	-358, 402, 137, 147, -356, -655, -452, 624, -453, 624,
	-278, -277, -666, -533, -281, 144, 344, 560, -217, -605,
	157, -604, 399, 188, 456, 399, 188, -605, -605, -550,
	-308, -235, 58, -580, 603, -581, 603, 560, 137, -457,
	625, -577, -235, -363, 231, -365, 195, 378, 195, 464,
	-632, 31, -235, -493, -358, -453, -235, 457, 457, 2,
	-234, -352, -453, -380, -358, -380, -274, -275, -276, -382,
	-273, 344, 560, 480, 113, 214, 532, 327, 34, 606,
	-579, 327, 443, 67, 480, -579, -578, 624, 624, -550,
	365, -235, -358, -457, 2, -352, -358, 625, -235, 625,
	-549, 376, -270, 480, -402, 456, 369, -604, -463, 24,
	350, 131, -659, -393, -393, -264, -216, 624, -457, -235,
	-280, -235, -452, -457, -453, -666, -278, -402, -457, 625,
	625, -216, -457, -457, -453, -358, -548, -274, -457, -353,
	-354, 537, 625, -358, -235, 624, -235, -457, -393, -457,
	625, -353,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 576, 577, 579, 580, 581,
	583, 584, 586, 588, 590, 591, 592, 594, 595, 597,
	598, 599, 600, 601, 603, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 692, 694, 0, 1519, 1521, 1523, 1525, 0, 0,
	-2, 0, 40, 41, 43, 0, -2, 353, 355, 357,
	359, 0, 391, 393, 394, 396, 398, 399, 400, 402,
	-2, 0, 509, 510, 512, 514, -2, 0, 1104, 1106,
	1108, 0, 680, 682, 0, 1111, 1113, 1115, 0, 0,
	704, 705, 0, 1633, -2, 696, 698, 700, 702, 773,
	775, 777, 779, 781, 783, 785, 787, 789, 791, 792,
	794, 796, 798, 800, 802, 803, 805, 807, 809, 810,
	812, 813, 815, 817, 819, 821, 823, 825, 827, 829,
	831, 833, 835, 837, 839, 841, -2, 844, 845, 846,
	848, -2, -2, 0, -2, -2, -2, 1537, 45, 47,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	453, 455, 457, 459, 461, 464, 466, 468, 1691, 516,
	518, 520, 522, 524, 526, 528, 0, 0, -2, 1705,
	0, 0, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 117, 118, 119, 120, 121, 122, 123, 82,
	83, 84, 86, 87, 88, 89, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 114, 115, 80, 0,
	0, 1664, 1666, 1668, 1670, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	33, 35, 37, 578, 582, 585, 587, 589, 593, 596,
	602, 604, 606, 561, 562, 565, 2403, 2421, 2422, 2423,
	2426, 2427, 2428, 2429, 2430, 2431, 2910, 2991, 2992, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 563, 564, 1298, 0,
	645, 643, 2388, 646, 2697, 648, 650, 503, 504, 505,
	506, 507, 508, 0, 673, 659, 1703, 674, 676, 677,
	678, 679, 640, 638, 0, 678, 673, 2458, 671, 1517,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 432, 1357, 1358, 1359, 1502, 1503, 2748, 1544,
	0, 249, 693, -2, -2, 2875, -2, 727, 728, -2,
	-2, 742, 746, 737, 2879, 0, 2751, 2734, -2, 749,
	1520, 1522, 1524, 849, 850, 851, 2407, 855, 853, 865,
	866, 867, 0, 884, -2, 0, 2454, 2719, -2, -2,
	885, 886, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 42, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 259, -2, -2, -2, -2, 0,
	0, 2798, 2513, 2356, 2423, 2359, 2354, 354, 356, 358,
	360, 361, 0, 0, 0, 0, 0, 0, 0, 392,
	395, 397, 401, -2, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 1170, 1171,
	1424, 0, 0, 0, -2, 511, 513, 566, 567, 0,
	1692, 1692, 574, 575, -2, 0, 0, 0, 0, 324,
	314, 1105, 1107, 1109, 1110, 0, 0, 0, 0, 0,
	681, 683, 0, 0, 2792, 291, 1112, 1114, 1116, 1117,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 697,
	699, 701, 703, 774, 776, 778, 780, 782, 784, 786,
	788, 790, 793, 795, 797, 799, 801, 804, 806, 808,
	811, 814, 816, 818, 820, 822, 824, 826, 828, 830,
	832, 834, 836, 838, 840, 842, 843, 892, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 994, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 1085, 0, 0, 895, 898, 899,
	900, 901, 902, 903, 0, 967, 992, 993, 1003, 847,
	0, 1338, 1693, 1546, 1527, 1541, 1546, 1529, 1530, 1531,
	1532, 1533, 1538, 1540, 1534, 1535, 1536, 46, 48, 50,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 454,
	456, 458, 460, 462, 465, 467, 469, -2, 1662, 1663,
	517, 519, 521, 523, 525, 527, 529, 684, 0, 687,
	0, 897, 686, -2, 0, 1697, 1697, 1697, 0, 0,
	1663, 1661, 0, 690, 691, 753, 754, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 2230, 2058, 0, 755,
	-2, 2091, 2093, 2850, 2670, 2875, 2229, 2095, 2096, 2097,
	2098, 2099, 0, 2101, 2102, 2103, 2104, 2105, 2106, 0,
	2108, 0, 2113, 2114, 2115, 0, 2857, 2333, 2417, -2,
	0, 0, 2863, 2413, 0, 2196, 2131, -2, -2, 2440,
	2419, 1902, 1903, 1904, 1905, 1906, -2, -2, 2893, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	0, 2838, 2858, 2859, 2864, 2866, 2860, 2847, 2156, 2527,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1929, 1938, -2, -2, -2, -2, -2,
	-2, -2, 2851, 2852, 2869, 2872, 2878, 2883, 2884, 2856,
	2865, 2892, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 1930, -2,
	-2, -2, -2, 1680, 2712, 1683, 1298, 1681, 1665, 1667,
	0, 1669, 0, 0, 0, 1674, 1700, 1698, 0, 1749,
	1678, 1679, 1772, 1772, 1796, 0, 1777, 0, 1796, 1692,
	1823, 0, 1783, 2739, 2132, 2133, 0, 2423, 2418, -2,
	-2, 2890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 647, 649, 0, 0, 0,
	672, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 438, 439, 2858, 0, 0, 0, 444,
	0, 446, 447, 448, 449, 450, 451, 452, 219, 2858,
	534, 559, 0, 219, 2858, 537, 219, 2858, 540, 0,
	543, 1422, 219, 2858, 546, 2384, 219, 2858, 549, 551,
	2392, 219, 2858, 555, 2399, 2397, 556, 0, 558, 239,
	235, 236, 237, 238, 1513, 1514, 1515, 1516, 0, 1543,
	1423, 695, 0, 721, 0, 725, 726, 2846, -2, 0,
	2760, 730, 731, -2, 733, 1547, 1551, 1552, 1553, 1554,
	1555, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	722, 723, 740, 741, 747, 750, 0, 858, 854, 868,
	0, 883, 0, 884, 884, 2373, 2364, 2365, 0, 0,
	884, 884, 0, 0, 887, 888, 889, 890, 891, 79,
	0, 2858, 1823, 81, 0, 2378, 2448, 2449, 2450, 2451,
	2452, 2891, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968,
	2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988,
	2989, 2990, 2893, 85, 0, 2858, 90, 0, 2858, 0,
	-2, 103, 0, 116, 0, 143, -2, -2, -2, 124,
	0, 2858, 0, 2353, -2, 0, 231, 315, 316, 317,
	0, 622, 0, 631, 327, 328, 2436, 2437, 2444, 2445,
	2446, 2447, 0, 1142, -2, 0, 1351, 1353, 1353, 0,
	-2, 0, 0, 0, 1095, 2350, 2355, 1096, 2374, 1097,
	2360, 0, 362, 363, 364, 365, 366, 0, 367, 2858,
	369, 370, 0, 372, 373, 2858, 375, 376, 0, 378,
	0, 380, 0, 271, 275, 2858, 2858, 405, 408, 0,
	410, 411, 0, 413, 0, 0, 0, 417, -2, 433,
	0, 430, 420, 421, 423, 424, 425, 426, 427, 0,
	473, 471, 2389, 0, 0, -2, 2858, 0, 1139, 0,
	0, 1402, -2, 0, 1344, 0, 1409, 2858, 1405, 0,
	-2, 0, 1690, 2858, 1564, 1174, 1175, 1176, 1177, 1835,
	500, 0, 1597, 0, 1599, 0, 1619, 1829, 1772, 0,
	0, 1834, 0, -2, 619, 2406, -2, 569, 0, 570,
	0, -2, 0, 341, 0, 0, 1120, 1122, 1123, 1125,
	1126, 1129, 1130, 1131, 1132, 0, 1134, 1809, 292, 294,
	0, 0, 0, 0, 1119, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 0, 0, 706, 0, 0, 893,
	894, 0, 0, 910, 911, 912, 0, 341, 2752, 2707,
	2549, 919, 0, 922, 925, -2, 0, 0, 0, 0,
	929, 0, 934, 935, 936, 0, -2, 0, 943, 945,
	1103, 947, 0, 0, 949, 0, 953, 0, 956, 0,
	958, 0, 960, -2, -2, -2, 968, 969, -2, 974,
	-2, 0, 978, -2, 0, 981, 0, 984, -2, 0,
	994, 990, 991, 0, 0, 0, 0, 1011, 1012, 0,
	1021, 0, 1024, 1025, 1026, 0, 0, 1031, 1032, 0,
	1034, 1035, 1036, 1038, 1039, 1040, 0, 2827, 2757, 2513,
	0, 1048, -2, 1054, 1056, 0, -2, 0, 1072, 0,
	1076, 0, 0, 1084, 0, 0, 896, 0, 904, 905,
	219, 1827, 1526, -2, 1528, 0, -2, 0, 685, 0,
	689, 1722, 1648, 1645, 0, 1719, 1720, 1649, 0, 0,
	0, 1656, 0, 1695, 1696, 0, 0, 0, 1635, 1636,
	0, 0, 0, 0, 2235, 2236, 2237, 2238, 2251, 2239,
	2240, 2250, 2248, 2249, 2241, 2242, 2247, 2261, 2262, 2252,
	2253, 2243, 2256, 2254, 2255, 2257, 2258, 2259, 2260, 0,
	0, 2266, 0, 2244, 2245, 2246, 2274, 0, 0, 2275,
	0, 2277, 0, 2267, 2263, 2264, 2265, 0, 2037, 2039,
	2341, 0, 0, 0, 2273, 2268, 2269, 1975, 1976, 1977,
	1978, 1979, 2012, 2016, 2017, 0, 0, 2092, 2338, 2337,
	2094, 0, 0, 2289, 0, 2107, -2, 0, 2230, 2284,
	0, 0, 2116, 2117, 2118, 0, 0, 2289, 0, 0,
	2332, 2128, 2129, 1967, 0, 0, 2198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1916, 1915, 0, 1917, 0,
	1918, 1919, 1926, 1939, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 2313, -2, 0, 0,
	0, 0, 1931, 0, 1682, 0, 0, 1753, 2342, 2346,
	2347, 1753, 1753, 0, 0, 2290, 1820, 1820, 0, 0,
	1815, 1815, 1815, 1813, 1796, 0, 1796, 1806, 0, 1796,
	1796, 0, -2, 1777, 0, 0, 1806, 0, 1790, 607,
	609, 611, 613, 614, 615, 617, 1824, 1825, 0, 0,
	0, 0, 2424, 0, 0, 0, 0, 2396, 0, 0,
	2409, 0, 0, 2383, 387, 388, 0, 0, 0, 2809,
	2751, 0, -2, 652, 675, 1692, 0, 2292, 1850, 1854,
	0, 1856, 1857, 1858, 1859, 1860, 0, 0, 1851, -2,
	1927, 1929, 1950, 2441, 2442, 2443, 1910, 1911, 1912, 1913,
	1914, 1922, 1909, 1909, 1909, 1920, 1949, 1941, 1949, 1945,
	1895, 1896, 1897, 1932, 1933, 1934, 1935, 0, 2809, 2751,
	0, -2, 0, 662, 0, 0, 1630, 434, 0, 441,
	442, 443, 0, 530, 0, 217, 218, 0, 219, 2858,
	535, 0, 538, 0, 219, 2858, 2348, 544, 0, 547,
	0, 0, 553, 0, 0, 0, 0, 0, 219, 1632,
	0, 0, 0, 0, -2, 735, 743, 744, 745, 0,
	1549, 0, 1556, 764, 765, 766, 1558, 1559, 0, 1561,
	738, 767, 768, 769, 770, 771, 772, 0, 2362, 2363,
	2368, 2369, 0, 0, 736, 757, 739, 0, 751, 861,
	856, 857, 869, 870, 0, 0, 2366, 2367, 0, 0,
	875, 876, 125, 1499, 0, 0, 172, 0, 1499, 1499,
	0, 0, 0, 0, 200, 0, 0, 1208, 0, 0,
	0, 0, 143, 157, 168, 137, 138, 139, 0, 0,
	0, 0, 0, 0, 91, 1320, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 0,
	0, 105, 106, 0, 0, 111, 112, 0, 156, 0,
	0, 0, 0, 0, 1594, 0, 147, 143, 0, 0,
	142, 144, 127, 0, 0, 143, 158, 170, 0, 206,
	208, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 241, 0, 621, 623, 0, 0, 0, 0, 629,
	0, 632, 0, 0, 0, 1345, 0, 0, 0, 1689,
	0, 0, 0, 0, 2858, 1497, 0, 1482, 0, 1809,
	2600, -2, -2, 292, 1809, 1094, 0, 0, 2424, 2358,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 409, 412, 414, 415, 416, 0, 1401, 0, 422,
	463, 1267, 2858, 0, 0, 490, 485, 0, 487, 0,
	0, 0, 1319, 2858, 1317, 2393, 0, 1342, 0, 1298,
	2858, 2391, 0, 0, 0, 1410, 2433, 1419, 1423, 1582,
	0, 502, 0, 1600, 1602, 0, 0, 1830, 0, 1832,
	1772, 1692, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 1133, 298, 0, 1808, 0, 0, 329,
	1809, 292, 2725, 0, 1118, 341, 341, 1809, 708, 1809,
	710, 0, 0, 913, 914, 0, 341, 341, 341, 920,
	921, 923, 924, -2, -2, -2, -2, 926, 927, 1018,
	0, 0, 0, 1017, 937, 0, 939, 942, 946, 0,
	1088, 2734, 2751, 2809, 1101, 1018, 2513, 1018, 2513, 1018,
	2513, 1018, 1018, 962, 1006, 1014, 973, 980, 0, 975,
	979, 982, 985, 0, 987, 995, 0, -2, 0, 998,
	0, 1000, 0, 1002, 1018, 1019, 1022, 0, 1030, 1033,
	0, 1041, 1042, 1043, 1044, 2404, 1045, 1046, 1047, -2,
	1051, 1052, 0, 1063, 1068, 1069, 1065, 0, 0, 0,
	0, 0, 0, 1079, 1080, 0, 0, 1087, 0, 906,
	1337, 0, 1539, 1722, 1648, 688, 1639, 1721, 1640, 1647,
	1650, 0, 0, 1652, 0, 1654, 0, 1717, 1718, 1725,
	1726, 0, 1736, 1737, 1729, 0, -2, 0, 0, 1732,
	1733, 1658, 0, 1675, 1676, 1677, 1706, 1709, 1438, 0,
	2991, 1971, 1845, 1972, 1973, 2377, 0, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, -2, -2, -2,
	-2, -2, -2, -2, -2, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, -2, -2, -2, 2013,
	2014, 2015, -2, 2276, 2278, 0, 2341, 0, -2, 0,
	-2, -2, -2, -2, 2034, 0, 2036, 2041, 2043, 2045,
	0, 0, 0, 0, 2340, 2055, 2324, 2325, 0, 0,
	2232, 2233, 2234, 2040, 0, 2059, 2339, 2336, 0, 0,
	2270, 0, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 0, 2288, 1705, 2120, 0,
	0, 0, 0, 2127, 2112, 2286, 0, 2285, 0, 0,
	0, 2296, 0, 2331, 2327, 0, 2375, 1966, 1953, 1954,
	1955, 1956, 1957, 1958, 1968, 0, 2372, 2410, 2416, 2206,
	0, 0, 0, 2157, 2158, 2159, 2160, 2161, 0, 2163,
	2164, 0, 2166, 2167, 0, 2169, 2170, 0, 2172, 2173,
	2174, 2175, 2176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 0, 0, 2178, 0, 2299, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2180, 0, 2182, 2290,
	2310, 0, 0, 2060, 0, 0, 0, 0, 2230, 0,
	2185, 2290, 2318, 0, 0, 0, 0, 0, 2290, 0,
	2323, 0, 2192, 0, 2194, 1684, 0, 0, 1840, 0,
	0, 0, 2345, 1840, 1840, 0, 1748, 0, 0, 1816,
	1817, 1818, 1819, 0, 0, 1820, 0, 1810, 1814, 1811,
	1812, 1806, 1769, 0, 0, 2379, 1806, 1775, 1805, 0,
	1298, 1795, 1806, 1806, 0, -2, 1779, 1796, 0, 0,
	608, 610, 612, 616, 618, 0, 0, 1705, -2, 0,
	-2, 343, 1297, 0, 0, 0, 0, 0, 0, 642,
	644, 0, 0, 550, 0, 0, 658, 0, 636, 0,
	639, 0, 1841, 1844, 0, 0, 1855, 1861, 1862, 0,
	-2, 0, 0, 1951, 0, 0, 0, 0, 0, 670,
	0, 673, 0, 0, 0, 445, 560, 219, 532, 0,
	219, 219, 541, 0, 0, 219, 552, 219, 2400, 219,
	2398, 240, 557, 1631, 252, 0, 724, 0, 1548, 1557,
	0, 761, 0, 763, 0, 2370, 2371, 0, 752, 0,
	859, 0, 871, 872, 873, 874, 0, 0, 0, 0,
	1498, 0, 0, 1445, 0, 0, 176, 2858, 0, 221,
	0, 0, 1260, 2385, 0, 1250, 0, 0, 2535, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 140, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 1322, 1324,
	1331, 1333, 0, 1327, 1328, 0, 1330, 1332, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 1354,
	0, 0, 1355, 1356, 1570, 1571, 0, 1593, 1594, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 2352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 624, 625, 626, 627, 337, 334, 336,
	628, 633, 0, 634, 0, 0, 0, 1347, 0, 1397,
	1395, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 0, 0, 0,
	0, -2, 1349, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 332, 2351, 2361, 0, 1127,
	1128, 368, 371, 374, 377, 258, 0, 0, 407, 418,
	0, 0, 1180, 1152, 0, 0, 472, 341, 0, 0,
	486, 490, 2402, 1137, 1315, 1318, 0, 1298, 2858, 1365,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 2858,
	2380, 2432, 2433, 1584, 1594, 0, 1840, 0, 1617, 1603,
	0, 0, 0, 1617, 1621, 1622, 1624, 1625, 0, 0,
	1831, 1837, 568, 620, 1692, 1692, 341, 339, 2673, 0,
	0, 1606, 1608, 0, 0, 0, 284, 0, 295, 1809,
	293, 0, 298, 0, 0, 1809, 292, 0, 484, 707,
	712, 908, 0, 341, 916, 917, 918, 964, 1008, 1016,
	1067, 928, 930, 931, 932, 0, 0, 0, 1102, 1098,
	1099, 1100, 948, 1018, 951, 1018, 954, 1018, 957, 959,
	977, 983, 996, 989, 997, 0, 0, 0, 1010, 0,
	1028, 0, 1037, 1050, 0, 0, 0, 0, 0, 0,
	0, 1073, 1074, 1075, 1077, 1082, 1081, 1086, 907, 1828,
	1643, 1644, 1646, 0, 1655, 0, 0, 1731, -2, -2,
	1730, 1734, 1735, -2, -2, -2, -2, 1651, 0, 1660,
	1657, 0, 1716, 1436, 1437, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 2056, 0, -2, 2035, 2038, 2042,
	2044, 2046, 0, 0, 0, 0, 0, 0, 2279, 0,
	2281, 2057, 2334, 2337, 2272, 0, 2228, 0, 0, 1704,
	1705, 1705, 0, 2126, 0, 2287, 0, 2294, 2295, 0,
	2119, 0, 2328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2130, 0, 0, 0, 0, 2162, 2165, 2168,
	2171, 0, 0, 0, 0, 2151, 0, 0, 0, 2155,
	1921, 1907, 0, 1949, 1947, 1948, 1942, 1949, 1946, 1899,
	0, 1898, 0, 2177, 0, 2179, 2181, 0, 0, 2183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2085, 2184, 2316,
	2317, 0, 0, 0, 0, 0, 0, 2190, 0, 2322,
	2191, 2193, 1692, 0, 1685, 0, 1750, 1739, 1839, 0,
	2343, 1809, 1752, 1754, 2344, 2382, 1739, 1739, 0, 2291,
	0, 0, 1800, 0, 0, 0, 1802, 1773, 0, 0,
	1767, 0, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1774,
	1298, 1804, 1776, 1780, 2410, 0, 1806, 0, 1791, 0,
	1793, 1826, 0, 1785, 1788, 0, 0, 2425, 1840, 0,
	381, 389, 390, 382, 383, 384, 385, 0, 1485, 0,
	0, 0, 0, 0, 2293, 0, 1846, 0, 1852, 0,
	0, 0, 0, 660, 0, 0, 0, 0, 0, 1629,
	440, 531, 219, 536, 539, 2349, 219, 545, 548, 554,
	248, 0, 720, -2, 759, 760, 762, 0, 758, 864,
	860, 173, 1499, 0, 0, 0, 1441, 0, 1163, 0,
	1158, 1159, 1443, 1447, 1453, 1456, 0, 178, 2858, 190,
	0, 2858, 0, 1224, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 2858, 219, 2858, 219, 194, 196, 199,
	0, 205, 201, 0, 1160, 0, 1212, 0, 0, 1215,
	126, 1499, 0, 0, 129, 133, 145, 0, 0, 0,
	155, 0, 0, 0, 1458, 1462, 1470, 0, 0, 0,
	1325, 1326, 1329, 1335, 92, 0, 0, 0, 1466, 1468,
	1474, 104, 107, 2858, 2394, 109, 2858, 0, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 131, 135,
	146, 0, 1476, 128, 0, 234, 0, 0, 224, 219,
	2858, 0, 226, 0, 227, 228, 242, 0, 0, 0,
	0, 0, 0, 630, 0, 1140, 1141, 1396, 0, 1340,
	1341, 0, 1352, 1346, 0, 0, 0, 0, 0, 1478,
	1479, 0, 0, 0, 1497, 1494, 1809, 254, 0, 1809,
	262, 0, 2357, 0, 276, 404, 0, 0, 0, 0,
	1179, 1278, 1181, 1183, 1184, 1185, 221, 0, 2433, 1250,
	2589, 2433, 0, 0, 1147, 0, 0, 0, 478, 474,
	0, 483, 489, 488, 494, -2, 0, 0, 0, 0,
	-2, 0, 0, 1412, 1406, 1407, 0, 0, 0, 0,
	2858, 1586, 1594, 0, 1690, 1705, 501, 1595, 1617, 0,
	0, 0, 1605, 1601, 1598, 1840, 0, 0, 0, 0,
	0, 1833, 1836, 571, 572, 318, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 296, 0, 299, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 0, 0, 0,
	0, 298, 330, 286, 1809, 0, 298, 0, 0, 709,
	0, 0, 915, 0, 938, 941, 950, 952, 955, 999,
	1001, 1018, 0, 1029, 1057, 2381, 1058, 1202, 0, 1202,
	0, 0, 1078, 1653, 0, 1728, 1659, 1710, 1711, 0,
	1438, 0, 1974, 2019, 0, 0, -2, 0, 0, 2023,
	0, 0, 0, -2, 0, 0, 0, 2280, 2282, 0,
	2336, 2271, 2121, 0, 0, 0, 2125, 2109, 2110, 0,
	2231, 2297, 2326, 2330, 0, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 0, 2376, 2411, 2415, 2204, 2205, 2209, 2390,
	0, 0, 0, 2134, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1944, 0, 0, 2298, 2309, 2311, 2061,
	2062, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, -2, -2, -2, 2079, 2080, 2081, -2, -2, -2,
	2086, 0, 0, 0, 2312, 2314, 2315, 2319, 2320, 0,
	2187, 2188, 2189, 2321, 0, 1692, 1686, 1747, 0, 1838,
	1751, 0, 1747, 1747, 1699, 1798, 0, 0, 1822, 0,
	1770, 0, 1771, 0, 0, 1803, 0, 1778, 1781, 1782,
	1792, 0, 1784, 0, 1787, 0, 2121, -2, 342, 344,
	346, 0, 349, 350, 0, 0, 0, 651, 0, 1485,
	1485, 0, 653, 637, 0, 0, 1848, 0, 0, 1924,
	1928, 1952, 664, 666, 0, 0, 2809, 2751, 0, 663,
	533, 542, 250, 0, 1807, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 220, 0, 1259,
	0, 1222, 0, 0, 1249, 0, 0, 1265, 180, 181,
	182, 0, 0, 0, 0, 192, 0, 0, 188, 0,
	198, 204, 203, 0, 1209, 0, 0, 0, 0, 1446,
	0, 0, 0, 152, 153, 154, 0, 159, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 1577, 0, 1567, 149, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 1435, 244, 0, 0, 0,
	0, 0, 338, 333, 335, 0, 1339, 1399, 1400, 1348,
	1459, 1463, 1471, 0, 0, 0, 0, 0, 678, 1496,
	0, 262, 260, 0, 263, 0, 266, 267, 0, 0,
	262, 256, 0, 0, 0, 1298, 419, 1150, 1266, 0,
	0, 1268, 1186, 1190, 0, 2433, 2433, 0, 2387, 0,
	1148, 0, 0, 1267, 470, 0, 477, 0, 491, 0,
	0, 1319, 0, 0, 1343, 1368, 1298, 0, 1411, 1413,
	0, 1421, 0, 0, 0, 1588, 1594, 0, 1581, 1582,
	1724, 1596, 1615, -2, 0, 0, 1705, 1623, 1620, 1626,
	1627, 0, 0, 0, 321, 0, 1607, 1609, 0, 1121,
	1124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 298, 1809, 288, 1809, 325, 0, 909, 933, 1009,
	1027, 1059, 1201, 0, 0, 1061, 0, 0, 1727, 1714,
	1715, 1712, 1438, 2021, 2025, 0, 0, 0, 2027, -2,
	0, 2049, -2, -2, 2283, 2335, 2100, 1705, 2122, 2124,
	2111, 2329, 1969, 0, 2211, 2208, 0, 2195, 0, 2146,
	2147, 0, 0, 2150, 2152, 2153, 2154, 1908, 1901, 1900,
	2308, 0, 0, 0, 0, 2186, 1687, 0, 2200, 0,
	0, 1755, 2200, 2200, 1799, 0, 1801, 1768, 1756, 0,
	1765, 0, 2411, 1794, 1786, 0, 0, 347, 0, 351,
	352, 386, 0, 654, 655, 0, 0, 1842, 1847, 0,
	1853, 1923, 0, 0, 0, 0, 0, 251, 0, 862,
	863, 174, 175, 1164, 1162, 1450, 1454, 1451, 0, 177,
	0, 0, 1223, 0, 1226, 0, 0, 0, 0, 1233,
	1250, 0, 0, 0, 0, 0, 0, 1252, 0, 1251,
	0, 0, 1282, 0, 1426, 1433, 0, -2, 0, 0,
	0, 184, 210, 0, 0, 0, 0, 213, 1500, 186,
	0, 0, 219, 219, 1161, 0, 0, 1442, 1444, 1457,
	0, 0, 0, 0, 162, 0, 0, 1460, 1464, 1472,
	1467, 1469, 1475, 0, 110, 0, 1578, 0, 148, 0,
	0, 0, 1477, 232, 233, 0, 219, 0, 219, 225,
	219, 1435, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 1481, 253, 0, 0, 0, 0, 0, 255, 331,
	262, 406, 0, 1211, 0, 1278, 1270, 1271, 1272, 0,
	1182, 1277, 1279, 0, 0, 1187, 0, 0, 0, 0,
	1167, 1149, 0, 1180, 1152, 0, 475, 492, 0, 495,
	0, 498, 1138, 1316, 1360, 1298, 1363, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 1590, 1594, 0,
	1583, 1584, 1617, 1723, 0, 0, 0, 1604, 1724, 0,
	340, 341, 0, 341, 300, 0, 301, 302, 303, 310,
	311, 312, 313, 287, 290, 298, 711, 713, 0, 0,
	719, 1200, 0, 0, 0, 0, 1713, 2029, -2, -2,
	2050, 0, 2412, 2414, 1705, 0, 2197, 1707, 0, 0,
	-2, 0, 0, 0, 1688, 1671, 0, 1746, 1738, 1740,
	1742, 2737, 2508, 2857, 1672, 1673, 1821, 0, 0, 1789,
	348, 1484, 656, 0, 0, 1849, 0, 661, 0, 0,
	0, 852, 0, 0, 1452, 179, 0, 0, 1227, 1228,
	2386, 1230, 0, 1232, 1234, 1235, 1152, 0, 1239, 0,
	2435, 0, 1244, 1247, 1248, 0, 0, 1261, 1283, 0,
	1292, 0, 1428, 1438, 1432, 0, 1430, 1294, 0, 183,
	212, 185, 214, 209, 0, 1435, 0, 187, 197, 0,
	0, 130, 0, 0, 2502, 165, 163, 161, 108, 1439,
	151, 0, 132, 0, 234, 243, 1434, 245, 229, 219,
	0, 0, 1461, 1465, 1473, 0, 1488, 1489, 1490, 1491,
	0, 0, 0, 0, 264, 0, 265, 268, 269, 0,
	0, 1152, 1210, 1151, 1269, 0, 1280, 1152, 0, 0,
	0, 0, 0, 0, 1154, 0, 1153, 0, 0, 476,
	479, 0, 482, 0, 0, 0, 0, 0, 1367, 0,
	1414, 1412, 0, 1420, 0, 0, 0, 1566, 0, 0,
	1585, 1586, 499, 1610, 0, 0, 1617, 1628, 320, 0,
	323, 297, 289, 0, 715, 0, 717, 0, 1060, 1062,
	0, 0, 2123, 2215, 0, 0, 2148, 2149, -2, 0,
	2089, 2199, 2201, 0, 0, 0, 0, 0, 1757, 1766,
	1485, 1843, 668, 665, 667, 0, 1448, 0, 1455, 221,
	1225, 1229, 0, 1236, 0, 0, 0, 1240, 1302, 0,
	0, 1319, 1319, 1253, 0, 0, 1286, 1287, 1207, 0,
	1288, 1289, 1290, 1427, 1716, 1433, 1152, 0, 0, 211,
	216, 0, 0, 0, 0, 0, 0, 150, 0, 223,
	246, 1435, 0, 0, 1492, 1493, 0, 0, 261, 280,
	0, 1361, 1154, 0, 1281, 1188, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1189, 1294, 0, 0, 1258,
	1165, 0, 1168, 0, 1150, 0, 480, 481, 496, 0,
	497, 0, 0, 1368, 0, 0, 1421, 0, 0, 1573,
	1565, 1594, 1587, 1588, 1840, 0, 1618, 0, 714, 0,
	0, 1070, 1071, 0, 0, 0, 0, 2210, 1708, 2090,
	0, 0, 1741, 1743, 1744, 1745, 657, 0, 1449, 191,
	0, 1296, 1238, 1307, 0, 0, 0, 0, 0, 1254,
	1284, 1285, 1282, 1206, 0, 1431, 1429, 1263, 1296, 1298,
	189, 0, 1294, 0, 1216, 0, 0, 1219, 0, 0,
	166, 2502, 164, 0, 219, 635, 1485, 219, 0, 283,
	0, 274, 272, 273, 1146, 0, 1274, 1276, 1292, 1294,
	1207, 0, 1169, 1211, 1167, 493, 1362, 1366, 1364, 1404,
	1294, 0, 1292, 0, 1580, 1594, 1574, 1575, 0, 1590,
	0, 0, 341, 716, 718, 2207, 2227, 2216, -2, 2812,
	2509, 0, 2227, 2227, 2202, 2203, 0, 0, 1152, 0,
	1241, 1303, 1304, 0, 1299, 1300, 1301, 2434, 1242, 1243,
	1245, 1246, 1840, 0, 1293, 1302, 215, 1152, 1213, 0,
	0, 1214, 0, 0, 169, 0, 171, 247, 1483, 1486,
	0, 270, 0, 0, 1143, 1145, 1152, 0, 1207, 1292,
	1152, 0, 0, 0, 1152, 1154, 1292, 0, 1207, 0,
	1569, 1579, 0, 1589, 1566, 0, 1613, 0, 322, 2212,
	0, 0, 2218, 2219, 2220, 2221, 2222, 2213, 2214, 669,
	1231, 1237, 0, 1305, 0, 1306, 0, 0, 0, 1262,
	1291, 1307, 195, 1217, 0, 1220, 0, 167, 0, 0,
	278, 279, 1273, 1275, 1152, 1207, 1840, 1155, 0, 1157,
	1154, 1166, 1207, 0, 1152, 0, 1592, 1568, 1572, 2395,
	1573, 1611, 0, 0, 0, 2224, 2225, 0, 0, 0,
	1308, 0, 1311, 1312, 0, 1309, 1282, 0, 0, 219,
	0, 1840, 1152, 1257, 1156, 1146, 1152, 1294, 1840, 1292,
	1562, 1594, 1580, 0, 1840, 2223, 2226, 2217, 1295, 1310,
	1313, 1314, 1264, 0, 0, 1487, 281, 0, 1255, 1840,
	1144, 1840, 1292, 1417, 1207, 0, 1569, 1840, 1614, 1204,
	0, 0, 1256, 1415, 1207, 1152, 1591, 1563, 1612, 1218,
	1203, 0, 282, 1152, 1840, 0, 1840, 1418, 0, 1416,
	1204, 1221,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 612, 3, 618, 613, 3,
	624, 625, 616, 614, 629, 615, 626, 617, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 632, 3,
	604, 606, 605, 609, 628, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 622, 3, 623, 619, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 630, 611, 631, 607,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 608, 57947, 610, 57948, 620, 57949, 621,
	57950, 627, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1541
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1546
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1548
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1552
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1569
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "ALTER")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1765
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1777
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1866
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1898
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1931
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1996
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2102
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2111
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2122
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2130
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2141
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2151
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2161
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2170
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2181
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2187
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2213
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2218
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2353
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2363
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2424
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = nil
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = true
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = false
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2619
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2623
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = nil
		}
	case 284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3284
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3293
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3299
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3304
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3309
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = nil
		}
	case 342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3417
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3613
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3644
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "CREATE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3678
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplemented(sqllex, "create access method")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplemented(sqllex, "create cast")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplemented(sqllex, "create publication")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplemented(sqllex, "create rule")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplemented(sqllex, "create server")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3713
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3717
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "drop server")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3864
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3899
		{

			sqlVAL.union.val = nil
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			return helpWith(sqllex, "DELETE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3986
		{
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4012
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DROP")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4278
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4286
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4302
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4310
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "DELETE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "INSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "DELETE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "INSERT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4499
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "GRANT")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4735
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "RESET")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "RESET")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "USE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "USE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return unimplemented(sqllex, "set from current")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5095
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5100
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = tree.Low
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = tree.Normal
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.High
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = true
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = false
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = false
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "FETCH")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5414
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = int64(1)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = int64(-1)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = int64(1)
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = int64(1)
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = int64(-1)
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5469
		{
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5470
		{
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.str = "client_encoding"
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.str = "timezone"
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5623
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5632
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5785
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5842
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5853
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = true
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = true
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = false
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5964
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6008
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6013
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6015
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = true
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = false
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6034
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6039
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6080
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = true
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = false
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6124
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6132
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6142
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6153
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6175
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6219
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6224
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6229
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6234
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6308
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6316
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6360
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6383
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6454
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6464
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6653
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6930
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6945
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{

			sqlVAL.union.val = nil
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.str = ""
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = nil
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7012
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7052
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7065
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7079
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7081
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7162
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.str = ""
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7425
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{

			sqlVAL.union.val = true
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = false
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7584
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7622
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7705
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7706
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7708
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7792
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7877
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7886
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7894
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7937
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7942
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.str = ""
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = true
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{

			sqlVAL.union.val = true
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = false
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8069
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8083
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8095
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8107
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8117
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8127
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8131
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = true
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = true
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = nil
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8274
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8302
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8304
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8306
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8345
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8362
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8380
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8396
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8412
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = false
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = true
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = false
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = true
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = false
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8476
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.str = ""
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = ""
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8549
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8555
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8780
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8786
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8798
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8804
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8818
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8824
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.Types
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8972
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8987
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9113
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9142
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9163
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9204
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9206
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.str = ""
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{

		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9360
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.str = ""
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.str = ""
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = ""
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.str = ""
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9415
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9441
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9701
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9845
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9880
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9881
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9882
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9987
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10003
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = true
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = false
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10057
		{
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = nil
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = true
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = false
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = false
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = true
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10101
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10163
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10348
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10350
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10387
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10446
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10465
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10507
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10517
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10563
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10593
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10626
		{
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = nil
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = true
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = false
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.str = tree.AstFull
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.str = tree.AstRight
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.str = tree.AstInner
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10746
		{
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.str = tree.AstHash
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.str = ""
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10844
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10860
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = true
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = true
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = false
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10922
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10930
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10931
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10949
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10959
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10979
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11028
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = types.Geography
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11090
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11098
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = nil
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = types.Int2
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = types.Int
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = types.Float4
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = types.Float
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11175
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11191
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = types.Bool
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = types.Float
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11224
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11230
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11252
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = types.String
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = true
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = false
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = types.Date
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11301
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11309
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11323
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11340
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11357
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = true
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = false
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = false
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = types.Interval
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = nil
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11510
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11570
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11914
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12044
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12153
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12179
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12203
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12237
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12248
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12249
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12264
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12273
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12339
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12464
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12478
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12487
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12505
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12510
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12515
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12520
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12525
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12530
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12539
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12540
		{
			return unimplemented(sqllex, "treat")
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12566
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12613
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.str = ""
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12702
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12715
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12812
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13228
		{
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13229
		{
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13233
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13309
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13382
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13398
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13407
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13418
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13427
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13452
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13623
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13627
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13631
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13671
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13684
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13691
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13716
		{
			sqlVAL.str = ""
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
