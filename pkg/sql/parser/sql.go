// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const STREAM = lex.STREAM
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"STREAM",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12757

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1464,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	255, 373,
	-2, 0,
	-1, 73,
	237, 224,
	501, 224,
	-2, 0,
	-1, 84,
	225, 1212,
	239, 1212,
	255, 369,
	381, 369,
	391, 982,
	427, 369,
	439, 982,
	485, 982,
	512, 369,
	538, 982,
	-2, 0,
	-1, 90,
	131, 1464,
	232, 1464,
	523, 1464,
	524, 1464,
	-2, 0,
	-1, 106,
	148, 1435,
	167, 1435,
	180, 1435,
	235, 1435,
	268, 1435,
	333, 1435,
	343, 1435,
	518, 1435,
	-2, 1406,
	-1, 145,
	156, 844,
	254, 844,
	384, 811,
	444, 811,
	484, 811,
	504, 844,
	506, 811,
	-2, 0,
	-1, 147,
	4, 1466,
	21, 1466,
	22, 1466,
	23, 1466,
	24, 1466,
	25, 1466,
	26, 1466,
	27, 1466,
	28, 1466,
	30, 1466,
	31, 1466,
	37, 1466,
	42, 1466,
	43, 1466,
	45, 1466,
	46, 1466,
	47, 1466,
	48, 1466,
	49, 1466,
	50, 1466,
	51, 1466,
	52, 1466,
	54, 1466,
	55, 1466,
	56, 1466,
	57, 1466,
	59, 1466,
	60, 1466,
	61, 1466,
	62, 1466,
	63, 1466,
	64, 1466,
	65, 1466,
	69, 1466,
	70, 1466,
	71, 1466,
	72, 1466,
	74, 1466,
	75, 1466,
	76, 1466,
	80, 1466,
	81, 1466,
	82, 1466,
	83, 1466,
	84, 1466,
	85, 1466,
	86, 1466,
	89, 1466,
	90, 1466,
	91, 1466,
	92, 1466,
	93, 1466,
	95, 1466,
	97, 1466,
	98, 1466,
	99, 1466,
	100, 1466,
	101, 1466,
	102, 1466,
	104, 1466,
	105, 1466,
	106, 1466,
	108, 1466,
	109, 1466,
	117, 1466,
	118, 1466,
	119, 1466,
	120, 1466,
	122, 1466,
	123, 1466,
	124, 1466,
	126, 1466,
	127, 1466,
	128, 1466,
	130, 1466,
	131, 1466,
	133, 1466,
	134, 1466,
	135, 1466,
	138, 1466,
	139, 1466,
	140, 1466,
	142, 1466,
	143, 1466,
	145, 1466,
	146, 1466,
	147, 1466,
	149, 1466,
	150, 1466,
	151, 1466,
	152, 1466,
	153, 1466,
	154, 1466,
	155, 1466,
	156, 1466,
	157, 1466,
	158, 1466,
	159, 1466,
	160, 1466,
	161, 1466,
	162, 1466,
	163, 1466,
	164, 1466,
	166, 1466,
	172, 1466,
	173, 1466,
	174, 1466,
	175, 1466,
	179, 1466,
	181, 1466,
	185, 1466,
	186, 1466,
	187, 1466,
	188, 1466,
	189, 1466,
	190, 1466,
	191, 1466,
	192, 1466,
	193, 1466,
	194, 1466,
	195, 1466,
	196, 1466,
	197, 1466,
	199, 1466,
	200, 1466,
	202, 1466,
	203, 1466,
	205, 1466,
	206, 1466,
	207, 1466,
	208, 1466,
	209, 1466,
	210, 1466,
	211, 1466,
	212, 1466,
	213, 1466,
	215, 1466,
	216, 1466,
	218, 1466,
	219, 1466,
	220, 1466,
	221, 1466,
	225, 1466,
	226, 1466,
	227, 1466,
	228, 1466,
	229, 1466,
	232, 1466,
	233, 1466,
	234, 1466,
	236, 1466,
	238, 1466,
	239, 1466,
	241, 1466,
	243, 1466,
	244, 1466,
	245, 1466,
	247, 1466,
	251, 1466,
	252, 1466,
	253, 1466,
	254, 1466,
	255, 1466,
	256, 1466,
	258, 1466,
	259, 1466,
	260, 1466,
	262, 1466,
	263, 1466,
	265, 1466,
	266, 1466,
	269, 1466,
	273, 1466,
	274, 1466,
	275, 1466,
	278, 1466,
	279, 1466,
	280, 1466,
	281, 1466,
	283, 1466,
	284, 1466,
	285, 1466,
	286, 1466,
	287, 1466,
	288, 1466,
	289, 1466,
	290, 1466,
	291, 1466,
	292, 1466,
	293, 1466,
	294, 1466,
	295, 1466,
	296, 1466,
	297, 1466,
	298, 1466,
	299, 1466,
	300, 1466,
	301, 1466,
	302, 1466,
	303, 1466,
	304, 1466,
	306, 1466,
	308, 1466,
	309, 1466,
	310, 1466,
	311, 1466,
	312, 1466,
	313, 1466,
	314, 1466,
	315, 1466,
	316, 1466,
	317, 1466,
	318, 1466,
	319, 1466,
	321, 1466,
	323, 1466,
	325, 1466,
	326, 1466,
	328, 1466,
	329, 1466,
	330, 1466,
	331, 1466,
	332, 1466,
	335, 1466,
	338, 1466,
	339, 1466,
	340, 1466,
	341, 1466,
	344, 1466,
	345, 1466,
	346, 1466,
	348, 1466,
	350, 1466,
	351, 1466,
	352, 1466,
	353, 1466,
	354, 1466,
	355, 1466,
	356, 1466,
	357, 1466,
	358, 1466,
	359, 1466,
	360, 1466,
	361, 1466,
	363, 1466,
	364, 1466,
	365, 1466,
	366, 1466,
	367, 1466,
	368, 1466,
	369, 1466,
	370, 1466,
	371, 1466,
	372, 1466,
	373, 1466,
	374, 1466,
	375, 1466,
	376, 1466,
	377, 1466,
	379, 1466,
	380, 1466,
	382, 1466,
	383, 1466,
	384, 1466,
	385, 1466,
	386, 1466,
	387, 1466,
	388, 1466,
	389, 1466,
	390, 1466,
	391, 1466,
	392, 1466,
	393, 1466,
	395, 1466,
	397, 1466,
	398, 1466,
	399, 1466,
	404, 1466,
	406, 1466,
	407, 1466,
	408, 1466,
	409, 1466,
	410, 1466,
	411, 1466,
	412, 1466,
	413, 1466,
	414, 1466,
	416, 1466,
	417, 1466,
	418, 1466,
	420, 1466,
	421, 1466,
	422, 1466,
	423, 1466,
	424, 1466,
	425, 1466,
	427, 1466,
	428, 1466,
	429, 1466,
	430, 1466,
	431, 1466,
	432, 1466,
	433, 1466,
	434, 1466,
	435, 1466,
	436, 1466,
	437, 1466,
	439, 1466,
	440, 1466,
	441, 1466,
	442, 1466,
	443, 1466,
	444, 1466,
	446, 1466,
	447, 1466,
	448, 1466,
	449, 1466,
	450, 1466,
	451, 1466,
	453, 1466,
	454, 1466,
	455, 1466,
	456, 1466,
	457, 1466,
	458, 1466,
	459, 1466,
	461, 1466,
	463, 1466,
	464, 1466,
	465, 1466,
	466, 1466,
	467, 1466,
	468, 1466,
	469, 1466,
	470, 1466,
	471, 1466,
	472, 1466,
	473, 1466,
	474, 1466,
	475, 1466,
	476, 1466,
	477, 1466,
	478, 1466,
	480, 1466,
	481, 1466,
	483, 1466,
	484, 1466,
	486, 1466,
	487, 1466,
	488, 1466,
	489, 1466,
	490, 1466,
	491, 1466,
	492, 1466,
	493, 1466,
	494, 1466,
	496, 1466,
	497, 1466,
	498, 1466,
	499, 1466,
	500, 1466,
	502, 1466,
	504, 1466,
	505, 1466,
	506, 1466,
	507, 1466,
	508, 1466,
	509, 1466,
	511, 1466,
	512, 1466,
	513, 1466,
	514, 1466,
	516, 1466,
	517, 1466,
	520, 1466,
	521, 1466,
	522, 1466,
	523, 1466,
	524, 1466,
	525, 1466,
	526, 1466,
	528, 1466,
	531, 1466,
	532, 1466,
	533, 1466,
	534, 1466,
	535, 1466,
	536, 1466,
	538, 1466,
	539, 1466,
	540, 1466,
	541, 1466,
	547, 1466,
	548, 1466,
	549, 1466,
	550, 1466,
	551, 1466,
	552, 1466,
	-2, 0,
	-1, 148,
	1, 1321,
	129, 1321,
	243, 1321,
	322, 1321,
	379, 1321,
	388, 1321,
	556, 1321,
	580, 1321,
	-2, 0,
	-1, 150,
	1, 1321,
	580, 1321,
	-2, 0,
	-1, 151,
	1, 1321,
	580, 1321,
	-2, 0,
	-1, 152,
	1, 1321,
	501, 1321,
	580, 1321,
	-2, 0,
	-1, 181,
	148, 1434,
	167, 1434,
	180, 1434,
	235, 1434,
	268, 1434,
	333, 1434,
	343, 1434,
	518, 1434,
	-2, 1409,
	-1, 227,
	4, 1473,
	5, 1473,
	6, 1473,
	7, 1473,
	8, 1473,
	9, 1473,
	10, 1473,
	21, 1473,
	22, 1473,
	23, 1473,
	24, 1473,
	25, 1473,
	26, 1473,
	27, 1473,
	28, 1473,
	30, 1473,
	31, 1473,
	37, 1473,
	38, 1473,
	42, 1473,
	43, 1473,
	44, 1473,
	45, 1473,
	46, 1473,
	47, 1473,
	48, 1473,
	49, 1473,
	50, 1473,
	51, 1473,
	52, 1473,
	54, 1473,
	55, 1473,
	56, 1473,
	57, 1473,
	59, 1473,
	60, 1473,
	61, 1473,
	62, 1473,
	63, 1473,
	64, 1473,
	65, 1473,
	66, 1473,
	67, 1473,
	68, 1473,
	69, 1473,
	70, 1473,
	71, 1473,
	72, 1473,
	74, 1473,
	75, 1473,
	76, 1473,
	78, 1473,
	80, 1473,
	81, 1473,
	82, 1473,
	83, 1473,
	84, 1473,
	85, 1473,
	86, 1473,
	89, 1473,
	90, 1473,
	91, 1473,
	92, 1473,
	93, 1473,
	95, 1473,
	97, 1473,
	98, 1473,
	99, 1473,
	100, 1473,
	101, 1473,
	102, 1473,
	104, 1473,
	105, 1473,
	106, 1473,
	107, 1473,
	108, 1473,
	109, 1473,
	110, 1473,
	111, 1473,
	112, 1473,
	113, 1473,
	114, 1473,
	115, 1473,
	116, 1473,
	117, 1473,
	118, 1473,
	119, 1473,
	120, 1473,
	121, 1473,
	122, 1473,
	123, 1473,
	124, 1473,
	125, 1473,
	126, 1473,
	127, 1473,
	128, 1473,
	130, 1473,
	131, 1473,
	133, 1473,
	134, 1473,
	135, 1473,
	138, 1473,
	139, 1473,
	140, 1473,
	142, 1473,
	143, 1473,
	145, 1473,
	146, 1473,
	147, 1473,
	149, 1473,
	150, 1473,
	151, 1473,
	152, 1473,
	153, 1473,
	154, 1473,
	155, 1473,
	156, 1473,
	157, 1473,
	158, 1473,
	159, 1473,
	160, 1473,
	161, 1473,
	162, 1473,
	163, 1473,
	164, 1473,
	165, 1473,
	166, 1473,
	172, 1473,
	173, 1473,
	174, 1473,
	175, 1473,
	179, 1473,
	181, 1473,
	184, 1473,
	185, 1473,
	186, 1473,
	187, 1473,
	188, 1473,
	189, 1473,
	190, 1473,
	191, 1473,
	192, 1473,
	193, 1473,
	194, 1473,
	195, 1473,
	196, 1473,
	197, 1473,
	199, 1473,
	200, 1473,
	202, 1473,
	203, 1473,
	205, 1473,
	206, 1473,
	207, 1473,
	208, 1473,
	209, 1473,
	210, 1473,
	211, 1473,
	212, 1473,
	213, 1473,
	214, 1473,
	215, 1473,
	216, 1473,
	218, 1473,
	219, 1473,
	220, 1473,
	221, 1473,
	225, 1473,
	226, 1473,
	227, 1473,
	228, 1473,
	229, 1473,
	231, 1473,
	232, 1473,
	233, 1473,
	234, 1473,
	236, 1473,
	238, 1473,
	239, 1473,
	240, 1473,
	241, 1473,
	242, 1473,
	243, 1473,
	244, 1473,
	245, 1473,
	246, 1473,
	247, 1473,
	251, 1473,
	252, 1473,
	253, 1473,
	254, 1473,
	255, 1473,
	256, 1473,
	258, 1473,
	259, 1473,
	260, 1473,
	262, 1473,
	263, 1473,
	264, 1473,
	265, 1473,
	266, 1473,
	267, 1473,
	269, 1473,
	273, 1473,
	274, 1473,
	275, 1473,
	276, 1473,
	277, 1473,
	278, 1473,
	279, 1473,
	280, 1473,
	281, 1473,
	283, 1473,
	284, 1473,
	285, 1473,
	286, 1473,
	287, 1473,
	288, 1473,
	289, 1473,
	290, 1473,
	291, 1473,
	292, 1473,
	293, 1473,
	294, 1473,
	295, 1473,
	296, 1473,
	297, 1473,
	298, 1473,
	299, 1473,
	300, 1473,
	301, 1473,
	302, 1473,
	303, 1473,
	304, 1473,
	306, 1473,
	307, 1473,
	308, 1473,
	309, 1473,
	310, 1473,
	311, 1473,
	312, 1473,
	313, 1473,
	314, 1473,
	315, 1473,
	316, 1473,
	317, 1473,
	318, 1473,
	319, 1473,
	320, 1473,
	321, 1473,
	322, 1473,
	323, 1473,
	324, 1473,
	325, 1473,
	326, 1473,
	327, 1473,
	328, 1473,
	329, 1473,
	330, 1473,
	331, 1473,
	332, 1473,
	335, 1473,
	339, 1473,
	340, 1473,
	341, 1473,
	344, 1473,
	345, 1473,
	346, 1473,
	347, 1473,
	348, 1473,
	349, 1473,
	350, 1473,
	351, 1473,
	352, 1473,
	353, 1473,
	354, 1473,
	355, 1473,
	356, 1473,
	357, 1473,
	358, 1473,
	359, 1473,
	360, 1473,
	361, 1473,
	363, 1473,
	364, 1473,
	365, 1473,
	366, 1473,
	367, 1473,
	368, 1473,
	369, 1473,
	370, 1473,
	371, 1473,
	372, 1473,
	373, 1473,
	374, 1473,
	375, 1473,
	376, 1473,
	377, 1473,
	379, 1473,
	380, 1473,
	382, 1473,
	383, 1473,
	384, 1473,
	385, 1473,
	386, 1473,
	387, 1473,
	388, 1473,
	389, 1473,
	390, 1473,
	391, 1473,
	392, 1473,
	393, 1473,
	395, 1473,
	397, 1473,
	398, 1473,
	399, 1473,
	404, 1473,
	406, 1473,
	407, 1473,
	408, 1473,
	409, 1473,
	410, 1473,
	411, 1473,
	412, 1473,
	413, 1473,
	414, 1473,
	416, 1473,
	417, 1473,
	418, 1473,
	419, 1473,
	420, 1473,
	421, 1473,
	422, 1473,
	423, 1473,
	424, 1473,
	425, 1473,
	427, 1473,
	428, 1473,
	429, 1473,
	430, 1473,
	431, 1473,
	432, 1473,
	433, 1473,
	434, 1473,
	435, 1473,
	436, 1473,
	437, 1473,
	439, 1473,
	440, 1473,
	441, 1473,
	442, 1473,
	443, 1473,
	444, 1473,
	445, 1473,
	446, 1473,
	447, 1473,
	448, 1473,
	449, 1473,
	450, 1473,
	451, 1473,
	452, 1473,
	453, 1473,
	454, 1473,
	455, 1473,
	456, 1473,
	457, 1473,
	458, 1473,
	459, 1473,
	461, 1473,
	463, 1473,
	464, 1473,
	465, 1473,
	466, 1473,
	467, 1473,
	468, 1473,
	469, 1473,
	470, 1473,
	471, 1473,
	472, 1473,
	473, 1473,
	474, 1473,
	475, 1473,
	476, 1473,
	477, 1473,
	478, 1473,
	480, 1473,
	481, 1473,
	482, 1473,
	483, 1473,
	484, 1473,
	486, 1473,
	487, 1473,
	488, 1473,
	489, 1473,
	490, 1473,
	491, 1473,
	492, 1473,
	493, 1473,
	494, 1473,
	496, 1473,
	497, 1473,
	498, 1473,
	499, 1473,
	500, 1473,
	502, 1473,
	504, 1473,
	505, 1473,
	506, 1473,
	507, 1473,
	508, 1473,
	509, 1473,
	510, 1473,
	511, 1473,
	512, 1473,
	513, 1473,
	514, 1473,
	516, 1473,
	517, 1473,
	519, 1473,
	520, 1473,
	521, 1473,
	522, 1473,
	523, 1473,
	524, 1473,
	525, 1473,
	526, 1473,
	527, 1473,
	528, 1473,
	531, 1473,
	532, 1473,
	533, 1473,
	534, 1473,
	535, 1473,
	536, 1473,
	538, 1473,
	539, 1473,
	540, 1473,
	541, 1473,
	547, 1473,
	548, 1473,
	549, 1473,
	550, 1473,
	551, 1473,
	552, 1473,
	553, 1473,
	561, 1473,
	568, 1473,
	569, 1473,
	570, 1473,
	577, 1473,
	581, 1473,
	-2, 0,
	-1, 718,
	4, 1210,
	21, 1210,
	22, 1210,
	23, 1210,
	24, 1210,
	25, 1210,
	26, 1210,
	27, 1210,
	28, 1210,
	30, 1210,
	31, 1210,
	37, 1210,
	42, 1210,
	43, 1210,
	45, 1210,
	46, 1210,
	47, 1210,
	48, 1210,
	49, 1210,
	50, 1210,
	51, 1210,
	52, 1210,
	54, 1210,
	55, 1210,
	56, 1210,
	57, 1210,
	59, 1210,
	60, 1210,
	61, 1210,
	62, 1210,
	63, 1210,
	64, 1210,
	65, 1210,
	69, 1210,
	70, 1210,
	71, 1210,
	72, 1210,
	74, 1210,
	75, 1210,
	76, 1210,
	80, 1210,
	81, 1210,
	82, 1210,
	83, 1210,
	84, 1210,
	85, 1210,
	86, 1210,
	89, 1210,
	90, 1210,
	91, 1210,
	92, 1210,
	93, 1210,
	95, 1210,
	97, 1210,
	98, 1210,
	99, 1210,
	100, 1210,
	101, 1210,
	102, 1210,
	104, 1210,
	105, 1210,
	106, 1210,
	108, 1210,
	109, 1210,
	117, 1210,
	118, 1210,
	119, 1210,
	120, 1210,
	122, 1210,
	123, 1210,
	124, 1210,
	126, 1210,
	127, 1210,
	128, 1210,
	130, 1210,
	131, 1210,
	133, 1210,
	134, 1210,
	135, 1210,
	138, 1210,
	139, 1210,
	140, 1210,
	142, 1210,
	143, 1210,
	145, 1210,
	146, 1210,
	147, 1210,
	149, 1210,
	150, 1210,
	151, 1210,
	152, 1210,
	153, 1210,
	154, 1210,
	155, 1210,
	156, 1210,
	157, 1210,
	158, 1210,
	159, 1210,
	160, 1210,
	161, 1210,
	162, 1210,
	163, 1210,
	164, 1210,
	166, 1210,
	172, 1210,
	173, 1210,
	174, 1210,
	175, 1210,
	179, 1210,
	181, 1210,
	185, 1210,
	186, 1210,
	187, 1210,
	188, 1210,
	189, 1210,
	190, 1210,
	191, 1210,
	192, 1210,
	193, 1210,
	194, 1210,
	195, 1210,
	196, 1210,
	197, 1210,
	199, 1210,
	200, 1210,
	202, 1210,
	203, 1210,
	205, 1210,
	206, 1210,
	207, 1210,
	208, 1210,
	209, 1210,
	210, 1210,
	211, 1210,
	212, 1210,
	213, 1210,
	215, 1210,
	216, 1210,
	218, 1210,
	219, 1210,
	220, 1210,
	221, 1210,
	225, 1210,
	226, 1210,
	227, 1210,
	228, 1210,
	229, 1210,
	232, 1210,
	233, 1210,
	234, 1210,
	236, 1210,
	238, 1210,
	239, 1210,
	241, 1210,
	243, 1210,
	244, 1210,
	245, 1210,
	247, 1210,
	251, 1210,
	252, 1210,
	253, 1210,
	254, 1210,
	255, 1210,
	256, 1210,
	258, 1210,
	259, 1210,
	260, 1210,
	262, 1210,
	263, 1210,
	265, 1210,
	266, 1210,
	269, 1210,
	273, 1210,
	274, 1210,
	275, 1210,
	278, 1210,
	279, 1210,
	280, 1210,
	281, 1210,
	283, 1210,
	284, 1210,
	285, 1210,
	286, 1210,
	287, 1210,
	288, 1210,
	289, 1210,
	290, 1210,
	291, 1210,
	292, 1210,
	293, 1210,
	294, 1210,
	295, 1210,
	296, 1210,
	297, 1210,
	298, 1210,
	299, 1210,
	300, 1210,
	301, 1210,
	302, 1210,
	303, 1210,
	304, 1210,
	306, 1210,
	308, 1210,
	309, 1210,
	310, 1210,
	311, 1210,
	312, 1210,
	313, 1210,
	314, 1210,
	315, 1210,
	316, 1210,
	317, 1210,
	318, 1210,
	319, 1210,
	321, 1210,
	323, 1210,
	325, 1210,
	326, 1210,
	328, 1210,
	329, 1210,
	330, 1210,
	331, 1210,
	332, 1210,
	335, 1210,
	339, 1210,
	340, 1210,
	341, 1210,
	344, 1210,
	345, 1210,
	346, 1210,
	348, 1210,
	350, 1210,
	351, 1210,
	352, 1210,
	353, 1210,
	354, 1210,
	355, 1210,
	356, 1210,
	357, 1210,
	358, 1210,
	359, 1210,
	360, 1210,
	361, 1210,
	363, 1210,
	364, 1210,
	365, 1210,
	366, 1210,
	367, 1210,
	368, 1210,
	369, 1210,
	370, 1210,
	371, 1210,
	372, 1210,
	373, 1210,
	374, 1210,
	375, 1210,
	376, 1210,
	377, 1210,
	379, 1210,
	380, 1210,
	382, 1210,
	383, 1210,
	384, 1210,
	385, 1210,
	386, 1210,
	387, 1210,
	388, 1210,
	389, 1210,
	390, 1210,
	391, 1210,
	392, 1210,
	393, 1210,
	395, 1210,
	397, 1210,
	398, 1210,
	399, 1210,
	404, 1210,
	406, 1210,
	407, 1210,
	408, 1210,
	409, 1210,
	410, 1210,
	411, 1210,
	412, 1210,
	413, 1210,
	414, 1210,
	416, 1210,
	417, 1210,
	418, 1210,
	420, 1210,
	421, 1210,
	422, 1210,
	423, 1210,
	424, 1210,
	425, 1210,
	427, 1210,
	428, 1210,
	429, 1210,
	430, 1210,
	431, 1210,
	432, 1210,
	433, 1210,
	434, 1210,
	435, 1210,
	436, 1210,
	437, 1210,
	439, 1210,
	440, 1210,
	441, 1210,
	442, 1210,
	443, 1210,
	444, 1210,
	446, 1210,
	447, 1210,
	448, 1210,
	449, 1210,
	450, 1210,
	451, 1210,
	453, 1210,
	454, 1210,
	455, 1210,
	456, 1210,
	457, 1210,
	458, 1210,
	459, 1210,
	461, 1210,
	463, 1210,
	464, 1210,
	465, 1210,
	466, 1210,
	467, 1210,
	468, 1210,
	469, 1210,
	470, 1210,
	471, 1210,
	472, 1210,
	473, 1210,
	474, 1210,
	475, 1210,
	476, 1210,
	477, 1210,
	478, 1210,
	480, 1210,
	481, 1210,
	483, 1210,
	484, 1210,
	486, 1210,
	487, 1210,
	488, 1210,
	489, 1210,
	490, 1210,
	491, 1210,
	492, 1210,
	493, 1210,
	494, 1210,
	496, 1210,
	497, 1210,
	498, 1210,
	499, 1210,
	500, 1210,
	502, 1210,
	504, 1210,
	505, 1210,
	506, 1210,
	507, 1210,
	508, 1210,
	509, 1210,
	511, 1210,
	512, 1210,
	513, 1210,
	514, 1210,
	516, 1210,
	517, 1210,
	520, 1210,
	521, 1210,
	522, 1210,
	523, 1210,
	524, 1210,
	525, 1210,
	526, 1210,
	528, 1210,
	531, 1210,
	532, 1210,
	533, 1210,
	534, 1210,
	535, 1210,
	536, 1210,
	538, 1210,
	539, 1210,
	540, 1210,
	541, 1210,
	547, 1210,
	548, 1210,
	549, 1210,
	550, 1210,
	551, 1210,
	552, 1210,
	-2, 0,
	-1, 737,
	183, 2231,
	501, 2231,
	560, 2231,
	579, 2231,
	-2, 0,
	-1, 738,
	183, 2332,
	501, 2332,
	560, 2332,
	579, 2332,
	-2, 0,
	-1, 739,
	183, 2218,
	501, 2218,
	560, 2218,
	579, 2218,
	-2, 0,
	-1, 741,
	183, 2462,
	501, 2462,
	560, 2462,
	579, 2462,
	-2, 0,
	-1, 743,
	183, 2502,
	501, 2502,
	560, 2502,
	579, 2502,
	-2, 0,
	-1, 750,
	183, 2359,
	501, 2359,
	560, 2359,
	579, 2359,
	-2, 647,
	-1, 779,
	579, 2166,
	582, 2166,
	-2, 913,
	-1, 780,
	579, 2168,
	582, 2168,
	-2, 914,
	-1, 781,
	579, 2167,
	582, 2167,
	-2, 915,
	-1, 782,
	582, 2093,
	-2, 916,
	-1, 805,
	180, 238,
	-2, 0,
	-1, 828,
	44, 2140,
	-2, 0,
	-1, 829,
	538, 1188,
	-2, 983,
	-1, 845,
	4, 1602,
	21, 1602,
	22, 1602,
	23, 1602,
	24, 1602,
	25, 1602,
	26, 1602,
	27, 1602,
	28, 1602,
	30, 1602,
	31, 1602,
	37, 1602,
	42, 1602,
	43, 1602,
	45, 1602,
	46, 1602,
	47, 1602,
	48, 1602,
	49, 1602,
	50, 1602,
	51, 1602,
	52, 1602,
	54, 1602,
	55, 1602,
	56, 1602,
	57, 1602,
	59, 1602,
	60, 1602,
	61, 1602,
	62, 1602,
	63, 1602,
	64, 1602,
	65, 1602,
	69, 1602,
	70, 1602,
	71, 1602,
	72, 1602,
	74, 1602,
	75, 1602,
	76, 1602,
	80, 1602,
	81, 1602,
	82, 1602,
	83, 1602,
	84, 1602,
	85, 1602,
	86, 1602,
	89, 1602,
	90, 1602,
	91, 1602,
	92, 1602,
	93, 1602,
	95, 1602,
	97, 1602,
	98, 1602,
	99, 1602,
	100, 1602,
	101, 1602,
	102, 1602,
	104, 1602,
	105, 1602,
	106, 1602,
	108, 1602,
	109, 1602,
	117, 1602,
	118, 1602,
	119, 1602,
	120, 1602,
	122, 1602,
	123, 1602,
	124, 1602,
	126, 1602,
	127, 1602,
	128, 1602,
	130, 1602,
	131, 1602,
	133, 1602,
	134, 1602,
	135, 1602,
	138, 1602,
	139, 1602,
	140, 1602,
	142, 1602,
	143, 1602,
	145, 1602,
	146, 1602,
	147, 1602,
	149, 1602,
	150, 1602,
	151, 1602,
	152, 1602,
	153, 1602,
	154, 1602,
	155, 1602,
	156, 1602,
	157, 1602,
	158, 1602,
	159, 1602,
	160, 1602,
	161, 1602,
	162, 1602,
	163, 1602,
	164, 1602,
	166, 1602,
	172, 1602,
	173, 1602,
	174, 1602,
	175, 1602,
	179, 1602,
	181, 1602,
	185, 1602,
	186, 1602,
	187, 1602,
	188, 1602,
	189, 1602,
	190, 1602,
	191, 1602,
	192, 1602,
	193, 1602,
	194, 1602,
	195, 1602,
	196, 1602,
	197, 1602,
	199, 1602,
	200, 1602,
	202, 1602,
	203, 1602,
	205, 1602,
	206, 1602,
	207, 1602,
	208, 1602,
	209, 1602,
	210, 1602,
	211, 1602,
	212, 1602,
	213, 1602,
	215, 1602,
	216, 1602,
	218, 1602,
	219, 1602,
	220, 1602,
	221, 1602,
	225, 1602,
	226, 1602,
	227, 1602,
	228, 1602,
	229, 1602,
	232, 1602,
	233, 1602,
	234, 1602,
	236, 1602,
	238, 1602,
	239, 1602,
	241, 1602,
	243, 1602,
	244, 1602,
	245, 1602,
	247, 1602,
	251, 1602,
	252, 1602,
	253, 1602,
	254, 1602,
	255, 1602,
	256, 1602,
	258, 1602,
	259, 1602,
	260, 1602,
	262, 1602,
	263, 1602,
	265, 1602,
	266, 1602,
	269, 1602,
	273, 1602,
	274, 1602,
	275, 1602,
	278, 1602,
	279, 1602,
	280, 1602,
	281, 1602,
	283, 1602,
	284, 1602,
	285, 1602,
	286, 1602,
	287, 1602,
	288, 1602,
	289, 1602,
	290, 1602,
	291, 1602,
	292, 1602,
	293, 1602,
	294, 1602,
	295, 1602,
	296, 1602,
	297, 1602,
	298, 1602,
	299, 1602,
	300, 1602,
	301, 1602,
	302, 1602,
	303, 1602,
	304, 1602,
	306, 1602,
	308, 1602,
	309, 1602,
	310, 1602,
	311, 1602,
	312, 1602,
	313, 1602,
	314, 1602,
	315, 1602,
	316, 1602,
	317, 1602,
	318, 1602,
	319, 1602,
	321, 1602,
	323, 1602,
	325, 1602,
	326, 1602,
	328, 1602,
	329, 1602,
	330, 1602,
	331, 1602,
	332, 1602,
	335, 1602,
	339, 1602,
	340, 1602,
	341, 1602,
	344, 1602,
	345, 1602,
	346, 1602,
	348, 1602,
	350, 1602,
	351, 1602,
	352, 1602,
	353, 1602,
	354, 1602,
	355, 1602,
	356, 1602,
	357, 1602,
	358, 1602,
	359, 1602,
	360, 1602,
	361, 1602,
	363, 1602,
	364, 1602,
	365, 1602,
	366, 1602,
	367, 1602,
	368, 1602,
	369, 1602,
	370, 1602,
	371, 1602,
	372, 1602,
	373, 1602,
	374, 1602,
	375, 1602,
	376, 1602,
	377, 1602,
	379, 1602,
	380, 1602,
	382, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	388, 1602,
	389, 1602,
	390, 1602,
	391, 1602,
	392, 1602,
	393, 1602,
	395, 1602,
	397, 1602,
	398, 1602,
	399, 1602,
	404, 1602,
	406, 1602,
	407, 1602,
	408, 1602,
	409, 1602,
	410, 1602,
	411, 1602,
	412, 1602,
	413, 1602,
	414, 1602,
	416, 1602,
	417, 1602,
	418, 1602,
	420, 1602,
	421, 1602,
	422, 1602,
	423, 1602,
	424, 1602,
	425, 1602,
	427, 1602,
	428, 1602,
	429, 1602,
	430, 1602,
	431, 1602,
	432, 1602,
	433, 1602,
	434, 1602,
	435, 1602,
	436, 1602,
	437, 1602,
	439, 1602,
	440, 1602,
	441, 1602,
	442, 1602,
	443, 1602,
	444, 1602,
	446, 1602,
	447, 1602,
	448, 1602,
	449, 1602,
	450, 1602,
	451, 1602,
	453, 1602,
	454, 1602,
	455, 1602,
	456, 1602,
	457, 1602,
	458, 1602,
	459, 1602,
	461, 1602,
	463, 1602,
	464, 1602,
	465, 1602,
	466, 1602,
	467, 1602,
	468, 1602,
	469, 1602,
	470, 1602,
	471, 1602,
	472, 1602,
	473, 1602,
	474, 1602,
	475, 1602,
	476, 1602,
	477, 1602,
	478, 1602,
	480, 1602,
	481, 1602,
	483, 1602,
	484, 1602,
	486, 1602,
	487, 1602,
	488, 1602,
	489, 1602,
	490, 1602,
	491, 1602,
	492, 1602,
	493, 1602,
	494, 1602,
	496, 1602,
	497, 1602,
	498, 1602,
	499, 1602,
	500, 1602,
	502, 1602,
	504, 1602,
	505, 1602,
	506, 1602,
	507, 1602,
	508, 1602,
	509, 1602,
	511, 1602,
	512, 1602,
	513, 1602,
	514, 1602,
	516, 1602,
	517, 1602,
	520, 1602,
	521, 1602,
	522, 1602,
	523, 1602,
	524, 1602,
	525, 1602,
	526, 1602,
	528, 1602,
	531, 1602,
	532, 1602,
	533, 1602,
	534, 1602,
	535, 1602,
	536, 1602,
	538, 1602,
	539, 1602,
	540, 1602,
	541, 1602,
	547, 1602,
	548, 1602,
	549, 1602,
	550, 1602,
	551, 1602,
	552, 1602,
	-2, 0,
	-1, 853,
	255, 373,
	-2, 0,
	-1, 923,
	384, 812,
	444, 812,
	484, 812,
	506, 812,
	-2, 0,
	-1, 924,
	384, 811,
	444, 811,
	484, 811,
	506, 811,
	-2, 751,
	-1, 928,
	1, 858,
	576, 858,
	578, 858,
	580, 858,
	-2, 0,
	-1, 929,
	1, 786,
	576, 786,
	578, 786,
	580, 786,
	-2, 0,
	-1, 930,
	1, 790,
	576, 790,
	578, 790,
	580, 790,
	-2, 0,
	-1, 931,
	1, 912,
	180, 912,
	576, 912,
	578, 912,
	580, 912,
	-2, 0,
	-1, 939,
	1, 817,
	576, 817,
	578, 817,
	580, 817,
	-2, 0,
	-1, 945,
	1, 858,
	576, 858,
	578, 858,
	580, 858,
	-2, 0,
	-1, 946,
	1, 860,
	576, 860,
	578, 860,
	580, 860,
	-2, 0,
	-1, 947,
	1, 863,
	576, 863,
	578, 863,
	580, 863,
	-2, 0,
	-1, 953,
	1, 880,
	576, 880,
	578, 880,
	580, 880,
	-2, 0,
	-1, 954,
	1, 882,
	576, 882,
	578, 882,
	580, 882,
	-2, 0,
	-1, 959,
	1, 907,
	576, 907,
	578, 907,
	580, 907,
	-2, 0,
	-1, 1005,
	167, 1477,
	180, 1477,
	268, 1477,
	333, 1477,
	-2, 1413,
	-1, 1020,
	167, 1476,
	180, 1476,
	268, 1476,
	333, 1476,
	-2, 1410,
	-1, 1046,
	579, 2165,
	-2, 655,
	-1, 1074,
	5, 2157,
	577, 2155,
	-2, 2146,
	-1, 1082,
	5, 2178,
	577, 2175,
	-2, 2166,
	-1, 1083,
	5, 2179,
	577, 2176,
	-2, 2167,
	-1, 1091,
	579, 2163,
	-2, 2145,
	-1, 1092,
	577, 2584,
	-2, 2164,
	-1, 1115,
	577, 2583,
	-2, 2180,
	-1, 1116,
	5, 1677,
	-2, 2554,
	-1, 1117,
	5, 1678,
	-2, 2555,
	-1, 1118,
	5, 1679,
	-2, 2569,
	-1, 1119,
	5, 1680,
	-2, 2533,
	-1, 1120,
	5, 1681,
	-2, 2567,
	-1, 1121,
	5, 1689,
	-2, 2546,
	-1, 1122,
	5, 1676,
	-2, 2542,
	-1, 1123,
	5, 1676,
	-2, 2541,
	-1, 1124,
	5, 1676,
	-2, 2560,
	-1, 1125,
	5, 1687,
	-2, 2535,
	-1, 1126,
	5, 1692,
	-2, 2534,
	-1, 1127,
	5, 1694,
	-2, 2579,
	-1, 1130,
	5, 1716,
	-2, 2572,
	-1, 1131,
	5, 1708,
	-2, 2573,
	-1, 1132,
	5, 1716,
	-2, 2574,
	-1, 1133,
	5, 1712,
	-2, 2575,
	-1, 1134,
	5, 1662,
	-2, 2547,
	-1, 1135,
	5, 1663,
	-2, 2548,
	-1, 1136,
	5, 1664,
	-2, 2536,
	-1, 1164,
	5, 1699,
	-2, 2580,
	-1, 1165,
	5, 1700,
	-2, 2570,
	-1, 1166,
	5, 1701,
	539, 1701,
	-2, 2537,
	-1, 1167,
	5, 1702,
	539, 1702,
	-2, 2538,
	-1, 1204,
	577, 2175,
	-2, 2166,
	-1, 1205,
	577, 2176,
	-2, 2167,
	-1, 1304,
	183, 2502,
	501, 2502,
	560, 2502,
	579, 2502,
	-2, 0,
	-1, 1307,
	1, 633,
	580, 633,
	-2, 1329,
	-1, 1435,
	352, 2141,
	406, 2141,
	446, 2141,
	570, 2141,
	-2, 2131,
	-1, 1446,
	581, 2141,
	-2, 2142,
	-1, 1451,
	1, 1185,
	576, 1185,
	578, 1185,
	580, 1185,
	-2, 1462,
	-1, 1499,
	391, 982,
	538, 982,
	-2, 368,
	-1, 1515,
	44, 2139,
	-2, 948,
	-1, 1522,
	1, 1185,
	576, 1185,
	578, 1185,
	580, 1185,
	-2, 1462,
	-1, 1530,
	4, 1210,
	21, 1210,
	22, 1210,
	23, 1210,
	24, 1210,
	25, 1210,
	26, 1210,
	27, 1210,
	28, 1210,
	30, 1210,
	31, 1210,
	37, 1210,
	42, 1210,
	43, 1210,
	45, 1210,
	46, 1210,
	47, 1210,
	48, 1210,
	49, 1210,
	50, 1210,
	51, 1210,
	52, 1210,
	54, 1210,
	55, 1210,
	56, 1210,
	57, 1210,
	59, 1210,
	60, 1210,
	61, 1210,
	62, 1210,
	63, 1210,
	64, 1210,
	65, 1210,
	69, 1210,
	70, 1210,
	71, 1210,
	72, 1210,
	74, 1210,
	75, 1210,
	76, 1210,
	80, 1210,
	81, 1210,
	82, 1210,
	83, 1210,
	84, 1210,
	85, 1210,
	86, 1210,
	89, 1210,
	90, 1210,
	91, 1210,
	92, 1210,
	93, 1210,
	95, 1210,
	97, 1210,
	98, 1210,
	99, 1210,
	100, 1210,
	101, 1210,
	102, 1210,
	104, 1210,
	105, 1210,
	106, 1210,
	108, 1210,
	109, 1210,
	117, 1210,
	118, 1210,
	119, 1210,
	120, 1210,
	122, 1210,
	123, 1210,
	124, 1210,
	126, 1210,
	127, 1210,
	128, 1210,
	130, 1210,
	131, 1210,
	133, 1210,
	134, 1210,
	135, 1210,
	138, 1210,
	139, 1210,
	140, 1210,
	142, 1210,
	143, 1210,
	145, 1210,
	146, 1210,
	147, 1210,
	149, 1210,
	150, 1210,
	151, 1210,
	152, 1210,
	153, 1210,
	154, 1210,
	155, 1210,
	156, 1210,
	157, 1210,
	158, 1210,
	159, 1210,
	160, 1210,
	161, 1210,
	162, 1210,
	163, 1210,
	164, 1210,
	172, 1210,
	173, 1210,
	174, 1210,
	175, 1210,
	179, 1210,
	181, 1210,
	185, 1210,
	186, 1210,
	187, 1210,
	188, 1210,
	189, 1210,
	190, 1210,
	191, 1210,
	192, 1210,
	193, 1210,
	194, 1210,
	195, 1210,
	196, 1210,
	197, 1210,
	199, 1210,
	200, 1210,
	202, 1210,
	203, 1210,
	205, 1210,
	206, 1210,
	207, 1210,
	208, 1210,
	209, 1210,
	210, 1210,
	211, 1210,
	212, 1210,
	213, 1210,
	215, 1210,
	216, 1210,
	218, 1210,
	219, 1210,
	220, 1210,
	221, 1210,
	226, 1210,
	227, 1210,
	228, 1210,
	229, 1210,
	232, 1210,
	233, 1210,
	234, 1210,
	236, 1210,
	238, 1210,
	239, 1210,
	241, 1210,
	243, 1210,
	244, 1210,
	245, 1210,
	247, 1210,
	251, 1210,
	252, 1210,
	253, 1210,
	254, 1210,
	255, 1210,
	256, 1210,
	258, 1210,
	259, 1210,
	260, 1210,
	262, 1210,
	263, 1210,
	265, 1210,
	266, 1210,
	269, 1210,
	273, 1210,
	274, 1210,
	275, 1210,
	278, 1210,
	279, 1210,
	280, 1210,
	281, 1210,
	283, 1210,
	284, 1210,
	285, 1210,
	286, 1210,
	287, 1210,
	288, 1210,
	289, 1210,
	290, 1210,
	291, 1210,
	292, 1210,
	293, 1210,
	294, 1210,
	295, 1210,
	296, 1210,
	297, 1210,
	298, 1210,
	299, 1210,
	300, 1210,
	301, 1210,
	302, 1210,
	303, 1210,
	304, 1210,
	306, 1210,
	308, 1210,
	309, 1210,
	310, 1210,
	311, 1210,
	312, 1210,
	313, 1210,
	314, 1210,
	315, 1210,
	316, 1210,
	317, 1210,
	318, 1210,
	319, 1210,
	321, 1210,
	325, 1210,
	326, 1210,
	328, 1210,
	329, 1210,
	330, 1210,
	331, 1210,
	332, 1210,
	335, 1210,
	337, 1210,
	339, 1210,
	340, 1210,
	341, 1210,
	344, 1210,
	345, 1210,
	346, 1210,
	348, 1210,
	350, 1210,
	351, 1210,
	352, 1210,
	353, 1210,
	354, 1210,
	355, 1210,
	356, 1210,
	357, 1210,
	358, 1210,
	359, 1210,
	360, 1210,
	361, 1210,
	363, 1210,
	364, 1210,
	365, 1210,
	366, 1210,
	367, 1210,
	368, 1210,
	369, 1210,
	370, 1210,
	371, 1210,
	372, 1210,
	373, 1210,
	374, 1210,
	375, 1210,
	376, 1210,
	377, 1210,
	379, 1210,
	380, 1210,
	382, 1210,
	383, 1210,
	384, 1210,
	385, 1210,
	386, 1210,
	387, 1210,
	388, 1210,
	389, 1210,
	390, 1210,
	391, 1210,
	392, 1210,
	393, 1210,
	395, 1210,
	397, 1210,
	398, 1210,
	399, 1210,
	404, 1210,
	406, 1210,
	407, 1210,
	408, 1210,
	409, 1210,
	410, 1210,
	411, 1210,
	412, 1210,
	413, 1210,
	414, 1210,
	416, 1210,
	417, 1210,
	418, 1210,
	420, 1210,
	421, 1210,
	422, 1210,
	423, 1210,
	424, 1210,
	425, 1210,
	427, 1210,
	428, 1210,
	429, 1210,
	430, 1210,
	431, 1210,
	432, 1210,
	433, 1210,
	434, 1210,
	435, 1210,
	436, 1210,
	437, 1210,
	439, 1210,
	440, 1210,
	441, 1210,
	442, 1210,
	443, 1210,
	444, 1210,
	446, 1210,
	447, 1210,
	448, 1210,
	449, 1210,
	450, 1210,
	451, 1210,
	453, 1210,
	454, 1210,
	455, 1210,
	456, 1210,
	457, 1210,
	458, 1210,
	459, 1210,
	461, 1210,
	463, 1210,
	464, 1210,
	465, 1210,
	466, 1210,
	467, 1210,
	468, 1210,
	469, 1210,
	470, 1210,
	471, 1210,
	472, 1210,
	473, 1210,
	474, 1210,
	475, 1210,
	476, 1210,
	477, 1210,
	478, 1210,
	480, 1210,
	481, 1210,
	483, 1210,
	484, 1210,
	486, 1210,
	487, 1210,
	488, 1210,
	489, 1210,
	490, 1210,
	491, 1210,
	492, 1210,
	493, 1210,
	494, 1210,
	496, 1210,
	497, 1210,
	498, 1210,
	499, 1210,
	500, 1210,
	502, 1210,
	504, 1210,
	505, 1210,
	506, 1210,
	507, 1210,
	508, 1210,
	509, 1210,
	511, 1210,
	512, 1210,
	513, 1210,
	514, 1210,
	516, 1210,
	517, 1210,
	520, 1210,
	521, 1210,
	522, 1210,
	523, 1210,
	524, 1210,
	525, 1210,
	526, 1210,
	528, 1210,
	531, 1210,
	532, 1210,
	533, 1210,
	534, 1210,
	535, 1210,
	536, 1210,
	538, 1210,
	539, 1210,
	540, 1210,
	541, 1210,
	547, 1210,
	548, 1210,
	549, 1210,
	550, 1210,
	551, 1210,
	552, 1210,
	-2, 0,
	-1, 1553,
	1, 506,
	576, 506,
	578, 506,
	580, 506,
	-2, 1433,
	-1, 1556,
	4, 2578,
	11, 2578,
	12, 2578,
	14, 2578,
	15, 2578,
	16, 2578,
	17, 2578,
	18, 2578,
	19, 2578,
	21, 2578,
	22, 2578,
	23, 2578,
	24, 2578,
	25, 2578,
	26, 2578,
	27, 2578,
	28, 2578,
	30, 2578,
	31, 2578,
	34, 2578,
	35, 2578,
	37, 2578,
	39, 2578,
	42, 2578,
	43, 2578,
	45, 2578,
	46, 2578,
	47, 2578,
	48, 2578,
	49, 2578,
	50, 2578,
	51, 2578,
	52, 2578,
	54, 2578,
	55, 2578,
	56, 2578,
	57, 2578,
	59, 2578,
	60, 2578,
	61, 2578,
	62, 2578,
	63, 2578,
	64, 2578,
	65, 2578,
	69, 2578,
	70, 2578,
	71, 2578,
	72, 2578,
	74, 2578,
	75, 2578,
	76, 2578,
	77, 2578,
	80, 2578,
	81, 2578,
	82, 2578,
	83, 2578,
	84, 2578,
	85, 2578,
	86, 2578,
	87, 2578,
	89, 2578,
	90, 2578,
	91, 2578,
	92, 2578,
	93, 2578,
	95, 2578,
	96, 2578,
	97, 2578,
	98, 2578,
	99, 2578,
	100, 2578,
	101, 2578,
	102, 2578,
	104, 2578,
	105, 2578,
	106, 2578,
	107, 2578,
	108, 2578,
	109, 2578,
	117, 2578,
	118, 2578,
	119, 2578,
	120, 2578,
	122, 2578,
	123, 2578,
	124, 2578,
	126, 2578,
	127, 2578,
	128, 2578,
	130, 2578,
	131, 2578,
	133, 2578,
	134, 2578,
	135, 2578,
	138, 2578,
	139, 2578,
	140, 2578,
	142, 2578,
	143, 2578,
	145, 2578,
	146, 2578,
	147, 2578,
	149, 2578,
	150, 2578,
	151, 2578,
	152, 2578,
	153, 2578,
	154, 2578,
	155, 2578,
	156, 2578,
	157, 2578,
	158, 2578,
	159, 2578,
	160, 2578,
	161, 2578,
	162, 2578,
	163, 2578,
	164, 2578,
	168, 2578,
	169, 2578,
	170, 2578,
	171, 2578,
	172, 2578,
	173, 2578,
	174, 2578,
	175, 2578,
	178, 2578,
	179, 2578,
	181, 2578,
	184, 2578,
	185, 2578,
	186, 2578,
	187, 2578,
	188, 2578,
	189, 2578,
	190, 2578,
	191, 2578,
	192, 2578,
	193, 2578,
	194, 2578,
	195, 2578,
	196, 2578,
	197, 2578,
	199, 2578,
	200, 2578,
	202, 2578,
	203, 2578,
	205, 2578,
	206, 2578,
	207, 2578,
	208, 2578,
	209, 2578,
	210, 2578,
	211, 2578,
	212, 2578,
	213, 2578,
	214, 2578,
	215, 2578,
	216, 2578,
	217, 2578,
	218, 2578,
	219, 2578,
	220, 2578,
	221, 2578,
	223, 2578,
	224, 2578,
	226, 2578,
	227, 2578,
	228, 2578,
	229, 2578,
	231, 2578,
	232, 2578,
	233, 2578,
	234, 2578,
	236, 2578,
	238, 2578,
	239, 2578,
	240, 2578,
	241, 2578,
	242, 2578,
	243, 2578,
	244, 2578,
	245, 2578,
	246, 2578,
	247, 2578,
	249, 2578,
	250, 2578,
	251, 2578,
	252, 2578,
	253, 2578,
	254, 2578,
	255, 2578,
	256, 2578,
	258, 2578,
	259, 2578,
	260, 2578,
	262, 2578,
	263, 2578,
	264, 2578,
	265, 2578,
	266, 2578,
	267, 2578,
	269, 2578,
	273, 2578,
	274, 2578,
	275, 2578,
	278, 2578,
	279, 2578,
	280, 2578,
	281, 2578,
	282, 2578,
	283, 2578,
	284, 2578,
	285, 2578,
	286, 2578,
	287, 2578,
	288, 2578,
	289, 2578,
	290, 2578,
	291, 2578,
	292, 2578,
	293, 2578,
	294, 2578,
	295, 2578,
	296, 2578,
	297, 2578,
	298, 2578,
	299, 2578,
	300, 2578,
	301, 2578,
	302, 2578,
	303, 2578,
	304, 2578,
	306, 2578,
	307, 2578,
	308, 2578,
	309, 2578,
	310, 2578,
	311, 2578,
	312, 2578,
	313, 2578,
	314, 2578,
	315, 2578,
	316, 2578,
	317, 2578,
	318, 2578,
	319, 2578,
	321, 2578,
	324, 2578,
	325, 2578,
	326, 2578,
	328, 2578,
	329, 2578,
	330, 2578,
	331, 2578,
	332, 2578,
	335, 2578,
	339, 2578,
	340, 2578,
	341, 2578,
	342, 2578,
	344, 2578,
	345, 2578,
	346, 2578,
	348, 2578,
	350, 2578,
	351, 2578,
	352, 2578,
	353, 2578,
	354, 2578,
	355, 2578,
	356, 2578,
	357, 2578,
	358, 2578,
	359, 2578,
	360, 2578,
	361, 2578,
	363, 2578,
	364, 2578,
	365, 2578,
	366, 2578,
	367, 2578,
	368, 2578,
	369, 2578,
	370, 2578,
	371, 2578,
	372, 2578,
	373, 2578,
	374, 2578,
	375, 2578,
	376, 2578,
	377, 2578,
	379, 2578,
	380, 2578,
	382, 2578,
	383, 2578,
	384, 2578,
	385, 2578,
	386, 2578,
	387, 2578,
	388, 2578,
	389, 2578,
	390, 2578,
	391, 2578,
	392, 2578,
	393, 2578,
	395, 2578,
	397, 2578,
	398, 2578,
	399, 2578,
	404, 2578,
	405, 2578,
	406, 2578,
	407, 2578,
	408, 2578,
	409, 2578,
	410, 2578,
	411, 2578,
	412, 2578,
	413, 2578,
	414, 2578,
	416, 2578,
	417, 2578,
	418, 2578,
	419, 2578,
	420, 2578,
	421, 2578,
	422, 2578,
	423, 2578,
	424, 2578,
	425, 2578,
	426, 2578,
	427, 2578,
	428, 2578,
	429, 2578,
	430, 2578,
	431, 2578,
	432, 2578,
	433, 2578,
	434, 2578,
	435, 2578,
	436, 2578,
	437, 2578,
	439, 2578,
	440, 2578,
	441, 2578,
	442, 2578,
	443, 2578,
	444, 2578,
	446, 2578,
	447, 2578,
	448, 2578,
	449, 2578,
	450, 2578,
	451, 2578,
	452, 2578,
	453, 2578,
	454, 2578,
	455, 2578,
	456, 2578,
	457, 2578,
	458, 2578,
	459, 2578,
	461, 2578,
	463, 2578,
	464, 2578,
	465, 2578,
	466, 2578,
	467, 2578,
	468, 2578,
	469, 2578,
	470, 2578,
	471, 2578,
	472, 2578,
	473, 2578,
	474, 2578,
	475, 2578,
	476, 2578,
	477, 2578,
	478, 2578,
	480, 2578,
	481, 2578,
	483, 2578,
	484, 2578,
	486, 2578,
	487, 2578,
	488, 2578,
	489, 2578,
	490, 2578,
	491, 2578,
	492, 2578,
	493, 2578,
	494, 2578,
	496, 2578,
	497, 2578,
	498, 2578,
	499, 2578,
	500, 2578,
	502, 2578,
	504, 2578,
	505, 2578,
	506, 2578,
	507, 2578,
	508, 2578,
	509, 2578,
	511, 2578,
	512, 2578,
	513, 2578,
	514, 2578,
	516, 2578,
	517, 2578,
	520, 2578,
	521, 2578,
	522, 2578,
	523, 2578,
	524, 2578,
	525, 2578,
	526, 2578,
	528, 2578,
	531, 2578,
	532, 2578,
	533, 2578,
	534, 2578,
	535, 2578,
	536, 2578,
	538, 2578,
	539, 2578,
	540, 2578,
	541, 2578,
	547, 2578,
	548, 2578,
	549, 2578,
	550, 2578,
	551, 2578,
	552, 2578,
	553, 2578,
	555, 2578,
	558, 2578,
	559, 2578,
	560, 2578,
	561, 2578,
	562, 2578,
	563, 2578,
	565, 2578,
	566, 2578,
	567, 2578,
	568, 2578,
	569, 2578,
	570, 2578,
	571, 2578,
	572, 2578,
	573, 2578,
	575, 2578,
	578, 2578,
	579, 2578,
	581, 2578,
	582, 2578,
	-2, 0,
	-1, 1561,
	183, 2462,
	501, 2462,
	560, 2462,
	579, 2462,
	-2, 0,
	-1, 1610,
	384, 812,
	444, 812,
	484, 812,
	506, 812,
	-2, 0,
	-1, 1637,
	1, 807,
	576, 807,
	578, 807,
	580, 807,
	-2, 0,
	-1, 1638,
	1, 845,
	576, 845,
	578, 845,
	580, 845,
	-2, 0,
	-1, 1639,
	1, 853,
	576, 853,
	578, 853,
	580, 853,
	-2, 0,
	-1, 1642,
	1, 816,
	576, 816,
	578, 816,
	580, 816,
	-2, 0,
	-1, 1644,
	1, 820,
	576, 820,
	578, 820,
	580, 820,
	-2, 0,
	-1, 1650,
	1, 827,
	576, 827,
	578, 827,
	580, 827,
	-2, 0,
	-1, 1678,
	1, 2524,
	576, 2524,
	578, 2524,
	579, 2524,
	580, 2524,
	-2, 878,
	-1, 1679,
	1, 2459,
	576, 2459,
	578, 2459,
	579, 2459,
	580, 2459,
	-2, 879,
	-1, 1697,
	1, 1324,
	580, 1324,
	-2, 1329,
	-1, 1700,
	167, 1476,
	180, 1476,
	268, 1476,
	333, 1476,
	-2, 1414,
	-1, 1794,
	148, 1435,
	167, 1435,
	180, 1435,
	235, 1435,
	268, 1435,
	333, 1435,
	343, 1435,
	518, 1435,
	-2, 1877,
	-1, 1854,
	578, 2027,
	-2, 0,
	-1, 1889,
	148, 1435,
	167, 1435,
	180, 1435,
	235, 1435,
	268, 1435,
	333, 1435,
	343, 1435,
	518, 1435,
	-2, 1563,
	-1, 1938,
	577, 1704,
	-2, 1692,
	-1, 2016,
	1, 635,
	580, 635,
	-2, 1329,
	-1, 2141,
	217, 239,
	-2, 2174,
	-1, 2142,
	217, 240,
	-2, 284,
	-1, 2245,
	1, 809,
	576, 809,
	578, 809,
	580, 809,
	-2, 0,
	-1, 2246,
	1, 847,
	576, 847,
	578, 847,
	580, 847,
	-2, 0,
	-1, 2247,
	1, 855,
	576, 855,
	578, 855,
	580, 855,
	-2, 0,
	-1, 2281,
	1, 829,
	576, 829,
	578, 829,
	580, 829,
	-2, 0,
	-1, 2333,
	424, 1503,
	425, 1503,
	-2, 1737,
	-1, 2364,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1757,
	-1, 2365,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1758,
	-1, 2366,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1759,
	-1, 2367,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1760,
	-1, 2368,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1761,
	-1, 2369,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1762,
	-1, 2370,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1763,
	-1, 2371,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1764,
	-1, 2383,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1776,
	-1, 2384,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1777,
	-1, 2385,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1778,
	-1, 2388,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1783,
	-1, 2394,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1787,
	-1, 2396,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1795,
	-1, 2397,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1796,
	-1, 2398,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1797,
	-1, 2399,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1798,
	-1, 2535,
	5, 2178,
	183, 2038,
	577, 2175,
	-2, 2166,
	-1, 2536,
	183, 2039,
	-2, 2529,
	-1, 2537,
	183, 2040,
	-2, 2358,
	-1, 2538,
	183, 2041,
	-2, 2247,
	-1, 2539,
	183, 2042,
	-2, 2299,
	-1, 2540,
	183, 2043,
	-2, 2343,
	-1, 2541,
	183, 2044,
	-2, 2457,
	-1, 2542,
	183, 2045,
	-2, 1860,
	-1, 2612,
	1, 1564,
	2, 1564,
	107, 1564,
	148, 1564,
	167, 1564,
	180, 1564,
	184, 1564,
	201, 1564,
	204, 1564,
	231, 1564,
	235, 1564,
	246, 1564,
	264, 1564,
	268, 1564,
	307, 1564,
	333, 1564,
	337, 1564,
	343, 1564,
	415, 1564,
	419, 1564,
	518, 1564,
	529, 1564,
	544, 1564,
	545, 1564,
	546, 1564,
	556, 1564,
	576, 1564,
	578, 1564,
	580, 1564,
	582, 1564,
	-2, 1563,
	-1, 2625,
	577, 2147,
	-2, 2161,
	-1, 2627,
	54, 1462,
	133, 1462,
	-2, 300,
	-1, 2652,
	577, 1703,
	-2, 1693,
	-1, 2828,
	1, 1185,
	576, 1185,
	578, 1185,
	580, 1185,
	-2, 1462,
	-1, 2995,
	338, 1506,
	-2, 2568,
	-1, 2996,
	338, 1507,
	-2, 2443,
	-1, 3000,
	424, 2104,
	425, 2104,
	-2, 1858,
	-1, 3001,
	424, 2108,
	425, 2108,
	-2, 1859,
	-1, 3002,
	424, 2105,
	425, 2105,
	-2, 1858,
	-1, 3003,
	424, 2109,
	425, 2109,
	-2, 1859,
	-1, 3016,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1785,
	-1, 3017,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1789,
	-1, 3023,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1791,
	-1, 3263,
	1, 632,
	576, 632,
	578, 632,
	580, 632,
	-2, 1329,
	-1, 3416,
	44, 2139,
	-2, 949,
	-1, 3421,
	1, 1185,
	576, 1185,
	578, 1185,
	580, 1185,
	-2, 1462,
	-1, 3526,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1793,
	-1, 3533,
	240, 0,
	242, 0,
	324, 0,
	-2, 1812,
	-1, 3600,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1841,
	-1, 3601,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1842,
	-1, 3602,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1843,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1847,
	-1, 3607,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1848,
	-1, 3608,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1849,
	-1, 3654,
	577, 2148,
	-2, 2162,
	-1, 3815,
	579, 2686,
	-2, 1388,
	-1, 3873,
	240, 0,
	242, 0,
	324, 0,
	-2, 1813,
	-1, 3876,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1816,
	-1, 3877,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1818,
	-1, 3972,
	579, 2163,
	-2, 1220,
	-1, 4107,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1817,
	-1, 4108,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1819,
	-1, 4119,
	240, 0,
	-2, 1850,
	-1, 4287,
	240, 0,
	-2, 1851,
	-1, 4472,
	51, 0,
	214, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 2532,
}

const sqlPrivate = 57344

const sqlLast = 122186

var sqlAct = [...]int{
	263, 4493, 3406, 4653, 4568, 4327, 3174, 4525, 4492, 2905,
	2892, 4594, 4345, 4471, 4212, 4319, 4453, 4482, 4349, 4441,
	4367, 4165, 3405, 4425, 1463, 2064, 4483, 4422, 2138, 4405,
	3856, 4484, 4537, 2759, 4240, 2778, 4151, 4219, 3565, 4470,
	4291, 1208, 4064, 4030, 4059, 4011, 4170, 4128, 3518, 4096,
	3807, 3289, 1074, 1280, 2343, 3799, 1030, 1276, 4228, 4044,
	3746, 3953, 3969, 3009, 2411, 3438, 4254, 4069, 2567, 3401,
	1925, 3432, 1998, 3782, 781, 3766, 1709, 3768, 2351, 748,
	1269, 3292, 4124, 2344, 2927, 2914, 2221, 1895, 1340, 2881,
	3391, 3479, 3477, 2072, 3274, 3347, 2852, 2862, 781, 2916,
	1432, 3657, 3157, 3197, 3217, 2790, 2185, 1021, 3855, 3189,
	2924, 2913, 1262, 1577, 2907, 3968, 2133, 3912, 3178, 1864,
	2878, 3180, 1197, 855, 2219, 2876, 2893, 2083, 4569, 2132,
	3625, 3311, 1029, 172, 2719, 3156, 4292, 2348, 2453, 1840,
	1802, 2424, 1439, 3286, 1517, 2805, 776, 2605, 2455, 2923,
	2717, 1274, 257, 2128, 2109, 1078, 2052, 1323, 2993, 2116,
	2863, 2056, 2607, 1697, 256, 1996, 1865, 2564, 1248, 2585,
	1188, 2444, 2408, 2042, 1081, 2315, 2604, 2332, 2313, 1271,
	3224, 2637, 2886, 1080, 1575, 1083, 3403, 2173, 1554, 2701,
	1259, 1309, 1520, 2636, 679, 2917, 4, 782, 783, 2447,
	2758, 1191, 1884, 1874, 1042, 1618, 2425, 2575, 2594, 1711,
	1170, 2531, 665, 1787, 2212, 1835, 687, 1881, 181, 2497,
	182, 1710, 730, 172, 1650, 105, 787, 2314, 1637, 1552,
	1205, 2316, 742, 2172, 1187, 778, 2198, 1545, 790, 1458,
	2071, 4526, 4368, 2337, 1059, 1974, 1971, 44, 682, 690,
	787, 43, 41, 32, 2602, 30, 28, 1168, 1193, 1696,
	1985, 3044, 790, 1716, 917, 937, 1469, 3639, 3040, 3640,
	705, 4666, 829, 4656, 1987, 2584, 72, 3457, 1987, 3176,
	3129, 3130, 1203, 3147, 3148, 3149, 4641, 848, 4640, 1025,
	2584, 3448, 2584, 73, 3247, 1987, 1987, 1987, 1987, 3246,
	4630, 4612, 4610, 3871, 2147, 4169, 4169, 4556, 4514, 77,
	4507, 2147, 4515, 2577, 2584, 4505, 4502, 3447, 1318, 2584,
	4503, 4499, 1057, 4468, 4467, 4500, 4466, 2147, 2147, 3232,
	2008, 1724, 1725, 870, 1462, 4461, 4460, 4451, 4449, 2008,
	2008, 4169, 4169, 4420, 2220, 1025, 4392, 4169, 1926, 84,
	2643, 1185, 3457, 4385, 4384, 1755, 3144, 2584, 2584, 4379,
	4378, 4372, 1727, 4169, 4169, 2147, 4341, 4289, 4271, 4268,
	4022, 2643, 3842, 2147, 4265, 4221, 2147, 4185, 4169, 4222,
	1584, 2147, 1318, 4184, 1171, 1171, 853, 2147, 4176, 3008,
	4175, 1006, 2147, 1005, 4169, 4168, 2584, 1726, 4135, 4169,
	104, 4393, 2147, 4109, 1200, 90, 101, 2643, 3629, 1026,
	2005, 1724, 1725, 1199, 1757, 1758, 1759, 1767, 1768, 1769,
	4088, 4077, 4006, 3991, 2008, 3457, 2584, 2584, 3875, 3823,
	3817, 2662, 2643, 3474, 3474, 1755, 4293, 3780, 1219, 1724,
	1725, 3781, 1727, 2786, 1020, 1015, 3649, 3135, 3647, 3632,
	3650, 1773, 3648, 2584, 3549, 3545, 3473, 3464, 2147, 2584,
	3474, 3465, 91, 1755, 3173, 3168, 4284, 3167, 2584, 2584,
	1727, 2584, 3120, 4272, 3094, 3086, 3121, 1726, 3095, 3087,
	1172, 2639, 3084, 3053, 3055, 90, 2584, 1746, 2584, 3054,
	2931, 2903, 2008, 2902, 2008, 2208, 1743, 2208, 1732, 2685,
	2642, 1226, 2450, 2584, 2643, 1726, 2634, 2628, 3629, 3150,
	2584, 2147, 2661, 2576, 2583, 1746, 2207, 2147, 2584, 1220,
	2208, 1174, 4057, 1175, 1743, 4022, 3992, 3842, 2584, 3465,
	2781, 2700, 2021, 1986, 2002, 2005, 2076, 3129, 3130, 2858,
	3147, 3148, 3149, 1754, 1756, 2146, 2800, 2698, 1860, 1724,
	1725, 3145, 1201, 1457, 3731, 3521, 3497, 227, 1471, 1882,
	3870, 2121, 1620, 3449, 2621, 2620, 2619, 2618, 1749, 1750,
	1751, 1752, 2617, 1755, 227, 3869, 1724, 1725, 1732, 1176,
	1727, 1173, 3450, 3928, 3043, 2641, 1483, 1014, 2451, 1013,
	1012, 1011, 1010, 1009, 1008, 2970, 1749, 1750, 1751, 1752,
	1004, 1003, 1747, 1002, 229, 94, 1732, 1727, 1001, 1724,
	1725, 1000, 999, 3144, 1764, 1726, 998, 1774, 997, 227,
	996, 229, 1988, 1754, 1756, 1746, 1988, 995, 994, 993,
	992, 991, 990, 1755, 1743, 989, 988, 915, 914, 913,
	1727, 912, 1726, 1988, 1988, 1988, 1988, 911, 910, 1741,
	1742, 1754, 1756, 228, 909, 908, 907, 180, 97, 906,
	100, 905, 904, 903, 902, 221, 229, 1762, 901, 2452,
	228, 2449, 900, 899, 222, 1726, 898, 1741, 1742, 1643,
	897, 896, 1747, 895, 227, 3530, 894, 893, 3887, 1570,
	3447, 3667, 854, 1220, 892, 3146, 183, 145, 2005, 1462,
	891, 890, 889, 888, 3135, 887, 1749, 1750, 1751, 1752,
	1747, 886, 2576, 183, 885, 228, 1732, 884, 883, 873,
	872, 868, 867, 1285, 1083, 861, 860, 221, 847, 846,
	804, 229, 803, 802, 801, 793, 222, 792, 791, 763,
	754, 1588, 753, 1732, 752, 736, 1748, 1083, 251, 250,
	249, 1083, 248, 247, 246, 245, 244, 147, 183, 243,
	242, 1754, 1756, 241, 227, 240, 3150, 1343, 239, 238,
	237, 1343, 184, 236, 235, 1285, 1732, 145, 234, 233,
	228, 232, 231, 230, 3643, 3475, 3220, 1741, 1742, 3129,
	3130, 2672, 221, 3066, 1482, 1986, 1083, 3049, 1083, 2953,
	1083, 222, 2839, 1322, 2871, 1753, 1285, 1327, 3145, 4275,
	4296, 229, 2005, 2002, 2661, 2308, 227, 2454, 2647, 4071,
	1747, 1754, 1756, 183, 3171, 4489, 1748, 3141, 3142, 3143,
	1313, 1285, 2626, 1753, 3140, 3138, 3139, 3131, 3132, 3133,
	3134, 3136, 3137, 2611, 1442, 1885, 2480, 1085, 1843, 2466,
	2464, 1285, 1765, 1447, 1748, 1842, 1285, 1471, 2050, 2007,
	228, 1908, 3172, 229, 1083, 3144, 1083, 1471, 1723, 4469,
	1285, 1813, 221, 1461, 1465, 1329, 1083, 1846, 1083, 1804,
	1747, 222, 1437, 1207, 1128, 1253, 1256, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 4448, 4356, 2154, 1843, 2215, 4281,
	1220, 4123, 1266, 183, 1842, 4273, 4163, 1307, 4078, 4056,
	3935, 3910, 228, 1526, 1529, 3909, 3129, 3130, 3903, 3147,
	3148, 3149, 3902, 1285, 221, 1449, 1841, 1811, 3901, 3894,
	3893, 2448, 3891, 222, 3886, 3883, 1336, 787, 1429, 1434,
	1806, 1083, 3882, 1753, 1083, 3779, 3785, 3671, 1532, 790,
	1477, 1470, 3146, 1763, 3670, 183, 3135, 2656, 1738, 1739,
	1745, 1766, 1744, 1740, 1748, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 1302, 1574, 3669, 1293, 2214, 3653,
	1515, 3620, 1460, 1459, 172, 172, 3619, 1724, 1725, 3618,
	1744, 1740, 3144, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 3541, 1589, 3537, 3215, 1804, 3164, 3155, 3128,
	3125, 1755, 3124, 3122, 3093, 2889, 3092, 3091, 1727, 4073,
	3088, 1341, 227, 1028, 1748, 1440, 3729, 3129, 3130, 3085,
	1805, 3065, 1803, 1184, 3048, 3041, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 2904, 2612, 2873, 2437, 1723, 1557, 1559,
	1722, 4660, 4604, 1726, 2188, 3129, 3130, 4603, 2152, 4570,
	3145, 1313, 3786, 4524, 1313, 4522, 1209, 1083, 3567, 229,
	2743, 4412, 4348, 1083, 4337, 4334, 1026, 4333, 4332, 4313,
	1548, 4295, 4294, 3135, 3141, 3142, 3143, 4269, 4253, 4252,
	2414, 3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137,
	1744, 1740, 4238, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 4235, 1701, 4234, 227, 4181, 3169, 228, 4159,
	4121, 4104, 3151, 4103, 4085, 227, 4084, 4047, 4023, 1471,
	221, 1569, 3927, 1728, 1729, 1730, 1731, 1733, 1734, 222,
	3908, 3843, 1695, 1583, 3837, 3150, 3834, 3717, 3716, 3702,
	3701, 1659, 1793, 3699, 1732, 3635, 3623, 3532, 1476, 2420,
	1791, 183, 229, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 229, 3476, 3458, 2645, 3424, 227, 1083, 1083,
	1083, 3360, 3322, 1594, 1083, 3291, 3240, 3145, 3786, 3070,
	1611, 1205, 3069, 1205, 3135, 3064, 3032, 2851, 1849, 1754,
	1756, 1848, 1847, 1844, 3146, 3238, 1646, 1836, 1343, 1834,
	2654, 228, 2653, 1862, 2623, 2616, 1083, 2582, 2462, 781,
	1645, 228, 3135, 221, 229, 1943, 781, 1907, 1863, 1285,
	1858, 1857, 222, 221, 1911, 1856, 2872, 1698, 1855, 1724,
	1725, 1854, 222, 1203, 1922, 1203, 227, 1853, 1006, 1706,
	1005, 1969, 1871, 1705, 183, 1852, 1851, 1850, 1747, 4072,
	1831, 1830, 1829, 1828, 183, 1915, 1827, 1700, 4297, 3212,
	1727, 1796, 1845, 228, 1826, 1801, 1825, 1824, 1823, 1822,
	1821, 1702, 1820, 1819, 1918, 221, 1916, 1719, 1720, 1818,
	1817, 1806, 1026, 229, 222, 1285, 1792, 1790, 1868, 1869,
	1785, 1301, 1083, 1224, 1215, 1726, 1285, 2033, 2032, 4050,
	3931, 2041, 2043, 3879, 1892, 4139, 183, 1546, 3666, 2143,
	3646, 1551, 1826, 1912, 1083, 3638, 3052, 172, 227, 2614,
	1343, 3146, 1171, 3933, 3665, 1724, 1725, 1805, 2066, 1837,
	1838, 3236, 228, 3140, 3138, 3139, 3131, 3132, 3133, 3134,
	3136, 3137, 3129, 3130, 221, 2039, 1788, 4276, 3453, 1903,
	1326, 4601, 3994, 222, 2041, 1200, 1727, 1200, 1914, 4593,
	2014, 787, 2216, 2779, 1199, 229, 1199, 4335, 787, 2013,
	2048, 1973, 2041, 790, 4224, 183, 227, 227, 2041, 4223,
	790, 1313, 4076, 4025, 1890, 4024, 1893, 3993, 1324, 3930,
	3846, 1726, 1748, 3845, 3129, 3130, 1883, 3147, 3148, 3149,
	3844, 227, 3641, 227, 3460, 3459, 3325, 1318, 1026, 1325,
	3789, 1990, 2479, 1885, 228, 2465, 2463, 1861, 2036, 3519,
	1318, 4229, 1843, 229, 229, 2763, 221, 1693, 1610, 1842,
	3741, 3090, 1902, 3089, 2118, 222, 1901, 1900, 1898, 1887,
	1897, 1896, 3014, 4274, 1919, 2745, 1285, 1285, 229, 227,
	229, 1966, 1909, 3141, 3142, 3143, 1343, 2888, 2016, 1923,
	3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137, 1321,
	3144, 4162, 228, 228, 1826, 1318, 3354, 2012, 2027, 3714,
	986, 3408, 3293, 3407, 221, 221, 1660, 1815, 4465, 1812,
	2213, 1619, 1732, 222, 222, 2237, 229, 228, 4220, 228,
	3469, 4510, 4495, 1201, 1992, 1201, 4481, 1994, 3392, 221,
	2928, 221, 39, 1999, 1620, 183, 183, 2001, 222, 4125,
	222, 2103, 2004, 2108, 987, 2134, 2113, 3743, 3738, 2038,
	3722, 2010, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734,
	183, 2019, 183, 3494, 3261, 228, 3176, 3569, 1550, 1285,
	2445, 1285, 4490, 1285, 2652, 2044, 2034, 221, 3058, 2139,
	2144, 3135, 1859, 1839, 3399, 2182, 222, 2037, 1525, 1285,
	1285, 4155, 4504, 1454, 2051, 1296, 3133, 3134, 3136, 3137,
	1285, 1252, 2189, 2082, 4501, 3443, 3694, 4328, 183, 4060,
	4419, 2794, 1285, 1598, 1285, 1285, 1285, 4310, 1183, 2792,
	787, 3296, 3131, 3132, 3133, 3134, 3136, 3137, 3384, 3709,
	2178, 2911, 790, 2885, 2797, 2136, 4554, 781, 4553, 3513,
	4491, 3265, 3756, 3150, 4202, 4584, 2223, 967, 3981, 2323,
	1493, 1024, 2287, 984, 982, 3129, 3130, 2686, 1455, 2195,
	4655, 3267, 2183, 1551, 2285, 1460, 1459, 980, 4195, 2704,
	4187, 4146, 4020, 978, 975, 4019, 3754, 3753, 3745, 3737,
	2704, 3736, 3734, 3733, 2702, 3145, 3721, 1658, 3029, 2101,
	2102, 3681, 3680, 2112, 3388, 2702, 3387, 2241, 3231, 2218,
	3063, 3062, 3061, 3060, 3018, 2803, 2802, 2145, 2321, 3755,
	2028, 3129, 3130, 2799, 2788, 2229, 2777, 3027, 2776, 2773,
	2203, 2450, 2646, 1083, 1501, 1083, 1326, 2772, 2771, 2750,
	2148, 2192, 1083, 2749, 2712, 1943, 1943, 1343, 1023, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 2224, 1083, 2205, 1083, 1083, 1083,
	1083, 2165, 2164, 3237, 1548, 1325, 2200, 2197, 2200, 787,
	2201, 1596, 1326, 2312, 1026, 1641, 1026, 2325, 2209, 1083,
	2210, 790, 1083, 1083, 1302, 2635, 4156, 2451, 842, 1502,
	1083, 1734, 2395, 1657, 1083, 1699, 1083, 1083, 2493, 2882,
	3324, 2492, 3135, 2353, 1343, 2076, 1538, 2236, 1537, 3146,
	1083, 1083, 1083, 1083, 2228, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 3293, 2213, 4585, 1025, 3352, 2322, 2693,
	2245, 1325, 1536, 4102, 1535, 2246, 3024, 972, 2747, 3940,
	1076, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	2426, 2427, 2263, 1497, 1083, 2934, 1238, 2163, 3135, 3025,
	3495, 2045, 2046, 3030, 2426, 2442, 1205, 2281, 2452, 2306,
	2449, 2233, 2298, 1343, 1510, 1640, 1591, 2410, 2336, 2106,
	1550, 2627, 1205, 2410, 1730, 1731, 1733, 1734, 4321, 843,
	2488, 1656, 2767, 2735, 2291, 1669, 2721, 2247, 1083, 1343,
	3939, 2320, 1456, 3006, 3137, 1612, 3145, 2317, 2301, 2534,
	2534, 2548, 2309, 2426, 2760, 2761, 2568, 2570, 1203, 2311,
	3995, 2324, 2574, 2310, 1641, 1006, 2991, 2340, 1006, 1006,
	2341, 2342, 2760, 2761, 1203, 3763, 2441, 2253, 2760, 2761,
	3705, 3141, 3142, 3143, 4614, 2307, 1704, 3965, 3140, 3138,
	3139, 3131, 3132, 3133, 3134, 3136, 3137, 1300, 2734, 2202,
	2445, 2250, 3145, 4588, 3503, 3502, 2624, 2967, 2017, 2418,
	1212, 2352, 3697, 1521, 3977, 2490, 2416, 1692, 2599, 2419,
	2491, 3961, 3353, 2494, 1638, 2495, 2496, 2591, 2454, 3764,
	2422, 3341, 1308, 1592, 1796, 4487, 4018, 3735, 3732, 1285,
	1285, 1022, 2439, 1892, 4323, 2724, 1026, 2244, 4553, 3386,
	1210, 677, 1652, 1171, 2300, 1026, 2454, 3350, 2798, 1026,
	2770, 1519, 761, 2748, 1640, 4565, 3558, 1608, 4573, 3762,
	1620, 3005, 1279, 3962, 2590, 1620, 2151, 2150, 672, 4572,
	1200, 1343, 3026, 2254, 2633, 3342, 1639, 172, 2555, 1199,
	3146, 2559, 3028, 2543, 3264, 4589, 1200, 2681, 2457, 2530,
	2613, 2572, 1937, 2349, 2350, 1199, 2580, 2581, 2648, 1673,
	2592, 3718, 2796, 2675, 2598, 1943, 2603, 2596, 2597, 2609,
	2610, 2793, 2703, 1890, 1451, 3340, 2076, 1845, 962, 2791,
	4617, 2638, 4542, 4101, 3944, 1319, 3440, 1313, 2746, 1940,
	3129, 3130, 881, 2674, 2795, 1319, 3146, 1026, 3861, 2683,
	3860, 2640, 1343, 1019, 1499, 1486, 1213, 2998, 2999, 1319,
	1597, 4455, 4401, 4456, 3129, 3130, 1285, 3441, 759, 2057,
	2448, 2655, 2297, 2713, 2286, 2058, 976, 976, 2659, 3691,
	1522, 1655, 1083, 1083, 2073, 1083, 2284, 2677, 2666, 3690,
	976, 2658, 2669, 2625, 2670, 2660, 977, 976, 1837, 1838,
	840, 2684, 839, 2323, 4591, 1563, 4488, 3279, 1285, 4399,
	4143, 3975, 2973, 2706, 2454, 2676, 2678, 2069, 1877, 1576,
	845, 844, 3945, 2789, 2119, 2768, 2855, 4644, 1201, 3140,
	3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137, 874, 1285,
	2752, 2723, 2687, 963, 1201, 3440, 2074, 2075, 4329, 1315,
	1987, 1285, 2689, 1285, 3276, 2057, 2131, 2869, 2780, 1315,
	1496, 2058, 2321, 1237, 2775, 1880, 4597, 2774, 1285, 2738,
	3957, 2691, 1602, 1315, 3363, 3958, 2070, 1292, 2726, 2729,
	2593, 2667, 2751, 2716, 4343, 2059, 3706, 2671, 3131, 3132,
	3133, 3134, 3136, 3137, 2834, 2769, 3555, 1521, 1878, 2836,
	4322, 2682, 2063, 3266, 4486, 2692, 1595, 3135, 962, 1083,
	2130, 862, 1667, 2954, 2299, 2955, 726, 2704, 2976, 2865,
	2762, 2764, 2765, 2766, 1903, 2690, 3960, 1222, 1320, 787,
	1832, 3135, 2727, 1019, 4039, 2699, 4517, 3308, 1320, 2107,
	2319, 790, 3963, 2252, 3234, 4518, 2707, 2119, 4541, 1468,
	1670, 1475, 1320, 1481, 2067, 3020, 3857, 2951, 4114, 1083,
	973, 2409, 3976, 4564, 2929, 1083, 1083, 4439, 2910, 4430,
	172, 2059, 2060, 2065, 1460, 2837, 760, 3556, 4003, 2932,
	3771, 2709, 2722, 2896, 2937, 1316, 2938, 2849, 2063, 3769,
	4590, 2119, 2859, 3307, 1317, 1316, 2950, 2898, 2925, 1593,
	1668, 2978, 2322, 2980, 1317, 695, 1784, 2392, 2959, 1316,
	2961, 3145, 2963, 673, 2891, 2880, 1211, 1568, 1317, 1573,
	1083, 1083, 2707, 963, 762, 3068, 1083, 2901, 758, 1582,
	964, 1587, 1703, 2912, 2900, 3145, 2099, 2930, 2595, 1083,
	1083, 2115, 2417, 1299, 2981, 1083, 1083, 2983, 2249, 2975,
	1017, 1083, 962, 1879, 2899, 2061, 3277, 2709, 2060, 2065,
	1083, 1083, 1083, 2753, 1282, 2114, 1083, 3959, 3312, 2708,
	4098, 2956, 2935, 2936, 2957, 2320, 1083, 1019, 2406, 2972,
	875, 876, 4618, 2942, 2943, 2944, 1671, 2948, 3021, 674,
	2436, 3051, 1644, 1083, 2243, 2711, 3333, 3318, 2110, 3772,
	2958, 2067, 2960, 2076, 2962, 3966, 2830, 2404, 882, 2986,
	2084, 4595, 2104, 1607, 1609, 2608, 1025, 2988, 3314, 2987,
	3571, 2997, 4605, 1018, 2971, 2454, 2707, 2074, 2075, 3046,
	3047, 4389, 2336, 2088, 3050, 2096, 2992, 675, 3007, 676,
	4049, 2061, 2079, 4540, 3851, 2708, 4040, 3662, 1227, 3862,
	3334, 3316, 2100, 863, 864, 3146, 2710, 2111, 3515, 4263,
	2831, 2709, 1318, 2555, 2989, 3042, 4350, 963, 3784, 965,
	2390, 2711, 1318, 2393, 1672, 4645, 2550, 4485, 2974, 3146,
	3719, 3313, 4516, 1083, 1083, 1083, 1318, 2067, 2085, 2097,
	3332, 3317, 1083, 1083, 1083, 3019, 2080, 1083, 1988, 1625,
	2829, 4097, 1937, 1937, 4552, 4550, 4366, 1083, 1205, 1343,
	964, 4237, 4255, 1083, 4596, 1083, 2728, 3183, 3184, 3805,
	3428, 966, 2122, 2389, 1205, 4256, 1873, 2171, 2129, 2095,
	1870, 1225, 2710, 1218, 1034, 664, 2078, 3270, 1714, 1940,
	1940, 3906, 1343, 2555, 2555, 3057, 2400, 4598, 3858, 2708,
	2339, 2077, 2029, 4623, 1205, 4246, 4257, 1343, 3609, 3225,
	1203, 4178, 4177, 3770, 2401, 3166, 4309, 877, 878, 2402,
	1026, 3806, 3749, 2407, 1943, 2711, 1203, 2062, 1343, 3205,
	3980, 3185, 3693, 3287, 2705, 1713, 3429, 3979, 3420, 3283,
	3230, 2089, 1285, 1285, 1713, 3138, 3139, 3131, 3132, 3133,
	3134, 3136, 3137, 1877, 2870, 2864, 1203, 1708, 3771, 2026,
	2853, 2196, 3244, 2190, 4387, 1083, 4259, 3769, 3195, 2184,
	3139, 3131, 3132, 3133, 3134, 3136, 3137, 2176, 2157, 1083,
	4351, 3554, 2066, 2329, 3214, 3487, 2710, 4099, 2123, 4258,
	865, 866, 1490, 1285, 3480, 3193, 1229, 1899, 1943, 965,
	1880, 3624, 3677, 4388, 964, 735, 4260, 2090, 2091, 3161,
	3162, 3163, 3219, 2062, 2098, 1875, 1083, 4406, 794, 3516,
	2066, 3262, 4369, 3177, 3223, 3255, 3218, 1713, 4144, 3946,
	1285, 2086, 1200, 1878, 2024, 3268, 1712, 2555, 2555, 2555,
	2107, 1199, 3192, 3211, 3808, 1712, 4065, 3281, 1200, 3204,
	1784, 966, 1285, 1313, 1285, 3194, 3280, 1199, 2391, 3298,
	3203, 2292, 3303, 2118, 2022, 3305, 3206, 3207, 2105, 1343,
	2754, 2118, 2087, 2850, 2025, 2586, 1876, 3772, 1200, 4218,
	1285, 3284, 3241, 3242, 1285, 3243, 3907, 1199, 1240, 3482,
	1915, 3227, 3228, 3229, 3610, 3209, 3355, 3210, 1724, 1725,
	3327, 1714, 2403, 3611, 3481, 4622, 3191, 1285, 3863, 2589,
	1714, 3637, 2405, 3182, 1285, 4216, 1285, 3252, 2330, 3256,
	1343, 1642, 1755, 3329, 4158, 3299, 3295, 781, 1712, 1727,
	3263, 3487, 3271, 3272, 3978, 2234, 3294, 3331, 1285, 2106,
	3480, 1016, 3269, 965, 3012, 3343, 3208, 2990, 3188, 1285,
	2588, 3349, 3187, 3345, 2632, 2587, 2631, 3297, 2630, 2629,
	3301, 3221, 2211, 3199, 1726, 3767, 1205, 1530, 1544, 3776,
	3351, 3436, 4352, 3373, 3361, 3315, 2857, 3379, 1279, 2225,
	1201, 1531, 3239, 3323, 1626, 1023, 2092, 3419, 1879, 2227,
	3864, 1285, 1285, 3336, 3678, 966, 1201, 4316, 3434, 4213,
	2126, 2235, 1542, 2238, 2239, 2240, 4031, 3251, 880, 3339,
	3253, 3254, 1937, 4166, 1285, 3257, 2732, 3258, 1203, 3259,
	3700, 3356, 3395, 3366, 3362, 3368, 1201, 3390, 3372, 3393,
	3381, 3226, 3378, 3470, 3375, 3482, 3427, 3445, 3385, 2755,
	2756, 3770, 2194, 4561, 3337, 4347, 4261, 4141, 3338, 1940,
	3481, 4262, 2933, 1343, 2124, 3200, 1343, 4082, 2835, 2833,
	795, 796, 2093, 2222, 1601, 1732, 3364, 4409, 4317, 4416,
	4403, 2752, 3235, 3397, 3913, 3626, 3435, 2461, 4153, 787,
	1688, 4434, 3404, 3389, 3437, 3417, 3430, 734, 4563, 1083,
	2296, 790, 3416, 2295, 2125, 1083, 1083, 3489, 3190, 1083,
	1083, 1083, 1690, 1083, 3198, 1687, 3483, 3484, 3485, 3486,
	1754, 1756, 1083, 1943, 4167, 172, 172, 1685, 3442, 2925,
	3159, 1083, 4154, 3472, 1083, 3468, 4081, 3451, 2925, 3509,
	1343, 4506, 4336, 3444, 1664, 3488, 3202, 1662, 3478, 1083,
	1200, 3466, 1636, 4120, 3508, 3905, 3288, 1343, 1634, 1199,
	1632, 3413, 4410, 4318, 1630, 1931, 3775, 1943, 1943, 1083,
	1083, 3158, 1083, 1083, 1083, 1628, 3506, 1873, 1622, 1747,
	3531, 3492, 3517, 1617, 3221, 3512, 1615, 1540, 3491, 3454,
	3455, 3245, 3123, 3534, 3031, 2854, 2787, 2744, 2657, 2460,
	2302, 1910, 1906, 1691, 1026, 3505, 1579, 2283, 3490, 3456,
	798, 797, 3511, 1543, 1083, 3510, 1708, 2969, 1083, 3583,
	1943, 1943, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 3514, 1083, 3543, 3544, 3584, 3496, 1541, 2968, 1083,
	1083, 1943, 3201, 879, 1877, 3499, 1083, 3500, 2940, 3501,
	2318, 1651, 3483, 3484, 3485, 3486, 2258, 1083, 2156, 799,
	800, 1970, 3539, 1816, 1590, 1514, 4004, 4480, 1205, 1205,
	3740, 3365, 1083, 3739, 4005, 3550, 3990, 4402, 4063, 4010,
	3557, 3559, 3560, 1689, 3950, 3566, 1686, 3804, 1201, 3795,
	3752, 1880, 3712, 3561, 3573, 3710, 974, 3551, 1684, 4538,
	3692, 1343, 3423, 4058, 2555, 2555, 1875, 1440, 3581, 3655,
	1341, 3418, 3582, 1748, 3621, 1663, 3580, 3659, 1661, 3409,
	1203, 1203, 3433, 1635, 1878, 4530, 3642, 2883, 2875, 1633,
	2868, 1631, 2860, 2847, 2832, 1629, 3660, 3661, 2673, 3613,
	2668, 2155, 3586, 2153, 2135, 2120, 1627, 3588, 1083, 1621,
	3672, 3673, 3674, 2094, 1616, 2081, 2068, 1614, 1539, 2009,
	2006, 2003, 2000, 1995, 1993, 1555, 1989, 1876, 1980, 1717,
	1917, 3010, 1083, 3614, 4554, 2282, 2030, 2984, 1180, 2982,
	4444, 3376, 172, 3628, 3547, 4087, 4080, 2129, 4079, 3633,
	3634, 4017, 2305, 3936, 3630, 3631, 3658, 2926, 2049, 1495,
	2704, 3563, 4248, 1083, 1083, 1181, 2733, 4241, 2680, 1279,
	3816, 2076, 1682, 1683, 2248, 2702, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2704, 2555, 3644, 2303, 2193,
	1091, 1083, 1200, 1200, 2278, 2277, 3622, 979, 981, 983,
	2730, 1199, 1199, 1260, 3686, 1728, 1729, 1730, 1731, 1733,
	1734, 1261, 4443, 3011, 2255, 1285, 3982, 3645, 1285, 3668,
	4012, 3723, 1613, 4283, 3914, 2736, 1718, 722, 3892, 1879,
	1724, 1725, 2304, 3682, 3727, 1943, 259, 259, 259, 3310,
	667, 668, 2737, 683, 667, 683, 693, 3377, 4557, 733,
	3728, 3730, 2757, 751, 3696, 2349, 3574, 2737, 757, 3744,
	1721, 1727, 1182, 2057, 259, 1285, 1724, 1725, 1294, 2058,
	1228, 1083, 3715, 4548, 678, 1261, 3720, 3750, 4511, 1205,
	1083, 3742, 859, 3818, 3748, 2828, 252, 2846, 259, 1261,
	1285, 1285, 1285, 2280, 3792, 2177, 1726, 2752, 3825, 3809,
	774, 2784, 1305, 2794, 2792, 3654, 3747, 1285, 2349, 3589,
	2801, 3759, 830, 2741, 2783, 3774, 2782, 2739, 3810, 4394,
	4360, 1937, 1285, 4592, 4357, 3761, 2740, 3790, 1343, 689,
	3791, 1203, 1726, 661, 4315, 3813, 3777, 4302, 4232, 3617,
	1201, 1201, 4211, 3675, 4147, 3765, 4145, 3676, 3773, 3793,
	4142, 3802, 1343, 3794, 3783, 1083, 1083, 3652, 1940, 3422,
	3798, 1083, 1083, 1943, 3841, 2890, 1083, 1083, 2573, 1083,
	2015, 1924, 4436, 1083, 3812, 4164, 3948, 4437, 3947, 2059,
	3689, 3796, 3811, 3278, 1083, 3233, 4621, 2941, 4436, 2861,
	3814, 4359, 3711, 4437, 3713, 1937, 2063, 3820, 4567, 1462,
	1083, 3884, 3824, 3847, 3819, 1931, 1931, 3832, 3129, 3130,
	1724, 1725, 667, 667, 3865, 3839, 2456, 3830, 3831, 3664,
	259, 3836, 2696, 2697, 2742, 3835, 2696, 3838, 2896, 2694,
	2695, 2694, 1940, 3874, 1600, 3849, 2489, 3878, 1666, 3801,
	1599, 1665, 4233, 4196, 4014, 3848, 4009, 4008, 3859, 3880,
	3663, 3562, 3370, 1200, 3367, 2925, 1810, 3866, 1809, 3751,
	1205, 4607, 1199, 4574, 4398, 2785, 2060, 2065, 1205, 4397,
	4396, 4298, 1343, 4214, 1343, 4191, 4140, 4137, 4042, 3932,
	3840, 1205, 3822, 3778, 3708, 3703, 3426, 3425, 3304, 3250,
	3919, 3119, 3118, 1977, 3117, 3116, 3115, 3114, 1343, 3113,
	3112, 3111, 3110, 2840, 3109, 3108, 2843, 3829, 2845, 3107,
	3106, 3105, 1203, 3104, 3103, 3102, 3101, 3100, 3099, 3904,
	1203, 3098, 3097, 3096, 2966, 2947, 2946, 2945, 2874, 2848,
	1205, 2731, 1205, 1203, 2664, 2650, 2649, 2421, 2279, 2276,
	3854, 2275, 2274, 2273, 2272, 2191, 2166, 2162, 2161, 2061,
	2160, 2887, 1285, 2159, 2887, 2158, 1983, 3974, 1982, 1977,
	1981, 1979, 1343, 1681, 1285, 1680, 3925, 1285, 1623, 1509,
	1977, 3985, 3986, 3921, 3918, 1508, 1343, 3922, 3916, 3917,
	1507, 3915, 1203, 3288, 1203, 3926, 172, 1506, 3929, 3920,
	1505, 2055, 1504, 1503, 3984, 2067, 1498, 1494, 1492, 1491,
	1334, 1201, 1333, 3218, 1332, 1331, 1285, 1285, 3949, 3942,
	1330, 1298, 1297, 1247, 1246, 1245, 1244, 1243, 1242, 1241,
	1239, 1234, 1233, 1285, 1232, 1231, 1230, 1163, 2020, 985,
	2964, 971, 4320, 3964, 1200, 1343, 2294, 1675, 89, 1500,
	1285, 817, 1200, 1199, 3988, 2053, 83, 3973, 2127, 4029,
	3911, 1199, 3970, 3707, 3970, 1200, 942, 3997, 4433, 1484,
	4000, 3937, 3938, 4027, 1199, 1205, 4016, 4342, 4002, 825,
	4055, 3999, 4418, 3306, 4066, 1285, 1285, 1285, 2804, 2257,
	1624, 4007, 2259, 3213, 2615, 2054, 4021, 4386, 1343, 3888,
	3067, 3983, 4086, 4067, 4026, 4290, 4113, 2459, 1814, 3170,
	1083, 1083, 1083, 85, 1200, 1067, 1200, 1113, 4038, 4037,
	1937, 4033, 3951, 1199, 4048, 1199, 3695, 1203, 1343, 4070,
	4028, 4052, 2915, 1083, 4035, 4034, 1083, 1083, 3924, 1928,
	1930, 4068, 4054, 4013, 1033, 4015, 1083, 1346, 4454, 1943,
	4061, 2031, 1073, 2047, 1083, 1083, 2040, 1940, 2651, 2533,
	1090, 1087, 3934, 1932, 1937, 1937, 4075, 1934, 1089, 1343,
	4105, 1285, 4032, 4094, 4089, 1931, 4090, 1088, 1933, 1833,
	1086, 2062, 1927, 3800, 2856, 2894, 4100, 3452, 1549, 1547,
	4083, 944, 1201, 2035, 2415, 1343, 2443, 3970, 3056, 4092,
	1201, 1940, 1940, 1083, 1807, 1048, 1069, 2440, 1223, 1058,
	1047, 3196, 1083, 1201, 3175, 255, 4116, 1937, 1937, 4122,
	1083, 3439, 1943, 3651, 2328, 834, 3126, 2446, 1214, 4110,
	2556, 1083, 2549, 1555, 1083, 1555, 2545, 3260, 2884, 4133,
	4134, 1694, 4127, 1786, 4149, 2895, 1083, 1328, 1937, 1200,
	1051, 4136, 2413, 1343, 1940, 1940, 1798, 3036, 1199, 4174,
	1285, 2338, 1201, 3446, 1201, 1285, 1285, 3216, 2644, 4440,
	1216, 3570, 2170, 4150, 1179, 1178, 4148, 1221, 1177, 4424,
	4421, 4157, 2117, 3248, 3249, 1940, 3833, 3402, 2023, 2688,
	4190, 1776, 3410, 1063, 1445, 3181, 3471, 1511, 756, 4171,
	1075, 1775, 4201, 1236, 1343, 2825, 2824, 1285, 4312, 1314,
	1312, 4226, 4188, 1311, 1310, 259, 4217, 259, 259, 4581,
	1265, 259, 1275, 4643, 3704, 1205, 1205, 226, 3004, 1715,
	4192, 4198, 1707, 1295, 3282, 223, 4231, 4247, 225, 4207,
	4206, 4242, 751, 224, 1083, 1083, 4215, 4043, 3656, 3222,
	2555, 4509, 1341, 4203, 3725, 3394, 4193, 4225, 23, 4210,
	4243, 1083, 1943, 22, 21, 109, 259, 4205, 259, 259,
	1265, 3330, 259, 259, 1275, 4245, 4230, 1203, 1203, 4209,
	4244, 4250, 4111, 4249, 42, 259, 3382, 1464, 20, 4264,
	125, 144, 4070, 3344, 143, 3346, 117, 1201, 142, 141,
	1083, 140, 139, 1083, 146, 138, 137, 2555, 1488, 4239,
	1205, 132, 4279, 4280, 136, 4278, 135, 3414, 134, 133,
	131, 3374, 1205, 4111, 129, 3380, 130, 1513, 3421, 1275,
	4308, 124, 4288, 259, 259, 128, 1265, 127, 3404, 126,
	4266, 4267, 123, 122, 121, 120, 119, 3970, 3970, 2352,
	118, 4307, 116, 115, 2066, 751, 114, 259, 259, 113,
	112, 4282, 1203, 111, 1083, 1083, 4330, 110, 747, 744,
	3462, 3463, 4324, 61, 1203, 4325, 1205, 4299, 4346, 1205,
	859, 60, 4304, 1285, 4182, 4183, 108, 107, 19, 40,
	14, 65, 1937, 1285, 1285, 66, 18, 4338, 13, 1200,
	1200, 35, 3319, 3320, 88, 99, 3321, 2352, 1199, 1199,
	1285, 4377, 4197, 98, 4199, 36, 4200, 96, 95, 34,
	4354, 4355, 4353, 4340, 1083, 1083, 4358, 17, 1203, 1940,
	4362, 1203, 3970, 4251, 1083, 4371, 4370, 4331, 16, 4382,
	4373, 4383, 15, 4270, 3970, 3357, 3358, 93, 92, 3359,
	4375, 4376, 33, 259, 4230, 4374, 31, 11, 9, 2333,
	8, 37, 4381, 1894, 12, 2555, 5, 4380, 177, 176,
	4180, 179, 259, 175, 4411, 1083, 1083, 178, 1083, 4391,
	87, 4395, 4415, 174, 1200, 173, 86, 29, 10, 169,
	4227, 4363, 4390, 1199, 4365, 3788, 1200, 80, 3970, 171,
	170, 3970, 168, 4423, 4426, 1199, 167, 166, 4438, 81,
	78, 165, 4435, 4414, 4413, 82, 164, 79, 72, 4459,
	1937, 163, 4464, 27, 4463, 6, 4432, 64, 1083, 1083,
	1083, 7, 4428, 4462, 4095, 73, 3493, 3965, 102, 103,
	4445, 38, 76, 4427, 75, 4457, 4431, 1201, 1201, 4450,
	1200, 77, 74, 1200, 4458, 26, 63, 1940, 25, 1199,
	1083, 210, 1199, 209, 208, 207, 4498, 206, 4476, 4477,
	205, 3961, 204, 4479, 4478, 3954, 203, 4494, 198, 197,
	202, 200, 199, 201, 196, 213, 212, 218, 217, 216,
	215, 84, 3952, 214, 211, 4521, 220, 4512, 2551, 4496,
	4519, 3956, 4339, 195, 194, 193, 191, 4523, 187, 186,
	190, 4535, 192, 1083, 189, 188, 185, 4533, 219, 4534,
	161, 162, 71, 3962, 4520, 160, 4539, 159, 853, 158,
	4527, 4528, 1201, 4529, 1931, 157, 156, 155, 154, 4442,
	70, 24, 104, 2, 1201, 1, 0, 90, 101, 4545,
	4546, 4551, 0, 4559, 4555, 4549, 0, 4547, 0, 0,
	0, 2066, 0, 1205, 3955, 1205, 4558, 4562, 4560, 0,
	667, 4423, 4575, 0, 4426, 4571, 0, 4577, 4579, 4576,
	4566, 0, 4586, 0, 0, 4346, 0, 0, 0, 4587,
	4583, 259, 4582, 259, 0, 0, 0, 259, 1201, 0,
	0, 1201, 4600, 0, 91, 0, 4599, 0, 1931, 0,
	1464, 1265, 259, 0, 259, 1203, 4602, 1203, 0, 259,
	1464, 683, 0, 0, 0, 0, 259, 1464, 4611, 4615,
	0, 0, 4609, 1083, 1083, 4606, 4616, 0, 4608, 0,
	4613, 1984, 1083, 0, 1083, 1083, 4619, 0, 0, 0,
	0, 0, 1977, 259, 4634, 4628, 4633, 0, 4632, 4639,
	259, 4636, 4638, 0, 4625, 4637, 0, 4631, 4635, 0,
	0, 0, 0, 0, 0, 4647, 4646, 0, 4578, 4642,
	4580, 4649, 4654, 1555, 4651, 3970, 4652, 3970, 0, 4648,
	4650, 0, 0, 0, 4657, 0, 0, 0, 0, 4659,
	751, 1083, 4662, 4658, 4664, 0, 4442, 4661, 4654, 4665,
	4668, 4667, 4626, 4627, 0, 4531, 4532, 0, 0, 0,
	3957, 4536, 0, 0, 0, 3958, 0, 0, 0, 0,
	0, 0, 0, 4508, 0, 0, 1270, 1200, 0, 1200,
	849, 0, 0, 0, 3757, 0, 1199, 94, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 72, 4663,
	852, 851, 0, 1872, 0, 0, 3960, 0, 0, 0,
	0, 0, 0, 0, 1435, 73, 0, 1446, 1270, 0,
	0, 0, 3963, 0, 0, 0, 1937, 0, 0, 180,
	97, 77, 100, 0, 0, 2896, 0, 0, 0, 3760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3826,
	3827, 3828, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 1940, 854, 0, 1279, 0, 0, 145,
	0, 84, 764, 0, 0, 0, 0, 0, 1270, 1270,
	0, 0, 0, 0, 0, 259, 0, 0, 259, 0,
	2820, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 229, 0, 0, 0, 0, 853, 0,
	0, 0, 0, 0, 0, 1201, 0, 1201, 0, 0,
	0, 0, 104, 2812, 2810, 0, 0, 90, 101, 147,
	2814, 2816, 2806, 0, 0, 0, 1940, 0, 0, 0,
	0, 259, 0, 0, 184, 259, 0, 3959, 0, 0,
	259, 0, 228, 1931, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 259, 222, 259, 0, 0, 0, 667, 0,
	259, 0, 0, 0, 91, 3966, 0, 0, 1032, 769,
	0, 0, 751, 0, 0, 183, 859, 1931, 1931, 0,
	0, 0, 0, 2994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3797, 0, 0, 0, 0,
	0, 259, 0, 1265, 259, 3033, 3034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 751, 1937,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	1931, 1931, 2256, 0, 0, 0, 0, 259, 259, 0,
	259, 0, 259, 0, 259, 0, 259, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 1931, 0, 2551, 2551, 3850, 0, 0, 0, 2288,
	0, 0, 2289, 0, 2290, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2808, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	733, 0, 0, 0, 751, 0, 0, 2821, 2813, 2811,
	2815, 2817, 2807, 2809, 2823, 0, 0, 0, 0, 0,
	0, 2819, 0, 0, 775, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 1279, 1977, 1977, 0, 3152,
	3153, 3154, 0, 3989, 0, 0, 0, 0, 0, 180,
	97, 0, 100, 1755, 2826, 3998, 0, 0, 4001, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 0, 1977, 0, 145,
	0, 0, 0, 0, 0, 1726, 766, 2551, 2551, 2551,
	0, 0, 0, 0, 4091, 1746, 4093, 0, 0, 0,
	0, 0, 0, 0, 4051, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 1977, 0, 770, 0, 0, 1446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1977, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 667, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 228, 773, 1977, 1446, 259, 0, 1977, 768,
	0, 0, 0, 0, 221, 667, 1749, 1750, 1751, 1752,
	4138, 0, 259, 222, 667, 1931, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 0, 0, 0,
	0, 259, 1275, 0, 0, 765, 0, 2827, 0, 3129,
	3130, 0, 3147, 3148, 3149, 0, 2818, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 4041, 0, 1724, 1725,
	0, 0, 3536, 772, 0, 0, 0, 4053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 259, 1275,
	0, 683, 1755, 0, 0, 0, 0, 0, 767, 1727,
	4074, 2663, 0, 0, 4208, 0, 0, 259, 0, 0,
	259, 0, 0, 0, 259, 0, 259, 0, 0, 0,
	1747, 1265, 0, 259, 259, 3144, 1275, 1275, 2679, 0,
	0, 0, 0, 259, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 4204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 3525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 3135, 1290, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	1032, 259, 0, 1753, 1032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2181, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 259, 2838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3150, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 1466,
	0, 1472, 1464, 1478, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 2879, 0, 0, 0, 0, 0, 0,
	3145, 0, 0, 2720, 0, 667, 3527, 3528, 0, 0,
	0, 0, 1279, 1279, 2908, 859, 0, 2720, 2720, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 259, 0, 0, 1566, 0, 1571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	0, 1585, 0, 259, 1265, 259, 0, 0, 0, 1464,
	0, 1464, 1275, 259, 2551, 2551, 1265, 0, 1265, 0,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 0, 0, 0, 0, 259, 259,
	259, 259, 1265, 0, 0, 1265, 0, 259, 0, 259,
	0, 0, 0, 0, 1647, 0, 0, 1653, 3590, 3591,
	3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601,
	3602, 3603, 3604, 3605, 3606, 3607, 3608, 0, 3612, 0,
	259, 0, 1753, 0, 3146, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4344, 0, 2551, 2551, 2551, 2551,
	2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551,
	2551, 2551, 2551, 2551, 2551, 4361, 2551, 261, 0, 1931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1464, 3129, 3130,
	1795, 3147, 3148, 3149, 0, 0, 1808, 0, 0, 0,
	2526, 2527, 2528, 2529, 2522, 2523, 2524, 2525, 0, 0,
	0, 3535, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 0, 0, 0, 3141, 3142, 3143, 0,
	0, 0, 0, 3140, 3138, 3139, 3131, 3132, 3133, 3134,
	3136, 3137, 3129, 3130, 0, 3147, 3148, 3149, 0, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 3144, 0, 0, 0, 0, 0,
	4446, 0, 0, 4447, 0, 0, 0, 0, 0, 0,
	0, 2502, 2503, 2504, 2505, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1866, 1866, 2514, 2515, 2516, 2517, 2510, 2511,
	2512, 2513, 2518, 2519, 2520, 2521, 0, 0, 3144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 1046, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 667, 3135, 0, 667, 0, 0,
	667, 667, 1931, 0, 0, 0, 667, 0, 1270, 1270,
	0, 0, 0, 0, 259, 0, 0, 2498, 2499, 2500,
	2501, 2506, 2507, 2508, 2509, 0, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1464, 3135,
	0, 0, 0, 0, 0, 0, 0, 3150, 0, 259,
	0, 0, 0, 259, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1032, 0, 0,
	0, 0, 2720, 2720, 259, 0, 3275, 0, 0, 3145,
	1435, 0, 0, 0, 0, 0, 2720, 0, 0, 3290,
	0, 0, 0, 0, 0, 0, 0, 2720, 3290, 0,
	2720, 3290, 0, 0, 3290, 0, 1446, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 259, 259, 3275,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3145, 0, 0, 0, 1755, 0, 0,
	0, 3275, 0, 259, 1727, 3348, 3348, 0, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 1725, 0, 2720, 0, 2720, 1977, 3371, 2720, 3275,
	0, 0, 2720, 3275, 0, 0, 0, 0, 1977, 1726,
	0, 1977, 0, 0, 1755, 0, 0, 0, 0, 1746,
	0, 1727, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 3398, 0,
	0, 3400, 2720, 3146, 0, 259, 1726, 0, 0, 259,
	0, 1275, 0, 0, 0, 0, 1746, 1977, 0, 0,
	1446, 0, 0, 0, 0, 1743, 259, 0, 1270, 3524,
	0, 2879, 0, 0, 1265, 0, 259, 0, 0, 2720,
	0, 667, 0, 0, 0, 0, 0, 0, 2720, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 3146, 0, 0,
	1732, 0, 0, 0, 1446, 0, 1446, 0, 0, 259,
	2879, 0, 0, 2879, 0, 0, 3022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 1750, 1751,
	1752, 0, 0, 0, 3498, 1754, 1756, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3504, 0, 0, 1265, 259, 0, 259, 0, 0,
	0, 1741, 1742, 1265, 0, 3141, 3142, 3143, 0, 0,
	0, 0, 3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136,
	3137, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 3141,
	3142, 3143, 0, 0, 0, 0, 3140, 3138, 3139, 3131,
	3132, 3133, 3134, 3136, 3137, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 3568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2327, 0, 2331, 0,
	0, 0, 4119, 0, 1977, 2345, 0, 0, 0, 0,
	0, 0, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 1753, 2394, 0,
	2396, 2397, 2398, 2399, 1046, 0, 0, 0, 1046, 4160,
	2551, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 2423, 0, 1427, 0, 0, 0, 1427, 0,
	0, 0, 0, 1795, 0, 0, 0, 2438, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 259, 259,
	0, 0, 0, 2468, 2471, 2474, 2477, 0, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 1748, 0, 2551, 0, 0,
	667, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2547, 0, 2558, 2560,
	2565, 0, 1464, 1464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1464, 1464, 1464, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3348,
	0, 0, 0, 77, 0, 0, 0, 0, 1446, 1446,
	0, 0, 0, 0, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 4287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 0, 3348, 0, 0, 0,
	853, 0, 0, 1446, 0, 2551, 0, 259, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 0, 3275, 2181, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2720, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 2908, 2908,
	0, 0, 0, 0, 859, 859, 2720, 0, 0, 0,
	2879, 2879, 0, 0, 859, 2720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1270, 0, 0, 0, 0, 259, 0, 0, 72,
	0, 46, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 148,
	0, 0, 0, 0, 0, 2841, 2842, 0, 2844, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	48, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3889, 0,
	47, 0, 84, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1446, 0, 0, 0, 50, 68, 0, 0,
	0, 0, 0, 0, 51, 1427, 0, 0, 0, 57,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 104, 0, 0, 0, 0, 90, 101,
	259, 180, 97, 0, 100, 0, 1464, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 2965, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 854, 52, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2720, 2720, 0, 3348, 91, 0, 0, 0, 0,
	0, 0, 0, 2720, 0, 0, 0, 0, 0, 0,
	3972, 0, 3972, 1464, 0, 229, 0, 0, 1777, 1778,
	0, 2720, 0, 3290, 0, 0, 0, 1464, 1464, 259,
	3275, 1046, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 147, 0, 3275, 0, 259, 3275, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 2720, 228, 2720, 259, 0, 0, 0,
	0, 1206, 0, 3016, 3017, 0, 221, 0, 0, 3023,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 2720, 0, 0, 0, 0, 4045, 3037, 3038,
	0, 0, 0, 0, 2438, 0, 259, 1560, 0, 0,
	0, 0, 0, 3045, 0, 1206, 259, 0, 0, 1206,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 3059,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 3972, 3071, 0, 1464, 0,
	0, 0, 0, 0, 1206, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 0, 0, 1427, 59, 0, 0, 0, 0, 1206,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 58,
	180, 97, 0, 100, 0, 0, 0, 54, 0, 1206,
	0, 152, 0, 0, 1206, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 1206, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 2565, 2565, 2565, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 0, 0,
	1866, 2720, 0, 3290, 229, 0, 4152, 0, 3186, 0,
	0, 1206, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 4172, 0, 4172, 0, 0, 0, 0, 0, 0,
	147, 0, 1270, 0, 0, 0, 0, 0, 0, 258,
	258, 258, 0, 751, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 228, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 788, 0, 3275,
	0, 259, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 2181, 0, 0, 1767, 1768, 1769,
	4152, 788, 0, 0, 0, 0, 183, 0, 2720, 3,
	0, 0, 0, 0, 0, 1755, 0, 0, 1032, 0,
	0, 4236, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1032, 1464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3972, 3972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 259, 259, 0, 0, 0, 1746, 0, 3309,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 3568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3348, 4301, 0, 0, 4303, 3348, 4306, 0,
	0, 0, 0, 0, 4152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3972, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 3972, 0, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4045, 0, 0, 0, 0, 0, 1206,
	0, 1206, 0, 0, 1764, 0, 3972, 1774, 259, 3972,
	0, 0, 0, 1754, 1756, 0, 1206, 0, 0, 3290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 1206, 0, 1741,
	1742, 0, 0, 0, 0, 1464, 0, 1464, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 4400, 0, 0, 1427, 0, 1724, 1725,
	0, 0, 0, 0, 4407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4172, 0, 0,
	259, 0, 1755, 1206, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 2720,
	0, 0, 0, 2181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 1206, 0,
	0, 1270, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 2345, 0, 1746, 0, 0, 0, 3522, 3523,
	0, 0, 3526, 1743, 3568, 0, 3529, 1724, 1725, 0,
	0, 0, 0, 0, 0, 3533, 0, 0, 0, 0,
	0, 0, 0, 1464, 3540, 0, 0, 3186, 0, 0,
	0, 1755, 0, 0, 0, 1753, 0, 0, 1727, 0,
	0, 0, 3552, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 3015, 0, 1748, 0, 1427, 0,
	0, 0, 3575, 3576, 0, 3577, 3578, 3579, 0, 0,
	0, 0, 0, 1726, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 1765, 1746, 0, 1732, 0, 0, 0, 0,
	0, 4152, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 1206, 0, 3585, 0, 0,
	0, 3587, 0, 0, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2720, 0, 0, 1427,
	1754, 1756, 0, 3972, 0, 3972, 0, 0, 1464, 0,
	0, 0, 3615, 3616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	3627, 0, 0, 0, 1749, 1750, 1751, 1752, 0, 0,
	0, 0, 0, 0, 1732, 3636, 0, 0, 0, 0,
	0, 1464, 0, 1763, 0, 0, 0, 0, 0, 1747,
	0, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 0, 1206, 0, 1206,
	0, 1206, 0, 0, 0, 0, 2908, 0, 0, 1754,
	1756, 0, 72, 0, 0, 2720, 0, 1206, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 73,
	2908, 0, 0, 0, 0, 1741, 1742, 0, 0, 0,
	1206, 3679, 1206, 1206, 1206, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	258, 258, 0, 0, 258, 3698, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3724, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 258,
	0, 258, 258, 0, 0, 258, 258, 0, 1446, 0,
	0, 0, 853, 1748, 0, 0, 0, 0, 788, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 90, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1944, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1068, 106, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 91, 0,
	258, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 1866, 0, 0, 0, 1270, 0,
	0, 0, 0, 3821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 3867, 3868,
	0, 0, 0, 0, 3872, 3873, 0, 0, 0, 3876,
	3877, 0, 0, 0, 1206, 258, 3881, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 3885, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 3890, 0, 0, 0, 1206, 1744, 1740,
	0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734,
	1007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 180, 97, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1427,
	696, 0, 0, 0, 0, 0, 697, 1189, 0, 0,
	227, 0, 0, 0, 1427, 0, 0, 0, 854, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 1206, 1206, 0,
	0, 0, 0, 0, 0, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 699, 229, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 700, 0, 1206,
	0, 0, 0, 147, 696, 0, 1046, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 719, 184, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 701, 0, 221, 0,
	0, 0, 0, 0, 1888, 0, 1202, 222, 0, 698,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	699, 0, 0, 0, 0, 258, 1888, 258, 0, 1558,
	1206, 0, 788, 0, 0, 0, 0, 0, 0, 788,
	703, 700, 0, 704, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 0, 728,
	0, 719, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 718, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 4106, 4107, 4108, 0, 1206, 0, 0,
	0, 0, 0, 0, 703, 0, 0, 704, 0, 1206,
	0, 1206, 0, 0, 0, 0, 2345, 0, 0, 4117,
	4118, 0, 715, 728, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4126, 4129, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 706, 0, 0, 0, 4173, 0, 0, 0, 0,
	0, 0, 0, 4179, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 4186, 0, 0, 1032, 0, 726,
	1427, 707, 0, 1427, 0, 0, 0, 0, 0, 4194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 788, 0, 0, 0, 0, 0, 0, 727, 0,
	0, 0, 0, 0, 0, 708, 0, 0, 0, 723,
	724, 721, 0, 0, 0, 706, 0, 716, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 726, 258, 707, 0, 0, 258, 0,
	0, 0, 0, 258, 1427, 0, 0, 0, 0, 258,
	0, 710, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 258, 0, 258, 0, 0,
	0, 0, 727, 258, 0, 0, 712, 0, 0, 708,
	0, 720, 0, 723, 724, 721, 0, 0, 0, 0,
	0, 716, 106, 0, 709, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	0, 0, 0, 4311, 258, 0, 4314, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 0, 717, 258, 0,
	0, 0, 0, 0, 0, 0, 711, 0, 0, 0,
	788, 258, 0, 258, 0, 258, 0, 258, 0, 258,
	712, 0, 0, 0, 106, 720, 106, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1032, 1032, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 0, 0, 1206, 1206, 1427, 258,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 1027, 106,
	106, 0, 808, 0, 0, 0, 0, 0, 809, 0,
	1206, 0, 106, 0, 106, 0, 0, 0, 2345, 0,
	0, 0, 1206, 0, 106, 1206, 106, 4129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 1206, 810, 0, 827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 1206, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 0, 0, 0, 811, 0, 0, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 835,
	0, 0, 0, 0, 0, 813, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 1944, 0, 833, 0,
	0, 4475, 4475, 4475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 4497, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 0, 0, 815, 0, 0, 0, 0,
	1206, 0, 1206, 0, 0, 0, 837, 1007, 0, 1202,
	0, 728, 0, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 1202, 0, 1789, 1206, 0,
	0, 0, 1206, 0, 0, 0, 4475, 0, 0, 258,
	0, 0, 0, 0, 1794, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 258, 1206, 0, 0, 0, 0,
	0, 0, 1206, 0, 1206, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 836, 1427, 1206, 0, 0, 0,
	0, 0, 0, 0, 831, 0, 0, 1206, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 1427,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	258, 0, 0, 258, 0, 0, 0, 258, 0, 258,
	0, 0, 0, 916, 0, 962, 258, 258, 0, 1206,
	1206, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 816, 0, 0, 0, 4475, 4620, 0, 0,
	924, 0, 1206, 818, 0, 4624, 0, 0, 1886, 0,
	1889, 0, 106, 0, 0, 0, 938, 0, 922, 921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 0, 0, 0,
	0, 1206, 258, 0, 1206, 0, 923, 0, 0, 0,
	0, 926, 0, 0, 0, 258, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 936, 0, 258, 1427,
	727, 1427, 0, 0, 952, 0, 0, 0, 0, 0,
	0, 805, 0, 828, 0, 0, 0, 0, 0, 0,
	963, 928, 820, 0, 258, 1427, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 929, 1206, 0,
	788, 0, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 0, 0, 821, 0, 1206, 0, 822, 840, 0,
	839, 0, 0, 0, 823, 1944, 1944, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 824, 1427,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 841,
	931, 838, 0, 1427, 0, 0, 0, 729, 920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 932, 933, 1944, 1944,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 940, 939, 0, 0, 0,
	0, 0, 0, 934, 0, 0, 258, 949, 258, 1944,
	0, 0, 1427, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 967, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 258, 258, 258, 0, 0, 964, 0, 0,
	258, 0, 258, 0, 0, 1427, 1092, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 1427, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 927, 0,
	0, 969, 260, 260, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 0, 1427, 956, 957, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 1027, 0, 1027, 0,
	0, 0, 1427, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 0, 0, 0, 0, 968,
	950, 0, 943, 941, 0, 946, 0, 0, 0, 0,
	0, 947, 0, 0, 918, 0, 965, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 919, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 0, 0, 958,
	0, 948, 0, 1206, 0, 0, 1206, 945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 1944, 0, 0, 951, 0, 0, 254,
	254, 663, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 1206, 1206,
	1206, 0, 0, 0, 1007, 0, 0, 1007, 1007, 0,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 1206, 1202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 2412, 0, 0, 0, 0, 1888, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 258, 258, 0, 0,
	0, 1046, 1046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 1889,
	1206, 0, 1206, 0, 0, 0, 0, 0, 0, 1206,
	258, 258, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 1888, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 1206, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 1206, 0, 0, 1206, 258, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 1206, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1202,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 1206, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	258, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 106, 0, 106, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1206, 0, 1206,
	0, 260, 0, 260, 260, 0, 0, 260, 0, 1288,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 0, 0, 1206, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 260, 1288, 260, 260, 0, 1288, 260, 260,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 1288, 1206, 1206, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 1206, 0, 1288, 0, 0,
	0, 0, 1288, 260, 260, 0, 0, 0, 1251, 0,
	1251, 1251, 0, 1206, 1206, 0, 1288, 0, 0, 0,
	0, 1202, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 1444, 0, 0, 0, 1288,
	0, 2412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 1206, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1564, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 1206, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 1674, 0, 0, 0,
	0, 0, 258, 0, 0, 1189, 0, 258, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 260, 260,
	260, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 106, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 1288, 1206, 0, 0, 0, 0, 0, 0,
	106, 106, 0, 1202, 106, 0, 0, 0, 0, 0,
	0, 1202, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 1888, 0, 0, 0, 0, 0,
	1904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1913, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1888, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1251, 0, 0, 0,
	0, 0, 258, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 1027, 0, 258, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 106, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1288, 1288, 260, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 260, 0, 0, 0, 0, 260, 0, 1888, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	260, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 1288, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 260, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	1288, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 260, 0, 260, 0, 260, 0,
	260, 0, 260, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 258, 264, 0,
	0, 0, 0, 0, 2168, 0, 1760, 1755, 2175, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 2187,
	0, 0, 260, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2199, 0, 2199, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 106, 0, 1726,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 1189, 1189, 0, 1743, 0,
	0, 0, 780, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2175, 0, 0, 2231, 0, 0,
	0, 0, 0, 0, 0, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 1888,
	0, 2264, 0, 2266, 0, 2268, 0, 2270, 0, 2271,
	0, 0, 0, 0, 0, 258, 258, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 2293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 1771, 1888, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 1747, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 1888,
	0, 258, 1888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 260, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 1288, 1288, 0, 0, 260,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 1748, 2622,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 1288, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	2665, 0, 1288, 1251, 0, 0, 0, 1251, 0, 1251,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 2187, 1189, 0, 0,
	0, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 260, 0, 0, 1288, 1763, 0, 0, 0, 260,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 1888, 0, 1888, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 1444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 260, 260, 0, 0,
	0, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 2175, 0,
	0, 0, 106, 0, 0, 0, 2187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 260, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 0, 0, 0, 0, 2939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2949, 0, 2952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 1344,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2977, 1444, 2979, 1444, 0, 0, 0, 0, 0,
	2985, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 3013, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2412, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 1288,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 260, 260, 0, 1288, 260, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 1288, 260,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 1444, 1444, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 1287, 0, 260,
	1288, 0, 1288, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 3273, 0, 0,
	0, 260, 0, 0, 1288, 260, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 780, 0, 0,
	0, 1345, 260, 0, 780, 1345, 0, 1286, 0, 1287,
	0, 0, 0, 0, 0, 106, 0, 0, 106, 0,
	3326, 3328, 0, 0, 2187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 1288, 0,
	1287, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 1287, 0, 0, 0, 0,
	1287, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 260, 1288, 260, 1287, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3411, 0,
	0, 0, 3415, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1755, 0,
	0, 0, 3467, 1288, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	1726, 0, 0, 0, 1286, 1286, 1727, 0, 0, 0,
	1746, 0, 0, 0, 1344, 1773, 0, 0, 3507, 1743,
	1444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 3520, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1286, 0, 1286,
	0, 1286, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 1286, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 1764, 1286, 0,
	1774, 0, 1732, 0, 0, 0, 1754, 1756, 0, 0,
	1286, 0, 1286, 1286, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 780, 0, 0, 1764, 0,
	0, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 1747, 1771, 0, 0, 0,
	0, 0, 1345, 1741, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 1288, 0, 0, 1288, 260, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	1287, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 260, 0, 0, 1753, 0,
	0, 1288, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 1288, 1288, 1288, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 1288, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	1748, 0, 260, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 2187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3787, 0, 0, 0, 1344, 0, 0,
	1287, 1287, 0, 0, 0, 0, 0, 2187, 0, 0,
	1345, 0, 3803, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0,
	0, 3897, 0, 0, 0, 3896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 1288, 3852,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 1286, 0,
	0, 0, 0, 1287, 1288, 1287, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1287, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 1287, 0, 1287, 1287,
	1287, 0, 0, 0, 0, 260, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	1288, 260, 0, 1288, 260, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1288, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 1288,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 260, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 1288, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 1286, 0, 0,
	0, 0, 3987, 0, 0, 0, 0, 0, 0, 1286,
	0, 1286, 0, 0, 0, 0, 0, 0, 2187, 0,
	0, 0, 0, 0, 1288, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 1288, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4062,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 1288,
	0, 0, 1773, 1345, 0, 0, 1288, 260, 0, 0,
	0, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	1288, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 0, 0, 0, 4161, 0, 0,
	0, 0, 0, 1287, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 2187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1774, 0,
	0, 0, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 1344, 1762, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 1288,
	1287, 0, 0, 1747, 0, 4277, 1444, 0, 0, 1288,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 1287, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	1286, 1286, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1287, 260, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 260, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4364, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	1286, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4417, 0, 1286, 0, 0, 0, 0,
	0, 0, 1286, 0, 1286, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 0, 0, 0,
	4452, 0, 0, 0, 1763, 0, 0, 1286, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0, 3080,
	0, 0, 0, 3081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 4513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 1344, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 1344, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1750, 1751, 1752, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1287, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 1287, 0, 1287, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 1287, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 0, 1287, 1772,
	1287, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 1287, 1287, 0, 0, 0,
	1753, 0, 1760, 1755, 0, 0, 0, 0, 0, 0,
	1727, 0, 0, 1286, 0, 0, 1286, 0, 1287, 1773,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 1345, 0, 0,
	1345, 0, 0, 1286, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 1286,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 1345, 0, 1749, 1750, 1751, 1752,
	0, 0, 0, 0, 0, 0, 1732, 0, 1763, 0,
	1344, 1345, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 2434, 0, 0, 0, 2435, 0, 0,
	0, 0, 1764, 0, 0, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	1771, 0, 0, 0, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1286, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 1753, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 1287, 1286, 1286, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 1287,
	0, 1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 1287, 1287, 1287, 0, 0, 0,
	3895, 0, 0, 0, 0, 0, 0, 1344, 0, 1286,
	0, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 0, 0, 0,
	0, 0, 1345, 1344, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 1760, 1755, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 1286, 0,
	1726, 0, 0, 1286, 1286, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 1773, 0, 0, 0,
	0, 1732, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1764, 0, 0,
	1774, 1743, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 1345, 0, 1287, 0,
	0, 1287, 1741, 1742, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	1287, 1287, 0, 1749, 1750, 1751, 1752, 0, 0, 0,
	0, 1286, 0, 1732, 0, 0, 0, 1287, 0, 0,
	0, 1286, 1286, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 1287, 0, 0, 1772, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 1774, 0, 0, 1761, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	1287, 1287, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 1345, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 1747, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 1287, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	1753, 0, 0, 0, 1287, 0, 0, 0, 0, 1287,
	1287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 1765, 1345, 0,
	0, 1287, 0, 0, 0, 3538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 3083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 1287, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1347, 276,
	277, 1348, 1349, 1350, 1287, 1351, 609, 1352, 1353, 1354,
	1355, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 1356, 614, 288,
	289, 290, 291, 292, 293, 1357, 1358, 0, 294, 615,
	616, 617, 1359, 295, 296, 618, 1360, 1289, 1361, 297,
	298, 299, 300, 301, 302, 303, 0, 1362, 305, 306,
	307, 304, 308, 1363, 309, 0, 310, 311, 312, 313,
	314, 315, 1364, 316, 317, 318, 1147, 319, 320, 1365,
	1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324,
	0, 325, 619, 620, 1372, 329, 326, 327, 1373, 330,
	328, 1374, 331, 332, 333, 1375, 1376, 334, 335, 336,
	1377, 337, 338, 1378, 339, 340, 341, 1379, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 1380, 265, 1381, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 1382,
	360, 1383, 1384, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 1385, 372, 627,
	1386, 628, 373, 1387, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 1150, 379, 380, 1388, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 1389,
	1149, 388, 632, 633, 1390, 634, 1391, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1392, 402, 404, 403,
	1393, 405, 636, 1154, 406, 407, 1155, 1394, 408, 0,
	0, 0, 409, 410, 413, 1395, 1396, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 1397, 267, 1158, 452, 453, 1398, 637, 454, 638,
	456, 457, 1399, 0, 458, 0, 1400, 1401, 460, 461,
	462, 1402, 1403, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 1404, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 1405, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 1406, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 1407, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 1408, 537, 538,
	536, 539, 540, 541, 1409, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 1410, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 1411, 568,
	569, 0, 565, 556, 1412, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 1413, 578, 650, 651, 652, 653,
	1414, 587, 1415, 579, 580, 581, 654, 582, 655, 1416,
	583, 584, 585, 586, 0, 588, 589, 1417, 1418, 590,
	591, 592, 594, 595, 593, 596, 1419, 597, 1420, 0,
	598, 599, 600, 656, 657, 658, 1421, 602, 601, 603,
	659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 2600, 0, 0, 0, 0, 0,
	0, 0, 2601, 268, 270, 269, 271, 272, 273, 274,
	275, 1347, 276, 277, 1348, 1349, 1350, 0, 1351, 609,
	1352, 1353, 1354, 1355, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	1356, 614, 288, 289, 290, 291, 292, 293, 1357, 1358,
	0, 294, 615, 616, 617, 1359, 295, 296, 618, 1360,
	1289, 1361, 297, 298, 299, 300, 301, 302, 303, 0,
	1362, 305, 306, 307, 304, 308, 1363, 309, 0, 310,
	311, 312, 313, 314, 315, 1364, 316, 317, 318, 1147,
	319, 320, 1365, 1366, 1368, 1367, 1369, 1370, 1371, 321,
	322, 323, 324, 0, 325, 619, 620, 1372, 329, 326,
	327, 1373, 330, 328, 1374, 331, 332, 333, 1375, 1376,
	334, 335, 336, 1377, 337, 338, 1378, 339, 340, 341,
	1379, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 1380, 265, 1381,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 1382, 360, 1383, 1384, 1148, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	1385, 372, 627, 1386, 628, 373, 1387, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 1150, 379, 380, 1388,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 1389, 1149, 388, 632, 633, 1390, 634, 1391,
	390, 391, 1151, 635, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 1392,
	402, 404, 403, 1393, 405, 636, 1154, 406, 407, 1155,
	1394, 408, 0, 0, 0, 409, 410, 413, 1395, 1396,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1397, 267, 1158, 452, 453, 1398,
	637, 454, 638, 456, 457, 1399, 0, 458, 0, 1400,
	1401, 460, 461, 462, 1402, 1403, 463, 464, 639, 1159,
	465, 1160, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 1404, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	1405, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 1406, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 1407, 514, 515,
	516, 1161, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	1408, 537, 538, 536, 539, 540, 541, 1409, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 1410, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 1411, 568, 569, 0, 565, 556, 1412, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 1413, 578, 650,
	651, 652, 653, 1414, 587, 1415, 579, 580, 581, 654,
	582, 655, 1416, 583, 584, 585, 586, 0, 588, 589,
	1417, 1418, 590, 591, 592, 594, 595, 593, 596, 1419,
	597, 1420, 0, 598, 599, 600, 656, 657, 658, 1421,
	602, 601, 603, 659, 1422, 1423, 1424, 1425, 1426, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 3546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3548, 268, 270, 269, 271, 272, 273,
	274, 275, 1347, 276, 277, 1348, 1349, 1350, 0, 1351,
	609, 1352, 1353, 1354, 1355, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 1356, 614, 288, 289, 290, 291, 292, 293, 1357,
	1358, 0, 294, 615, 616, 617, 1359, 295, 296, 618,
	1360, 1289, 1361, 297, 298, 299, 300, 301, 302, 303,
	0, 1362, 305, 306, 307, 304, 308, 1363, 309, 0,
	310, 311, 312, 313, 314, 315, 1364, 316, 317, 318,
	1147, 319, 320, 1365, 1366, 1368, 1367, 1369, 1370, 1371,
	321, 322, 323, 324, 0, 325, 619, 620, 1372, 329,
	326, 327, 1373, 330, 328, 1374, 331, 332, 333, 1375,
	1376, 334, 335, 336, 1377, 337, 338, 1378, 339, 340,
	341, 1379, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 1380, 265,
	1381, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 1382, 360, 1383, 1384, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 1385, 372, 627, 1386, 628, 373, 1387, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	1388, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 1389, 1149, 388, 632, 633, 1390, 634,
	1391, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	1392, 402, 404, 403, 1393, 405, 636, 1154, 406, 407,
	1155, 1394, 408, 0, 0, 0, 409, 410, 413, 1395,
	1396, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 1397, 267, 1158, 452, 453,
	1398, 637, 454, 638, 456, 457, 1399, 0, 458, 0,
	1400, 1401, 460, 461, 462, 1402, 1403, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 1404, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 1405, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 1406, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 1407, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 1408, 537, 538, 536, 539, 540, 541, 1409, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 1410, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 1411, 568, 569, 0, 565, 556, 1412, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 1413, 578,
	650, 651, 652, 653, 1414, 587, 1415, 579, 580, 581,
	654, 582, 655, 1416, 583, 584, 585, 586, 0, 588,
	589, 1417, 1418, 590, 591, 592, 594, 595, 593, 596,
	1419, 597, 1420, 0, 598, 599, 600, 656, 657, 658,
	1421, 602, 601, 603, 659, 1422, 1423, 1424, 1425, 1426,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3923, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4112, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3996, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3853, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3564, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3396, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2458, 268,
	270, 269, 271, 272, 273, 274, 275, 1347, 276, 277,
	1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354, 1355,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 1356, 614, 288, 289,
	290, 291, 292, 293, 1357, 1358, 0, 294, 615, 616,
	617, 1359, 295, 296, 618, 1360, 1289, 1361, 297, 298,
	299, 300, 301, 302, 303, 0, 1362, 305, 306, 307,
	304, 308, 1363, 309, 0, 310, 311, 312, 313, 314,
	315, 1364, 316, 317, 318, 1147, 319, 320, 1365, 1366,
	1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324, 0,
	325, 619, 620, 1372, 329, 326, 327, 1373, 330, 328,
	1374, 331, 332, 333, 1375, 1376, 334, 335, 336, 1377,
	337, 338, 1378, 339, 340, 341, 1379, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 1380, 265, 1381, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 1382, 360,
	1383, 1384, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 1385, 372, 627, 1386,
	628, 373, 1387, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 1388, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 1389, 1149,
	388, 632, 633, 1390, 634, 1391, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1392, 402, 404, 403, 1393,
	405, 636, 1154, 406, 407, 1155, 1394, 408, 0, 0,
	0, 409, 410, 413, 1395, 1396, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1397, 267, 1158, 452, 453, 1398, 637, 454, 638, 456,
	457, 1399, 0, 458, 0, 1400, 1401, 460, 461, 462,
	1402, 1403, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	1404, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 1405, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 1406, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 1407, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 1408, 537, 538, 536,
	539, 540, 541, 1409, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	1410, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 1411, 568, 569,
	0, 565, 556, 1412, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 1413, 578, 650, 651, 652, 653, 1414,
	587, 1415, 579, 580, 581, 654, 582, 655, 1416, 583,
	584, 585, 586, 0, 588, 589, 1417, 1418, 590, 591,
	592, 594, 595, 593, 596, 1419, 597, 1420, 0, 598,
	599, 600, 656, 657, 658, 1421, 602, 601, 603, 659,
	1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606, 607,
	608, 1438, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2149, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1347, 276,
	277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354,
	1355, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 1356, 614, 288,
	289, 290, 291, 292, 293, 1357, 1358, 0, 294, 615,
	616, 617, 1359, 295, 296, 618, 1360, 1289, 1361, 297,
	298, 299, 300, 301, 302, 303, 0, 1362, 305, 306,
	307, 304, 308, 1363, 309, 0, 310, 311, 312, 313,
	314, 315, 1364, 316, 317, 318, 1147, 319, 320, 1365,
	1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324,
	0, 325, 619, 620, 1372, 329, 326, 327, 1373, 330,
	328, 1374, 331, 332, 333, 1375, 1376, 334, 335, 336,
	1377, 337, 338, 1378, 339, 340, 341, 1379, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 1380, 265, 1381, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 1382,
	360, 1383, 1384, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 1385, 372, 627,
	1386, 628, 373, 1387, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 1150, 379, 380, 1388, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 1389,
	1149, 388, 632, 633, 1390, 634, 1391, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1392, 402, 404, 403,
	1393, 405, 636, 1154, 406, 407, 1155, 1394, 408, 0,
	0, 0, 409, 410, 413, 1395, 1396, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 1397, 267, 1158, 452, 453, 1398, 637, 454, 638,
	456, 457, 1399, 0, 458, 0, 1400, 1401, 460, 461,
	462, 1402, 1403, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 1404, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 1405, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 1406, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 1407, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 1408, 537, 538,
	536, 539, 540, 541, 1409, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 1410, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 1411, 568,
	569, 0, 565, 556, 1412, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 1413, 578, 650, 651, 652, 653,
	1414, 587, 1415, 579, 580, 581, 654, 582, 655, 1416,
	583, 584, 585, 586, 0, 588, 589, 1417, 1418, 590,
	591, 592, 594, 595, 593, 596, 1419, 597, 1420, 0,
	598, 599, 600, 656, 657, 658, 1421, 602, 601, 603,
	659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606,
	607, 608, 1339, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1347, 276,
	277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353, 1354,
	1355, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 1356, 614, 288,
	289, 290, 291, 292, 293, 1357, 1358, 0, 294, 615,
	616, 617, 1359, 295, 296, 618, 1360, 1289, 1361, 297,
	298, 299, 300, 301, 302, 303, 0, 1362, 305, 306,
	307, 304, 308, 1363, 309, 0, 310, 311, 312, 313,
	314, 315, 1364, 316, 317, 318, 1147, 319, 320, 1365,
	1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323, 324,
	0, 325, 619, 620, 1372, 329, 326, 327, 1373, 330,
	328, 1374, 331, 332, 333, 1375, 1376, 334, 335, 336,
	1377, 337, 338, 1378, 339, 340, 341, 1379, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 1380, 265, 1381, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 1382,
	360, 1383, 1384, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 1385, 372, 627,
	1386, 628, 373, 1387, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 1150, 379, 380, 1388, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 1389,
	1149, 388, 632, 633, 1390, 634, 1391, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1392, 402, 404, 403,
	1393, 405, 636, 1154, 406, 407, 1155, 1394, 408, 0,
	0, 0, 409, 410, 413, 1395, 1396, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 1397, 267, 1158, 452, 453, 1398, 637, 454, 638,
	456, 457, 1399, 0, 458, 0, 1400, 1401, 460, 461,
	462, 1402, 1403, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 1404, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 1405, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 1406, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 1407, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 1408, 537, 538,
	536, 539, 540, 541, 1409, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 1410, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 1411, 568,
	569, 0, 565, 556, 1412, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 1413, 578, 650, 651, 652, 653,
	1414, 587, 1415, 579, 580, 581, 654, 582, 655, 1416,
	583, 584, 585, 586, 0, 588, 589, 1417, 1418, 590,
	591, 592, 594, 595, 593, 596, 1419, 597, 1420, 0,
	598, 599, 600, 656, 657, 658, 1421, 602, 601, 603,
	659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660, 606,
	607, 608, 2433, 0, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 2430,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 2431, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 2429, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	2432, 0, 0, 0, 0, 0, 0, 1066, 2428, 0,
	1028, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 227, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 229, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 1556, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 221, 604, 605, 660, 606, 607,
	608, 1041, 0, 222, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1799, 1797, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 227, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 229,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 1556, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	221, 604, 605, 660, 606, 607, 608, 1041, 0, 222,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1799, 3035, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 227, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 229, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 1556, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 221, 604, 605, 660,
	606, 607, 608, 1041, 0, 222, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1799, 1797, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 2561, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 2566,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 2562, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 2563,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 2478, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 2476, 0, 2475, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	2473, 0, 2472, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 2470, 0,
	2469, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 2467, 0, 1649, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 1648,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 1031, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 1045, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 4429, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 1045, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 2347, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 2346, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 1045,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 4189,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 1045, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 3815, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1867, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 0, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 3542,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1867, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 2566,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	1797, 0, 2571, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	2569, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 2557, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 2546, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 2544, 1064, 2535, 2542, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 2538, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	2539, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 2540, 423, 2537, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 2541,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 2536, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 2532, 1064, 2535, 2542, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 2538, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 2539, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 2540,
	423, 2537, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 2541, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 2536, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 1805, 0, 1066, 0, 0, 0, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 2326, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 1654, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 1586, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	1581, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 1572, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 1567, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 1480, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1479, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 1474, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1473, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	1467, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 1291, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 4474, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 4473, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 4472, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 4474, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	4473, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 4131, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 4132, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 4130, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 3002, 3003, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	3000, 3001, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 2334, 2335, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 0, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 0, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 2554, 0, 0, 0, 0,
	0, 0, 2552, 2553, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 0, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 0, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 2995, 2996, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 0, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 4474, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 0, 1109, 0, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	0, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 4473, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 1204, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 1064, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 1105, 0, 294, 615, 616, 617,
	0, 295, 296, 1112, 0, 1093, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 1096, 1094, 1095,
	1102, 1098, 1097, 1101, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 1137,
	1138, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 1144, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 1107, 1108, 1111,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 1109, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 1190, 402, 404, 403, 0, 405,
	1145, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 1100, 1099, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	267, 1158, 452, 453, 0, 1110, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 1196, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 1139, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	1140, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 1198, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 227, 537, 538, 536, 539,
	540, 541, 1103, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 1141, 566, 567, 0, 568, 569, 0,
	565, 556, 229, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 1142, 582, 1143, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 1104, 597, 0, 0, 598, 599,
	600, 1556, 657, 658, 0, 602, 601, 603, 659, 0,
	1204, 0, 0, 221, 604, 605, 660, 606, 607, 608,
	0, 0, 222, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 1194, 1106, 1891, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 1105, 0, 294, 615, 616, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 1190, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 267,
	1158, 452, 453, 0, 1110, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 1196, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 1198, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 227, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 0, 565,
	556, 229, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	1556, 657, 658, 0, 602, 601, 603, 659, 0, 3179,
	0, 1204, 221, 604, 605, 660, 606, 607, 608, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 1194, 0, 1891, 1106, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 1105, 0, 294, 615, 616, 617,
	0, 295, 296, 1112, 0, 1093, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 1096, 1094, 1095,
	1102, 1098, 1097, 1101, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 1137,
	1138, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 1144, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 1107, 1108, 1111,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 1109, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 1190, 402, 404, 403, 0, 405,
	1145, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 1100, 1099, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	267, 1158, 452, 453, 0, 1110, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 1196, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 1139, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	1140, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 1198, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 1103, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 1141, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 1142, 582, 1143, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 1104, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	1186, 0, 1204, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 1194, 0, 1192, 1106, 0, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 1105, 0, 294, 615, 616,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1190, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 267, 1158, 452, 453, 0, 1110, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 1196, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 1198, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	0, 1204, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 1194, 1106, 1192, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 1105, 0, 294, 615, 616, 617,
	0, 295, 296, 1112, 0, 1093, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 1096, 1094, 1095,
	1102, 1098, 1097, 1101, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 1137,
	1138, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 1144, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 1107, 1108, 1111,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 1109, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 1190, 402, 404, 403, 0, 405,
	1145, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 1100, 1099, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	267, 1158, 452, 453, 0, 1110, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 1196, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 1139, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	1140, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 1198, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 1103, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 1141, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 1142, 582, 1143, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 1104, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	1204, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 1194, 1106, 1192, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 1105, 0, 294, 615, 616, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 267,
	1158, 452, 453, 0, 1110, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1204, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 0, 3971, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 1105, 0, 294, 615, 616, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 632, 633, 0,
	634, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 0, 267, 1158, 452,
	453, 0, 1110, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 646, 1198,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 1028, 0, 1284,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 1790, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 227, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	229, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 1556,
	657, 658, 0, 602, 601, 603, 659, 0, 1553, 0,
	1284, 221, 604, 605, 660, 606, 607, 608, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 183, 609, 0, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 1289, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 635, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 0,
	1158, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 227, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 229, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	1556, 657, 658, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 221, 604, 605, 660, 606, 607, 608, 0,
	0, 222, 0, 0, 0, 0, 0, 1284, 1283, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 1284, 1283, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 1289, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 1149, 388, 632, 633, 0, 634, 0, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 0, 0, 1158, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 1283, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3461, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 2226, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 2141,
	0, 0, 0, 0, 2142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 1289, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 1149, 388, 632, 633, 0,
	634, 0, 390, 391, 1151, 635, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 2140, 404, 403, 0, 405, 636, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 0, 0, 1158, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 1284, 1283, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 1289,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1147, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 1150, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 1149, 388, 632, 633, 0, 634, 0, 390,
	391, 1151, 635, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 1154, 406, 407, 1155, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 0, 0, 1158, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 1159, 465,
	1160, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 1204, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1106, 0, 1562, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 1105, 0, 294, 615,
	616, 617, 0, 295, 296, 1112, 0, 1093, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 1096,
	1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 1137, 1138, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 1144,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 1107,
	1108, 1111, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	1109, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 1145, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 1100, 1099, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 267, 1158, 452, 453, 0, 1110, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 1139,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 1140, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 1103, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 1141, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 1142, 582, 1143, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 1104, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 1028, 0, 262, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 227, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 229, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 1556, 657, 658, 0, 602, 601, 603,
	659, 262, 0, 0, 0, 221, 604, 605, 660, 606,
	607, 608, 0, 0, 222, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 183, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	267, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 262,
	2909, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 1905, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 4629, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	0, 262, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 3412, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	267, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	262, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 1550, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 2897, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 3567, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 0, 871, 0, 779, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 2217,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 786, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 869, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 784, 570,
	571, 572, 573, 574, 785, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 0, 777, 0, 779, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 789, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 786, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 784,
	570, 571, 572, 573, 574, 785, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 1942, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 0, 1948,
	0, 286, 1938, 287, 1954, 0, 1961, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 1964, 1965, 0,
	0, 295, 296, 0, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 1129, 325,
	1952, 1951, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 1114, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 1950, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 1959, 1960, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 0, 374, 375, 376, 377, 378, 0, 0, 0,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	1945, 1946, 0, 1941, 0, 390, 391, 1151, 0, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	0, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 0, 454, 1953, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 0, 1159, 465, 1160, 0, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 1935, 478, 479, 480, 1936, 481, 482, 483,
	0, 484, 0, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 1949, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 0, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 1947, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 1963, 559, 560,
	561, 562, 563, 0, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 1955, 1956, 1957, 1958, 0, 587,
	0, 579, 580, 581, 0, 582, 0, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 0, 1939, 1962, 0, 602, 601, 603, 779, 0,
	0, 0, 0, 0, 604, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 1929, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 786, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 784,
	570, 571, 572, 573, 574, 785, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 779, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 789, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 786, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 2260, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 2261, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 784, 570, 571,
	572, 573, 574, 785, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 2262, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 0, 2011, 0, 1284, 1978, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 789, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 1975,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 1976, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 1972, 0, 1284, 1978, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 1975,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 1976, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	779, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 786, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 1968,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 784, 570, 571, 572, 573, 574, 785, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 1967,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 779, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 789, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 786, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 1921, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 784,
	570, 571, 572, 573, 574, 785, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 1920, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1284, 1978, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 789, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	1289, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 0, 0, 0, 0, 0, 0, 1975, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 1149, 388, 632, 633, 0, 634, 0,
	390, 391, 1151, 635, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 0, 0, 1158, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1976, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1284, 1283, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 1289,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1147, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 1150, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 1149, 388, 632, 633, 0, 634, 0, 390,
	391, 1151, 635, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 1154, 406, 407, 1155, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 0, 0, 1158, 452, 453, 3758, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 1159, 465,
	1160, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 1284, 1283, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 1289, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 1149, 388, 632, 633, 0, 634, 0, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 0, 0, 1158, 452, 453, 3383, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 1606, 0, 1284, 1283,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 1289, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 1605, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 1149, 388, 632, 633, 0,
	634, 0, 390, 391, 1151, 635, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 0, 0, 1158, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 1604, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 1603, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1524, 0, 1284,
	1283, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 1523, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 1485, 0,
	1284, 1283, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 1289, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 635, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 0,
	1158, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1453,
	0, 1284, 1283, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 1452, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	1278, 0, 1284, 1283, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 1289, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1277, 630,
	631, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 0, 1158, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1284, 1283, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 1284,
	1978, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	2018, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 1284, 1283, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	1284, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 1289, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 635, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 0,
	1158, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 2721, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 2718, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 2725, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 2922, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 2724, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 2919, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 2921, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 2918, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 2723, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 2920, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 2721, 295, 296, 618, 0,
	0, 2715, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 2718, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 2725, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 2724, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 2714, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	2723, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 2722, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 1676, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 1679, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 1677, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	1678, 601, 603, 659, 1431, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 1433, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	1196, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 1428, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 1430, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	1196, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 1335, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 1337, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	1196, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 692, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 691, 273, 274,
	275, 681, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 684, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	685, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	686, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 680, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 681, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 684, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	685, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	686, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	266, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 267, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 1196, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 3335, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	2867, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 2866, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	2232, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 267, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 2174, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 2180, 0, 262, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 2179, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 267, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 2167, 0, 262, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 2169, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 267, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 2137, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 1196, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1528, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1527, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1448, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1441, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1443, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1268, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1267, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1258, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1257, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1255, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1254, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1250, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1249, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 662, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 253, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	267, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 3684, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 0, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	3685, 442, 0, 0, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 3687, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 3688, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 3683, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 684, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 685, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 686, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 2269, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 2267, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 267, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 2265, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 267, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 2186, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	266, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 267, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1997, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 1991, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 267, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 858, 0, 262, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 857, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 856, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	2922, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 4036, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 3941, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 3943, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 749,
	0, 262, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1305, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 1303,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 750, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	746, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	1306, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 745, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 749,
	0, 262, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1305, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 1303,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 750, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	746, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	1306, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 745, 651, 652, 653, 0, 587,
	0, 579, 1304, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 671,
	0, 262, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 670, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 669, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 262,
	2909, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 262, 4046, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 4305, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 4300, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 3726, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 2606, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 262, 2909, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 2906, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 2242, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 2230, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 749, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 739, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 750, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 746,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 1561,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 745, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1534, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1533, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1518, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1516, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1512, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1489, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1487, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1450, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1436, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1273, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1272, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1264, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1263, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1217, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 755, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 749, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 739, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 737, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 738, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 750, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 740, 521, 0, 522,
	523, 529, 530, 524, 525, 746, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 741, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 745,
	651, 652, 653, 0, 587, 0, 579, 743, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 731, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 732, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 694, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 688, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 666, 0, 262, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 3431, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 3369, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 3302, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 3300, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 0, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	3285, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 0, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 2877, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 732, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 2204, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 0, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 1235, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 1169, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 0, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 0, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 0, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 0, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 1724,
	1725, 1773, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 1755, 0, 0, 0, 1726, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 1746, 0, 1773,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 1749, 1750, 1751, 1752,
	0, 0, 0, 0, 1764, 0, 1732, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 1764, 0, 0, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 1749, 1750, 1751, 1752, 0, 1770, 0,
	1771, 0, 1747, 1732, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 1764,
	1747, 0, 1774, 0, 1772, 0, 0, 0, 1754, 1756,
	0, 1760, 1755, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 1761, 0, 0, 1770, 0, 1771, 1773, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 1726, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 1746, 0, 0, 1747, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 1761, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1764, 0, 0, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 1765, 1738, 1739,
	1745, 1766, 1744, 1740, 1762, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 0, 0, 0, 1747,
	0, 0, 3082, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	3079, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 0, 0, 1724, 1725, 3078, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 1748, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 1765,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 1746, 0, 0, 0, 0, 0, 1727, 0, 0,
	1743, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 0,
	1763, 0, 1732, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 3077,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 1774, 0, 1749, 1750, 1751, 1752, 1754, 1756, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 1762, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 1760, 1755, 0,
	1753, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 1763, 0, 0,
	0, 1773, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 2435, 1726, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 0, 1746, 0, 0,
	0, 1732, 0, 0, 0, 0, 1743, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 4408, 0, 0, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 1753, 0,
	0, 0, 0, 0, 1772, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 1765, 0, 0, 0, 0,
	0, 1743, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 1753, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 1749, 1750, 1751, 1752, 0, 0, 1746,
	0, 0, 1765, 1732, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1764,
	0, 4404, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 1747, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 1764, 0, 4326, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 0, 0, 0, 1727,
	1753, 0, 0, 0, 0, 0, 1772, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1765, 0, 0,
	0, 0, 0, 1743, 0, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 1753, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 1746, 0, 0, 1765, 1732, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 1764, 0, 4286, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 0, 1732, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 1747,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1764, 0,
	4285, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 0, 0,
	0, 1727, 1753, 0, 0, 0, 0, 0, 1772, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 1765,
	0, 0, 0, 0, 0, 1743, 0, 1724, 1725, 0,
	1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1755, 0, 0, 0, 0, 0, 0, 1727, 1753,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 1749, 1750, 1751,
	1752, 0, 0, 1746, 0, 0, 1765, 1732, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 1764, 0, 4115, 1774, 0, 0, 0,
	0, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1771, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 1749, 1750, 1751, 1752, 0, 0,
	0, 0, 0, 0, 1732, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 1747, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0,
	1764, 0, 3967, 1774, 0, 0, 0, 0, 0, 1754,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 1770, 0, 1771, 0,
	0, 0, 0, 0, 0, 1741, 1742, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	0, 0, 0, 1727, 1753, 0, 0, 0, 0, 0,
	1772, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1765, 0, 0, 0, 0, 0, 1743, 0, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 1755, 0, 0, 0, 0, 0, 0,
	1727, 1753, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 0, 1746, 0, 0, 1765, 1732,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 1764, 0, 3900, 1774, 0,
	0, 0, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 0, 0, 0, 1749, 1750, 1751, 1752,
	0, 0, 0, 0, 0, 0, 1732, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 1747, 1738, 1739, 1745, 1766, 1744, 1740,
	0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734,
	0, 0, 1764, 0, 3899, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 1770, 0,
	1771, 0, 0, 0, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1755, 0,
	0, 0, 0, 0, 0, 1727, 1753, 0, 0, 0,
	0, 0, 1772, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1765, 0, 0, 0, 0, 0, 1743,
	0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 0,
	0, 0, 1727, 1753, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 0, 1746, 0, 0,
	1765, 1732, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 1764, 0, 3898,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 1747, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 1764, 0, 3572, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 1753, 0,
	0, 0, 0, 0, 1772, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 1765, 0, 0, 0, 0,
	0, 1743, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 1753, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 1749, 1750, 1751, 1752, 0, 0, 1746,
	0, 0, 1765, 1732, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1764,
	0, 3075, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 1747, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 1764, 0, 3074, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 0, 0, 0, 1727,
	1753, 0, 0, 0, 0, 0, 1772, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1765, 0, 0,
	0, 0, 0, 1743, 0, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 1753, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 1746, 0, 0, 1765, 1732, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 1764, 0, 3073, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 0, 1732, 4544, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 1747,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1764, 0,
	3072, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 1724, 1725, 4543, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 1753,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 1765, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 3039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1750, 1751, 1752, 0, 0, 0,
	0, 0, 0, 1732, 0, 3159, 0, 0, 3158, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 1764,
	0, 0, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 1725, 1762, 1757, 1758, 1759, 1767, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 0, 3010,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 1761, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2579, 0, 0, 0, 0,
	0, 3011, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	2578, 0, 0, 1727, 0, 0, 0, 1749, 1750, 1751,
	1752, 1748, 1773, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1764, 0, 0, 1774, 1743, 0, 0,
	0, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1771, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 1763, 1732,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1774, 0,
	0, 1761, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 1762, 1757,
	1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 1753, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 1748, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 1765, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 1761, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 1749, 1750, 1751, 1752, 1748, 1773, 0,
	0, 0, 1763, 1732, 0, 0, 0, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 1765, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 1764,
	0, 0, 1774, 1743, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 1763, 1732, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 1774, 0, 0, 1761, 1025, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 1765, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 1761,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 3165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 1762, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 1724, 1725, 1747, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1755, 0,
	0, 0, 3160, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 1755, 0, 0, 0, 0, 0, 1753,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1750, 1751, 1752, 1726, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 1746, 1765, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1750, 1751, 1752,
	1762, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0,
	0, 0, 1764, 0, 0, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	1771, 0, 0, 0, 0, 1761, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1725,
	1747, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 3076, 0, 1753, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 1765, 0, 0, 0, 0,
	3127, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 1753, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 1726,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 1746,
	1765, 0, 0, 0, 0, 0, 1763, 0, 1743, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0,
	0, 1764, 0, 0, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 1762, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 0, 0, 1764, 0, 0, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 1761,
	0, 1741, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734,
}

var sqlPact = [...]int{
	6829, -1000, -1000, -1000, -1000, 203, -1000, -1000, 202, 201,
	199, 198, 194, 193, 190, 189, 188, 185, 183, -1000,
	-1000, -1000, -1000, -1000, -1000, 180, -1000, -1000, 179, -1000,
	176, 175, 174, -1000, -1000, 173, -1000, 172, -1000, -1000,
	-1000, -1000, 170, 169, 168, 87354, 86814, 87887, 2268, 108822,
	95377, 2019, 78202, 108282, 77662, 107742, 2024, 8348, 107202, 2723,
	165, -1000, 106662, 164, 162, 160, -1000, 106122, -1000, 1913,
	-1000, 159, 4800, 63054, 158, 157, 155, 2736, 154, -1000,
	153, 152, 150, -1000, 8980, 1667, -1000, 149, 148, -1000,
	4698, 92691, 146, 145, 2279, 142, 141, 62513, 140, 139,
	2206, 2926, -1000, -1000, 2043, -1000, -1000, 138, 137, 134,
	131, 125, 123, 122, 121, 120, 114, 107, -1000, 106,
	103, 101, 100, 96, -1000, 93, 92, 88, -1000, 84,
	-1000, 83, 82, 81, 79, 76, 75, 74, 68, 67,
	61, 59, 58, 57, -1000, 9301, -1000, 1845, 1662, 1661,
	1655, 1642, 1641, 985, 56, 55, 52, 51, 50, 49,
	48, 47, 40, -1000, 38, 36, 32, 31, 28, 23,
	21, 20, 136, 14, 13, 12, 11, 10, 9, 7,
	2418, -1000, 1493, 1021, 28884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 114685, 109355, 1, -59, -1, -1000, 3296, 1031, 51658,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 304, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 489, 1901, 727, -1000, -1000, -1000, 105589,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2266, -63,
	-1000, 1917, -1000, -1000, -1000, -1000, -1000, 726, -1000, 2264,
	318, 2178, -1000, -1000, -1000, 3379, 2428, 3794, 3793, 3792,
	3790, 3789, 114152, 1748, 3788, 2553, 3787, 3786, 3785, 3784,
	3783, 3782, 3781, -1000, 86274, 1053, 85734, 85194, 3371, 105056,
	84654, 104516, 71738, 43816, 975, 3377, -1000, -1000, -1000, -1000,
	-1000, -1000, 109355, -1000, 1047, -1000, -1000, 3780, 3779, 1965,
	724, 94837, -1000, 2000, -1000, 927, 30582, -1000, 1215, -1000,
	30582, 296, -1000, -1000, -1000, -1000, -1000, -1000, 3778, 3773,
	3772, 3770, 3768, -1000, -1000, 77122, 22040, 76582, 76042, 103976,
	21489, 84114, 83574, 103436, 71187, 1045, 1411, -1000, -1000, -1000,
	-1000, -1000, -1000, -29, 68983, 3561, 109355, -1000, 295, -1000,
	-1000, -1000, -1000, -1000, -1000, 43238, 949, 42660, 948, 42082,
	584, -1000, -1000, -1000, -1000, 70636, -1000, 102896, 2424, 3767,
	3766, 1132, 3765, 3220, 1745, 3764, 1716, 1287, 3761, 3760,
	3758, 3755, 3748, 3743, 3737, 1399, 102356, 3005, 101816, 1592,
	70085, 1040, 83034, 87887, 2662, 101276, 1354, 1328, -1000, -1000,
	-1000, -1000, 3095, 2920, 2886, 1315, -1000, -1000, -1000, -1000,
	54356, 7942, 6580, 8432, 100736, 57141, 87887, 87887, -1000, -1000,
	-1000, -1000, -1000, 41504, 687, 40926, 973, -1000, -1000, 54913,
	2933, -1000, -1000, -1000, -1000, 40348, 378, 39770, 739, 109355,
	-1000, 3004, 1884, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2274, 1601,
	3602, 2767, 69534, 2035, 1363, 3317, 3094, 3091, 1499, 3086,
	3736, 2567, 3083, 3072, 3068, 3066, 3060, 1550, 2596, 677,
	28306, 2991, 1590, 39192, 1647, 1494, 3055, 3052, 3606, 1897,
	1903, 2077, 75502, 3733, 3731, 3243, 3035, 3023, 2803, 3020,
	-1000, 2930, -1000, -1000, -1000, -1000, 1435, -1000, -1000, -1000,
	-1000, 78735, -1000, -1000, 1986, -1000, -1000, 1986, -1000, -1000,
	-1000, -1000, -1000, 1304, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1493, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2094, -1000, 1954, -1000,
	-1000, 2497, 3260, 3260, 3260, 3369, 472, 469, -1000, 136,
	-1000, -1000, 121612, -1000, -1000, 44382, 44382, 44382, 44382, 44382,
	44382, 44382, 2027, -1000, 723, -1000, -1000, 781, -1000, 720,
	583, -1000, -1000, -1000, -1000, -1000, -1000, 719, -1000, -1000,
	-1000, -1000, -1000, -1000, 3561, -1000, 24850, -1000, -1000, -1000,
	455, 714, 44382, -1000, -1000, 3623, 3621, 922, -1000, 292,
	950, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3003, 713, 712, -1000, 706, 705, 703,
	702, 701, -1000, -1000, -1000, 700, 699, 697, 689, 686,
	685, 684, 683, -1000, 1925, -1000, -1000, -1000, -1000, -1000,
	-1000, 632, 630, 630, 630, -1000, 1034, -1000, -1000, -1000,
	349, 626, 300, 625, 624, 621, -1000, 680, 679, 678,
	670, 664, 661, 658, 654, 653, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1033, -1000, -1000, -1000, -1000, -34, 109355,
	-1000, 489, -34, -1000, -1000, 651, -1000, 32858, 32858, 32858,
	-1000, -1000, 2263, 44382, -1000, 2980, -1000, -22, -22, 868,
	53274, -1000, 50576, 868, 326, 789, 58757, -1000, 2929, -1000,
	-1000, 650, 282, -1000, -1000, -1000, -1000, 22589, 2928, 109355,
	109355, 87887, 87887, 87887, 3155, 44382, -1000, -1000, 66814, 109355,
	88953, -1000, -1000, 3502, 63587, 66276, 109355, 3001, 65743, 3729,
	-1000, -1000, -1000, -1000, -1000, 3137, 3728, 3726, 3724, -1000,
	109355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 213, 3135,
	-1000, -1000, 92151, 213, 3133, -1000, 213, 3132, -1000, 91618,
	-1000, -1000, 2155, 3131, -1000, -1000, 231, 3130, -1000, -1000,
	-1000, 230, 3129, -1000, -1000, 280, -90, 3128, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	121612, -1000, -1000, -1000, 65203, -1000, 3293, -1000, -1000, 109355,
	-1000, 44382, -1000, 3501, 1976, 72825, 3428, -50, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2518, 2473, 1150, 2291, -1000,
	3167, 1303, -1000, 30582, 3209, -1000, -1000, -1000, 279, 22589,
	-1000, -1000, -1000, -1000, -1000, -1000, 3409, 3125, 1724, -1000,
	2290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2160,
	3124, -1000, 2441, 3122, 2153, -1000, -1000, 2382, -1000, 3240,
	-1000, -1000, 2005, 3114, -20, -1000, -1000, 2568, -1000, 1874,
	-1000, 989, 3113, -1000, 82494, 56584, 54913, 68983, -37, -1000,
	-1000, -1000, -1000, -206, -1000, 20938, 121612, -1000, -1000, -1000,
	-1000, 1615, 121612, 907, -1000, -1000, 3112, -1000, 121612, 745,
	-1000, -1000, 3110, -1000, 2998, -1000, -1000, 2376, -1000, -1000,
	3723, -1000, -1000, 3721, -1000, 3718, 3716, 3715, -1000, 1682,
	1905, 3714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	81961, 2260, -1000, -1000, 80881, -1000, 2375, 3421, -1000, 81421,
	1037, -1000, 989, 2367, -1000, 91085, 1015, 2361, -1000, 3713,
	3357, 2737, 989, 2359, -1000, -1000, -1000, -1000, -1000, 983,
	-1000, 60367, -1000, 60367, -1000, 1523, -1000, 113619, -22, 87887,
	3561, -1000, -62, -1000, -1000, -1000, 1031, -1000, 53815, -1000,
	53815, 94297, 72287, 954, 795, 61972, 121612, -1000, -1000, -1000,
	-1000, 121612, -1000, -1000, -1000, -238, 2766, -1000, 72287, 56027,
	121612, -1000, -1000, -1000, -1000, 121612, -1000, -1000, -1000, 72287,
	80881, -1000, 100196, 80348, -1000, -1000, 1396, 2608, -1000, -1000,
	-1000, 72287, 1288, 72287, 72287, 72287, -1000, 99656, -1000, -1000,
	2015, 1401, 3244, 1969, 87887, -1000, 1828, -1000, -1000, -1000,
	3303, 109355, -1000, -1000, 2996, -1000, 64662, 90552, -1000, 90019,
	-1000, 89486, -1000, 87887, -1000, 87887, -1000, 3712, 3711, 3710,
	-1000, -1000, 3709, -1000, 3707, 3279, -1000, 121612, 3278, -1000,
	3706, 3416, 2991, 121612, -1000, 3115, 1652, 1640, 109355, -1000,
	-1000, 109355, -1000, 109355, -1000, -1000, -1000, 1438, -1000, -1000,
	2515, -1000, -1000, -1000, -1000, 87887, -1000, -1000, -1000, -1000,
	-1000, -1000, 2830, -1000, 1657, -1000, 1799, -1000, 2927, 3283,
	-1000, 1394, -1000, -1000, 233, -1000, -1000, -50, -1000, 113086,
	-1000, 2497, -1000, 109355, -1000, 2488, 2946, 2990, 1922, 2275,
	2580, -1000, 38614, 2529, 47778, 2289, 136, -1000, -1000, 136,
	136, 30016, -1000, -1000, 63587, 63587, 22589, 1316, 44382, 44382,
	44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382,
	44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382,
	44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382, 44382,
	44382, 44382, 44382, 2326, 44382, 1301, 44382, 44382, 44382, 44382,
	2312, -1000, -1000, 1852, 513, 1950, -1000, 3569, 3569, 3569,
	565, 565, 12684, 12684, 582, 3705, 781, -1000, 44382, -1000,
	119, 44382, 23140, -1000, 469, 14235, 2421, -1000, 468, 23718,
	-1000, -1000, -1000, 24850, 583, 38036, 44382, 1017, 121612, -1000,
	-1000, 1589, 3578, 20388, 2936, 2796, 641, 848, 847, 27728,
	27150, 26572, 25994, 844, 44382, 44382, 44382, 44382, 44382, 44382,
	44382, 44382, -1000, -1000, 3598, -1000, 3578, -1000, -1000, -1000,
	-1000, 3578, 1314, 1311, 3578, -1000, 3578, 3578, 5622, 5622,
	37470, 36892, 36314, 48344, 35736, 44382, 25416, 35158, 34580, -1000,
	109355, -34, 3499, 44382, 130, -1000, 120211, -1000, 130, 130,
	640, -64, 121612, 2590, 2590, 52197, 2004, 2061, 2061, 2061,
	-1000, 868, 15959, 868, 98585, 2141, 868, 868, 264, 290,
	466, 50037, 2980, 98585, 753, 638, -8, -13, -14, -1000,
	-1000, -15, -16, -1000, -1000, 87887, 637, 23140, 22589, 253,
	1423, -71, 2639, 2638, 2636, -1000, 2634, 1629, -72, 1294,
	87887, 109355, -65, -1000, 246, -78, -1000, 1137, 239, 3578,
	-1000, -1000, -1000, -1000, -1000, 3704, 3703, -1000, 1025, 635,
	633, 380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	632, 630, 630, 630, -1000, 349, 626, 300, 625, 624,
	621, -1000, -1000, -1000, -1000, -1000, 2925, 87887, 109355, -206,
	88953, -70, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	109355, -1000, -1000, -1000, 3702, -1000, 87887, -1000, -1000, 87887,
	213, 3109, -1000, 87887, -1000, 87887, 209, 3107, -1000, -1000,
	109355, -1000, 87887, 87887, -1000, 109355, 109355, 109355, 72287, 72287,
	232, -1000, 87887, 859, -79, 1142, -50, -1000, -1000, -1000,
	1986, -1000, 1834, -1000, -1000, -1000, -1000, -1000, -1000, 1358,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 922, -1000,
	-1000, -1000, -1000, -1000, -1000, 3591, 3584, -35, -1000, -1000,
	22589, -1000, -51, 1591, 2221, 1223, -1000, 74962, 2208, 3276,
	3699, 2709, 3232, 1522, -1000, 1437, -1000, 3366, 78735, 3445,
	3454, 808, -1000, 2924, -1000, -1000, 903, 1623, 1600, 1222,
	1218, 78735, 2441, -1000, 63587, -1000, 2673, 3361, 1380, 1374,
	1380, 1380, 1356, -1000, 78735, 1597, 1217, 1216, 1208, 1840,
	1837, -1000, -1000, -1000, 1207, 1205, 813, 1831, -1000, -52,
	3444, 3442, 181, -1000, 2923, 1203, -1000, -1000, -1000, 3351,
	87887, 22589, 1566, 1558, 1581, 1595, 1202, -36, -1000, 3437,
	1195, 1194, -1000, 4756, -1000, 72287, 2124, 3103, 2762, 861,
	2761, -1000, -1000, -1000, 861, -37, 68983, 109355, 223, -1000,
	119, 44382, 44382, 119, 44382, 119, 3410, 3102, -1000, -1000,
	-1000, -1000, -1000, 3697, 1876, 2538, -1000, -1000, 620, 2358,
	2922, 109355, 2659, -43, 87887, -1000, 3101, 67352, 2441, 2353,
	-1000, -1000, 79808, -1000, 3099, 489, 2352, -1000, 659, 3696,
	3097, -1000, 112553, -1000, 3293, 1320, 3096, 1094, 890, 3496,
	-1000, 890, 60906, -1000, 109355, -1000, -22, 4348, 73896, -85,
	-87, 465, -1000, 99123, 109355, 1092, 74429, 109355, 3199, 974,
	54913, -1000, 54913, -88, -238, 2755, 1390, 954, 954, 861,
	-1000, 861, -1000, 87887, 2988, -1000, -1000, 72287, 954, 954,
	954, -1000, -1000, -1000, -1000, 3695, 3694, 3693, -1000, -1000,
	-1000, 978, 87887, 109355, 87887, -1000, 220, -1000, 109355, -1000,
	109355, 109355, 87887, -1000, 978, 109355, 978, 109355, 978, 109355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 119, 44382, -1000,
	-1000, 3692, 1534, -1000, 2978, -1000, 2947, -1000, 16, -1000,
	-1000, -1000, -1000, -1000, 2063, -1000, -1000, 87887, 87887, 87887,
	87887, 109355, 3180, -1000, 109355, 3177, 87887, -1000, 78735, -1000,
	2488, 2946, -1000, -1000, -1000, -1000, -1000, -1000, 1388, 2196,
	-1000, 2616, -1000, 1486, -1000, -1000, -1000, 121612, 48910, -1000,
	-1000, 121612, 1703, -1000, 47212, 46646, -1000, -1000, 1587, 87887,
	2670, -1000, 2670, -193, -1000, 120089, 2613, 87887, -1000, -1000,
	-1000, -1000, -1000, 900, 1324, 1324, 1228, 1228, 1228, 1228,
	3389, 320, 2807, 976, 7380, 7380, 5078, 5078, 5078, 5078,
	5078, 7380, 598, 565, 565, 598, 598, 598, 598, 598,
	565, 565, 565, 7380, 7380, 7380, 12684, 11242, 7657, 44382,
	44382, 1193, 1846, 513, 6139, 44382, 7746, 7746, 7746, 7746,
	-1000, 1542, -1000, -1000, -1000, -1000, 2921, 619, 48344, 48344,
	-1000, -1000, -1000, -1000, 24284, 44382, -1000, -1000, -1000, -1000,
	34002, -1000, -1000, 119387, -317, 457, -186, 2, -1000, 44382,
	44382, 44382, 456, -1000, 218, 44382, 109355, -1000, 116434, 750,
	-93, -1000, -94, 1427, -1000, 44382, -1000, -1000, 1192, -1000,
	1191, 1190, 1189, -1000, 618, 453, -1000, 214, -1000, 2047,
	615, 612, 44382, -1000, -1000, -1000, -1000, -1000, 119112, -1000,
	-1000, 119025, -1000, -1000, 118750, -1000, -1000, 118663, -1000, -1000,
	-1000, 121517, 116057, 115865, 115798, 13581, 115760, 15335, -96, 451,
	-103, 442, 891, 889, 439, 438, 436, -104, -1000, 3691,
	3690, 3689, -1000, 3686, 3685, 3684, -1000, 3683, 3682, 3681,
	-1000, 3679, 3678, 3677, -1000, 3673, 3672, 3670, -1000, 3669,
	3668, 3667, -1000, 3665, 3664, 3663, -1000, 3662, 3660, 3659,
	-106, 435, -1000, 2919, -186, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 434, -1000, 432, -1000, 121248, -186, 431,
	905, -1000, 48344, 48344, 48344, -1000, 430, -1000, 119835, -1000,
	121153, 33436, 33436, 33436, 429, 120884, 44382, -186, -111, -1000,
	-113, -1000, -1000, 540, -114, 1012, 32858, 51117, 22589, -1000,
	1012, 1012, 44382, -1000, 44382, 2626, -1000, -1000, -1000, -1000,
	2622, 2489, 2590, 52197, -1000, -1000, -1000, -1000, 98585, -1000,
	3561, 2843, -1000, 98585, -1000, -1000, 109355, 489, -1000, 98585,
	98585, 22589, 868, -1000, 868, 98585, 691, -1000, -1000, -1000,
	-1000, -1000, 427, 57679, 2, 207, 22589, 989, -1000, 2624,
	2624, 2624, 2624, -1000, -1000, 109355, 1187, -48, -172, 3530,
	-1000, 1951, -1000, 63587, -1000, 766, 1197, 22589, -1000, -1000,
	-1000, 609, -1000, 3578, 3578, -1000, 3578, 109355, 2918, 116,
	111, 67352, 67352, 3657, -1000, -1000, 213, -1000, 87887, 213,
	213, -1000, 87887, 87887, 2155, -1000, 231, -1000, 230, -1000,
	-1000, -90, -1000, 1008, 30582, -1000, 1986, -1000, -1000, 1547,
	-1000, 1885, -1000, 1154, -1000, -1000, -1000, -1000, 30582, -1000,
	2201, 109355, 109355, 87887, -1000, 109355, -1000, 2028, 3527, 1779,
	2510, 2501, 67352, -1000, 2337, 112020, 2331, 63587, 109355, -1000,
	-1000, 608, 944, 2605, 2595, 1082, 109355, 109355, 2594, 111487,
	110954, -1000, 3656, 109355, 1975, 44382, 3348, 2165, 2115, 119,
	119, -1000, -1000, 119, 605, 1281, 87887, 87887, 109355, 67352,
	87887, 2114, -1000, -1000, -1000, -1000, -1000, 79268, -1000, -1000,
	3593, 3588, -1000, 1380, -1000, -1000, -1000, 1380, 2441, 1649,
	109355, 67352, 87887, 67352, 109355, 109355, 1594, 109355, 1440, -1000,
	813, 1961, 119, 119, -1000, -1000, 119, 604, 22589, 1838,
	-1000, 2981, 109355, 3619, 110421, 3617, 109355, 109355, 109355, 67352,
	3277, 109355, 109355, 67352, 4756, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 68450, 1093, 989, 1586,
	1185, 1183, 78735, 54913, 972, 54913, 2721, -1000, -1000, 19838,
	-1000, 121612, 121612, -1000, 121612, -1000, 64124, 109355, -1000, 1036,
	109355, 74429, 945, 3088, 59828, -206, 954, 72287, 87887, -43,
	109355, -1000, -1000, 2441, 3080, 489, 2336, -1000, 72287, 3490,
	3071, 599, 3655, 3654, -1000, 87887, 2253, 2334, -1000, -1000,
	109888, 3100, 813, 109355, 1012, 52197, 1800, -1000, 58219, 1061,
	109355, 1691, 108, -1000, -1000, -1000, 3, 109355, -1000, 788,
	-1000, -1000, 4348, 4348, 954, -230, 597, -1000, 855, 854,
	55470, 72287, -121, -1000, -1000, -1000, -1000, 2331, 87887, 109355,
	1285, 2728, 109355, -122, -1000, 206, 596, -1000, 2717, -1000,
	-238, -1000, 974, 54913, 2915, 2908, -1000, -1000, 1007, -1000,
	1385, 954, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -25, 109355, -206, -206, -47, -48, -1000, 978,
	-1000, 978, -1000, 978, -1000, 121612, -1000, -1000, 1532, 1531,
	109355, -1000, 22589, 109355, 87887, 22589, 87887, 2945, 2942, -1000,
	-1000, -1000, 109355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1106, -1000, 1703, 2190, -1000, 583, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2461, -1000, -49, 30016, 875,
	-1000, -1000, 87887, -26, 44382, 44382, 6092, 5297, 44382, 48344,
	48344, -1000, 44382, 538, -1000, -1000, -1000, -1000, -1000, 2907,
	580, 44382, 63587, 5787, 5278, -1000, 426, 15213, 598, -1000,
	44382, -1000, 424, 32292, -1000, 120465, -54, -123, -1000, 16522,
	-186, -124, -1000, -1000, 762, -1000, 3073, -1000, 44382, 120587,
	2410, 2058, 1747, 1561, 3578, 3616, 19288, -1000, 61439, 1013,
	2147, 118388, -1000, -1000, -1000, -1000, 63587, 63587, 44382, 44382,
	-1000, 44382, 44382, 44382, -1000, -1000, -1000, 3578, 884, -1000,
	-1000, -1000, 884, -1000, -1000, 1380, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1380, -1000, 44382, -1000, -1000, 2898, 44382, -1000, 63587,
	63587, 48344, 48344, 48344, 48344, 48344, 48344, 48344, 48344, 48344,
	48344, 48344, 48344, 48344, 48344, 48344, 48344, 48344, 48344, 48344,
	2492, 48344, 3567, 3567, 3567, -1000, 2860, 2898, 44382, 44382,
	63587, 411, 408, 403, -1000, 44382, -186, -1000, -1000, 4348,
	579, -1000, 2437, -1000, 2794, -1000, 44382, -1000, -174, -1000,
	2980, -1000, -1000, 2794, 2794, -129, 121612, 52197, 52197, -1000,
	578, 44382, 2585, -1000, -1000, 749, -315, -1000, 852, -1000,
	-1000, -1000, -1000, -1000, 489, -1000, -1000, -1000, 205, 98585,
	98585, 744, -1000, -130, -1000, -1000, -132, -1000, 3488, 401,
	22589, -1000, 1012, 3183, -1000, -1000, -1000, -1000, -1000, -1000,
	-206, 109355, 109355, 2177, 3615, -1000, 3581, 759, 742, 112,
	3578, 398, 376, 369, -206, 109355, 109355, 109355, -1000, -1000,
	-1000, -1000, 213, -1000, -1000, -1000, 209, -1000, -1000, -1000,
	-1000, 2604, -1000, -50, -1000, -1000, -1000, 44382, -1000, -1000,
	3241, 1181, 1180, -1000, -1000, -1000, -1000, 3342, 88420, 3524,
	1761, 1751, -1000, 3069, -1000, 2330, -1000, 1065, -1000, 1833,
	-1000, 44382, 576, 2715, 573, 572, 3653, 1810, 3652, 1090,
	3064, 2155, 3061, 2155, -1000, -1000, -1000, 939, -1000, 121612,
	2165, -1000, 571, 570, -1000, -51, 1580, 2117, 1175, 994,
	-1000, -1000, 44382, 44382, 98052, -1000, 445, 3240, -27, -1000,
	-1000, -1000, 1575, 1172, 1171, -1000, -1000, -1000, -1000, 2441,
	1574, 1170, 1168, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	992, -1000, 3029, 3026, 888, 109355, -1000, 991, -1000, -1000,
	44382, -1000, -52, 1167, 3427, 2320, 87887, -1000, 2155, 3059,
	1166, -1000, 1165, -1000, -1000, -1000, 3431, 3430, 1186, -1000,
	-1000, -1000, -1000, -1000, 67901, -1000, 109355, 67352, 87887, 1593,
	861, -1000, 2544, 861, 972, 2893, -1000, 2652, -1000, 87887,
	3651, 367, -141, -53, 63587, 3485, -1000, 2203, 611, 87887,
	874, -1000, 3561, -1000, -1000, -1000, -1000, 3420, 87887, 3484,
	3058, 989, 119, 87887, 3604, -1000, -1000, 3482, 87887, 3056,
	2252, 2319, 2504, 813, 73363, 989, 2143, -74, -1000, 1691,
	31714, 3238, -148, -1000, -1000, -1000, 1012, 60906, 52197, 44382,
	3650, -149, -1000, -1000, -1000, -1000, -1000, 95915, 95915, 72287,
	72287, 72287, 954, 109355, 109355, 74429, -1000, -1000, 569, 109355,
	109355, 567, -1000, 109355, 109355, 3648, 72287, -55, 564, -1000,
	850, 843, 840, -1000, -1000, -1000, -1000, -1000, 974, -1000,
	-238, 54913, 119, -1000, 2173, 87887, -1000, 18738, -1000, -1000,
	-1000, -1000, -1000, -1000, 978, -1000, -1000, 1970, 2287, 1970,
	1696, 1694, -1000, -1000, 2181, -1000, -1000, -1000, -1000, 2654,
	3251, 22589, 3425, 7746, 44382, 44382, 428, 526, 269, 7746,
	44382, 44382, 63587, 400, -150, 44382, 44382, -1000, 44382, 737,
	121612, 3614, 44382, 364, 357, -1000, -1000, -1000, 3563, -1000,
	-1000, -1000, 121612, 44382, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 356, -1000, 109, -1000, -1000, -1000, 115218, -1000, 44382,
	354, 3337, -1000, 352, 351, 14608, 12643, 118301, 118026, 117939,
	350, -1000, -1000, 344, 340, 121612, 2860, 121612, -1000, -1000,
	1016, 1016, 1341, 1341, 1341, 1341, 3567, 2123, 1690, 2099,
	778, 778, 778, 1634, 1044, 1044, 778, 778, 778, 2882,
	2475, 563, 1393, -1000, -1000, 121612, 121612, 337, -1000, -1000,
	-1000, -186, 333, 4348, -1000, 2790, 3333, 121612, -1000, 52197,
	2790, 2790, -1000, -1000, 2489, 109355, 121612, 52197, -1000, 2843,
	-1000, 17083, -1000, 22589, -1000, -1000, -1000, -1000, 3561, -1000,
	57679, -1000, 555, -1000, 4, -1000, 3183, -1000, 839, -1000,
	-206, -206, -1000, -1000, 734, 3647, 758, 22589, 332, -1000,
	-1000, -1000, -206, -206, -206, -1000, -1000, -1000, 3195, 121612,
	109355, 109355, 1425, 93757, 1680, -1000, -1000, 1795, 2483, -1000,
	3522, 3520, 109355, 3053, -1000, 4358, -1000, 1082, 117664, 52736,
	-1000, 52736, 109355, -1000, -1000, 1859, 2532, 1125, -1000, 3306,
	109355, -1000, 109355, -1000, -1000, -1000, 109355, 109355, 87887, 109355,
	-1000, 67352, 3038, -155, 121612, -56, -1000, 837, -1000, 1360,
	-1000, 18188, 109355, 67352, 87887, 109355, 67352, 87887, 1994, -1000,
	-1000, 3022, -1000, 3036, -156, 22589, -1000, 3612, 3611, 3048,
	3313, -1000, 109355, 3609, 109355, 87887, 3193, -1000, -1000, -1000,
	-1000, -1000, 1573, 1164, 1161, 972, -57, 551, -1000, 835,
	-1000, -1000, 833, 972, -1000, 72287, 54913, 489, -1000, 2699,
	-1000, 93224, 2138, 119, -1000, 3646, 96453, 550, -1000, 2169,
	-1000, 733, 67352, 2441, 119, 87887, -1000, -1000, 489, 331,
	-60, -1000, 3078, 1070, 22589, 87887, 3047, 2507, 813, 73363,
	-1000, 1320, 2580, -1000, -69, -1000, 682, 119, 2143, -1000,
	-74, 121612, -1000, 832, -1000, -157, -1000, -1000, 330, -1000,
	3190, 3188, -1000, 2827, 52736, 549, 547, 109355, 3187, -1000,
	-1000, -158, 2571, 2571, 72287, 54913, 72287, -1000, 974, -1000,
	-1000, 2346, -1000, -1000, -1000, -1000, -1000, 22589, 1618, -1000,
	546, 544, -1000, -1000, -1000, -1000, 3251, 7746, 7746, 44382,
	44382, 44382, 7746, 400, -175, -1000, 7746, 7746, -186, -1000,
	-1000, 120465, -1000, -1000, -1000, 121612, -1000, 17638, 1972, -1000,
	117577, -1000, 30016, -1000, -1000, 44382, 44382, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 48344, 2880, 543, 63587, -1000,
	-1000, 323, 984, 44382, 46080, 2980, 984, 984, -1000, -180,
	-1000, -1000, -1000, 3561, 4, -1000, -1000, 3645, 22589, -1000,
	72287, 740, -1000, 3644, -1000, -1000, -1000, -1000, -1000, 2750,
	3481, -1000, -1000, 1783, 2482, -1000, 3477, 1160, 3475, -1000,
	109355, -1000, 109355, -1000, 22589, 109355, 2832, 1254, -1000, 944,
	2593, 542, 48344, 87887, 904, -1000, 3514, 2804, -183, -1000,
	109355, 44382, 109355, -188, -190, 2305, -1000, -1000, 2304, 44382,
	-1000, 63587, 539, 2155, 2155, -195, -201, -1000, -1000, -1000,
	44382, 1159, 109355, 31148, -1000, 3643, 3240, -1000, -1000, -1000,
	-1000, -1000, -1000, 109355, -1000, 44382, 1157, -1000, -1000, -1000,
	3608, 2155, 22589, 2155, -1000, 2155, 3313, 1121, 109355, 67352,
	87887, -1000, 2216, 2216, 72287, 54913, -1000, -90, 972, 3473,
	2690, 3641, -1000, -1000, -1000, -1000, 2584, -1000, -1000, 109355,
	2548, 962, -1000, -203, -1000, 829, 824, 74429, 945, 929,
	-1000, -1000, -1000, -1000, 489, 3469, -1000, 3607, 537, 535,
	109355, 2244, 525, 22589, 3234, 813, 73363, -1000, 3100, 1691,
	-1000, 2302, 109355, 3228, -1000, 2580, 513, -1000, 954, 512,
	511, 2500, 2500, -204, 52736, 52736, -209, 510, 954, -1000,
	-210, -1000, -1000, -1000, -1000, -109, -1000, 876, 780, -1000,
	-1000, 87887, 87887, 44382, 44382, -1000, 7746, 7746, 7746, -1000,
	321, -1000, -1000, 2143, 3332, -1000, -116, 117302, 117215, 5841,
	48344, 63587, -211, -1000, -1000, 109355, 121612, -146, -1000, 121612,
	505, 504, 363, -1000, -1000, -1000, 692, -1000, -1000, 3639,
	-1000, 97519, 109355, -1000, 3468, 109355, 96986, 109355, -1000, 1918,
	-1000, -1000, -1000, 109355, 2314, -1000, -1000, -1000, 1078, 44382,
	1393, 502, 44382, -1000, 3465, -1000, 2687, 2858, 1796, 52736,
	-1000, 3251, -1000, 116940, -1000, 1068, 1824, -1000, -1000, 121612,
	3313, 52736, -1000, -1000, 501, 500, 121612, 498, 817, 2869,
	-1000, -1000, -1000, -1000, 121612, 497, 3427, -1000, -1000, -1000,
	-1000, 2155, 87887, -1000, -1000, -1000, -1000, -212, -1000, -1000,
	1862, 119, 1968, 2748, -1000, 2138, 495, -1000, -1000, 2199,
	2582, -1000, 96453, 30582, 30582, 317, 3455, 929, -1000, 3552,
	-1000, 3451, 119, -1000, 3604, 52736, -1000, 87887, 52736, 2239,
	1931, 2474, 73363, -1000, 2504, -1000, -1000, -217, 109355, 1691,
	-1000, -1000, 72287, 72287, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1068, -218, -219, -1000, 72287,
	-1000, -1000, 2346, -1000, 109355, -1000, 109355, -1000, -1000, -224,
	-225, -1000, 2298, 44382, 30016, -1000, -1000, 5841, -232, -1000,
	-181, -1000, 3450, 46080, 3638, 3637, 3632, -1000, -1000, -1000,
	1782, -1000, 109355, -1000, -1000, 1735, -1000, -1000, -1000, 3046,
	2785, 116853, 2454, 109355, 116485, -1000, 2857, -1000, -1000, 2690,
	494, -1000, -1000, -1000, -1000, 875, 109355, 2690, 2784, 87887,
	1071, -235, 1970, 1970, 44382, 29450, 1985, 44382, -1000, -1000,
	3313, -1000, 2817, 3553, -1000, 945, -1000, 1983, 109355, -1000,
	3299, -1000, 3182, -1000, -1000, -1000, 2699, 119, -1000, -1000,
	119, -1000, 316, -240, 1070, -241, 87887, 1734, -1000, 813,
	-1000, 2507, 1012, -1000, -1000, -242, -243, 1796, 1068, 952,
	-252, -1000, -254, -255, -1000, -1000, 291, 45514, 45514, 45514,
	-186, -193, -1000, 109355, 491, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3021, 970, -1000, 2210, 1821, 247, 1089, -1000,
	-1000, 1961, 109355, -1000, -1000, -1000, 966, 489, -1000, 44382,
	1068, -257, -1000, 1060, -262, -1000, 1048, -263, -1000, 2868,
	-1000, -268, 2155, 965, 3401, -1000, -1000, -1000, 2199, 87887,
	-270, -1000, -1000, 2175, -1000, 2690, 962, -1000, -1000, 1068,
	488, 1796, 486, 1412, 813, -1000, -1000, 1380, 3234, 3108,
	954, 954, 2690, 1796, 1012, 485, 954, -1000, -1000, -1000,
	3070, -1000, 49476, 2139, 1678, 119474, 3070, 3070, -1000, -1000,
	109355, 3387, -1000, 2238, 2237, 1495, -1000, -1000, -1000, -1000,
	-1000, -1000, 2804, -1000, -271, 3362, 2454, 121612, 2690, -1000,
	1970, 2746, -1000, 1970, 2825, -1000, 1979, -1000, -1000, -1000,
	1604, 3537, 2041, 482, -1000, 109355, 1624, 1613, 3631, 1968,
	2199, 1796, 52736, 2690, 52736, -1000, -1000, 109355, -1000, 1931,
	1312, -1000, -1000, 1961, 2690, -1000, -1000, -1000, 1864, 3459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 809, -1000,
	3163, -1000, 1105, 2171, 2171, 1012, -1000, 801, 2210, -1000,
	-1000, 480, -1000, 475, -1000, 2151, -1000, -1000, -1000, -1000,
	109355, -1000, -1000, 3629, -1000, 945, -1000, 2690, -276, 1961,
	-277, -1000, -206, 1734, -1000, 1508, 952, 1961, 1676, -1000,
	-1000, 2107, 44948, 44382, -1000, 3533, -1000, -1000, 2498, -1000,
	-1000, 44382, 2804, 44382, 44382, 59295, -278, -1000, 2199, 1961,
	1068, 952, 1796, 1412, 60906, 1012, 952, -1000, -1000, -1000,
	121612, -1000, -1000, -1000, 121612, -1000, -290, -292, -230, 95915,
	2132, 2041, 952, 1796, 1012, 2690, -1000, -265, -1000, 1012,
	1961, 1149, -305, -1000, -1000, -1000, -1000, 1012, 2690, -1000,
	1961, -1000, -1000, -1000, -1000, 474, -1000, -1000, 1961, 952,
	44382, 952, 1012, -307, 1012, -1000, 1961, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4505, 4503, 4501, 4500, 4498, 4497, 4496, 4495, 4489,
	4487, 4485, 4482, 4481, 4480, 4478, 4476, 4475, 4474, 4472,
	4470, 4469, 4468, 4466, 4465, 4464, 4463, 4456, 4454, 4453,
	4450, 4449, 4448, 4447, 4446, 4445, 4444, 4443, 4442, 4441,
	4440, 4439, 4438, 4436, 4432, 4430, 4427, 4425, 4424, 4423,
	4421, 4418, 4416, 4415, 4412, 4404, 4402, 4401, 4399, 4398,
	4396, 4394, 49, 4391, 4387, 4385, 4383, 4381, 4377, 4376,
	4375, 4371, 4370, 4369, 4367, 4366, 4362, 4360, 4359, 4357,
	4355, 4350, 58, 4349, 256, 4348, 4347, 4346, 4345, 4343,
	4340, 4337, 4333, 4331, 4329, 4328, 4326, 255, 4324, 196,
	4323, 4321, 4320, 4318, 4317, 253, 4316, 4312, 4308, 4307,
	266, 4302, 4298, 4287, 4279, 4278, 4277, 4275, 4273, 4265,
	4264, 4261, 113, 184, 4258, 4256, 1522, 4255, 4251, 4250,
	4249, 4248, 4247, 4246, 4241, 4233, 4229, 232, 4228, 252,
	4227, 4223, 4220, 4219, 4216, 4213, 4212, 4210, 4206, 4205,
	4204, 4203, 4202, 4199, 4197, 4195, 4191, 4186, 4184, 4180,
	4179, 4178, 4176, 4174, 4171, 4166, 4165, 4164, 4162, 4161,
	4159, 4158, 4156, 4154, 4151, 4150, 228, 264, 180, 4148,
	4144, 251, 247, 4125, 4124, 4123, 4118, 4115, 114, 9,
	214, 4114, 4111, 90, 77, 75, 84, 91, 92, 4109,
	101, 4108, 123, 59, 4107, 22, 2, 225, 220, 8147,
	218, 4103, 4098, 4095, 231, 175, 4092, 209, 4089, 4088,
	4087, 4084, 63, 48, 161, 156, 159, 154, 260, 4083,
	143, 89, 71, 50, 42, 16, 95, 242, 20, 4079,
	241, 7, 128, 4, 34, 4074, 4073, 4070, 4069, 3360,
	120, 4068, 248, 222, 145, 4066, 4065, 4061, 322, 4060,
	4059, 45, 4058, 112, 105, 125, 150, 110, 4057, 136,
	36, 4056, 162, 51, 4055, 142, 88, 78, 7303, 9763,
	4054, 100, 80, 106, 3975, 164, 152, 181, 94, 151,
	144, 179, 198, 197, 155, 52, 4053, 236, 4052, 3456,
	72, 165, 4051, 4049, 4048, 69, 186, 96, 4047, 4046,
	66, 18, 14, 3, 1, 131, 12, 25, 8, 4042,
	30, 108, 43, 27, 4040, 23, 4039, 4038, 4037, 4035,
	4034, 41, 149, 4032, 261, 4031, 107, 54, 115, 4029,
	24, 194, 4028, 207, 118, 4027, 4023, 239, 187, 168,
	4021, 68, 206, 4017, 4016, 4012, 4010, 4007, 119, 10,
	126, 4005, 4003, 130, 4002, 47, 227, 178, 4001, 65,
	3998, 3997, 160, 97, 127, 263, 205, 208, 109, 203,
	169, 211, 3996, 3992, 3990, 167, 3988, 3987, 199, 138,
	3986, 3985, 190, 265, 81, 44, 76, 221, 67, 177,
	158, 3984, 182, 3983, 3981, 259, 163, 191, 5, 15,
	85, 111, 3974, 6, 213, 141, 217, 103, 3971, 4733,
	2546, 2604, 3970, 3969, 135, 102, 64, 117, 140, 244,
	70, 3968, 3967, 204, 3966, 3965, 3964, 3958, 171, 3956,
	3954, 3953, 147, 176, 202, 3951, 83, 62, 46, 19,
	121, 234, 258, 104, 201, 170, 237, 3949, 3948, 3947,
	166, 3945, 86, 124, 3944, 188, 229, 55, 3943, 348,
	3942, 137, 1850, 60, 139, 3940, 215, 3939, 3938, 3937,
	3928, 3927, 3923, 3921, 884, 219, 3920, 3919, 3918, 33,
	173, 3916, 243, 148, 200, 87, 56, 3913, 79, 254,
	3912, 847, 2434, 53, 245, 1381, 246, 3911, 1319, 57,
	3908, 0, 11724, 6398, 9616, 11268, 3907, 5757, 3904, 3900,
	3899, 195, 134, 3895, 3894, 3892, 99, 3886, 73, 3882,
	3879, 61, 3878, 29, 17, 11, 31, 26, 183, 174,
	3877, 3875, 122, 116, 132, 3873, 257, 210, 3869, 3868,
	3867, 3866, 82, 3865, 40, 3860, 38, 3859, 3857, 39,
	13, 32, 3854, 3853, 235, 3852, 193, 233, 3850, 146,
	3849, 3444, 129, 3848, 3843, 240, 93, 3842, 272, 3839,
	3397, 3837, 3829, 28, 3828, 3826, 224, 157, 189, 3823,
	3818, 153, 3816, 3811, 3809, 270, 3808, 3807, 3806, 37,
	3803, 21, 3802, 3801, 192, 3216, 3799, 3798, 35, 3797,
	172,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 16, 16,
	36, 36, 17, 17, 38, 38, 18, 18, 39, 39,
	575, 575, 21, 41, 22, 42, 15, 576, 576, 576,
	576, 34, 23, 43, 27, 27, 27, 27, 27, 191,
	191, 191, 191, 20, 20, 37, 37, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 574, 574, 227, 227, 226, 221, 221,
	577, 577, 228, 228, 228, 230, 230, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 473, 473, 473,
	506, 506, 505, 505, 505, 504, 504, 590, 590, 591,
	591, 591, 591, 591, 125, 125, 371, 371, 371, 51,
	51, 51, 51, 51, 569, 569, 193, 193, 193, 195,
	195, 194, 194, 194, 194, 73, 73, 582, 582, 583,
	583, 581, 584, 584, 584, 192, 192, 192, 121, 121,
	121, 121, 121, 121, 122, 122, 123, 123, 196, 196,
	196, 198, 198, 197, 197, 197, 197, 197, 197, 197,
	197, 202, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 508, 508, 509, 509, 187, 187, 188,
	188, 188, 188, 189, 189, 190, 190, 190, 65, 199,
	199, 201, 201, 200, 200, 53, 53, 53, 53, 53,
	53, 53, 54, 54, 54, 54, 54, 55, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 63,
	63, 63, 63, 178, 178, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 70, 70, 70, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 593, 593,
	594, 594, 595, 595, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 79, 79, 333, 333, 298, 298, 80, 80, 80,
	81, 81, 82, 82, 67, 67, 567, 567, 348, 348,
	464, 464, 84, 84, 370, 370, 85, 85, 85, 85,
	85, 85, 86, 86, 86, 86, 86, 86, 86, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 94, 94, 94, 94, 94, 95, 95,
	95, 92, 92, 92, 89, 89, 89, 88, 88, 88,
	93, 93, 93, 566, 287, 287, 91, 91, 91, 90,
	90, 90, 349, 349, 96, 96, 96, 96, 299, 97,
	97, 97, 97, 97, 97, 97, 97, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	466, 466, 98, 98, 98, 431, 431, 102, 102, 102,
	386, 386, 103, 103, 103, 103, 103, 104, 104, 104,
	104, 104, 104, 124, 124, 124, 124, 124, 124, 571,
	571, 341, 341, 252, 252, 252, 252, 114, 114, 114,
	114, 115, 115, 115, 116, 116, 183, 183, 131, 131,
	131, 131, 131, 130, 130, 130, 130, 130, 130, 57,
	57, 57, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 62, 62, 62, 133, 133, 587, 587, 135,
	132, 132, 132, 134, 134, 134, 134, 136, 137, 137,
	137, 137, 137, 137, 137, 137, 138, 138, 498, 498,
	357, 357, 496, 496, 518, 518, 497, 497, 303, 303,
	303, 303, 303, 304, 304, 304, 507, 507, 507, 507,
	507, 507, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 184,
	184, 185, 186, 186, 186, 186, 186, 162, 162, 162,
	177, 177, 177, 177, 177, 177, 177, 165, 165, 165,
	149, 149, 140, 140, 140, 140, 140, 140, 140, 144,
	144, 144, 144, 144, 144, 144, 144, 141, 141, 151,
	151, 151, 151, 151, 145, 145, 146, 146, 146, 146,
	172, 172, 148, 148, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 142, 142, 142, 142, 153, 153, 153,
	153, 393, 393, 393, 176, 176, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 175, 175, 175,
	175, 175, 175, 585, 585, 586, 586, 169, 169, 169,
	169, 169, 169, 445, 445, 163, 163, 163, 163, 168,
	168, 168, 168, 171, 171, 171, 171, 376, 376, 160,
	160, 160, 161, 161, 161, 166, 166, 167, 164, 164,
	170, 170, 170, 170, 143, 143, 143, 597, 597, 597,
	173, 173, 159, 159, 174, 174, 174, 174, 174, 174,
	174, 174, 598, 598, 155, 155, 155, 154, 154, 154,
	154, 157, 157, 158, 158, 158, 158, 158, 158, 156,
	147, 568, 568, 564, 564, 564, 564, 564, 564, 564,
	564, 565, 565, 565, 565, 570, 570, 107, 107, 107,
	107, 107, 117, 117, 117, 117, 117, 108, 108, 108,
	108, 108, 110, 110, 109, 109, 109, 109, 74, 74,
	74, 74, 74, 14, 14, 14, 75, 75, 243, 243,
	205, 205, 205, 322, 322, 206, 206, 311, 311, 311,
	311, 203, 203, 204, 204, 76, 76, 599, 599, 599,
	578, 578, 578, 579, 579, 579, 579, 579, 579, 305,
	305, 306, 306, 411, 411, 411, 411, 411, 309, 309,
	309, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	312, 312, 229, 229, 229, 320, 321, 321, 313, 313,
	319, 318, 318, 317, 317, 316, 316, 314, 315, 315,
	315, 324, 324, 323, 326, 326, 325, 410, 527, 527,
	529, 529, 529, 529, 529, 529, 529, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 394,
	394, 600, 600, 525, 525, 525, 526, 521, 521, 522,
	522, 522, 522, 522, 307, 307, 308, 308, 308, 308,
	523, 524, 339, 339, 449, 528, 528, 530, 530, 532,
	601, 601, 601, 601, 601, 601, 602, 602, 602, 409,
	409, 408, 408, 331, 331, 533, 533, 533, 533, 534,
	534, 534, 534, 534, 537, 536, 535, 535, 535, 535,
	535, 78, 78, 78, 373, 373, 372, 372, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 180, 180, 255, 255, 72, 72, 72,
	12, 12, 12, 580, 580, 580, 77, 77, 77, 77,
	77, 77, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 573, 573, 572, 572, 256, 256, 604, 604,
	83, 83, 83, 83, 83, 83, 83, 83, 467, 467,
	468, 468, 71, 71, 71, 71, 71, 395, 395, 392,
	392, 391, 391, 338, 338, 447, 447, 447, 448, 260,
	260, 261, 261, 222, 222, 222, 29, 28, 19, 19,
	24, 24, 25, 25, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 26, 26, 45, 45, 45,
	45, 46, 46, 46, 46, 49, 49, 50, 50, 44,
	44, 44, 44, 47, 47, 40, 40, 588, 588, 589,
	589, 113, 113, 118, 118, 118, 118, 118, 119, 119,
	119, 119, 120, 120, 120, 120, 129, 129, 179, 179,
	179, 179, 179, 179, 179, 52, 52, 52, 52, 64,
	64, 64, 64, 127, 606, 606, 606, 128, 128, 128,
	605, 605, 253, 253, 405, 405, 406, 406, 607, 607,
	407, 407, 407, 407, 407, 246, 245, 247, 247, 248,
	248, 69, 69, 69, 238, 238, 237, 235, 235, 510,
	510, 240, 240, 240, 241, 241, 231, 231, 232, 232,
	233, 233, 234, 234, 244, 244, 608, 608, 105, 105,
	105, 182, 182, 297, 297, 297, 402, 402, 402, 332,
	332, 267, 267, 404, 404, 404, 404, 369, 369, 369,
	181, 181, 346, 346, 359, 359, 360, 360, 461, 461,
	361, 111, 111, 112, 112, 126, 126, 209, 209, 207,
	207, 207, 207, 207, 207, 207, 207, 214, 214, 215,
	215, 216, 216, 217, 218, 218, 218, 218, 350, 350,
	219, 219, 219, 208, 208, 208, 210, 210, 210, 210,
	210, 210, 210, 213, 213, 213, 213, 220, 220, 220,
	212, 212, 544, 544, 544, 546, 546, 548, 548, 547,
	547, 543, 543, 545, 545, 603, 603, 375, 375, 375,
	329, 330, 327, 327, 328, 328, 336, 336, 334, 335,
	335, 337, 337, 446, 446, 446, 223, 223, 223, 366,
	366, 366, 366, 367, 367, 398, 398, 396, 396, 396,
	396, 397, 397, 399, 399, 399, 400, 400, 401, 401,
	363, 363, 364, 364, 365, 365, 365, 365, 427, 427,
	211, 211, 211, 343, 343, 343, 344, 344, 417, 417,
	417, 417, 417, 417, 418, 418, 416, 416, 416, 416,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 451,
	452, 452, 345, 345, 453, 403, 403, 562, 562, 562,
	563, 563, 444, 444, 454, 454, 454, 454, 454, 454,
	442, 442, 443, 443, 462, 463, 463, 379, 379, 379,
	379, 377, 377, 380, 380, 380, 380, 380, 378, 378,
	455, 455, 455, 455, 368, 368, 456, 456, 456, 456,
	457, 458, 458, 459, 459, 412, 413, 413, 469, 469,
	469, 469, 471, 342, 342, 342, 342, 342, 520, 519,
	519, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 486, 486, 486, 486, 486, 486, 486, 472,
	472, 472, 472, 472, 476, 476, 476, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 477, 477,
	482, 482, 483, 483, 483, 478, 479, 484, 484, 484,
	484, 609, 609, 488, 488, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 474, 474, 474, 481, 481, 481,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 387, 387, 389, 389, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 421, 421, 421, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 538, 538, 538, 538, 538, 538, 538,
	538, 423, 423, 541, 541, 542, 542, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 549, 549, 550, 550,
	552, 552, 553, 553, 554, 555, 555, 555, 556, 557,
	557, 551, 551, 558, 558, 558, 558, 559, 559, 560,
	560, 560, 560, 560, 561, 561, 561, 561, 561, 433,
	433, 434, 434, 440, 440, 440, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 257, 257, 257, 257, 257, 355, 355, 353,
	353, 353, 356, 356, 354, 354, 352, 352, 351, 351,
	430, 430, 428, 428, 432, 432, 381, 381, 487, 487,
	487, 487, 487, 487, 487, 487, 382, 382, 382, 390,
	383, 383, 384, 384, 384, 384, 384, 424, 425, 385,
	385, 385, 426, 426, 435, 439, 439, 438, 437, 437,
	436, 436, 414, 414, 415, 415, 362, 362, 610, 610,
	358, 358, 460, 460, 460, 460, 301, 301, 347, 347,
	300, 300, 292, 292, 293, 293, 293, 293, 340, 340,
	441, 441, 489, 489, 490, 490, 491, 491, 492, 492,
	493, 494, 495, 429, 429, 277, 276, 264, 265, 275,
	274, 273, 263, 266, 270, 271, 272, 268, 269, 283,
	282, 281, 236, 239, 288, 289, 289, 291, 291, 290,
	290, 279, 280, 465, 262, 294, 294, 295, 295, 295,
	296, 296, 296, 296, 258, 258, 259, 259, 284, 284,
	285, 286, 286, 278, 278, 278, 249, 249, 249, 250,
	250, 251, 251, 503, 503, 500, 500, 500, 501, 501,
	501, 502, 502, 502, 502, 499, 499, 499, 499, 499,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 512, 512, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 514, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 7, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 2, 6, 4, 7, 7, 7, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 6,
	4, 4, 5, 5, 7, 3, 3, 4, 4, 6,
	3, 6, 7, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 580, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 101, 81, 152,
	127, 135, 198, 376, 418, 429, 390, 140, 410, 395,
	-134, -135, 446, -52, -64, -128, -127, 74, 128, 404,
	-4, -12, 30, 47, -54, -55, -56, 63, -72, -68,
	-79, -73, -70, -592, 103, -545, -87, -90, -120, -596,
	159, 216, -108, -109, 359, -115, -116, 412, -118, -119,
	414, 160, -59, -58, 154, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 451, -167, 511, 50, 465,
	83, 144, 422, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	411, -210, -208, 577, 526, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 546, 555, -213, -211, -212, -220, 438, 534, 485,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 166, 225, 323, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 50, 54, 56, 60, 61,
	62, 63, 64, 65, 69, 74, 75, 80, 81, 82,
	83, 84, 85, 86, 92, 89, 90, 91, 93, 95,
	97, 98, 99, 100, 101, 102, 104, 105, 106, 108,
	109, 117, 118, 119, 120, 122, 127, 128, 131, 126,
	130, 133, 134, 135, 138, 139, 140, 142, 143, 145,
	146, 147, 149, 150, 152, 153, 154, 157, 155, 493,
	156, 158, 159, 160, 161, 164, 172, 173, 174, 179,
	181, 185, 186, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 199, 203, 205, 206, 207, 208, 209, 215,
	216, 218, 219, 220, 221, 226, 227, 228, 232, 229,
	238, 239, 243, 244, 245, 247, 251, 252, 253, 254,
	255, 256, 258, 260, 259, 262, 265, 266, 269, 273,
	274, 278, 279, 275, 280, 281, 283, 284, 287, 285,
	288, 289, 286, 290, 292, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 291, 306, 304, 308,
	309, 310, 321, 319, 314, 315, 311, 316, 312, 313,
	317, 318, 325, 326, 329, 213, 331, 332, 335, 353,
	339, 340, 341, 344, 345, 348, 351, 352, 354, 355,
	356, 357, 358, 359, 360, 361, 363, 364, 366, 367,
	368, 370, 371, 372, 374, 376, 377, 379, 380, 382,
	383, 384, 385, 386, 387, 388, 390, 392, 391, 393,
	395, 397, 398, 399, 404, 410, 406, 407, 408, 409,
	411, 412, 413, 414, 416, 417, 418, 420, 421, 422,
	423, 425, 427, 428, 431, 432, 448, 449, 467, 429,
	430, 433, 434, 435, 436, 437, 441, 439, 440, 442,
	443, 444, 446, 447, 450, 451, 453, 454, 455, 456,
	457, 458, 461, 463, 464, 465, 484, 466, 468, 471,
	472, 473, 474, 475, 469, 483, 477, 478, 480, 481,
	486, 487, 488, 489, 490, 491, 492, 494, 496, 504,
	505, 506, 508, 511, 512, 513, 514, 502, 516, 517,
	520, 521, 522, 525, 523, 524, 526, 528, 531, 532,
	533, 539, 538, 540, 547, 548, 550, 551, 552, 37,
	51, 52, 55, 57, 59, 70, 71, 72, 76, 123,
	124, 151, 162, 163, 175, 187, 188, 200, 202, 210,
	211, 212, 233, 234, 236, 241, 263, 328, 330, 346,
	350, 365, 369, 373, 375, 389, 424, 459, 470, 476,
	497, 498, 499, 500, 507, 509, 534, 535, 536, 541,
	549, -299, 2, -279, 337, -272, 2, -249, -249, 376,
	29, 2, 29, 364, 440, 488, 490, 2, -571, -341,
	2, 29, -252, -249, 103, 198, 438, -272, 2, -571,
	-341, 25, 2, -249, 2, 351, 22, 28, 67, 78,
	99, 138, 161, 182, 185, -595, 353, 383, 427, 442,
	483, 494, 508, 2, 538, 284, 439, 485, 225, 119,
	513, 433, -580, 431, 432, 351, 381, 420, 201, 527,
	-253, 2, 429, -249, 284, 2, 580, 95, 274, 75,
	424, 443, -137, 505, -136, 497, 433, -138, -498, 2,
	306, -249, 580, 580, 580, 29, -262, -249, 485, 225,
	433, 119, 481, 580, 2, 485, 356, 538, 439, 119,
	386, 225, 513, 433, -580, 284, -569, 2, -564, 4,
	-515, -511, -293, -292, 485, 491, 119, -286, -278, 570,
	-285, 580, 580, 580, 2, 244, 245, 385, 384, 443,
	444, 580, 580, 580, 580, 431, 2, 161, 22, 28,
	67, 94, 99, 125, 182, 185, 342, -593, 353, 383,
	442, 483, 487, 494, 508, -579, 466, 69, 433, -578,
	-580, 284, 513, 138, -391, 119, 274, 196, 521, 490,
	488, 519, 131, 232, 524, 523, 580, 580, -99, 2,
	577, 33, 32, 140, 446, -202, 485, 237, 2, -249,
	580, 580, 2, 244, 245, 431, 432, 580, 580, 183,
	-564, 2, 580, 580, 2, 244, 245, 431, 432, 237,
	2, 69, 435, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 2, -177, 443, 466,
	207, 48, 47, 75, 29, 382, 80, 357, 120, 146,
	514, 199, 225, 226, 252, 94, 95, -393, 45, 245,
	244, 432, -585, 431, -445, 486, 434, 440, 480, 256,
	429, 505, 103, 528, 421, 552, 386, 387, 478, 399,
	275, 155, 4, 119, 306, 445, 497, 274, 428, 360,
	85, -603, 2, 485, -605, 2, 505, 505, 2, -605,
	2, -605, 2, -605, 2, -606, 505, 549, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, -208, -210, -209, 580, 580,
	580, 580, 580, 580, 580, -177, 443, 2, 75, 29,
	-334, -336, 518, 235, 148, 343, -207, -209, 2, -544,
	-496, 2, -419, -518, -421, 568, 569, 561, 482, 68,
	322, 553, -433, 125, 519, 337, -517, -422, -435, 151,
	424, -356, 8, 9, 5, 6, 7, -258, -423, -429,
	510, 165, 327, -296, 581, 10, 577, -541, -209, -434,
	38, 202, 66, -500, -295, -259, -472, 236, -294, -278,
	-538, -539, 4, -511, -512, -501, -475, -483, -479, -480,
	-486, -249, -514, 78, 111, 112, 110, 115, 114, 277,
	276, 116, 113, 445, 527, 67, 37, 210, 211, 241,
	328, 212, 76, -540, 139, -513, 233, 234, 459, 52,
	389, 175, 124, 123, 330, 57, 55, 535, -484, 121,
	497, 498, 499, 500, 187, 188, 59, 162, 163, 350,
	373, 476, 507, 509, 200, 263, 44, 107, 184, 231,
	214, 240, 242, 246, 264, 267, 307, 320, 324, 347,
	349, 419, 452, -609, 536, 470, 70, 71, -546, 391,
	-547, -272, -546, 580, 580, 582, 580, -327, -329, -330,
	2, 29, 136, 577, 2, -450, 2, -451, -455, -209,
	257, -454, 577, -452, 575, -279, 338, -542, 425, -538,
	-539, -258, -278, -295, 4, -511, -513, 579, -331, 577,
	119, 485, 79, 225, -386, 577, -249, 29, 337, 501,
	582, -328, 380, -431, 577, 337, 183, 340, 61, 288,
	2, 2, 2, 2, 2, 210, -249, 485, 118, 2,
	255, 2, 2, 2, 2, 2, 2, 2, -349, 210,
	2, -279, 538, -349, 210, 2, -349, 210, 2, -392,
	2, 88, -263, 210, 2, -249, -287, 210, 2, -282,
	-284, -291, 210, 2, -289, -249, -509, 210, 2, -508,
	-503, 10, -502, 5, 4, -511, -515, -512, -514, 78,
	-419, 2, -126, 2, 61, -249, 538, 2, 2, 448,
	2, 577, -137, 72, 505, 44, 443, -406, 2, -407,
	-245, -246, -247, -462, -248, 243, 379, 388, 556, 129,
	322, 552, -496, -587, 183, 560, 501, -496, -357, 579,
	2, 2, 2, 2, 2, 2, -455, 210, -279, 2,
	-276, -499, 4, -511, -515, -512, -516, 29, 32, 33,
	34, 36, 38, 39, 40, 41, 58, 66, 67, 73,
	77, 79, 88, 94, 103, 110, 111, 113, 112, 114,
	115, 116, 125, 129, 132, 136, 137, 141, 144, 148,
	165, 167, 180, 182, 183, 198, 201, 204, 217, 230,
	235, 237, 257, 261, 268, 276, 277, 322, 327, 333,
	337, 338, 342, 343, 362, 378, 394, 415, 438, 445,
	462, 479, 485, 495, 501, 503, 510, 518, 519, 527,
	529, 537, 542, 543, 544, 545, 546, -517, 2, -455,
	210, 2, -281, 210, -455, -284, 2, -263, 2, -275,
	-499, 2, -300, 210, -279, -280, -284, -282, 2, -289,
	2, -508, 210, 2, 538, 237, 501, 582, -347, -292,
	-293, -495, 8, -340, -249, 579, -419, 2, -126, -110,
	2, 180, -419, 210, 2, -126, 210, 2, -419, 210,
	2, -126, 210, 2, -582, 2, -508, 210, -249, 2,
	288, 2, 2, 508, 2, 99, 485, 118, 2, 408,
	-594, 427, 512, 2, 2, 2, 2, 2, 2, 2,
	485, -268, 2, -249, 180, -289, 210, -290, 2, 439,
	-604, 391, -508, 210, 2, 538, -282, 210, 2, -282,
	225, 239, -263, 210, 2, 490, 488, 490, 488, 183,
	2, 237, 2, 237, 2, -456, 2, -457, -451, -458,
	575, 338, -466, 2, -465, -502, 534, -99, 577, -99,
	577, 443, 577, -508, -279, -279, -419, 2, -126, -110,
	2, -419, 2, -126, 2, -123, -508, -122, 577, 183,
	-419, 2, -126, -110, 2, -419, 2, -126, 2, -202,
	180, 2, 119, 485, -177, 2, 180, 529, 2, 8,
	2, 217, -508, 434, 387, 172, 2, 448, 2, 449,
	75, -393, 552, 75, 183, 2, 183, 2, -376, 2,
	546, 183, 2, 2, -568, 2, 337, 183, 2, 183,
	2, 183, 2, 183, 2, 183, 2, -176, 444, 506,
	484, 384, 245, 2, -126, 543, -110, -419, 543, 2,
	-586, 180, 432, -419, 2, 504, 254, 156, 183, -376,
	2, 183, 2, 183, 2, 5, 2, 385, 467, 2,
	243, 379, 467, 2, -279, -597, 2, 485, 538, 439,
	2, 2, 89, 90, 183, 2, 183, 2, 197, 183,
	2, 183, 552, 2, -368, -455, -405, -406, -405, 501,
	-334, -336, -177, 448, 2, -214, -366, -216, 180, -396,
	-397, -217, 268, 167, 333, -218, -375, 29, 136, -375,
	-375, 61, 578, 578, 11, 12, 77, 42, 568, 569,
	570, 571, 178, 572, 573, 566, 567, 565, 558, 559,
	563, 249, 250, 96, 562, 560, 87, 282, 426, 168,
	169, 170, 171, 405, 223, 35, 224, 14, 15, 16,
	34, 342, 267, 553, 214, 452, 561, 17, 18, 19,
	240, 242, 324, 51, 217, -257, -302, -419, -419, -419,
	-419, -419, -419, -419, 349, 577, -362, -414, 575, -209,
	577, 577, 577, -495, -209, -419, -433, 578, -354, 577,
	-209, -433, -428, 577, 424, 575, 577, -436, -419, 5,
	5, 5, 577, 579, -549, 547, 180, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 375, -477, 577, -476, 577, -476, -476, 539,
	-474, 577, 555, 548, 577, -474, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 539,
	582, -546, -331, 577, -358, -460, -419, 570, -358, -358,
	337, -351, -419, 107, -379, 246, 307, 184, 264, 419,
	231, -416, 581, -416, -444, 555, -209, -452, -278, -209,
	-454, 577, -450, -444, -100, -495, -84, -97, -105, -126,
	-139, -181, -182, 570, -279, 577, 183, 577, 579, -499,
	183, -340, -263, -279, -294, -295, -300, 135, -351, -564,
	513, 433, -340, -252, 39, -430, -469, -470, -520, 581,
	-519, -472, -482, -478, -481, 365, 369, -501, 55, 535,
	-484, 236, 4, -511, -513, 233, 234, 459, 52, 389,
	175, 124, 123, 330, 57, 497, 498, 499, 500, 187,
	188, 59, 536, 470, 70, 71, -564, 513, 433, -340,
	180, -506, 2, -505, -504, 116, 445, -502, 5, 2,
	151, 2, 2, 2, -249, -228, 582, 65, 413, 151,
	-349, 210, -228, 151, -228, 151, -301, 210, -300, -228,
	151, -228, 582, 151, -228, 582, 151, 579, 582, 151,
	-506, 2, -392, -498, -351, 39, -406, 2, 125, -504,
	-607, 582, 266, -304, 281, 321, 206, 338, 550, 331,
	129, -507, 5, 4, -429, -441, 125, 274, 236, -489,
	-491, 8, -490, 9, -492, 568, 569, -497, -496, 109,
	579, -499, -225, 406, 446, 352, -224, 24, 30, 140,
	227, 310, 532, 157, -317, 228, -314, 356, 151, 463,
	522, -575, -576, 430, 492, 493, 91, 331, 446, 352,
	406, 151, -372, -374, 39, 117, 310, 351, 62, 220,
	286, 287, 465, 541, 151, 446, 352, 406, 352, 24,
	140, -240, -237, -576, 100, 406, 477, 378, -576, -227,
	463, 522, -575, -576, 430, 406, -226, -319, -314, 356,
	151, 581, 24, 140, 406, 446, 352, -590, -591, 30,
	406, 352, -572, -543, 546, 151, -455, 210, -583, -122,
	258, 5, 10, -508, -122, -347, 582, 582, -499, 570,
	432, 431, 151, 151, 151, 151, 180, 322, 2, 2,
	2, 2, 2, 185, -578, -595, 2, 2, -279, 210,
	-333, 337, -567, -348, 485, -279, 322, 44, -281, 210,
	2, -284, 538, -572, 322, -283, 210, -279, 39, 577,
	322, 2, -392, 2, 225, -543, 322, -456, -297, -279,
	-451, -297, 446, -272, 39, -416, -279, 578, 582, -466,
	-466, -508, -190, 546, 183, 103, 577, 577, -202, -463,
	582, -462, 217, -509, -123, -508, 409, -508, -567, -263,
	2, -279, 2, 485, 247, -508, -190, 217, -508, -508,
	-508, -498, 29, 449, 2, -176, 444, 506, 90, 449,
	2, -279, 485, 119, 225, 81, -249, -570, 180, -565,
	420, 433, 513, -564, -279, 119, -279, 119, -279, 119,
	-279, -279, 2, 2, 2, 2, 2, 86, 86, 2,
	47, -586, 180, 2, 504, 2, 504, 2, -249, -249,
	-249, 466, 266, -279, -598, 183, 180, 485, 225, 485,
	225, 119, 183, 75, 119, 29, 485, -228, 582, -253,
	-214, -366, -498, -367, -366, -215, -214, -217, 180, 388,
	523, 310, 450, 251, -397, -396, 29, -419, -401, 174,
	309, -419, -399, -421, 568, 569, -490, -492, -350, 331,
	-208, -208, -208, -337, -446, -419, 378, 225, -471, -469,
	-469, -277, -499, 497, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, 267,
	214, 452, 51, 217, -419, 501, -419, -419, -419, -419,
	304, 322, 327, 510, 165, 520, 136, 331, -610, 479,
	41, -426, -209, -355, 577, -440, 36, 462, 29, -433,
	577, 2, -414, -419, -415, -352, -351, -351, 578, 537,
	29, 136, 570, 2, 578, 582, 39, 578, -419, -352,
	-432, -428, -351, -439, -438, 543, -387, -388, 551, 291,
	122, 208, 289, -389, 437, -493, 8, -499, 570, -550,
	173, 201, 577, 578, 2, 578, 2, 578, -419, 2,
	578, -419, 2, 578, -419, 2, 578, -419, 2, 578,
	2, -419, -419, -419, -419, -419, -419, -419, -351, 8,
	-493, -493, 497, 497, -493, -493, -493, -485, 365, 366,
	367, 368, 269, 270, 271, 272, 369, 370, 371, 372,
	296, 297, 298, 299, 292, 293, 294, 295, 300, 301,
	302, 303, 192, 193, 194, 195, 188, 189, 190, 191,
	-485, -381, 2, -487, -351, 4, 551, 291, 122, 208,
	289, 437, 5, -381, 2, -382, 2, -419, -351, -383,
	-420, -421, 568, 569, 561, -433, -384, 2, -419, -352,
	-419, 58, 261, 503, -385, -419, 183, -351, -351, 2,
	-351, 2, -547, 39, -351, -343, 582, 183, 39, 4,
	-343, -343, 577, 578, 582, -380, 205, 285, 280, 239,
	-380, -450, -379, 246, -377, 347, -377, -377, -444, -264,
	575, 583, -499, -444, -443, -442, 39, -272, 344, -444,
	-444, 579, 578, -443, 576, -562, 577, 580, 580, 580,
	580, 580, -279, 577, -351, -499, 579, 468, 578, 240,
	240, 240, 240, 425, 578, 501, -566, -287, -291, 546,
	-99, 339, 578, 582, -342, 38, 575, 579, -493, 2,
	2, -488, 539, 577, 577, -388, 577, 183, -566, -291,
	-341, 582, 501, -249, 2, -279, -349, -228, 151, -349,
	-349, -228, 582, 151, -263, -282, -287, -289, -291, -249,
	-508, -509, -228, -283, -587, 578, 505, -407, -303, 388,
	461, 407, 441, 481, 8, 9, 8, 9, 582, -499,
	582, -588, 94, 501, 79, 433, -242, 275, 398, 310,
	485, 424, 501, -410, 210, 79, -521, -266, 94, -522,
	-249, 73, 519, 378, 182, 149, -588, 94, 378, -588,
	94, 2, 227, 94, 446, 466, 29, 61, -455, 42,
	42, 29, -126, 262, 183, 552, 485, 225, 433, 501,
	501, -455, -374, -469, 117, 286, 287, 61, -494, -489,
	568, 569, -494, 61, -494, -494, -494, 546, -281, -455,
	433, 501, 501, 501, 397, 397, 501, 501, -608, 560,
	397, 582, 42, 42, 29, -126, 262, 183, 501, -300,
	-264, 533, 43, 533, 43, 533, 501, 43, 433, 501,
	582, 43, 501, 501, -573, -254, 106, 316, 279, 317,
	98, 313, 97, 312, 104, 314, 105, 315, 540, 325,
	64, 311, 290, 318, -255, -256, 358, 531, -508, 446,
	352, 406, 151, 217, -463, 217, -463, -292, -249, 579,
	-126, -419, -419, -126, -419, -126, 47, 151, 2, -604,
	255, 577, -307, 322, 183, -340, -464, 237, 582, -348,
	151, -505, -373, -372, 322, -283, 210, 2, 151, -331,
	322, 145, 577, 386, 2, 151, -265, 210, -250, -249,
	-392, -231, 489, 151, -370, 529, -402, -126, 577, 125,
	39, -402, -359, -360, -461, -361, -266, 577, -272, -416,
	-99, -465, 578, 578, 578, -189, 341, -188, -249, 5,
	-202, 529, -306, -411, -410, -525, -526, -521, 267, 225,
	519, 239, 166, -332, -267, -266, 118, -196, 546, -122,
	-123, 578, -463, 217, 475, -190, -190, -463, -463, -279,
	180, -508, -190, -190, -190, 2, 2, 2, -376, -279,
	-263, -300, -279, 579, -340, -340, -291, -287, -376, -263,
	-376, -263, -376, -263, -126, -419, 2, 443, 180, 180,
	579, -376, 386, 119, 485, 356, 225, -279, -300, -279,
	-300, -263, 119, -263, 120, -279, -455, -367, -215, 338,
	251, 450, -399, -400, -421, 424, 425, -400, 424, 425,
	8, 9, 8, 9, -219, 454, 326, -349, 582, -222,
	40, 132, 251, -279, 552, 147, -419, -419, 501, -610,
	479, -426, 147, -419, 304, 327, 510, 165, 520, 136,
	331, 183, 577, -420, -420, 578, -353, -419, -419, 576,
	585, 578, -336, 582, -334, -419, -351, -351, 578, 579,
	-351, -340, 576, 576, 582, 578, -437, -438, 141, -419,
	501, 501, 501, 501, 577, 578, 579, -555, 348, 577,
	577, -419, 578, 578, 578, 578, 39, 582, 582, 582,
	578, 582, 582, 582, 578, 578, 578, 582, 578, 552,
	552, 578, 578, 578, 578, 582, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	578, 582, 578, 183, 578, 578, -390, 362, 578, 11,
	12, 568, 569, 570, 571, 178, 572, 573, 566, 567,
	565, 558, 559, 560, 87, 282, 426, 14, 15, 16,
	240, 217, -420, -420, -420, 578, -424, -425, 183, 180,
	39, -385, -385, -385, 578, 183, -351, 578, 578, 577,
	-548, 284, 322, 578, -413, -412, 544, -460, -344, 2,
	-450, -274, -499, -413, -413, -351, -419, 246, 246, -378,
	529, 337, -380, -450, -443, -495, -418, -417, 181, 40,
	132, 319, 213, -443, -272, -331, -443, -443, -499, -444,
	-444, -442, 578, -563, -495, 578, -345, -453, -542, -336,
	579, -499, -199, -543, -178, 5, 327, -178, -178, -178,
	-340, 501, 501, 25, 363, -469, 575, 576, 8, -499,
	577, -493, -493, -493, -340, 183, 183, 183, -505, -505,
	2, -228, -349, -228, -228, -300, -301, -228, -228, -228,
	-371, 546, -496, -406, 517, 84, 388, 497, -496, -224,
	406, -266, -266, -279, -288, -249, 196, 398, 26, 398,
	266, 266, -505, 322, -410, 210, -230, 322, -469, -273,
	-249, 577, -394, 548, 251, 251, 529, -266, -273, 251,
	210, -266, 210, -273, 2, -273, -574, 388, 332, -419,
	61, -315, 273, 386, 323, -225, 406, 446, 352, -126,
	-126, -126, 577, -587, 529, 135, -279, -300, -279, -288,
	-505, -283, 446, 352, 406, 320, -294, -494, -494, -372,
	446, 352, 406, -288, -505, -281, -505, -236, -249, -236,
	433, -263, 397, 552, 46, -608, -226, -126, -126, -126,
	577, -264, -227, 406, 5, 210, -266, 5, -266, 210,
	5, -249, -266, -288, -505, -591, 24, 140, -266, -288,
	-505, -254, -508, 327, 525, -572, 433, 501, 501, -455,
	-122, -193, 546, -122, -187, 221, 570, -569, -249, 538,
	-249, -305, -308, -306, -266, -205, -206, 548, 546, 151,
	-298, -279, 575, -190, -508, -279, -289, -290, 151, -331,
	322, -508, 39, 151, 577, 2, 2, -282, 337, 322,
	-265, 210, -232, 142, -608, -263, -413, -344, -369, -404,
	415, 337, -332, 534, -272, -369, -346, 582, 183, 560,
	579, -332, -459, 570, -99, -99, -190, 582, 577, 560,
	560, 577, -508, -508, 578, 582, -230, -279, -265, 225,
	225, -271, -250, 578, 582, 579, 577, -198, 341, -197,
	143, 253, 238, 455, 456, 457, 458, 134, -463, -196,
	-123, 183, 183, -60, 546, 485, -190, 581, -249, -376,
	-376, -376, 443, 443, -249, -275, -263, -279, -276, -300,
	180, 180, -263, 523, -400, 338, 278, -446, -223, 554,
	-279, 581, -419, -419, 147, 147, -419, -420, -420, -419,
	147, 183, 577, -419, -430, 34, 34, 578, 582, -415,
	-419, 578, 537, -336, -336, 578, 570, -499, 581, 578,
	-428, 144, -419, 495, 291, 208, 289, -389, 289, -389,
	-389, -493, 5, -499, 570, -556, -269, 577, -249, 544,
	-335, 343, 578, -471, -469, -419, -419, -419, -419, -419,
	-493, -474, -474, -489, -489, -419, -424, -419, -471, -469,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, 136,
	322, 331, -420, -425, -424, -419, -419, -469, 578, 578,
	578, -351, -99, 577, 284, -363, 201, -419, -463, 582,
	-363, -363, 578, -450, -450, 577, -419, 246, 576, 582,
	584, 560, -331, 579, -442, -443, 576, 578, 582, 578,
	582, -403, 39, 578, -499, -413, -201, -200, 133, 54,
	-340, -340, 340, 5, 8, 575, 576, 579, -493, 578,
	578, 578, -340, -340, -340, -228, -228, 118, 310, -419,
	501, 501, 61, 501, 42, 320, -236, 378, 424, 26,
	398, 398, 151, 322, 531, -527, -522, 149, -419, 577,
	225, 577, 577, 2, -221, 140, 446, -589, 2, 529,
	151, -228, 151, -228, 550, -315, 577, 577, 501, 433,
	-242, 501, 546, -351, -419, -191, 125, -498, -576, 581,
	-576, 581, 433, 501, 501, 433, 501, 501, 546, 164,
	164, 552, -236, 546, -351, 501, -473, 49, 27, 322,
	-282, -228, 151, 501, 501, 513, 446, -508, 327, -288,
	-505, -283, 446, 352, 406, -463, -195, 341, -194, 143,
	417, 134, 253, -463, -193, 183, 237, -283, 2, 578,
	578, 582, -528, 39, 335, 335, 577, -279, -80, 546,
	-462, -495, 44, -281, 39, 151, -572, -126, -283, -467,
	-468, 5, 39, -279, 151, 337, 322, -233, 260, -608,
	-503, -543, -336, -369, -358, 323, 92, 578, -413, -360,
	-344, -419, 2, 578, -188, -189, -508, -508, -508, -190,
	-202, -202, -411, -309, 577, -265, -250, 577, -202, -267,
	2, -509, 582, 577, 560, 560, 560, -196, -463, -122,
	-126, 341, -279, 570, -376, -321, -320, 356, 331, -321,
	424, 424, 338, 174, 256, -222, -264, -419, -419, 147,
	34, 34, -419, -419, -430, 578, -419, -419, -351, 576,
	5, -419, 578, 578, 8, -419, 578, 579, -557, -249,
	-419, 578, 61, 578, 578, 582, 582, 578, 578, 578,
	578, 578, 578, 578, -425, 183, 136, 331, 577, 578,
	578, -99, -427, 204, 61, -450, -427, -427, -378, -340,
	-450, -417, -264, 575, -499, -495, -453, 577, 579, -200,
	560, 576, 2, 575, -499, 578, 118, -266, -266, 485,
	424, 320, -236, 378, 424, 397, 266, 26, 26, -410,
	151, -529, 94, -531, 77, 166, 103, 322, 327, 519,
	378, 73, 125, 394, -600, 39, 557, 578, -338, -447,
	-542, 577, -249, -338, -340, 322, 473, 125, 322, 125,
	118, 513, 80, -266, -273, -340, -340, -279, -288, -505,
	158, 578, 582, 560, 2, 570, 570, -288, -505, -283,
	-288, -505, -281, 354, 164, 158, 578, -264, 5, 5,
	151, -261, 77, -266, 5, -266, -282, 118, 433, 501,
	501, -193, 582, 577, 560, 560, -193, -509, -122, -331,
	-322, 227, -266, -526, -523, -524, 378, -530, -532, 166,
	378, -126, 2, -204, -203, -249, 5, 577, -307, 341,
	576, -505, -373, -126, -283, -331, 578, 582, 145, -395,
	529, -264, -279, 151, -234, 259, -608, -503, -231, -398,
	-396, 137, 577, 337, -126, -336, 560, 578, 578, 118,
	118, 219, 150, -338, 577, 577, -340, 118, 578, -197,
	-198, -508, -122, -508, -196, -61, -62, 225, 94, 361,
	-276, 485, 225, 577, 577, -222, -419, -419, -419, 578,
	-336, -499, 570, -551, 356, 578, -446, -419, -419, -420,
	183, 577, -430, 578, -552, 545, -419, -364, -365, -419,
	423, 108, 202, -552, -552, 578, -495, 2, -508, 575,
	2, 217, 39, 397, 266, 39, 501, 39, -410, -273,
	-277, -270, -249, 166, 210, 327, 542, -394, 251, 577,
	-420, -279, 577, 2, 31, -601, 129, 230, 578, 582,
	-448, -260, -249, -419, -448, 578, 578, 327, 327, -419,
	-469, 577, -228, -228, 578, 578, -419, 501, -498, 101,
	-496, 2, -576, -263, -419, 501, 5, -228, -277, -228,
	-228, -261, 513, -288, -505, -283, -194, -195, -508, -122,
	-193, 39, -312, 229, 2, -528, 251, -270, 251, -599,
	546, 578, 582, 560, 560, -305, -205, -81, -82, 502,
	-462, -331, 39, 5, 577, 577, -249, 337, 577, -264,
	-244, 93, -608, -503, -232, -369, 323, -340, 94, -398,
	-426, -190, 577, 577, -310, 82, 95, 126, 209, 186,
	226, 466, 471, 29, -310, 578, -338, -338, 578, 577,
	-190, 578, 582, 29, 577, 29, 577, -279, -300, -351,
	-351, 578, -336, 61, 582, 578, 578, -420, -430, 578,
	-553, -554, -269, 582, 577, 577, 447, 576, 2, -236,
	378, -249, 39, -249, -236, 378, -249, -531, -270, 322,
	529, -419, -251, 577, -419, 39, 230, 130, 215, -409,
	-602, 102, 474, 218, -447, -222, 578, -408, 529, 394,
	-261, -338, 577, 577, 577, 560, 183, 577, -473, -228,
	-282, 578, -581, 392, -126, -316, -317, 217, 577, -311,
	337, 118, 310, -203, -496, -496, 578, 39, -82, 9,
	39, -126, -467, -338, -279, -338, 337, -238, -237, 268,
	-503, -233, 578, -273, -369, -509, -509, -408, 578, 578,
	-509, -62, -340, -340, 578, 578, -558, 386, 425, 203,
	-351, -337, 578, 582, 39, -365, 2, 2, 2, 397,
	-249, 397, 151, 205, 578, -533, 283, -249, 578, 130,
	215, -312, 577, -223, -448, -312, 205, -279, -577, 529,
	578, -324, -323, -320, -326, -325, -320, -351, -496, 101,
	354, -351, -261, -584, 184, -583, 5, 10, -205, 354,
	-339, -449, -266, 83, 118, -322, -126, -126, 578, 578,
	-395, 578, -279, -235, -510, 397, 399, -608, -234, -413,
	578, 578, -409, -408, -206, 546, 578, 578, 578, 578,
	-559, -560, 51, 516, 109, -419, -559, -559, -554, -556,
	166, 546, -534, -537, -536, 337, 453, 184, 355, 578,
	473, 541, -318, -314, -340, 546, -331, -419, -408, 578,
	582, 534, 578, 582, 534, 578, 183, 578, -228, -192,
	546, 47, -311, -279, 578, 582, 377, 131, 140, -312,
	-599, -408, 577, -409, 577, -241, -240, -608, -489, -244,
	137, -190, -190, -312, -409, -413, -190, -561, 149, -560,
	374, 179, 424, 374, 179, -561, -561, -270, 56, -536,
	337, -537, 337, 523, 131, -601, 578, 56, -533, -312,
	-323, 217, -325, 183, 354, 431, -583, 31, -243, -242,
	577, -449, 425, 425, 2, -316, -311, -409, -338, -312,
	-338, -239, -340, -238, 323, 523, -318, -312, 109, 201,
	496, 310, 34, 560, -535, 310, 413, 65, 446, -535,
	-413, 560, -534, 577, 577, 341, -340, 2, -205, -312,
	578, -318, 578, -235, 446, -206, -318, 424, 345, -560,
	-419, 23, 327, 125, -419, -601, -351, -351, -189, 577,
	578, -311, -318, -408, -206, -409, -241, -359, -413, -206,
	578, 578, -189, -229, 65, 413, -243, -206, -409, -413,
	-312, -413, -413, -313, -314, 501, 578, -413, -312, -318,
	577, -318, -206, -351, -206, -413, 578, -413, -313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 507, 508, 510, 511, 512, 514,
	515, 517, 519, 521, 522, 523, 525, 526, 528, 529,
	530, 531, 532, 534, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	598, 600, 0, 1298, 1300, 1302, 1304, 0, 741, 0,
	36, 37, 0, -2, 305, 307, 309, 0, 335, 337,
	338, 340, 342, 344, -2, 0, 442, 443, 445, 447,
	-2, 0, 927, 929, 0, 587, 589, 0, 932, 934,
	0, 0, 609, 610, 0, 1405, -2, 603, 605, 607,
	672, 674, 676, 678, 680, 682, 684, 686, 688, 689,
	691, 693, 695, 697, 699, 700, 702, 704, 706, 707,
	709, 710, 712, 714, 716, 718, 720, 722, 724, 726,
	728, 730, 732, 734, 736, -2, 738, -2, -2, 0,
	-2, -2, -2, 1316, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 393, 394, 396, 398, 400, 402, 405,
	407, 409, 1463, 449, 451, 453, 455, 457, 459, 461,
	0, -2, 1477, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 99, 100, 101, 102,
	103, 104, 105, 106, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 97,
	70, 0, 0, 1436, 1438, 1440, 1442, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 509, 513, 516, 518, 520, 524, 527, 533,
	535, 537, 494, 495, 498, 2141, 2158, 2159, 2160, 2163,
	2164, 2165, 2166, 2167, 2168, 2603, 2685, 2686, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 496, 497, 1104, 0, 561, 559, 2126, 562, 2407,
	564, 566, 436, 437, 438, 439, 440, 441, 0, 580,
	572, 1475, 581, 583, 584, 585, 586, 556, 554, 0,
	580, 2194, 578, 1296, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 372, 1153, 1154, 1155,
	1281, 1282, 2451, 1323, 0, 215, 599, -2, -2, -2,
	2568, -2, 631, -2, 638, 2572, 2453, 643, 0, 645,
	-2, 648, 1299, 1301, 1303, 739, 740, 2144, 0, 0,
	0, 0, 0, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 225, -2,
	-2, -2, -2, 0, 0, 2497, 2245, 2094, 2160, 2097,
	2092, 306, 308, 310, 311, 0, 0, 0, 0, 0,
	0, 336, 339, 341, 343, -2, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 980,
	981, 1211, 0, 0, 0, -2, 444, 446, 499, 500,
	0, 1464, 1464, -2, 0, 0, 0, 0, 280, 271,
	928, 930, 931, 0, 0, 0, 0, 588, 590, 0,
	0, 253, 933, 935, 936, 0, 0, 0, 0, 0,
	282, 0, 0, 604, 606, 608, 673, 675, 677, 679,
	681, 683, 685, 687, 690, 692, 694, 696, 698, 701,
	703, 705, 708, 711, 713, 715, 717, 719, 721, 723,
	725, 727, 729, 731, 733, 735, 737, 747, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 835, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	909, 0, 750, 752, 753, 754, 0, 813, 833, 834,
	843, 0, 1144, 1465, 1325, 1306, 1320, 1325, 1308, 1309,
	1310, 1311, 1312, 1317, 1319, 1313, 1314, 1315, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 395, 397, 399,
	401, 403, 406, 408, 410, -2, 1434, 1435, 450, 452,
	454, 456, 458, 460, 462, 591, 0, 593, 0, 751,
	-2, 0, 1469, 1469, 1469, 0, 0, 1435, 1433, 0,
	596, 597, 652, 653, 1737, 0, 0, 0, 0, 0,
	0, 0, 1991, 1823, 0, 654, -2, 1854, 1856, 2543,
	2568, 1990, 1858, 1859, 1860, 1861, 1862, 0, 1864, 1865,
	1866, 1867, 1868, 1869, 0, 1871, 0, 1876, 1877, 1878,
	0, 2550, 2071, 2154, -2, 0, 0, 2556, 2150, 0,
	1957, 1894, -2, -2, 2177, 2156, 1669, 1670, 1671, 1672,
	1673, -2, -2, 2586, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 0, 2531, 2551, 2552, 2557,
	2559, 2553, 2540, 1919, 2257, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1696, 1705,
	-2, -2, -2, -2, -2, -2, -2, 2544, 2545, 2562,
	2565, 2571, 2576, 2577, 2549, 2558, 2585, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 1697, -2, -2, -2, -2, 1452, 2420,
	1455, 1104, 1453, 1437, 1439, 0, 1441, 0, 0, 0,
	1446, 1472, 1470, 0, 1521, 1450, 1451, 1539, 1539, 1563,
	0, 1544, 0, 1563, 1464, 1590, 0, 1550, 2443, 1895,
	1896, 0, 2160, 2155, -2, -2, 2583, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 563, 565, 0, 0,
	0, 579, 1474, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 378, 379, 2551, 0, 0, 0, 384,
	0, 386, 387, 388, 389, 390, 391, 392, 184, 2551,
	467, 492, 0, 184, 2551, 470, 184, 2551, 473, 0,
	476, 1209, 184, 2551, 479, 2122, 184, 2551, 482, 484,
	2130, 184, 2551, 488, 2137, 2135, 489, 2551, 491, 285,
	283, 284, 2173, 2174, 2181, 2182, 2183, 2184, 2584, 2586,
	1292, 1293, 1294, 1295, 0, 1322, 1210, 601, 602, 0,
	626, 0, 630, 2539, -2, 0, 2462, -2, 634, 1326,
	1330, 1331, 1332, 1333, 1334, 0, 0, 0, 0, 1339,
	0, 0, 640, 0, 0, 627, 628, 646, 649, 0,
	742, 743, 744, 745, 746, 69, 0, 2551, 1590, 71,
	0, 2116, 2185, 2186, 2187, 2188, 2189, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 75, 0,
	2551, 80, 0, 2551, 0, -2, 91, 0, 98, 0,
	2119, 107, 0, 2551, 0, 2091, -2, 0, 196, 0,
	955, -2, 2551, 1152, 0, 0, 0, 0, 918, 2088,
	2093, 919, 2112, 920, 2098, 0, 312, 313, 314, 315,
	316, 0, 317, 2551, 319, 320, 0, 322, 323, 2551,
	325, 326, 0, 328, 0, 236, 237, 2551, 347, 348,
	0, 350, 351, 0, 353, 0, 0, 0, 357, -2,
	373, 0, 370, 360, 361, 363, 364, 365, 366, 367,
	0, 414, 412, 2127, 0, -2, 2551, 0, 952, 0,
	0, 1189, -2, 2551, 1149, 0, 1196, 2551, 1192, 0,
	-2, 0, 1462, 2551, 1343, 984, 985, 986, 987, 1602,
	433, 0, 1370, 0, 1372, 0, 1391, 1596, 1539, 0,
	0, 1601, 0, -2, 550, 2143, -2, 502, 0, 503,
	0, -2, 0, 297, 0, 0, 937, 938, 939, 940,
	941, 944, 945, 946, 947, 1576, 254, 256, 0, 0,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 0,
	0, 611, 0, 0, 748, 749, 0, 0, 759, 760,
	761, 0, 297, 2454, 2416, 2278, 768, 0, 771, 774,
	-2, 0, 0, 0, 0, 778, 0, 783, 784, 785,
	0, 0, 789, 791, 926, 793, 0, 0, 795, 0,
	799, 0, 802, 0, 804, 0, 806, -2, -2, -2,
	814, 815, -2, 819, -2, 0, 822, 824, 0, 826,
	-2, 0, 835, 831, 832, 0, 0, 0, 0, 851,
	852, 0, 861, 0, 864, 865, 866, 0, 868, 869,
	0, 871, 872, 873, 874, 0, 876, 877, -2, -2,
	881, 883, 0, 890, 0, 896, 0, 900, 0, 0,
	908, 0, 755, 756, 184, 1594, 1305, -2, 1307, 0,
	-2, 0, 592, 0, 595, 1494, 1420, 1417, 0, 1491,
	1492, 1421, 0, 0, 0, 1428, 0, 1467, 1468, 0,
	0, 0, 1407, 1408, 0, 0, 0, 0, 1996, 1997,
	1998, 1999, 2000, 2001, 2004, 2005, 2002, 2003, 2006, 2007,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 2011,
	0, 0, 2013, 0, 2015, 0, 0, 0, 0, 0,
	0, 1802, 1804, 2079, 0, 0, 2012, 1742, 1743, 1744,
	1745, 1746, 1781, 1782, 0, 0, 1855, 2076, 2075, 1857,
	0, 2027, 0, 1870, -2, 0, 1991, 2022, 0, 0,
	1879, 1880, 1881, 0, 0, 2027, 0, 0, 2070, 1891,
	1892, 1734, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 1682, 0, 1684, 0, 1685, 1686, 1693,
	1706, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 2051, -2, 0, 0, 0, 0, 1698,
	0, 1454, 0, 0, 1525, 2080, 2084, 2085, 1525, 1525,
	0, 0, 2028, 1587, 1587, 0, 0, 1582, 1582, 1582,
	1580, 1563, 0, 1563, 1573, 0, 1563, 1563, 0, -2,
	1544, 0, 0, 1573, 0, 1557, 538, 540, 542, 544,
	545, 546, 548, 1591, 1592, 0, 0, 0, 0, 2161,
	0, 0, 0, 0, 0, 2146, 0, 0, 0, 0,
	2507, 2453, 568, 582, 1464, 0, 2030, 1617, 1621, 0,
	1623, 1624, 1625, 1626, 1627, 0, 0, 1618, -2, 1694,
	1696, 1717, 2178, 2179, 2180, 1677, 1678, 1679, 1680, 1681,
	1689, 1676, 1676, 1676, 1687, 1716, 1708, 1716, 1712, 1662,
	1663, 1664, 1699, 1700, 1701, 1702, 0, 2507, 2453, 574,
	0, 0, 1402, 200, 202, 203, 204, 205, 206, 374,
	0, 381, 382, 383, 0, 463, 0, 182, 183, 0,
	184, 2551, 468, 0, 471, 0, 184, 2551, 2086, 477,
	0, 480, 0, 0, 486, 0, 0, 0, 0, 0,
	184, 1404, 0, 0, 0, 0, -2, 636, 641, 642,
	0, 1328, 0, 1335, 663, 664, 665, 1337, 1338, 0,
	1340, 639, 666, 667, 668, 669, 670, 671, 0, 2100,
	2101, 2102, 2103, 2106, 2107, 0, 0, 637, 656, 644,
	0, 650, 108, 1278, 0, 0, 147, 0, 1278, 1278,
	0, 0, 0, 0, 171, 0, 1023, 0, 0, 0,
	0, 0, 132, 143, 120, 121, 0, 0, 0, 0,
	0, 0, 81, 1126, 0, 1129, 0, 0, 0, 0,
	0, 0, 0, 1142, 0, 0, 0, 0, 0, 0,
	0, 95, 96, 131, 0, 0, 1367, 0, 126, 110,
	0, 0, 0, 133, 145, 0, 175, 177, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 207, 0,
	0, 0, 1150, 0, 1461, 0, 0, 2551, 0, 1576,
	2324, -2, -2, 254, 1576, 917, 0, 0, 2161, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 352,
	354, 355, 356, 0, 1188, 0, 362, 404, 1075, 2551,
	0, 0, 431, 426, 0, 428, 0, 0, 1125, 2551,
	1123, 2131, 0, 1147, 0, 1104, 2551, 2129, 0, 0,
	0, 1197, 2170, 1206, 1210, 1357, 0, 435, 0, 1373,
	1375, 0, 0, 1597, 0, 1599, 1539, 1464, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 260,
	0, 1575, 0, 0, 1576, 254, 2431, 297, 297, 1576,
	613, 1576, 615, 0, 0, 762, 763, 0, 297, 297,
	297, 769, 770, 772, 773, -2, -2, -2, 891, 775,
	776, 858, 0, 0, 0, 857, 788, 792, 0, 911,
	2439, 2453, 2507, 924, 858, 2245, 858, 2245, 858, 2245,
	803, 805, 808, 846, 854, 818, 823, 0, 0, 828,
	836, -2, 0, 838, 0, 840, 0, 842, 858, 859,
	862, 867, 870, 875, 0, 892, 893, 0, 0, 0,
	0, 0, 0, 903, 904, 0, 0, 1143, 0, 1318,
	1494, 1420, 594, 1411, 1493, 1412, 1419, 1422, 0, 0,
	1424, 0, 1426, 0, 1489, 1490, 1497, 1498, 0, 1508,
	1509, 1501, 0, -2, 0, 0, 1504, 1505, 1430, 0,
	1447, 1448, 1449, 1478, 1481, 1225, 0, 2685, 1738, 1612,
	1739, 1740, 2115, 0, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, -2, -2, -2, -2, -2, -2,
	-2, -2, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, -2, -2, -2, 1779, 1780, -2, 2014,
	2016, 0, 2079, 0, -2, 0, -2, -2, -2, -2,
	1799, 0, 1801, 1806, 1808, 1810, 0, 0, 0, 0,
	2078, 1820, 2062, 2063, 0, 0, 1993, 1994, 1995, 1805,
	0, 1824, 2077, 2074, 0, 0, 2026, 1477, 1883, 0,
	0, 0, 0, 1890, 1875, 2024, 0, 2023, 0, 0,
	0, 2034, 0, 2069, 2065, 0, 2113, 1733, 1720, 1721,
	1722, 1723, 1724, 1725, 1735, 0, 2110, 2147, 2153, 1967,
	0, 0, 0, 1920, 1921, 1922, 1923, 1924, 0, 1926,
	1927, 0, 1929, 1930, 0, 1932, 1933, 0, 1935, 1936,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 1634, 0, 0, 0, 1638, 0, 0, 0,
	1642, 0, 0, 0, 1646, 0, 0, 0, 1650, 0,
	0, 0, 1654, 0, 0, 0, 1658, 0, 0, 0,
	0, 0, 1939, 0, 2037, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1941, 0, 1943, 2028, 2048, 0,
	0, 1825, 0, 0, 0, 1991, 0, 1946, 2028, 2056,
	0, 0, 0, 0, 0, 2028, 0, 2061, 0, 1953,
	0, 1955, 1456, 0, 0, 1607, 0, 0, 0, 2083,
	1607, 1607, 0, 1520, 0, 0, 1583, 1584, 1585, 1586,
	0, 0, 1587, 0, 1577, 1581, 1578, 1579, 1573, 1536,
	0, 0, 2117, 1573, 1542, 1572, 0, 1104, 1562, 1573,
	1573, 0, -2, 1546, 1563, 0, 0, 539, 541, 543,
	547, 549, 0, 0, 1477, -2, 0, -2, 1103, 0,
	0, 0, 0, 558, 560, 0, 0, 483, 0, 0,
	552, 0, 555, 0, 1608, 1611, 0, 0, 1622, 1628,
	1629, 0, -2, 0, 0, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 493, 184, 465, 0, 184,
	184, 474, 0, 0, 184, 485, 184, 2138, 184, 2136,
	286, 490, 1403, 218, 0, 629, 0, 1327, 1336, 0,
	660, 0, 662, 0, 2104, 2108, 2105, 2109, 0, 651,
	0, 0, 0, 0, 1277, 0, 1232, 0, 0, 0,
	0, 0, 0, 151, 2551, 0, 186, 0, 0, 1068,
	2123, 0, 1060, 0, 0, 2264, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 1128, 1130, 1137, 1139, 0, 1133, 2111,
	0, 0, 1134, 0, 1136, 1138, 1140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	1367, 0, 0, 0, 119, 123, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 1182, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 0, 0, -2, 0,
	0, 0, 0, 0, 228, 0, 288, 2089, 2099, 0,
	942, 943, 318, 321, 324, 327, 224, 0, 358, 0,
	0, 990, 965, 0, 0, 413, 297, 0, 0, 427,
	2140, 950, 1121, 1124, 0, 1104, 2551, 1161, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 2551, 2118, 2169,
	2170, 1359, 1367, 0, 1607, 0, 1389, 1376, 0, 0,
	0, 1389, 1393, 1394, 1396, 1397, 0, 0, 1598, 1604,
	501, 551, 1464, 1464, 297, 295, 2384, 293, 290, 292,
	0, 0, 0, 991, 993, 994, 995, 186, 0, 2170,
	1060, 2313, 2170, 0, 1379, 1381, 0, 248, 0, 257,
	1576, 255, 260, 0, 0, 0, 425, 612, 617, 757,
	0, 297, 765, 766, 767, 810, 848, 856, 777, 779,
	780, 781, 0, 0, 925, 921, 922, 923, 794, 858,
	797, 858, 800, 858, 821, 825, 830, 837, 0, 0,
	0, 850, 0, 0, 0, 0, 0, 0, 0, 897,
	898, 899, 901, 906, 905, 910, 1595, 1415, 1416, 1418,
	0, 1427, 0, 0, 1503, -2, -2, 1502, 1506, 1507,
	-2, -2, -2, -2, 1423, 0, 1432, 1429, 0, 1488,
	1223, 1224, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1821, 0, -2, 1800, 1803, 1807, 1809, 1811, 0,
	0, 0, 0, 0, 0, 2017, 0, 2019, 1822, 2072,
	2075, 1989, 0, 0, 1476, 1477, 1477, 0, 1889, 0,
	2025, 0, 2032, 2033, 0, 1882, 0, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 0,
	0, 0, 1925, 1928, 1931, 1934, 0, 0, 0, 0,
	1914, 0, 0, 0, 1918, 1688, 1674, 0, 1716, 1714,
	1715, 1709, 1716, 1713, 1666, 0, 1631, 1632, 1633, 1635,
	1636, 1637, 1639, 1640, 1641, 1643, 1644, 1645, 1647, 1648,
	1649, 1651, 1652, 1653, 1655, 1656, 1657, 1659, 1660, 1661,
	1665, 0, 1938, 0, 1940, 1942, 0, 0, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1829, 1830, 1945, 2054, 2055, 0, 0,
	0, 0, 0, 0, 1951, 0, 2060, 1952, 1954, 1464,
	0, 1457, 0, 1522, 1511, 1606, 0, 2081, 1576, 1524,
	1526, 2082, 2120, 1511, 1511, 0, 2029, 0, 0, 1567,
	0, 0, 0, 1569, 1540, 0, 0, 1534, 0, 1530,
	1531, 1532, 1533, 1541, 1104, 1571, 1543, 1547, 2147, 0,
	1573, 0, 1558, 0, 1560, 1593, 0, 1552, 1555, 0,
	0, 2162, 1607, 0, 329, 333, 334, 330, 331, 332,
	567, 0, 0, 0, 0, 2031, 0, 1613, 0, 1619,
	0, 0, 0, 0, 573, 0, 0, 0, 201, 1401,
	380, 464, 184, 469, 472, 2087, 184, 478, 481, 487,
	214, 0, 625, -2, 658, 659, 661, 0, 657, 148,
	1278, 0, 0, 1228, 1230, 2134, 1234, 0, 0, 0,
	0, 0, 1255, 0, 153, 2551, 162, 0, 1039, 0,
	2121, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	2551, 184, 2551, 184, 165, 167, 170, 0, 174, 172,
	0, 1027, 0, 0, 1030, 109, 1278, 0, 0, 112,
	116, 124, 0, 0, 0, 130, 0, 0, 0, 1257,
	1261, 1269, 0, 0, 0, 1131, 1132, 1135, 1141, 82,
	0, 0, 0, 1265, 1267, 1273, 92, 93, 2132, 94,
	0, 1227, 0, 0, 0, 0, 176, 114, 118, 125,
	0, 1275, 111, 0, 199, 0, 0, 189, 184, 2551,
	0, 191, 0, 192, 193, 208, 0, 0, 0, 953,
	954, 1183, 1145, 1146, 0, 1151, 0, 0, 0, 0,
	1576, 220, 0, 1576, 228, 0, 2095, 0, 346, 0,
	0, 0, 0, 989, 1086, 0, 960, 0, 0, 0,
	419, 415, 0, 424, 430, 429, -2, 0, 0, 0,
	0, -2, 0, 0, 1199, 1193, 1194, 0, 0, 0,
	0, 2551, 1361, 1367, 0, 1462, 1477, 434, 1368, 1389,
	0, 0, 0, 1378, 1374, 1371, 1607, 0, 0, 0,
	0, 0, 1600, 1603, 504, 505, 272, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 996, 1000, 0, 2170,
	2170, 0, 2125, 0, 0, 0, 0, 258, 0, 261,
	0, 0, 0, 266, 267, 268, 269, 270, 260, 250,
	1576, 0, 0, 614, 0, 0, 764, 0, 787, 796,
	798, 801, 839, 841, 858, 884, 885, 1017, 0, 1017,
	0, 0, 902, 1425, 0, 1500, 1431, 1482, 1483, 0,
	1225, 0, 1741, 1784, 0, 0, -2, 0, 0, 1788,
	0, 0, 0, -2, 0, 0, 0, 2018, 2020, 0,
	2074, 1884, 0, 0, 0, 1888, 1872, 1873, 0, 1992,
	2035, 2064, 2068, 0, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 0, 2114, 2148, 2152, 1965, 1966, 1970, 2128, 0,
	0, 0, 1897, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 1711, 0, 0, 2036, 2047, 2049, 1826, 1827,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	-2, -2, -2, 1844, 1845, 1846, -2, -2, -2, 0,
	0, 0, 2050, 2052, 2053, 2057, 2058, 0, 1948, 1949,
	1950, 2059, 0, 1464, 1458, 1519, 0, 1605, 1523, 0,
	1519, 1519, 1471, 1565, 0, 0, 1589, 0, 1537, 0,
	1538, 0, 1570, 0, 1545, 1548, 1549, 1559, 0, 1551,
	0, 1554, 0, 1884, -2, 298, 299, 301, 0, 304,
	570, 571, 569, 553, 0, 0, 1615, 0, 0, 1691,
	1695, 1719, 576, 577, 575, 466, 475, 216, 0, 1574,
	0, 0, 0, 0, 2200, 1245, 1246, 0, 2568, 1250,
	0, 0, 0, 0, 185, 1037, 1067, 0, 0, 0,
	1059, 0, 0, 1073, 155, 0, 0, 0, 163, 0,
	0, 160, 0, 169, 173, 1024, 0, 0, 0, 0,
	1233, 0, 0, 0, 127, 128, 129, 0, 134, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	1352, 0, 1346, 0, 0, 0, 187, 0, 0, 0,
	1222, 210, 0, 0, 0, 0, 0, 1186, 1187, 1258,
	1262, 1270, 0, 0, 0, 228, 226, 0, 229, 0,
	232, 233, 0, 228, 222, 0, 0, 1104, 359, 963,
	1074, 0, 1076, 0, 961, 0, 0, 1075, 411, 0,
	418, 0, 0, 1125, 0, 0, 1148, 1159, 1104, 0,
	1198, 1200, 0, 1208, 0, 0, 0, 1363, 1367, 0,
	1356, 1357, 1496, 1369, 1387, -2, 0, 0, 1477, 1395,
	1392, 1398, 1399, 0, 294, 0, 289, 291, 0, 275,
	0, 0, 992, 997, 0, 0, 0, 0, 0, 1380,
	1382, 0, 0, 0, 0, 0, 0, 249, 260, 252,
	281, 0, 758, 782, 849, 886, 1016, 0, 0, 888,
	0, 0, 1499, 1486, 1487, 1484, 1225, 1786, 1790, 0,
	0, 0, 1792, -2, 0, 1814, -2, -2, 2021, 2073,
	1863, 1477, 1885, 1887, 1874, 2067, 1736, 0, 1972, 1969,
	0, 1956, 0, 1909, 1910, 0, 0, 1913, 1915, 1916,
	1917, 1675, 1668, 1667, 2046, 0, 0, 0, 0, 1947,
	1459, 0, 1961, 0, 0, 1527, 1961, 1961, 1566, 0,
	1568, 1535, 1528, 0, 2148, 1561, 1553, 0, 0, 302,
	0, 1609, 1614, 0, 1620, 1690, 217, 149, 150, 1237,
	1238, 1240, 1241, 0, 0, 1247, 1248, 0, 1253, 152,
	0, 1038, 0, 1041, 0, 0, 0, 0, 1048, 1060,
	0, 0, 0, 0, 0, 1061, 0, 1090, 0, 1213,
	1220, 0, -2, 0, 0, 0, 157, 179, 0, 0,
	1279, 0, 0, 184, 184, 0, 0, 1229, 1231, 1256,
	0, 0, 0, 0, 137, 0, 0, 1259, 1263, 1271,
	1266, 1268, 1274, 0, 1353, 0, 0, 1276, 197, 198,
	0, 184, 0, 184, 190, 184, 1222, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 221, 287, 228, 0,
	1011, 0, 1086, 1078, 1079, 1080, 0, 1085, 1087, 0,
	0, 977, 962, 0, 973, 0, 0, 990, 965, 0,
	416, 951, 1122, 1156, 1104, 0, 1190, 0, 0, 0,
	0, 0, 0, 0, 1365, 1367, 0, 1358, 1359, 1389,
	1495, 0, 0, 0, 1377, 1496, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 262,
	0, 263, 264, 265, 251, 616, 618, 0, 0, 624,
	1015, 0, 0, 0, 0, 1485, 1794, -2, -2, 1815,
	0, 2149, 2151, 1477, 0, 1958, 1479, 0, 0, -2,
	0, 0, 0, 1460, 1443, 0, 1518, 1510, 1512, 1514,
	2442, 2241, 2550, 1444, 1445, 1588, 0, 1556, 303, 0,
	1616, 0, 0, 1242, 1243, 0, 0, 0, 154, 0,
	1042, 1043, 2124, 1045, 0, 1047, 1049, 1050, 1051, 0,
	1054, 2172, 0, 1058, 0, 1069, 1091, 0, 1100, 0,
	1215, 1225, 1219, 0, 1217, 1102, 0, 156, 158, 178,
	1222, 0, 159, 168, 0, 0, 113, 0, 0, 2236,
	140, 138, 136, 1226, 115, 0, 199, 209, 1221, 211,
	194, 184, 0, 1260, 1264, 1272, 230, 0, 231, 234,
	0, 0, 1026, 0, 964, 1077, 0, 1088, 1089, 967,
	0, 966, 0, 0, 0, 0, 0, 417, 420, 0,
	423, 0, 0, 1201, 1199, 0, 1207, 0, 0, 0,
	1345, 0, 0, 1360, 1361, 432, 1383, 0, 0, 1389,
	1400, 274, 0, 0, 998, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 999, 1102, 0, 0, 1066, 0,
	279, 259, 0, 620, 0, 622, 0, 887, 889, 0,
	0, 1886, 1976, 0, 0, 1911, 1912, -2, 0, 1852,
	1960, 1962, 0, 0, 0, 0, 0, 1529, 1610, 1235,
	0, 1239, 0, 1249, 1251, 0, 1254, 1040, 1044, 0,
	0, 0, 1108, 0, 0, 1062, 0, 1094, 1095, 1011,
	0, 1096, 1097, 1098, 1214, 1488, 1220, 1011, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 188, 212,
	1222, 227, 244, 0, 1157, 965, 1025, 0, 0, 975,
	0, 978, 0, 974, 971, 972, 963, 0, 421, 422,
	0, 1160, 0, 0, 1208, 0, 0, 1348, 1344, 1367,
	1362, 1363, 1607, 1386, 1390, 0, 0, 1100, 1102, 965,
	0, 619, 0, 0, 894, 895, 0, 0, 0, 0,
	1971, 1480, 1853, 0, 0, 1513, 1515, 1516, 1517, 1236,
	1244, 1252, 0, 0, 1053, 1113, 0, 0, 0, 1092,
	1093, 1022, 0, 1218, 1216, 1071, 0, 1104, 161, 0,
	1102, 0, 1031, 0, 0, 1034, 0, 0, 141, 2236,
	139, 0, 184, 247, 0, 241, 239, 240, 967, 0,
	0, 1082, 1084, 0, 979, 1011, 977, 1158, 1191, 1102,
	0, 1100, 0, 1355, 1367, 1349, 1350, 0, 1365, 0,
	297, 297, 1011, 1100, 1607, 0, 297, 621, 623, 1968,
	1988, 1977, -2, 2510, 2242, 0, 1988, 1988, 1963, 1964,
	0, 0, 1055, 1109, 1110, 0, 1105, 1106, 1107, 2171,
	1056, 1057, 1090, 1021, 0, 0, 1108, 180, 1011, 1028,
	0, 0, 1029, 0, 0, 144, 0, 146, 213, 235,
	0, 0, 959, 0, 1081, 0, 0, 0, 0, 1026,
	967, 1100, 0, 1011, 0, 1341, 1354, 0, 1364, 1345,
	0, 276, 277, 1022, 1011, 1065, 278, 1973, 0, 0,
	1979, 1980, 1981, 1982, 1983, 1974, 1975, 1046, 0, 1111,
	0, 1112, 0, 0, 0, 1607, 1099, 0, 1113, 166,
	1032, 0, 1035, 0, 142, 0, 242, 243, 956, 958,
	0, 1083, 968, 0, 970, 965, 976, 1011, 0, 1022,
	0, 1347, 2133, 1348, 1384, 0, 965, 1022, 0, 1985,
	1986, 0, 0, 0, 1114, 0, 1117, 1118, 0, 1115,
	1070, 0, 1090, 0, 0, 0, 0, 969, 967, 1022,
	1102, 965, 1100, 1355, 0, 1607, 965, 1984, 1987, 1978,
	1052, 1116, 1119, 1120, 1101, 1072, 0, 0, 245, 0,
	1014, 959, 965, 1100, 1607, 1011, 1342, 1607, 1063, 1607,
	1019, 0, 0, 1010, 1012, 1013, 957, 1607, 1011, 1204,
	1022, 1385, 1064, 1033, 1018, 0, 246, 1202, 1022, 965,
	0, 965, 1607, 0, 1607, 1205, 1019, 1203, 1036,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 566, 3, 572, 567, 3,
	577, 578, 570, 568, 582, 569, 579, 571, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 585, 3,
	558, 560, 559, 563, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 575, 3, 576, 573, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 583, 565, 584, 561,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 562, 57901, 564, 57902, 574, 57903, 580, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2177
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2181
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2219
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2270
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2353
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = nil
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2764
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2770
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2780
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2785
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2794
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = nil
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2897
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3061
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "CREATE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3116
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "create access method")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "create cast")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "create operator")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "create publication")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "create rule")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "create server")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3141
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3145
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3149
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "drop server")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3175
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3290
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3325
		{

			sqlVAL.union.val = nil
		}
	case 432:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DELETE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3353
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3379
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "DROP")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3579
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3645
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3661
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3669
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3677
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "INSERT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "DELETE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "INSERT")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3754
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3787
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "GRANT")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3931
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "RESET")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "USE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4005
		{
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "USE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			return unimplemented(sqllex, "set from current")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = tree.Low
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = tree.Normal
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.High
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4425
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.str = "client_encoding"
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.str = "timezone"
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4494
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4557
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4566
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = true
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = false
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4911
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = true
		}
	case 844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = false
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = true
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = false
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5028
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5075
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5118
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5126
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5167
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5190
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5271
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "RESUME")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5695
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5711
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{

			sqlVAL.union.val = nil
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.str = ""
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = nil
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5783
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5809
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5823
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5838
		{
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5935
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5938
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5939
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5945
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5961
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5966
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.str = ""
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = true
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = false
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6345
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6383
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6463
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6624
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6633
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6652
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6657
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6680
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = true
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{

			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6760
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6774
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6786
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6798
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6808
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6929
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6956
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6958
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6960
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6964
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7002
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7020
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7039
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7056
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = false
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = true
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = false
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7131
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7137
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7210
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7216
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7518
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7524
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7536
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7542
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7556
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7562
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7580
		{
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7584
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7595
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7622
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7643
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7680
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7750
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7814
		{
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.str = ""
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7931
		{

		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7946
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.str = ""
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.str = ""
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.str = ""
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.str = ""
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8001
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8014
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8075
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8124
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8151
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8246
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = true
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = false
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = nil
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8631
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = true
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = false
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = true
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8660
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8661
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8665
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8732
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8849
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8922
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8959
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9011
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9050
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9060
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9106
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9136
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9169
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = nil
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = true
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = false
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.str = tree.AstFull
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.str = tree.AstRight
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.str = tree.AstInner
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9289
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.str = tree.AstHash
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.str = ""
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9403
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = true
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = false
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9452
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9465
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9473
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9492
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9502
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9522
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9531
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9589
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9593
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9598
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9610
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9618
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = types.Geography
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9633
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9641
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9675
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = nil
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = types.Int2
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = types.Int
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = types.Float4
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = types.Float
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9734
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = types.Bool
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = types.Float
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9767
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9773
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9795
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = types.String
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = true
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = false
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = types.Date
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9852
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9866
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9883
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9900
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = true
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = false
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = false
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = types.Interval
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = nil
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10053
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10113
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10652
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10678
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10702
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10732
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10743
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10744
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10768
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10834
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11030
		{
			return unimplemented(sqllex, "treat")
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.str = ""
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11205
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11302
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = tree.Any
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = tree.Some
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = tree.All
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = tree.Div
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = tree.LT
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = tree.GT
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = tree.LE
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = tree.GE
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.NE
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Like
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11664
		{
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11744
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11817
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11833
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12095
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12115
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.str = ""
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
