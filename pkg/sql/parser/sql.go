// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:867
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13508

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1558,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	513, 240,
	-2, 0,
	-1, 87,
	230, 1294,
	244, 1294,
	260, 398,
	389, 398,
	399, 1051,
	437, 398,
	450, 1051,
	497, 1051,
	524, 398,
	550, 1051,
	-2, 0,
	-1, 93,
	132, 1558,
	237, 1558,
	535, 1558,
	536, 1558,
	-2, 0,
	-1, 109,
	150, 1529,
	169, 1529,
	182, 1529,
	240, 1529,
	273, 1529,
	340, 1529,
	350, 1529,
	530, 1529,
	-2, 1500,
	-1, 149,
	158, 902,
	259, 902,
	392, 864,
	455, 864,
	496, 864,
	516, 902,
	518, 864,
	-2, 0,
	-1, 153,
	4, 1560,
	21, 1560,
	22, 1560,
	23, 1560,
	24, 1560,
	25, 1560,
	26, 1560,
	27, 1560,
	29, 1560,
	30, 1560,
	36, 1560,
	41, 1560,
	42, 1560,
	44, 1560,
	45, 1560,
	46, 1560,
	47, 1560,
	48, 1560,
	49, 1560,
	50, 1560,
	51, 1560,
	53, 1560,
	54, 1560,
	55, 1560,
	56, 1560,
	58, 1560,
	59, 1560,
	60, 1560,
	61, 1560,
	62, 1560,
	63, 1560,
	64, 1560,
	68, 1560,
	69, 1560,
	70, 1560,
	71, 1560,
	73, 1560,
	74, 1560,
	75, 1560,
	79, 1560,
	80, 1560,
	81, 1560,
	82, 1560,
	83, 1560,
	84, 1560,
	85, 1560,
	88, 1560,
	89, 1560,
	90, 1560,
	91, 1560,
	92, 1560,
	94, 1560,
	96, 1560,
	97, 1560,
	98, 1560,
	99, 1560,
	100, 1560,
	101, 1560,
	103, 1560,
	104, 1560,
	105, 1560,
	107, 1560,
	108, 1560,
	109, 1560,
	117, 1560,
	118, 1560,
	119, 1560,
	120, 1560,
	121, 1560,
	123, 1560,
	124, 1560,
	125, 1560,
	127, 1560,
	128, 1560,
	129, 1560,
	131, 1560,
	132, 1560,
	133, 1560,
	135, 1560,
	136, 1560,
	137, 1560,
	140, 1560,
	141, 1560,
	142, 1560,
	144, 1560,
	145, 1560,
	147, 1560,
	148, 1560,
	149, 1560,
	151, 1560,
	152, 1560,
	153, 1560,
	154, 1560,
	155, 1560,
	156, 1560,
	157, 1560,
	158, 1560,
	159, 1560,
	160, 1560,
	161, 1560,
	162, 1560,
	163, 1560,
	164, 1560,
	165, 1560,
	166, 1560,
	168, 1560,
	174, 1560,
	175, 1560,
	176, 1560,
	177, 1560,
	181, 1560,
	183, 1560,
	184, 1560,
	188, 1560,
	189, 1560,
	190, 1560,
	191, 1560,
	192, 1560,
	193, 1560,
	194, 1560,
	195, 1560,
	196, 1560,
	197, 1560,
	198, 1560,
	199, 1560,
	200, 1560,
	201, 1560,
	203, 1560,
	204, 1560,
	206, 1560,
	207, 1560,
	209, 1560,
	210, 1560,
	211, 1560,
	212, 1560,
	213, 1560,
	214, 1560,
	215, 1560,
	216, 1560,
	217, 1560,
	219, 1560,
	220, 1560,
	222, 1560,
	223, 1560,
	224, 1560,
	225, 1560,
	226, 1560,
	230, 1560,
	231, 1560,
	232, 1560,
	233, 1560,
	234, 1560,
	237, 1560,
	238, 1560,
	239, 1560,
	241, 1560,
	243, 1560,
	244, 1560,
	246, 1560,
	248, 1560,
	249, 1560,
	250, 1560,
	252, 1560,
	256, 1560,
	257, 1560,
	258, 1560,
	259, 1560,
	260, 1560,
	261, 1560,
	263, 1560,
	264, 1560,
	265, 1560,
	267, 1560,
	268, 1560,
	270, 1560,
	271, 1560,
	274, 1560,
	278, 1560,
	279, 1560,
	280, 1560,
	283, 1560,
	284, 1560,
	285, 1560,
	286, 1560,
	288, 1560,
	289, 1560,
	290, 1560,
	291, 1560,
	292, 1560,
	293, 1560,
	294, 1560,
	295, 1560,
	296, 1560,
	297, 1560,
	298, 1560,
	299, 1560,
	300, 1560,
	301, 1560,
	302, 1560,
	303, 1560,
	304, 1560,
	305, 1560,
	306, 1560,
	307, 1560,
	308, 1560,
	309, 1560,
	311, 1560,
	313, 1560,
	314, 1560,
	315, 1560,
	316, 1560,
	317, 1560,
	318, 1560,
	319, 1560,
	320, 1560,
	321, 1560,
	322, 1560,
	323, 1560,
	324, 1560,
	325, 1560,
	327, 1560,
	328, 1560,
	330, 1560,
	332, 1560,
	333, 1560,
	335, 1560,
	336, 1560,
	337, 1560,
	338, 1560,
	339, 1560,
	342, 1560,
	345, 1560,
	346, 1560,
	347, 1560,
	348, 1560,
	351, 1560,
	352, 1560,
	353, 1560,
	355, 1560,
	357, 1560,
	358, 1560,
	359, 1560,
	360, 1560,
	361, 1560,
	362, 1560,
	363, 1560,
	364, 1560,
	365, 1560,
	366, 1560,
	367, 1560,
	368, 1560,
	369, 1560,
	371, 1560,
	372, 1560,
	373, 1560,
	374, 1560,
	375, 1560,
	376, 1560,
	377, 1560,
	378, 1560,
	379, 1560,
	380, 1560,
	381, 1560,
	382, 1560,
	383, 1560,
	384, 1560,
	385, 1560,
	387, 1560,
	388, 1560,
	390, 1560,
	391, 1560,
	392, 1560,
	393, 1560,
	394, 1560,
	395, 1560,
	396, 1560,
	397, 1560,
	398, 1560,
	399, 1560,
	400, 1560,
	401, 1560,
	403, 1560,
	405, 1560,
	406, 1560,
	407, 1560,
	412, 1560,
	414, 1560,
	415, 1560,
	416, 1560,
	417, 1560,
	418, 1560,
	419, 1560,
	420, 1560,
	421, 1560,
	422, 1560,
	423, 1560,
	425, 1560,
	426, 1560,
	427, 1560,
	429, 1560,
	430, 1560,
	431, 1560,
	432, 1560,
	433, 1560,
	434, 1560,
	435, 1560,
	437, 1560,
	438, 1560,
	439, 1560,
	440, 1560,
	441, 1560,
	442, 1560,
	443, 1560,
	444, 1560,
	445, 1560,
	446, 1560,
	447, 1560,
	448, 1560,
	450, 1560,
	451, 1560,
	452, 1560,
	453, 1560,
	454, 1560,
	455, 1560,
	457, 1560,
	458, 1560,
	459, 1560,
	460, 1560,
	461, 1560,
	462, 1560,
	464, 1560,
	465, 1560,
	466, 1560,
	467, 1560,
	468, 1560,
	469, 1560,
	470, 1560,
	471, 1560,
	473, 1560,
	475, 1560,
	476, 1560,
	477, 1560,
	478, 1560,
	479, 1560,
	480, 1560,
	481, 1560,
	482, 1560,
	483, 1560,
	484, 1560,
	485, 1560,
	486, 1560,
	487, 1560,
	488, 1560,
	489, 1560,
	490, 1560,
	492, 1560,
	493, 1560,
	495, 1560,
	496, 1560,
	498, 1560,
	499, 1560,
	500, 1560,
	501, 1560,
	502, 1560,
	503, 1560,
	504, 1560,
	505, 1560,
	506, 1560,
	508, 1560,
	509, 1560,
	510, 1560,
	511, 1560,
	512, 1560,
	514, 1560,
	516, 1560,
	517, 1560,
	518, 1560,
	519, 1560,
	520, 1560,
	521, 1560,
	523, 1560,
	524, 1560,
	525, 1560,
	526, 1560,
	528, 1560,
	529, 1560,
	532, 1560,
	533, 1560,
	534, 1560,
	535, 1560,
	536, 1560,
	537, 1560,
	538, 1560,
	540, 1560,
	543, 1560,
	544, 1560,
	545, 1560,
	546, 1560,
	547, 1560,
	548, 1560,
	550, 1560,
	551, 1560,
	552, 1560,
	553, 1560,
	555, 1560,
	560, 1560,
	561, 1560,
	562, 1560,
	563, 1560,
	564, 1560,
	565, 1560,
	-2, 0,
	-1, 154,
	1, 1411,
	130, 1411,
	248, 1411,
	329, 1411,
	387, 1411,
	396, 1411,
	569, 1411,
	597, 1411,
	-2, 0,
	-1, 156,
	1, 1411,
	597, 1411,
	-2, 0,
	-1, 157,
	1, 1411,
	597, 1411,
	-2, 0,
	-1, 158,
	1, 1411,
	513, 1411,
	597, 1411,
	-2, 0,
	-1, 187,
	150, 1528,
	169, 1528,
	182, 1528,
	240, 1528,
	273, 1528,
	340, 1528,
	350, 1528,
	530, 1528,
	-2, 1503,
	-1, 234,
	4, 1567,
	5, 1567,
	6, 1567,
	7, 1567,
	8, 1567,
	9, 1567,
	10, 1567,
	21, 1567,
	22, 1567,
	23, 1567,
	24, 1567,
	25, 1567,
	26, 1567,
	27, 1567,
	29, 1567,
	30, 1567,
	36, 1567,
	37, 1567,
	41, 1567,
	42, 1567,
	43, 1567,
	44, 1567,
	45, 1567,
	46, 1567,
	47, 1567,
	48, 1567,
	49, 1567,
	50, 1567,
	51, 1567,
	53, 1567,
	54, 1567,
	55, 1567,
	56, 1567,
	58, 1567,
	59, 1567,
	60, 1567,
	61, 1567,
	62, 1567,
	63, 1567,
	64, 1567,
	65, 1567,
	66, 1567,
	67, 1567,
	68, 1567,
	69, 1567,
	70, 1567,
	71, 1567,
	73, 1567,
	74, 1567,
	75, 1567,
	77, 1567,
	79, 1567,
	80, 1567,
	81, 1567,
	82, 1567,
	83, 1567,
	84, 1567,
	85, 1567,
	88, 1567,
	89, 1567,
	90, 1567,
	91, 1567,
	92, 1567,
	94, 1567,
	96, 1567,
	97, 1567,
	98, 1567,
	99, 1567,
	100, 1567,
	101, 1567,
	103, 1567,
	104, 1567,
	105, 1567,
	106, 1567,
	107, 1567,
	108, 1567,
	109, 1567,
	110, 1567,
	111, 1567,
	112, 1567,
	113, 1567,
	114, 1567,
	115, 1567,
	116, 1567,
	117, 1567,
	118, 1567,
	119, 1567,
	120, 1567,
	121, 1567,
	122, 1567,
	123, 1567,
	124, 1567,
	125, 1567,
	126, 1567,
	127, 1567,
	128, 1567,
	129, 1567,
	131, 1567,
	132, 1567,
	133, 1567,
	135, 1567,
	136, 1567,
	137, 1567,
	140, 1567,
	141, 1567,
	142, 1567,
	144, 1567,
	145, 1567,
	147, 1567,
	148, 1567,
	149, 1567,
	151, 1567,
	152, 1567,
	153, 1567,
	154, 1567,
	155, 1567,
	156, 1567,
	157, 1567,
	158, 1567,
	159, 1567,
	160, 1567,
	161, 1567,
	162, 1567,
	163, 1567,
	164, 1567,
	165, 1567,
	166, 1567,
	167, 1567,
	168, 1567,
	174, 1567,
	175, 1567,
	176, 1567,
	177, 1567,
	181, 1567,
	183, 1567,
	184, 1567,
	187, 1567,
	188, 1567,
	189, 1567,
	190, 1567,
	191, 1567,
	192, 1567,
	193, 1567,
	194, 1567,
	195, 1567,
	196, 1567,
	197, 1567,
	198, 1567,
	199, 1567,
	200, 1567,
	201, 1567,
	203, 1567,
	204, 1567,
	206, 1567,
	207, 1567,
	209, 1567,
	210, 1567,
	211, 1567,
	212, 1567,
	213, 1567,
	214, 1567,
	215, 1567,
	216, 1567,
	217, 1567,
	218, 1567,
	219, 1567,
	220, 1567,
	222, 1567,
	223, 1567,
	224, 1567,
	225, 1567,
	226, 1567,
	230, 1567,
	231, 1567,
	232, 1567,
	233, 1567,
	234, 1567,
	236, 1567,
	237, 1567,
	238, 1567,
	239, 1567,
	241, 1567,
	243, 1567,
	244, 1567,
	245, 1567,
	246, 1567,
	247, 1567,
	248, 1567,
	249, 1567,
	250, 1567,
	251, 1567,
	252, 1567,
	256, 1567,
	257, 1567,
	258, 1567,
	259, 1567,
	260, 1567,
	261, 1567,
	263, 1567,
	264, 1567,
	265, 1567,
	267, 1567,
	268, 1567,
	269, 1567,
	270, 1567,
	271, 1567,
	272, 1567,
	274, 1567,
	278, 1567,
	279, 1567,
	280, 1567,
	281, 1567,
	282, 1567,
	283, 1567,
	284, 1567,
	285, 1567,
	286, 1567,
	288, 1567,
	289, 1567,
	290, 1567,
	291, 1567,
	292, 1567,
	293, 1567,
	294, 1567,
	295, 1567,
	296, 1567,
	297, 1567,
	298, 1567,
	299, 1567,
	300, 1567,
	301, 1567,
	302, 1567,
	303, 1567,
	304, 1567,
	305, 1567,
	306, 1567,
	307, 1567,
	308, 1567,
	309, 1567,
	311, 1567,
	312, 1567,
	313, 1567,
	314, 1567,
	315, 1567,
	316, 1567,
	317, 1567,
	318, 1567,
	319, 1567,
	320, 1567,
	321, 1567,
	322, 1567,
	323, 1567,
	324, 1567,
	325, 1567,
	326, 1567,
	327, 1567,
	328, 1567,
	329, 1567,
	330, 1567,
	331, 1567,
	332, 1567,
	333, 1567,
	334, 1567,
	335, 1567,
	336, 1567,
	337, 1567,
	338, 1567,
	339, 1567,
	342, 1567,
	346, 1567,
	347, 1567,
	348, 1567,
	351, 1567,
	352, 1567,
	353, 1567,
	354, 1567,
	355, 1567,
	356, 1567,
	357, 1567,
	358, 1567,
	359, 1567,
	360, 1567,
	361, 1567,
	362, 1567,
	363, 1567,
	364, 1567,
	365, 1567,
	366, 1567,
	367, 1567,
	368, 1567,
	369, 1567,
	371, 1567,
	372, 1567,
	373, 1567,
	374, 1567,
	375, 1567,
	376, 1567,
	377, 1567,
	378, 1567,
	379, 1567,
	380, 1567,
	381, 1567,
	382, 1567,
	383, 1567,
	384, 1567,
	385, 1567,
	387, 1567,
	388, 1567,
	390, 1567,
	391, 1567,
	392, 1567,
	393, 1567,
	394, 1567,
	395, 1567,
	396, 1567,
	397, 1567,
	398, 1567,
	399, 1567,
	400, 1567,
	401, 1567,
	403, 1567,
	405, 1567,
	406, 1567,
	407, 1567,
	412, 1567,
	414, 1567,
	415, 1567,
	416, 1567,
	417, 1567,
	418, 1567,
	419, 1567,
	420, 1567,
	421, 1567,
	422, 1567,
	423, 1567,
	425, 1567,
	426, 1567,
	427, 1567,
	428, 1567,
	429, 1567,
	430, 1567,
	431, 1567,
	432, 1567,
	433, 1567,
	434, 1567,
	435, 1567,
	437, 1567,
	438, 1567,
	439, 1567,
	440, 1567,
	441, 1567,
	442, 1567,
	443, 1567,
	444, 1567,
	445, 1567,
	446, 1567,
	447, 1567,
	448, 1567,
	450, 1567,
	451, 1567,
	452, 1567,
	453, 1567,
	454, 1567,
	455, 1567,
	456, 1567,
	457, 1567,
	458, 1567,
	459, 1567,
	460, 1567,
	461, 1567,
	462, 1567,
	463, 1567,
	464, 1567,
	465, 1567,
	466, 1567,
	467, 1567,
	468, 1567,
	469, 1567,
	470, 1567,
	471, 1567,
	473, 1567,
	475, 1567,
	476, 1567,
	477, 1567,
	478, 1567,
	479, 1567,
	480, 1567,
	481, 1567,
	482, 1567,
	483, 1567,
	484, 1567,
	485, 1567,
	486, 1567,
	487, 1567,
	488, 1567,
	489, 1567,
	490, 1567,
	492, 1567,
	493, 1567,
	494, 1567,
	495, 1567,
	496, 1567,
	498, 1567,
	499, 1567,
	500, 1567,
	501, 1567,
	502, 1567,
	503, 1567,
	504, 1567,
	505, 1567,
	506, 1567,
	508, 1567,
	509, 1567,
	510, 1567,
	511, 1567,
	512, 1567,
	514, 1567,
	516, 1567,
	517, 1567,
	518, 1567,
	519, 1567,
	520, 1567,
	521, 1567,
	522, 1567,
	523, 1567,
	524, 1567,
	525, 1567,
	526, 1567,
	528, 1567,
	529, 1567,
	531, 1567,
	532, 1567,
	533, 1567,
	534, 1567,
	535, 1567,
	536, 1567,
	537, 1567,
	538, 1567,
	539, 1567,
	540, 1567,
	543, 1567,
	544, 1567,
	545, 1567,
	546, 1567,
	547, 1567,
	548, 1567,
	550, 1567,
	551, 1567,
	552, 1567,
	553, 1567,
	555, 1567,
	560, 1567,
	561, 1567,
	562, 1567,
	563, 1567,
	564, 1567,
	565, 1567,
	566, 1567,
	578, 1567,
	585, 1567,
	586, 1567,
	587, 1567,
	594, 1567,
	598, 1567,
	-2, 0,
	-1, 738,
	4, 1292,
	21, 1292,
	22, 1292,
	23, 1292,
	24, 1292,
	25, 1292,
	26, 1292,
	27, 1292,
	29, 1292,
	30, 1292,
	36, 1292,
	41, 1292,
	42, 1292,
	44, 1292,
	45, 1292,
	46, 1292,
	47, 1292,
	48, 1292,
	49, 1292,
	50, 1292,
	51, 1292,
	53, 1292,
	54, 1292,
	55, 1292,
	56, 1292,
	58, 1292,
	59, 1292,
	60, 1292,
	61, 1292,
	62, 1292,
	63, 1292,
	64, 1292,
	68, 1292,
	69, 1292,
	70, 1292,
	71, 1292,
	73, 1292,
	74, 1292,
	75, 1292,
	79, 1292,
	80, 1292,
	81, 1292,
	82, 1292,
	83, 1292,
	84, 1292,
	85, 1292,
	88, 1292,
	89, 1292,
	90, 1292,
	91, 1292,
	92, 1292,
	94, 1292,
	96, 1292,
	97, 1292,
	98, 1292,
	99, 1292,
	100, 1292,
	101, 1292,
	103, 1292,
	104, 1292,
	105, 1292,
	107, 1292,
	108, 1292,
	109, 1292,
	117, 1292,
	118, 1292,
	119, 1292,
	120, 1292,
	121, 1292,
	123, 1292,
	124, 1292,
	125, 1292,
	127, 1292,
	128, 1292,
	129, 1292,
	131, 1292,
	132, 1292,
	133, 1292,
	135, 1292,
	136, 1292,
	137, 1292,
	140, 1292,
	141, 1292,
	142, 1292,
	144, 1292,
	145, 1292,
	147, 1292,
	148, 1292,
	149, 1292,
	151, 1292,
	152, 1292,
	153, 1292,
	154, 1292,
	155, 1292,
	156, 1292,
	157, 1292,
	158, 1292,
	159, 1292,
	160, 1292,
	161, 1292,
	162, 1292,
	163, 1292,
	164, 1292,
	165, 1292,
	166, 1292,
	168, 1292,
	174, 1292,
	175, 1292,
	176, 1292,
	177, 1292,
	181, 1292,
	183, 1292,
	184, 1292,
	188, 1292,
	189, 1292,
	190, 1292,
	191, 1292,
	192, 1292,
	193, 1292,
	194, 1292,
	195, 1292,
	196, 1292,
	197, 1292,
	198, 1292,
	199, 1292,
	200, 1292,
	201, 1292,
	203, 1292,
	204, 1292,
	206, 1292,
	207, 1292,
	209, 1292,
	210, 1292,
	211, 1292,
	212, 1292,
	213, 1292,
	214, 1292,
	215, 1292,
	216, 1292,
	217, 1292,
	219, 1292,
	220, 1292,
	222, 1292,
	223, 1292,
	224, 1292,
	225, 1292,
	226, 1292,
	230, 1292,
	231, 1292,
	232, 1292,
	233, 1292,
	234, 1292,
	237, 1292,
	238, 1292,
	239, 1292,
	241, 1292,
	243, 1292,
	244, 1292,
	246, 1292,
	248, 1292,
	249, 1292,
	250, 1292,
	252, 1292,
	256, 1292,
	257, 1292,
	258, 1292,
	259, 1292,
	260, 1292,
	261, 1292,
	263, 1292,
	264, 1292,
	265, 1292,
	267, 1292,
	268, 1292,
	270, 1292,
	271, 1292,
	274, 1292,
	278, 1292,
	279, 1292,
	280, 1292,
	283, 1292,
	284, 1292,
	285, 1292,
	286, 1292,
	288, 1292,
	289, 1292,
	290, 1292,
	291, 1292,
	292, 1292,
	293, 1292,
	294, 1292,
	295, 1292,
	296, 1292,
	297, 1292,
	298, 1292,
	299, 1292,
	300, 1292,
	301, 1292,
	302, 1292,
	303, 1292,
	304, 1292,
	305, 1292,
	306, 1292,
	307, 1292,
	308, 1292,
	309, 1292,
	311, 1292,
	313, 1292,
	314, 1292,
	315, 1292,
	316, 1292,
	317, 1292,
	318, 1292,
	319, 1292,
	320, 1292,
	321, 1292,
	322, 1292,
	323, 1292,
	324, 1292,
	325, 1292,
	327, 1292,
	328, 1292,
	330, 1292,
	332, 1292,
	333, 1292,
	335, 1292,
	336, 1292,
	337, 1292,
	338, 1292,
	339, 1292,
	342, 1292,
	346, 1292,
	347, 1292,
	348, 1292,
	351, 1292,
	352, 1292,
	353, 1292,
	355, 1292,
	357, 1292,
	358, 1292,
	359, 1292,
	360, 1292,
	361, 1292,
	362, 1292,
	363, 1292,
	364, 1292,
	365, 1292,
	366, 1292,
	367, 1292,
	368, 1292,
	369, 1292,
	371, 1292,
	372, 1292,
	373, 1292,
	374, 1292,
	375, 1292,
	376, 1292,
	377, 1292,
	378, 1292,
	379, 1292,
	380, 1292,
	381, 1292,
	382, 1292,
	383, 1292,
	384, 1292,
	385, 1292,
	387, 1292,
	388, 1292,
	390, 1292,
	391, 1292,
	392, 1292,
	393, 1292,
	394, 1292,
	395, 1292,
	396, 1292,
	397, 1292,
	398, 1292,
	399, 1292,
	400, 1292,
	401, 1292,
	403, 1292,
	405, 1292,
	406, 1292,
	407, 1292,
	412, 1292,
	414, 1292,
	415, 1292,
	416, 1292,
	417, 1292,
	418, 1292,
	419, 1292,
	420, 1292,
	421, 1292,
	422, 1292,
	423, 1292,
	425, 1292,
	426, 1292,
	427, 1292,
	429, 1292,
	430, 1292,
	431, 1292,
	432, 1292,
	433, 1292,
	434, 1292,
	435, 1292,
	437, 1292,
	438, 1292,
	439, 1292,
	440, 1292,
	441, 1292,
	442, 1292,
	443, 1292,
	444, 1292,
	445, 1292,
	446, 1292,
	447, 1292,
	448, 1292,
	450, 1292,
	451, 1292,
	452, 1292,
	453, 1292,
	454, 1292,
	455, 1292,
	457, 1292,
	458, 1292,
	459, 1292,
	460, 1292,
	461, 1292,
	462, 1292,
	464, 1292,
	465, 1292,
	466, 1292,
	467, 1292,
	468, 1292,
	469, 1292,
	470, 1292,
	471, 1292,
	473, 1292,
	475, 1292,
	476, 1292,
	477, 1292,
	478, 1292,
	479, 1292,
	480, 1292,
	481, 1292,
	482, 1292,
	483, 1292,
	484, 1292,
	485, 1292,
	486, 1292,
	487, 1292,
	488, 1292,
	489, 1292,
	490, 1292,
	492, 1292,
	493, 1292,
	495, 1292,
	496, 1292,
	498, 1292,
	499, 1292,
	500, 1292,
	501, 1292,
	502, 1292,
	503, 1292,
	504, 1292,
	505, 1292,
	506, 1292,
	508, 1292,
	509, 1292,
	510, 1292,
	511, 1292,
	512, 1292,
	514, 1292,
	516, 1292,
	517, 1292,
	518, 1292,
	519, 1292,
	520, 1292,
	521, 1292,
	523, 1292,
	524, 1292,
	525, 1292,
	526, 1292,
	528, 1292,
	529, 1292,
	532, 1292,
	533, 1292,
	534, 1292,
	535, 1292,
	536, 1292,
	537, 1292,
	538, 1292,
	540, 1292,
	543, 1292,
	544, 1292,
	545, 1292,
	546, 1292,
	547, 1292,
	548, 1292,
	550, 1292,
	551, 1292,
	552, 1292,
	553, 1292,
	555, 1292,
	560, 1292,
	561, 1292,
	562, 1292,
	563, 1292,
	564, 1292,
	565, 1292,
	-2, 0,
	-1, 757,
	186, 2353,
	513, 2353,
	577, 2353,
	596, 2353,
	-2, 0,
	-1, 758,
	186, 2460,
	513, 2460,
	577, 2460,
	596, 2460,
	-2, 0,
	-1, 759,
	186, 2340,
	513, 2340,
	577, 2340,
	596, 2340,
	-2, 0,
	-1, 761,
	186, 2596,
	513, 2596,
	577, 2596,
	596, 2596,
	-2, 0,
	-1, 763,
	186, 2637,
	513, 2637,
	577, 2637,
	596, 2637,
	-2, 0,
	-1, 771,
	186, 2487,
	513, 2487,
	577, 2487,
	596, 2487,
	-2, 691,
	-1, 806,
	596, 2289,
	599, 2289,
	-2, 982,
	-1, 807,
	596, 2291,
	599, 2291,
	-2, 983,
	-1, 808,
	596, 2290,
	599, 2290,
	-2, 984,
	-1, 809,
	599, 2215,
	-2, 985,
	-1, 832,
	182, 255,
	-2, 0,
	-1, 856,
	43, 2262,
	-2, 0,
	-1, 857,
	550, 1270,
	-2, 1052,
	-1, 873,
	4, 1697,
	21, 1697,
	22, 1697,
	23, 1697,
	24, 1697,
	25, 1697,
	26, 1697,
	27, 1697,
	29, 1697,
	30, 1697,
	36, 1697,
	41, 1697,
	42, 1697,
	44, 1697,
	45, 1697,
	46, 1697,
	47, 1697,
	48, 1697,
	49, 1697,
	50, 1697,
	51, 1697,
	53, 1697,
	54, 1697,
	55, 1697,
	56, 1697,
	58, 1697,
	59, 1697,
	60, 1697,
	61, 1697,
	62, 1697,
	63, 1697,
	64, 1697,
	68, 1697,
	69, 1697,
	70, 1697,
	71, 1697,
	73, 1697,
	74, 1697,
	75, 1697,
	79, 1697,
	80, 1697,
	81, 1697,
	82, 1697,
	83, 1697,
	84, 1697,
	85, 1697,
	88, 1697,
	89, 1697,
	90, 1697,
	91, 1697,
	92, 1697,
	94, 1697,
	96, 1697,
	97, 1697,
	98, 1697,
	99, 1697,
	100, 1697,
	101, 1697,
	103, 1697,
	104, 1697,
	105, 1697,
	107, 1697,
	108, 1697,
	109, 1697,
	117, 1697,
	118, 1697,
	119, 1697,
	120, 1697,
	121, 1697,
	123, 1697,
	124, 1697,
	125, 1697,
	127, 1697,
	128, 1697,
	129, 1697,
	131, 1697,
	132, 1697,
	133, 1697,
	135, 1697,
	136, 1697,
	137, 1697,
	140, 1697,
	141, 1697,
	142, 1697,
	144, 1697,
	145, 1697,
	147, 1697,
	148, 1697,
	149, 1697,
	151, 1697,
	152, 1697,
	153, 1697,
	154, 1697,
	155, 1697,
	156, 1697,
	157, 1697,
	158, 1697,
	159, 1697,
	160, 1697,
	161, 1697,
	162, 1697,
	163, 1697,
	164, 1697,
	165, 1697,
	166, 1697,
	168, 1697,
	174, 1697,
	175, 1697,
	176, 1697,
	177, 1697,
	181, 1697,
	183, 1697,
	184, 1697,
	188, 1697,
	189, 1697,
	190, 1697,
	191, 1697,
	192, 1697,
	193, 1697,
	194, 1697,
	195, 1697,
	196, 1697,
	197, 1697,
	198, 1697,
	199, 1697,
	200, 1697,
	201, 1697,
	203, 1697,
	204, 1697,
	206, 1697,
	207, 1697,
	209, 1697,
	210, 1697,
	211, 1697,
	212, 1697,
	213, 1697,
	214, 1697,
	215, 1697,
	216, 1697,
	217, 1697,
	219, 1697,
	220, 1697,
	222, 1697,
	223, 1697,
	224, 1697,
	225, 1697,
	226, 1697,
	230, 1697,
	231, 1697,
	232, 1697,
	233, 1697,
	234, 1697,
	237, 1697,
	238, 1697,
	239, 1697,
	241, 1697,
	243, 1697,
	244, 1697,
	246, 1697,
	248, 1697,
	249, 1697,
	250, 1697,
	252, 1697,
	256, 1697,
	257, 1697,
	258, 1697,
	259, 1697,
	260, 1697,
	261, 1697,
	263, 1697,
	264, 1697,
	265, 1697,
	267, 1697,
	268, 1697,
	270, 1697,
	271, 1697,
	274, 1697,
	278, 1697,
	279, 1697,
	280, 1697,
	283, 1697,
	284, 1697,
	285, 1697,
	286, 1697,
	288, 1697,
	289, 1697,
	290, 1697,
	291, 1697,
	292, 1697,
	293, 1697,
	294, 1697,
	295, 1697,
	296, 1697,
	297, 1697,
	298, 1697,
	299, 1697,
	300, 1697,
	301, 1697,
	302, 1697,
	303, 1697,
	304, 1697,
	305, 1697,
	306, 1697,
	307, 1697,
	308, 1697,
	309, 1697,
	311, 1697,
	313, 1697,
	314, 1697,
	315, 1697,
	316, 1697,
	317, 1697,
	318, 1697,
	319, 1697,
	320, 1697,
	321, 1697,
	322, 1697,
	323, 1697,
	324, 1697,
	325, 1697,
	327, 1697,
	328, 1697,
	330, 1697,
	332, 1697,
	333, 1697,
	335, 1697,
	336, 1697,
	337, 1697,
	338, 1697,
	339, 1697,
	342, 1697,
	346, 1697,
	347, 1697,
	348, 1697,
	351, 1697,
	352, 1697,
	353, 1697,
	355, 1697,
	357, 1697,
	358, 1697,
	359, 1697,
	360, 1697,
	361, 1697,
	362, 1697,
	363, 1697,
	364, 1697,
	365, 1697,
	366, 1697,
	367, 1697,
	368, 1697,
	369, 1697,
	371, 1697,
	372, 1697,
	373, 1697,
	374, 1697,
	375, 1697,
	376, 1697,
	377, 1697,
	378, 1697,
	379, 1697,
	380, 1697,
	381, 1697,
	382, 1697,
	383, 1697,
	384, 1697,
	385, 1697,
	387, 1697,
	388, 1697,
	390, 1697,
	391, 1697,
	392, 1697,
	393, 1697,
	394, 1697,
	395, 1697,
	396, 1697,
	397, 1697,
	398, 1697,
	399, 1697,
	400, 1697,
	401, 1697,
	403, 1697,
	405, 1697,
	406, 1697,
	407, 1697,
	412, 1697,
	414, 1697,
	415, 1697,
	416, 1697,
	417, 1697,
	418, 1697,
	419, 1697,
	420, 1697,
	421, 1697,
	422, 1697,
	423, 1697,
	425, 1697,
	426, 1697,
	427, 1697,
	429, 1697,
	430, 1697,
	431, 1697,
	432, 1697,
	433, 1697,
	434, 1697,
	435, 1697,
	437, 1697,
	438, 1697,
	439, 1697,
	440, 1697,
	441, 1697,
	442, 1697,
	443, 1697,
	444, 1697,
	445, 1697,
	446, 1697,
	447, 1697,
	448, 1697,
	450, 1697,
	451, 1697,
	452, 1697,
	453, 1697,
	454, 1697,
	455, 1697,
	457, 1697,
	458, 1697,
	459, 1697,
	460, 1697,
	461, 1697,
	462, 1697,
	464, 1697,
	465, 1697,
	466, 1697,
	467, 1697,
	468, 1697,
	469, 1697,
	470, 1697,
	471, 1697,
	473, 1697,
	475, 1697,
	476, 1697,
	477, 1697,
	478, 1697,
	479, 1697,
	480, 1697,
	481, 1697,
	482, 1697,
	483, 1697,
	484, 1697,
	485, 1697,
	486, 1697,
	487, 1697,
	488, 1697,
	489, 1697,
	490, 1697,
	492, 1697,
	493, 1697,
	495, 1697,
	496, 1697,
	498, 1697,
	499, 1697,
	500, 1697,
	501, 1697,
	502, 1697,
	503, 1697,
	504, 1697,
	505, 1697,
	506, 1697,
	508, 1697,
	509, 1697,
	510, 1697,
	511, 1697,
	512, 1697,
	514, 1697,
	516, 1697,
	517, 1697,
	518, 1697,
	519, 1697,
	520, 1697,
	521, 1697,
	523, 1697,
	524, 1697,
	525, 1697,
	526, 1697,
	528, 1697,
	529, 1697,
	532, 1697,
	533, 1697,
	534, 1697,
	535, 1697,
	536, 1697,
	537, 1697,
	538, 1697,
	540, 1697,
	543, 1697,
	544, 1697,
	545, 1697,
	546, 1697,
	547, 1697,
	548, 1697,
	550, 1697,
	551, 1697,
	552, 1697,
	553, 1697,
	555, 1697,
	560, 1697,
	561, 1697,
	562, 1697,
	563, 1697,
	564, 1697,
	565, 1697,
	-2, 0,
	-1, 883,
	260, 402,
	-2, 0,
	-1, 955,
	392, 865,
	455, 865,
	496, 865,
	518, 865,
	-2, 0,
	-1, 956,
	392, 864,
	455, 864,
	496, 864,
	518, 864,
	-2, 801,
	-1, 960,
	1, 916,
	593, 916,
	595, 916,
	597, 916,
	-2, 0,
	-1, 962,
	1, 839,
	593, 839,
	595, 839,
	597, 839,
	-2, 0,
	-1, 963,
	1, 843,
	593, 843,
	595, 843,
	597, 843,
	-2, 0,
	-1, 964,
	1, 981,
	182, 981,
	593, 981,
	595, 981,
	597, 981,
	-2, 0,
	-1, 972,
	1, 870,
	593, 870,
	595, 870,
	597, 870,
	-2, 0,
	-1, 979,
	1, 916,
	593, 916,
	595, 916,
	597, 916,
	-2, 0,
	-1, 980,
	1, 918,
	593, 918,
	595, 918,
	597, 918,
	-2, 0,
	-1, 981,
	1, 921,
	593, 921,
	595, 921,
	597, 921,
	-2, 0,
	-1, 987,
	1, 945,
	593, 945,
	595, 945,
	597, 945,
	-2, 0,
	-1, 988,
	1, 947,
	593, 947,
	595, 947,
	597, 947,
	-2, 0,
	-1, 993,
	1, 975,
	593, 975,
	595, 975,
	597, 975,
	-2, 0,
	-1, 1042,
	169, 1571,
	182, 1571,
	273, 1571,
	340, 1571,
	-2, 1507,
	-1, 1057,
	169, 1570,
	182, 1570,
	273, 1570,
	340, 1570,
	-2, 1504,
	-1, 1084,
	596, 2288,
	-2, 699,
	-1, 1113,
	5, 2280,
	594, 2278,
	-2, 2269,
	-1, 1121,
	5, 2301,
	594, 2298,
	-2, 2289,
	-1, 1122,
	5, 2302,
	594, 2299,
	-2, 2290,
	-1, 1130,
	596, 2286,
	-2, 2268,
	-1, 1131,
	594, 2720,
	-2, 2287,
	-1, 1154,
	594, 2719,
	-2, 2303,
	-1, 1155,
	5, 1772,
	-2, 2690,
	-1, 1156,
	5, 1773,
	-2, 2691,
	-1, 1157,
	5, 1774,
	-2, 2705,
	-1, 1158,
	5, 1775,
	-2, 2669,
	-1, 1159,
	5, 1776,
	-2, 2703,
	-1, 1160,
	5, 1784,
	-2, 2682,
	-1, 1161,
	5, 1771,
	-2, 2678,
	-1, 1162,
	5, 1771,
	-2, 2677,
	-1, 1163,
	5, 1771,
	-2, 2696,
	-1, 1164,
	5, 1782,
	-2, 2671,
	-1, 1165,
	5, 1787,
	-2, 2670,
	-1, 1166,
	5, 1789,
	-2, 2715,
	-1, 1169,
	5, 1811,
	-2, 2708,
	-1, 1170,
	5, 1803,
	-2, 2709,
	-1, 1171,
	5, 1811,
	-2, 2710,
	-1, 1172,
	5, 1807,
	-2, 2711,
	-1, 1173,
	5, 1757,
	-2, 2683,
	-1, 1174,
	5, 1758,
	-2, 2684,
	-1, 1175,
	5, 1759,
	-2, 2672,
	-1, 1203,
	5, 1794,
	-2, 2716,
	-1, 1204,
	5, 1795,
	-2, 2706,
	-1, 1205,
	5, 1796,
	551, 1796,
	-2, 2673,
	-1, 1206,
	5, 1797,
	551, 1797,
	-2, 2674,
	-1, 1243,
	594, 2298,
	-2, 2289,
	-1, 1244,
	594, 2299,
	-2, 2290,
	-1, 1344,
	186, 2637,
	513, 2637,
	577, 2637,
	596, 2637,
	-2, 0,
	-1, 1347,
	1, 676,
	597, 676,
	-2, 1419,
	-1, 1475,
	359, 2263,
	414, 2263,
	457, 2263,
	587, 2263,
	-2, 2253,
	-1, 1486,
	598, 2263,
	-2, 2265,
	-1, 1494,
	1, 1267,
	419, 1231,
	457, 1231,
	572, 1231,
	593, 1267,
	595, 1267,
	597, 1267,
	-2, 1556,
	-1, 1500,
	202, 1364,
	221, 1364,
	427, 1364,
	-2, 0,
	-1, 1545,
	399, 1051,
	550, 1051,
	-2, 397,
	-1, 1562,
	43, 2261,
	-2, 1017,
	-1, 1569,
	1, 1267,
	593, 1267,
	595, 1267,
	597, 1267,
	-2, 1556,
	-1, 1577,
	4, 1292,
	21, 1292,
	22, 1292,
	23, 1292,
	24, 1292,
	25, 1292,
	26, 1292,
	27, 1292,
	29, 1292,
	30, 1292,
	36, 1292,
	41, 1292,
	42, 1292,
	44, 1292,
	45, 1292,
	46, 1292,
	47, 1292,
	48, 1292,
	49, 1292,
	50, 1292,
	51, 1292,
	53, 1292,
	54, 1292,
	55, 1292,
	56, 1292,
	58, 1292,
	59, 1292,
	60, 1292,
	61, 1292,
	62, 1292,
	63, 1292,
	64, 1292,
	68, 1292,
	69, 1292,
	70, 1292,
	71, 1292,
	73, 1292,
	74, 1292,
	75, 1292,
	79, 1292,
	80, 1292,
	81, 1292,
	82, 1292,
	83, 1292,
	84, 1292,
	85, 1292,
	88, 1292,
	89, 1292,
	90, 1292,
	91, 1292,
	92, 1292,
	94, 1292,
	96, 1292,
	97, 1292,
	98, 1292,
	99, 1292,
	100, 1292,
	101, 1292,
	103, 1292,
	104, 1292,
	105, 1292,
	107, 1292,
	108, 1292,
	109, 1292,
	117, 1292,
	118, 1292,
	119, 1292,
	120, 1292,
	121, 1292,
	123, 1292,
	124, 1292,
	125, 1292,
	127, 1292,
	128, 1292,
	129, 1292,
	131, 1292,
	132, 1292,
	133, 1292,
	135, 1292,
	136, 1292,
	137, 1292,
	140, 1292,
	141, 1292,
	142, 1292,
	144, 1292,
	145, 1292,
	147, 1292,
	148, 1292,
	149, 1292,
	151, 1292,
	152, 1292,
	153, 1292,
	154, 1292,
	155, 1292,
	156, 1292,
	157, 1292,
	158, 1292,
	159, 1292,
	160, 1292,
	161, 1292,
	162, 1292,
	163, 1292,
	164, 1292,
	165, 1292,
	166, 1292,
	174, 1292,
	175, 1292,
	176, 1292,
	177, 1292,
	181, 1292,
	183, 1292,
	184, 1292,
	188, 1292,
	189, 1292,
	190, 1292,
	191, 1292,
	192, 1292,
	193, 1292,
	194, 1292,
	195, 1292,
	196, 1292,
	197, 1292,
	198, 1292,
	199, 1292,
	200, 1292,
	201, 1292,
	203, 1292,
	204, 1292,
	206, 1292,
	207, 1292,
	209, 1292,
	210, 1292,
	211, 1292,
	212, 1292,
	213, 1292,
	214, 1292,
	215, 1292,
	216, 1292,
	217, 1292,
	219, 1292,
	220, 1292,
	222, 1292,
	223, 1292,
	224, 1292,
	225, 1292,
	226, 1292,
	231, 1292,
	232, 1292,
	233, 1292,
	234, 1292,
	237, 1292,
	238, 1292,
	239, 1292,
	241, 1292,
	243, 1292,
	244, 1292,
	246, 1292,
	248, 1292,
	249, 1292,
	250, 1292,
	252, 1292,
	256, 1292,
	257, 1292,
	258, 1292,
	259, 1292,
	260, 1292,
	261, 1292,
	263, 1292,
	264, 1292,
	265, 1292,
	267, 1292,
	268, 1292,
	270, 1292,
	271, 1292,
	274, 1292,
	278, 1292,
	279, 1292,
	280, 1292,
	283, 1292,
	284, 1292,
	285, 1292,
	286, 1292,
	288, 1292,
	289, 1292,
	290, 1292,
	291, 1292,
	292, 1292,
	293, 1292,
	294, 1292,
	295, 1292,
	296, 1292,
	297, 1292,
	298, 1292,
	299, 1292,
	300, 1292,
	301, 1292,
	302, 1292,
	303, 1292,
	304, 1292,
	305, 1292,
	306, 1292,
	307, 1292,
	308, 1292,
	309, 1292,
	311, 1292,
	313, 1292,
	314, 1292,
	315, 1292,
	316, 1292,
	317, 1292,
	318, 1292,
	319, 1292,
	320, 1292,
	321, 1292,
	322, 1292,
	323, 1292,
	324, 1292,
	325, 1292,
	327, 1292,
	328, 1292,
	332, 1292,
	333, 1292,
	335, 1292,
	336, 1292,
	337, 1292,
	338, 1292,
	339, 1292,
	342, 1292,
	344, 1292,
	346, 1292,
	347, 1292,
	348, 1292,
	351, 1292,
	352, 1292,
	353, 1292,
	355, 1292,
	357, 1292,
	358, 1292,
	359, 1292,
	360, 1292,
	361, 1292,
	362, 1292,
	363, 1292,
	364, 1292,
	365, 1292,
	366, 1292,
	367, 1292,
	368, 1292,
	369, 1292,
	371, 1292,
	372, 1292,
	373, 1292,
	374, 1292,
	375, 1292,
	376, 1292,
	377, 1292,
	378, 1292,
	379, 1292,
	380, 1292,
	381, 1292,
	382, 1292,
	383, 1292,
	384, 1292,
	385, 1292,
	387, 1292,
	388, 1292,
	390, 1292,
	391, 1292,
	392, 1292,
	393, 1292,
	394, 1292,
	395, 1292,
	396, 1292,
	397, 1292,
	398, 1292,
	399, 1292,
	400, 1292,
	401, 1292,
	403, 1292,
	405, 1292,
	406, 1292,
	407, 1292,
	412, 1292,
	414, 1292,
	415, 1292,
	416, 1292,
	417, 1292,
	418, 1292,
	419, 1292,
	420, 1292,
	421, 1292,
	422, 1292,
	423, 1292,
	425, 1292,
	426, 1292,
	427, 1292,
	429, 1292,
	430, 1292,
	431, 1292,
	432, 1292,
	433, 1292,
	434, 1292,
	435, 1292,
	437, 1292,
	438, 1292,
	439, 1292,
	440, 1292,
	441, 1292,
	442, 1292,
	443, 1292,
	444, 1292,
	445, 1292,
	446, 1292,
	447, 1292,
	448, 1292,
	450, 1292,
	451, 1292,
	452, 1292,
	453, 1292,
	454, 1292,
	455, 1292,
	457, 1292,
	458, 1292,
	459, 1292,
	460, 1292,
	461, 1292,
	462, 1292,
	464, 1292,
	465, 1292,
	466, 1292,
	467, 1292,
	468, 1292,
	469, 1292,
	470, 1292,
	471, 1292,
	473, 1292,
	475, 1292,
	476, 1292,
	477, 1292,
	478, 1292,
	479, 1292,
	480, 1292,
	481, 1292,
	482, 1292,
	483, 1292,
	484, 1292,
	485, 1292,
	486, 1292,
	487, 1292,
	488, 1292,
	489, 1292,
	490, 1292,
	492, 1292,
	493, 1292,
	495, 1292,
	496, 1292,
	498, 1292,
	499, 1292,
	500, 1292,
	501, 1292,
	502, 1292,
	503, 1292,
	504, 1292,
	505, 1292,
	506, 1292,
	508, 1292,
	509, 1292,
	510, 1292,
	511, 1292,
	512, 1292,
	514, 1292,
	516, 1292,
	517, 1292,
	518, 1292,
	519, 1292,
	520, 1292,
	521, 1292,
	523, 1292,
	524, 1292,
	525, 1292,
	526, 1292,
	528, 1292,
	529, 1292,
	532, 1292,
	533, 1292,
	534, 1292,
	535, 1292,
	536, 1292,
	537, 1292,
	538, 1292,
	540, 1292,
	543, 1292,
	544, 1292,
	545, 1292,
	546, 1292,
	547, 1292,
	548, 1292,
	550, 1292,
	551, 1292,
	552, 1292,
	553, 1292,
	555, 1292,
	560, 1292,
	561, 1292,
	562, 1292,
	563, 1292,
	564, 1292,
	565, 1292,
	-2, 0,
	-1, 1600,
	1, 542,
	593, 542,
	595, 542,
	597, 542,
	-2, 1527,
	-1, 1603,
	4, 2714,
	11, 2714,
	12, 2714,
	14, 2714,
	15, 2714,
	16, 2714,
	17, 2714,
	18, 2714,
	19, 2714,
	21, 2714,
	22, 2714,
	23, 2714,
	24, 2714,
	25, 2714,
	26, 2714,
	27, 2714,
	29, 2714,
	30, 2714,
	33, 2714,
	34, 2714,
	36, 2714,
	38, 2714,
	41, 2714,
	42, 2714,
	44, 2714,
	45, 2714,
	46, 2714,
	47, 2714,
	48, 2714,
	49, 2714,
	50, 2714,
	51, 2714,
	53, 2714,
	54, 2714,
	55, 2714,
	56, 2714,
	58, 2714,
	59, 2714,
	60, 2714,
	61, 2714,
	62, 2714,
	63, 2714,
	64, 2714,
	67, 2714,
	68, 2714,
	69, 2714,
	70, 2714,
	71, 2714,
	73, 2714,
	74, 2714,
	75, 2714,
	76, 2714,
	79, 2714,
	80, 2714,
	81, 2714,
	82, 2714,
	83, 2714,
	84, 2714,
	85, 2714,
	86, 2714,
	88, 2714,
	89, 2714,
	90, 2714,
	91, 2714,
	92, 2714,
	94, 2714,
	95, 2714,
	96, 2714,
	97, 2714,
	98, 2714,
	99, 2714,
	100, 2714,
	101, 2714,
	103, 2714,
	104, 2714,
	105, 2714,
	106, 2714,
	107, 2714,
	108, 2714,
	109, 2714,
	117, 2714,
	118, 2714,
	119, 2714,
	120, 2714,
	121, 2714,
	123, 2714,
	124, 2714,
	125, 2714,
	127, 2714,
	128, 2714,
	129, 2714,
	131, 2714,
	132, 2714,
	133, 2714,
	135, 2714,
	136, 2714,
	137, 2714,
	140, 2714,
	141, 2714,
	142, 2714,
	144, 2714,
	145, 2714,
	147, 2714,
	148, 2714,
	149, 2714,
	151, 2714,
	152, 2714,
	153, 2714,
	154, 2714,
	155, 2714,
	156, 2714,
	157, 2714,
	158, 2714,
	159, 2714,
	160, 2714,
	161, 2714,
	162, 2714,
	163, 2714,
	164, 2714,
	165, 2714,
	166, 2714,
	170, 2714,
	171, 2714,
	172, 2714,
	173, 2714,
	174, 2714,
	175, 2714,
	176, 2714,
	177, 2714,
	180, 2714,
	181, 2714,
	183, 2714,
	184, 2714,
	187, 2714,
	188, 2714,
	189, 2714,
	190, 2714,
	191, 2714,
	192, 2714,
	193, 2714,
	194, 2714,
	195, 2714,
	196, 2714,
	197, 2714,
	198, 2714,
	199, 2714,
	200, 2714,
	201, 2714,
	203, 2714,
	204, 2714,
	206, 2714,
	207, 2714,
	209, 2714,
	210, 2714,
	211, 2714,
	212, 2714,
	213, 2714,
	214, 2714,
	215, 2714,
	216, 2714,
	217, 2714,
	218, 2714,
	219, 2714,
	220, 2714,
	221, 2714,
	222, 2714,
	223, 2714,
	224, 2714,
	225, 2714,
	226, 2714,
	228, 2714,
	229, 2714,
	231, 2714,
	232, 2714,
	233, 2714,
	234, 2714,
	236, 2714,
	237, 2714,
	238, 2714,
	239, 2714,
	241, 2714,
	243, 2714,
	244, 2714,
	245, 2714,
	246, 2714,
	247, 2714,
	248, 2714,
	249, 2714,
	250, 2714,
	251, 2714,
	252, 2714,
	254, 2714,
	255, 2714,
	256, 2714,
	257, 2714,
	258, 2714,
	259, 2714,
	260, 2714,
	261, 2714,
	263, 2714,
	264, 2714,
	265, 2714,
	267, 2714,
	268, 2714,
	269, 2714,
	270, 2714,
	271, 2714,
	272, 2714,
	274, 2714,
	278, 2714,
	279, 2714,
	280, 2714,
	283, 2714,
	284, 2714,
	285, 2714,
	286, 2714,
	287, 2714,
	288, 2714,
	289, 2714,
	290, 2714,
	291, 2714,
	292, 2714,
	293, 2714,
	294, 2714,
	295, 2714,
	296, 2714,
	297, 2714,
	298, 2714,
	299, 2714,
	300, 2714,
	301, 2714,
	302, 2714,
	303, 2714,
	304, 2714,
	305, 2714,
	306, 2714,
	307, 2714,
	308, 2714,
	309, 2714,
	311, 2714,
	312, 2714,
	313, 2714,
	314, 2714,
	315, 2714,
	316, 2714,
	317, 2714,
	318, 2714,
	319, 2714,
	320, 2714,
	321, 2714,
	322, 2714,
	323, 2714,
	324, 2714,
	325, 2714,
	327, 2714,
	328, 2714,
	331, 2714,
	332, 2714,
	333, 2714,
	335, 2714,
	336, 2714,
	337, 2714,
	338, 2714,
	339, 2714,
	342, 2714,
	346, 2714,
	347, 2714,
	348, 2714,
	349, 2714,
	351, 2714,
	352, 2714,
	353, 2714,
	355, 2714,
	357, 2714,
	358, 2714,
	359, 2714,
	360, 2714,
	361, 2714,
	362, 2714,
	363, 2714,
	364, 2714,
	365, 2714,
	366, 2714,
	367, 2714,
	368, 2714,
	369, 2714,
	371, 2714,
	372, 2714,
	373, 2714,
	374, 2714,
	375, 2714,
	376, 2714,
	377, 2714,
	378, 2714,
	379, 2714,
	380, 2714,
	381, 2714,
	382, 2714,
	383, 2714,
	384, 2714,
	385, 2714,
	387, 2714,
	388, 2714,
	390, 2714,
	391, 2714,
	392, 2714,
	393, 2714,
	394, 2714,
	395, 2714,
	396, 2714,
	397, 2714,
	398, 2714,
	399, 2714,
	400, 2714,
	401, 2714,
	403, 2714,
	405, 2714,
	406, 2714,
	407, 2714,
	412, 2714,
	413, 2714,
	414, 2714,
	415, 2714,
	416, 2714,
	417, 2714,
	418, 2714,
	419, 2714,
	420, 2714,
	421, 2714,
	422, 2714,
	423, 2714,
	425, 2714,
	426, 2714,
	427, 2714,
	428, 2714,
	429, 2714,
	430, 2714,
	431, 2714,
	432, 2714,
	433, 2714,
	434, 2714,
	435, 2714,
	436, 2714,
	437, 2714,
	438, 2714,
	439, 2714,
	440, 2714,
	441, 2714,
	442, 2714,
	443, 2714,
	444, 2714,
	445, 2714,
	446, 2714,
	447, 2714,
	448, 2714,
	450, 2714,
	451, 2714,
	452, 2714,
	453, 2714,
	454, 2714,
	455, 2714,
	457, 2714,
	458, 2714,
	459, 2714,
	460, 2714,
	461, 2714,
	462, 2714,
	463, 2714,
	464, 2714,
	465, 2714,
	466, 2714,
	467, 2714,
	468, 2714,
	469, 2714,
	470, 2714,
	471, 2714,
	473, 2714,
	475, 2714,
	476, 2714,
	477, 2714,
	478, 2714,
	479, 2714,
	480, 2714,
	481, 2714,
	482, 2714,
	483, 2714,
	484, 2714,
	485, 2714,
	486, 2714,
	487, 2714,
	488, 2714,
	489, 2714,
	490, 2714,
	492, 2714,
	493, 2714,
	494, 2714,
	495, 2714,
	496, 2714,
	498, 2714,
	499, 2714,
	500, 2714,
	501, 2714,
	502, 2714,
	503, 2714,
	504, 2714,
	505, 2714,
	506, 2714,
	508, 2714,
	509, 2714,
	510, 2714,
	511, 2714,
	512, 2714,
	514, 2714,
	516, 2714,
	517, 2714,
	518, 2714,
	519, 2714,
	520, 2714,
	521, 2714,
	523, 2714,
	524, 2714,
	525, 2714,
	526, 2714,
	528, 2714,
	529, 2714,
	532, 2714,
	533, 2714,
	534, 2714,
	535, 2714,
	536, 2714,
	537, 2714,
	538, 2714,
	540, 2714,
	543, 2714,
	544, 2714,
	545, 2714,
	546, 2714,
	547, 2714,
	548, 2714,
	550, 2714,
	551, 2714,
	552, 2714,
	553, 2714,
	555, 2714,
	560, 2714,
	561, 2714,
	562, 2714,
	563, 2714,
	564, 2714,
	565, 2714,
	566, 2714,
	568, 2714,
	575, 2714,
	576, 2714,
	577, 2714,
	578, 2714,
	579, 2714,
	580, 2714,
	582, 2714,
	583, 2714,
	584, 2714,
	585, 2714,
	586, 2714,
	587, 2714,
	588, 2714,
	589, 2714,
	590, 2714,
	592, 2714,
	595, 2714,
	596, 2714,
	598, 2714,
	599, 2714,
	-2, 0,
	-1, 1608,
	186, 2596,
	513, 2596,
	577, 2596,
	596, 2596,
	-2, 0,
	-1, 1657,
	392, 865,
	455, 865,
	496, 865,
	518, 865,
	-2, 0,
	-1, 1668,
	1, 1364,
	593, 1364,
	595, 1364,
	597, 1364,
	-2, 0,
	-1, 1685,
	1, 860,
	593, 860,
	595, 860,
	597, 860,
	-2, 0,
	-1, 1686,
	1, 903,
	593, 903,
	595, 903,
	597, 903,
	-2, 0,
	-1, 1687,
	1, 911,
	593, 911,
	595, 911,
	597, 911,
	-2, 0,
	-1, 1690,
	1, 869,
	593, 869,
	595, 869,
	597, 869,
	-2, 0,
	-1, 1692,
	1, 875,
	593, 875,
	595, 875,
	597, 875,
	-2, 0,
	-1, 1695,
	1, 871,
	593, 871,
	595, 871,
	597, 871,
	-2, 0,
	-1, 1700,
	1, 885,
	593, 885,
	595, 885,
	597, 885,
	-2, 0,
	-1, 1731,
	1, 2579,
	593, 2579,
	595, 2579,
	596, 2579,
	597, 2579,
	-2, 0,
	-1, 1735,
	1, 956,
	593, 956,
	595, 956,
	597, 956,
	-2, 0,
	-1, 1750,
	1, 1414,
	597, 1414,
	-2, 1419,
	-1, 1753,
	169, 1570,
	182, 1570,
	273, 1570,
	340, 1570,
	-2, 1508,
	-1, 1853,
	150, 1529,
	169, 1529,
	182, 1529,
	240, 1529,
	273, 1529,
	340, 1529,
	350, 1529,
	530, 1529,
	-2, 1976,
	-1, 1913,
	595, 2149,
	-2, 0,
	-1, 1948,
	150, 1529,
	169, 1529,
	182, 1529,
	240, 1529,
	273, 1529,
	340, 1529,
	350, 1529,
	530, 1529,
	-2, 1658,
	-1, 1983,
	513, 2593,
	596, 2593,
	599, 2593,
	-2, 0,
	-1, 2000,
	594, 1799,
	-2, 1787,
	-1, 2032,
	186, 2593,
	596, 2593,
	599, 2593,
	-2, 0,
	-1, 2080,
	1, 678,
	597, 678,
	-2, 1419,
	-1, 2213,
	221, 256,
	-2, 2297,
	-1, 2214,
	221, 257,
	-2, 305,
	-1, 2318,
	1, 862,
	593, 862,
	595, 862,
	597, 862,
	-2, 0,
	-1, 2319,
	1, 905,
	593, 905,
	595, 905,
	597, 905,
	-2, 0,
	-1, 2320,
	1, 913,
	593, 913,
	595, 913,
	597, 913,
	-2, 0,
	-1, 2321,
	1, 958,
	593, 958,
	595, 958,
	597, 958,
	-2, 0,
	-1, 2361,
	1, 887,
	593, 887,
	595, 887,
	597, 887,
	-2, 0,
	-1, 2379,
	1, 941,
	593, 941,
	595, 941,
	597, 941,
	-2, 0,
	-1, 2424,
	434, 1597,
	435, 1597,
	-2, 1832,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1852,
	-1, 2456,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1853,
	-1, 2457,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1854,
	-1, 2458,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1855,
	-1, 2459,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1856,
	-1, 2460,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1857,
	-1, 2461,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1858,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1859,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1871,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1872,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1873,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1880,
	-1, 2486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1884,
	-1, 2488,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1892,
	-1, 2489,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1893,
	-1, 2490,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1894,
	-1, 2491,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1895,
	-1, 2663,
	5, 2301,
	186, 2160,
	594, 2298,
	-2, 2289,
	-1, 2664,
	186, 2161,
	-2, 2665,
	-1, 2665,
	186, 2162,
	-2, 2486,
	-1, 2666,
	186, 2163,
	-2, 2371,
	-1, 2667,
	186, 2164,
	-2, 2426,
	-1, 2668,
	186, 2165,
	-2, 2471,
	-1, 2669,
	186, 2166,
	-2, 2591,
	-1, 2670,
	186, 2167,
	-2, 1959,
	-1, 2741,
	1, 1659,
	2, 1659,
	106, 1659,
	150, 1659,
	169, 1659,
	182, 1659,
	187, 1659,
	205, 1659,
	208, 1659,
	236, 1659,
	240, 1659,
	251, 1659,
	269, 1659,
	273, 1659,
	312, 1659,
	340, 1659,
	344, 1659,
	350, 1659,
	424, 1659,
	428, 1659,
	530, 1659,
	541, 1659,
	557, 1659,
	558, 1659,
	559, 1659,
	569, 1659,
	593, 1659,
	595, 1659,
	597, 1659,
	599, 1659,
	-2, 1658,
	-1, 2754,
	594, 2270,
	-2, 2284,
	-1, 2756,
	1, 322,
	557, 322,
	-2, 1556,
	-1, 2784,
	594, 1798,
	-2, 1788,
	-1, 2969,
	1, 1267,
	419, 1231,
	457, 1231,
	572, 1231,
	593, 1267,
	595, 1267,
	597, 1267,
	-2, 1556,
	-1, 3148,
	345, 1600,
	-2, 2704,
	-1, 3149,
	345, 1601,
	-2, 2576,
	-1, 3153,
	434, 2226,
	435, 2226,
	-2, 1957,
	-1, 3154,
	434, 2230,
	435, 2230,
	-2, 1958,
	-1, 3155,
	434, 2227,
	435, 2227,
	-2, 1957,
	-1, 3156,
	434, 2231,
	435, 2231,
	-2, 1958,
	-1, 3169,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1882,
	-1, 3170,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1886,
	-1, 3176,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1888,
	-1, 3399,
	1, 675,
	593, 675,
	595, 675,
	597, 675,
	-2, 1419,
	-1, 3569,
	43, 2261,
	-2, 1018,
	-1, 3574,
	1, 1267,
	593, 1267,
	595, 1267,
	597, 1267,
	-2, 1556,
	-1, 3682,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1890,
	-1, 3689,
	245, 0,
	247, 0,
	331, 0,
	-2, 1909,
	-1, 3757,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1938,
	-1, 3758,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1939,
	-1, 3759,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1940,
	-1, 3763,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1944,
	-1, 3764,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1945,
	-1, 3765,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1946,
	-1, 3812,
	594, 2271,
	-2, 2285,
	-1, 3985,
	596, 2822,
	-2, 1482,
	-1, 4043,
	245, 0,
	247, 0,
	331, 0,
	-2, 1910,
	-1, 4046,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1913,
	-1, 4047,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1915,
	-1, 4144,
	596, 2286,
	-2, 1302,
	-1, 4295,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1914,
	-1, 4296,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1916,
	-1, 4307,
	245, 0,
	-2, 1949,
	-1, 4491,
	245, 0,
	-2, 1950,
	-1, 4685,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 2668,
}

const sqlPrivate = 57344

const sqlLast = 129860

var sqlAct = [...]int{
	270, 4800, 3558, 4413, 4879, 3307, 3053, 4529, 3040, 4678,
	4677, 4741, 4787, 4521, 4355, 2847, 4684, 4666, 4556, 3557,
	4695, 4816, 4577, 4552, 4653, 2210, 4634, 2128, 4613, 4444,
	4696, 4631, 4697, 4026, 4754, 4420, 4338, 2891, 2285, 3722,
	4251, 2913, 4398, 4495, 1247, 4246, 4683, 4187, 4212, 4360,
	4316, 3977, 3674, 4284, 2434, 1316, 4140, 4233, 3969, 1320,
	3591, 4429, 4226, 3421, 1236, 3905, 1309, 4141, 4235, 1067,
	3162, 698, 1987, 4458, 2696, 808, 2503, 3553, 4122, 1762,
	3950, 4256, 2926, 2062, 1058, 3585, 2294, 2442, 3483, 769,
	2049, 3543, 1624, 3932, 2136, 3424, 3934, 1380, 2435, 3630,
	3075, 808, 3632, 3536, 1954, 3029, 3010, 1472, 3062, 2999,
	3064, 3815, 3313, 3322, 2258, 3535, 3351, 3330, 3290, 881,
	4, 1311, 4312, 3072, 4025, 3024, 709, 1066, 178, 3026,
	3061, 3055, 3410, 3311, 1923, 1665, 3041, 2292, 2197, 2940,
	885, 4788, 4082, 2199, 3443, 2976, 2147, 2734, 2849, 3289,
	2439, 4496, 3783, 1899, 1861, 1831, 2516, 1479, 3146, 2581,
	876, 3418, 1314, 803, 3071, 2945, 1564, 1227, 949, 2736,
	2198, 764, 3003, 2174, 2193, 2583, 2181, 1362, 2890, 1509,
	2116, 1750, 1988, 3011, 2120, 1288, 1117, 2060, 2714, 2733,
	1113, 1122, 1924, 2693, 264, 2572, 2406, 263, 2106, 2423,
	2500, 3555, 2404, 2767, 1601, 2245, 3034, 1622, 1302, 742,
	3358, 1567, 809, 810, 2872, 4578, 4801, 805, 2835, 685,
	1349, 178, 2766, 707, 3065, 1894, 3926, 2575, 1933, 1940,
	2723, 2704, 1230, 1209, 1943, 2659, 2553, 1244, 2625, 1845,
	187, 1763, 1299, 2405, 2407, 1764, 1700, 188, 750, 1685,
	2207, 762, 1592, 2271, 1504, 2244, 1599, 2135, 4742, 2428,
	1098, 2038, 2035, 1120, 702, 44, 1226, 43, 108, 814,
	41, 725, 817, 32, 30, 1124, 28, 1207, 1769, 699,
	857, 710, 1749, 798, 1232, 3199, 970, 1515, 3797, 3193,
	3798, 3309, 4892, 2051, 2051, 814, 2713, 858, 817, 4722,
	2051, 2051, 2051, 2051, 2051, 4331, 4882, 1062, 4866, 159,
	3610, 1631, 2713, 3601, 1358, 1062, 4328, 73, 900, 46,
	45, 4865, 4855, 4836, 4834, 2713, 2219, 4359, 4359, 3610,
	2219, 4773, 1508, 3600, 74, 2219, 4730, 154, 4719, 2219,
	4731, 4717, 2713, 4714, 2293, 2713, 3383, 4715, 73, 1224,
	78, 3381, 4711, 4681, 4680, 1052, 4712, 2219, 2219, 4679,
	4674, 67, 4673, 2072, 2072, 74, 2072, 4664, 48, 4662,
	156, 4359, 4659, 4359, 4629, 4602, 4432, 2706, 4359, 2775,
	4595, 78, 4594, 4589, 2713, 4588, 2713, 4359, 47, 4359,
	87, 4582, 3260, 3261, 1266, 2219, 4548, 4493, 1210, 1210,
	4203, 2775, 2069, 3161, 4475, 4472, 1777, 1778, 4012, 2219,
	4469, 4422, 1119, 2713, 4359, 4423, 50, 68, 4376, 1043,
	4375, 87, 2219, 4103, 2219, 51, 1042, 1242, 4366, 4365,
	57, 4358, 2219, 4359, 157, 4359, 1780, 4323, 2771, 4297,
	1358, 2219, 49, 2775, 107, 3366, 4603, 4275, 4264, 93,
	104, 2072, 3610, 4182, 4497, 4488, 3208, 2713, 1063, 1777,
	1778, 883, 3209, 2219, 4165, 1821, 1822, 1823, 2713, 4476,
	3787, 1779, 4045, 49, 1057, 107, 2775, 2796, 2219, 3993,
	93, 104, 1808, 3627, 3987, 93, 4432, 1259, 3627, 1780,
	52, 1517, 3948, 3807, 2072, 3805, 3949, 3808, 1827, 3806,
	1239, 1617, 3790, 3787, 2705, 3706, 2713, 1211, 94, 2219,
	4244, 4203, 3702, 3260, 3261, 1833, 2713, 3626, 3617, 3306,
	2069, 3627, 3618, 2713, 1779, 3301, 3300, 1260, 3251, 2713,
	2713, 2069, 3252, 3249, 1799, 4166, 3241, 3250, 3239, 94,
	3242, 3210, 2713, 1796, 3079, 2713, 3051, 4012, 2072, 3050,
	2281, 1691, 3618, 2281, 1529, 2819, 2713, 2916, 2774, 2713,
	2140, 3266, 2775, 2795, 3198, 2764, 2758, 2712, 2280, 2713,
	2219, 2713, 2281, 1260, 1213, 1785, 1214, 2834, 2085, 2050,
	2066, 3005, 2218, 2936, 2832, 1919, 1503, 1777, 1778, 3888,
	1810, 1811, 1812, 1821, 1822, 1823, 3677, 3651, 1941, 2186,
	1667, 2750, 2749, 3602, 2748, 2747, 2746, 234, 1215, 1212,
	1808, 1051, 1050, 1049, 1048, 1047, 1046, 1780, 1802, 1803,
	1804, 1805, 3603, 1508, 1045, 1041, 1827, 1040, 1785, 1039,
	1038, 1037, 1036, 1035, 1523, 1516, 1167, 3120, 2608, 1034,
	1033, 1032, 1031, 1833, 1030, 1029, 1028, 1027, 1026, 1238,
	2052, 2052, 1779, 1025, 97, 236, 1024, 2052, 2052, 2052,
	2052, 2052, 1799, 1006, 947, 946, 1818, 945, 3276, 1828,
	944, 1796, 53, 943, 3260, 3261, 1807, 1809, 942, 941,
	940, 1517, 3266, 939, 938, 97, 56, 937, 936, 935,
	1115, 59, 934, 933, 932, 931, 930, 929, 1777, 1778,
	69, 2354, 1794, 1795, 235, 928, 58, 186, 100, 927,
	926, 103, 3260, 3261, 925, 54, 4258, 924, 2069, 158,
	1816, 1808, 1096, 923, 4702, 922, 3600, 55, 1780, 921,
	920, 1517, 919, 918, 917, 1800, 916, 234, 186, 100,
	915, 1830, 103, 1325, 1122, 62, 1802, 1803, 1804, 1805,
	149, 1635, 189, 914, 1833, 1830, 1785, 4098, 234, 1260,
	3037, 913, 4057, 1779, 2069, 155, 1528, 1621, 234, 903,
	902, 1122, 1122, 234, 898, 897, 884, 891, 890, 875,
	874, 149, 831, 830, 829, 236, 149, 3275, 1383, 3276,
	2705, 828, 1383, 820, 1818, 819, 818, 1828, 784, 1325,
	775, 774, 773, 756, 1807, 1809, 236, 1260, 1830, 258,
	257, 153, 256, 255, 1333, 1517, 236, 3277, 254, 253,
	252, 236, 251, 1122, 250, 1122, 190, 1122, 2219, 2806,
	1794, 1795, 249, 1325, 235, 2050, 2069, 2066, 2795, 2399,
	1366, 1367, 153, 3266, 248, 247, 1522, 228, 1816, 246,
	1353, 245, 244, 243, 242, 235, 229, 190, 241, 1325,
	1487, 1806, 1830, 1800, 240, 235, 239, 1785, 228, 1065,
	235, 238, 237, 3829, 3801, 3628, 1482, 229, 228, 1325,
	3354, 3266, 189, 228, 1801, 3, 1325, 229, 3221, 3204,
	3304, 3195, 229, 3103, 1122, 2986, 1122, 2779, 3019, 2755,
	1325, 2740, 1902, 189, 1944, 2594, 1122, 2114, 1122, 1901,
	2071, 1819, 2592, 189, 1967, 1807, 1809, 1507, 189, 1902,
	2288, 4260, 1293, 1296, 1872, 1511, 1901, 1573, 1576, 1369,
	3305, 1776, 4350, 1246, 4682, 1905, 1830, 4661, 3277, 4563,
	3260, 3261, 1832, 1863, 1306, 1347, 4485, 4479, 234, 4477,
	3276, 4311, 1900, 2578, 1376, 1325, 1469, 1474, 4500, 1240,
	1492, 4265, 4243, 3271, 3269, 3270, 3262, 3263, 3264, 3265,
	3267, 3268, 3260, 3261, 1800, 1122, 1870, 4109, 1122, 4080,
	1781, 1782, 1783, 1784, 1786, 1787, 4079, 4073, 3276, 1806,
	3953, 4072, 4071, 4064, 4063, 4061, 236, 4056, 234, 1477,
	4053, 234, 4052, 3947, 2287, 3833, 814, 178, 178, 817,
	3832, 3831, 1801, 1342, 1817, 3811, 3778, 3777, 3776, 1562,
	3698, 3693, 3349, 1830, 1506, 1505, 1820, 1797, 1793, 3297,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1819,
	1604, 1606, 2579, 1863, 3288, 235, 236, 1830, 3259, 236,
	1636, 3256, 3255, 3253, 3248, 3260, 3261, 3247, 228, 3246,
	3243, 1830, 3240, 3220, 3203, 1223, 3196, 229, 3886, 3194,
	1832, 3052, 1579, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 234, 234, 234, 2741, 3269, 3270, 3262, 3263, 3264,
	3265, 3267, 3268, 189, 1865, 235, 2565, 1353, 235, 3277,
	1353, 1864, 1776, 1862, 2261, 1693, 1122, 1775, 228, 3266,
	4886, 228, 1122, 2226, 4826, 1709, 2224, 229, 4825, 1641,
	229, 3954, 4789, 1801, 2580, 4740, 2577, 1754, 4738, 236,
	236, 236, 1080, 1248, 3724, 4621, 4555, 3277, 4539, 4536,
	1595, 3266, 1817, 189, 4535, 3021, 189, 1063, 234, 4534,
	4514, 1791, 1792, 1798, 1820, 1797, 1793, 4499, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 4498, 4473, 1777,
	1778, 4259, 4457, 4456, 2506, 1748, 4442, 4439, 235, 235,
	235, 1832, 1616, 4438, 4433, 4372, 1322, 4346, 4309, 4292,
	4291, 228, 228, 228, 1630, 3302, 236, 4272, 234, 1780,
	229, 229, 229, 2512, 4271, 4229, 4204, 4097, 1852, 4501,
	3346, 4078, 4013, 4007, 234, 4004, 3874, 1122, 1122, 1122,
	3873, 3857, 1755, 1122, 3266, 3856, 189, 189, 3036, 3854,
	1244, 2607, 1244, 3793, 1779, 3781, 3688, 1850, 3629, 3611,
	3577, 3500, 3954, 1658, 3456, 235, 236, 1383, 3262, 3263,
	3264, 3265, 3267, 3268, 3423, 1921, 1122, 3373, 228, 808,
	1694, 234, 236, 3375, 3225, 2005, 808, 229, 3224, 1325,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 2582, 3219,
	3185, 1593, 2998, 3271, 3269, 3270, 3262, 3263, 3264, 3265,
	3267, 3268, 1908, 189, 1907, 235, 1751, 1930, 1906, 2037,
	1903, 1895, 1759, 1758, 39, 1893, 2786, 1043, 228, 236,
	2785, 235, 2752, 2745, 1042, 2711, 234, 229, 1777, 1778,
	2590, 1830, 1849, 1966, 228, 1904, 1922, 1917, 1753, 1916,
	1978, 3276, 1915, 229, 1914, 1325, 1975, 1913, 1785, 1772,
	1773, 1912, 1122, 189, 1951, 3020, 1325, 1911, 1780, 1910,
	1909, 1890, 1927, 1928, 1889, 1888, 1887, 1886, 235, 189,
	1885, 178, 1884, 1122, 236, 1883, 1882, 1881, 1880, 1879,
	1383, 228, 1878, 1877, 1063, 234, 1876, 1865, 1210, 1851,
	229, 1848, 1843, 1779, 2056, 1341, 2130, 2058, 1896, 1897,
	1264, 1255, 4232, 2063, 2576, 4105, 4049, 2065, 3828, 2103,
	3804, 3796, 2068, 3207, 1830, 4329, 189, 2777, 2743, 4107,
	3260, 3261, 2289, 235, 1598, 3827, 2078, 1864, 3371, 1846,
	1242, 3606, 1242, 236, 2788, 2105, 228, 1962, 1970, 2077,
	2105, 1353, 2112, 4168, 2105, 229, 1363, 4823, 1973, 1984,
	4815, 2914, 1974, 4537, 1358, 1365, 2033, 2097, 2096, 4434,
	4425, 2105, 2107, 814, 3459, 4424, 817, 1942, 1971, 4263,
	814, 189, 4206, 817, 1949, 4205, 4167, 1952, 4100, 4016,
	4015, 4014, 235, 3799, 3613, 3612, 1979, 3957, 2054, 4430,
	3277, 1902, 2895, 2028, 1944, 228, 1920, 1358, 1901, 3675,
	2140, 2091, 2183, 1239, 229, 1239, 1746, 2943, 2593, 1961,
	1063, 1960, 1325, 1325, 1959, 2591, 3900, 1957, 1956, 1364,
	1955, 3245, 1383, 4480, 1946, 4478, 3264, 3265, 3267, 3268,
	189, 3244, 3167, 3492, 4349, 1985, 2080, 2877, 1022, 1361,
	3871, 2578, 1657, 3425, 1358, 2941, 3560, 4752, 3559, 3622,
	1999, 1710, 1874, 1666, 2286, 4421, 3262, 3263, 3264, 3265,
	3267, 3268, 4726, 4707, 1885, 4694, 3544, 1885, 4136, 3076,
	1667, 2200, 2310, 2201, 3961, 1871, 3944, 3902, 3897, 2100,
	3309, 3879, 2168, 1023, 2173, 3648, 3397, 2178, 4313, 2076,
	3726, 3213, 2573, 2784, 1918, 1898, 3551, 4703, 2255, 1572,
	1499, 1336, 4130, 1292, 2211, 2216, 2933, 2074, 4716, 4713,
	3596, 2930, 2928, 3849, 3527, 4530, 1325, 2083, 1325, 4368,
	1325, 4342, 4247, 4628, 4511, 3428, 3866, 3059, 3033, 4771,
	2579, 2108, 2098, 4770, 1598, 3669, 1325, 1325, 3270, 3262,
	3263, 3264, 3265, 3267, 3268, 3915, 2922, 1325, 4394, 2874,
	4153, 1359, 1238, 4155, 1238, 1061, 4131, 4151, 1689, 1325,
	2942, 1325, 1325, 1325, 4704, 1645, 2146, 1222, 1539, 3102,
	2262, 1597, 2414, 3401, 2851, 870, 2820, 2205, 2203, 2204,
	1547, 3403, 4805, 1020, 2251, 808, 2367, 2838, 1018, 1501,
	1707, 2296, 2365, 4881, 2102, 1016, 4543, 4387, 2309, 1014,
	1011, 2978, 2836, 2167, 4378, 4196, 2921, 1122, 814, 2873,
	2081, 817, 2580, 3914, 2577, 2838, 4195, 3913, 2256, 2092,
	3912, 2319, 3904, 3894, 3893, 3891, 1506, 1505, 3890, 3878,
	2836, 2412, 2101, 2268, 3844, 1708, 3843, 3533, 3532, 3365,
	3218, 3217, 1122, 3216, 3215, 1060, 2166, 1002, 3171, 2939,
	2177, 2938, 2935, 3852, 2314, 1783, 1784, 1786, 1787, 2924,
	1348, 2912, 1688, 2291, 2911, 2905, 2904, 1548, 2217, 1355,
	2903, 2882, 2621, 1365, 2276, 2881, 1122, 2842, 1122, 3030,
	871, 2765, 2487, 1752, 2320, 1122, 2620, 2854, 2005, 2005,
	1383, 1706, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2237, 1122,
	2265, 1122, 1122, 1122, 1122, 2278, 2236, 1364, 1359, 4369,
	1365, 4343, 1689, 2444, 2297, 1643, 748, 2414, 2398, 2270,
	1360, 2137, 3372, 2416, 2274, 1062, 2403, 1122, 2302, 4126,
	4150, 1122, 1122, 1595, 4127, 2273, 2582, 2273, 3458, 1122,
	1342, 1638, 2282, 1122, 2283, 1122, 1122, 2413, 748, 814,
	3425, 1597, 817, 1383, 1063, 2133, 1063, 4806, 1359, 1122,
	1122, 1122, 1122, 3490, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 2339, 2301, 1364, 1686, 2412, 1787, 1356, 2201,
	2286, 2002, 2379, 2792, 2138, 2139, 4129, 1357, 2318, 2235,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2329,
	4810, 2391, 4132, 1122, 2875, 2554, 2555, 2875, 1585, 1583,
	1584, 1582, 4115, 2769, 2134, 1244, 1688, 2827, 2326, 2554,
	2570, 2411, 1383, 4290, 1543, 2879, 1355, 3649, 782, 2361,
	1502, 1244, 1240, 4403, 1240, 1993, 1008, 2378, 1687, 1278,
	2440, 2441, 2778, 2140, 2396, 2616, 2427, 1122, 1383, 2306,
	2388, 1744, 2576, 1556, 2502, 4523, 2899, 2410, 2853, 1639,
	2171, 3082, 2502, 3126, 2662, 2662, 2676, 1962, 2554, 3268,
	1561, 2697, 2699, 2865, 2573, 4114, 1355, 2703, 2402, 2401,
	1655, 2400, 2892, 2893, 2415, 2518, 2408, 2892, 2893, 2757,
	1043, 2892, 2893, 1043, 1043, 1719, 4811, 2431, 4169, 2569,
	2432, 2433, 4770, 1659, 2728, 1059, 2371, 1360, 2109, 2110,
	4149, 2390, 3144, 2510, 1723, 2323, 4838, 4819, 1705, 2317,
	2508, 2753, 2413, 3491, 3159, 2864, 2275, 2720, 2327, 1332,
	3658, 4128, 3657, 1999, 1999, 1757, 3117, 1568, 780, 1745,
	747, 2582, 4194, 1951, 3923, 1602, 1340, 2932, 873, 872,
	2841, 2618, 911, 1325, 1325, 4152, 2619, 1360, 2823, 2622,
	1358, 2623, 2624, 2841, 2514, 1356, 3892, 3889, 4700, 1210,
	4137, 4138, 747, 3129, 1357, 3836, 4525, 2825, 1667, 2931,
	1667, 2567, 3712, 2768, 2929, 2927, 2772, 2484, 1566, 3400,
	3715, 3823, 3875, 3539, 178, 1383, 2411, 1063, 1702, 3924,
	4784, 3531, 2719, 2852, 2397, 1242, 4813, 1063, 1514, 2815,
	1521, 1063, 1527, 2809, 2826, 1356, 3488, 904, 2934, 2902,
	2837, 1242, 2742, 2880, 1357, 2801, 2671, 2658, 4841, 2005,
	2688, 2805, 2791, 2701, 997, 2824, 1054, 3182, 997, 2709,
	2710, 4792, 3922, 3863, 2721, 2816, 4791, 2780, 2725, 2726,
	749, 1353, 2763, 1904, 3652, 2727, 3158, 2732, 1056, 4759,
	2738, 2739, 1056, 1949, 3713, 2148, 3180, 1383, 1012, 4031,
	2366, 2817, 2812, 1012, 1644, 4030, 2364, 4404, 1239, 1615,
	1012, 1620, 749, 1325, 1013, 1012, 4599, 3540, 2152, 4402,
	4289, 1629, 2878, 1634, 1239, 4400, 1251, 3593, 1642, 1063,
	997, 868, 697, 867, 1122, 1122, 3128, 1122, 1055, 3475,
	2843, 2787, 2811, 4147, 3876, 1545, 2184, 2387, 1855, 2800,
	1896, 1897, 1860, 2803, 1056, 2804, 3123, 2839, 692, 808,
	3537, 1325, 2790, 1777, 1778, 2818, 4869, 3125, 1249, 3482,
	2840, 2794, 4399, 4701, 2582, 2149, 2900, 1358, 3467, 2925,
	998, 2810, 781, 2808, 998, 2482, 1808, 1692, 2485, 2184,
	1720, 3861, 1325, 1780, 3476, 2223, 2222, 2180, 4817, 3594,
	4401, 3044, 4467, 2884, 1325, 3937, 1325, 821, 2389, 2051,
	2868, 1253, 4609, 3017, 3935, 2821, 3073, 2973, 4668, 1833,
	4669, 1325, 2160, 2883, 2179, 2325, 2196, 1358, 1779, 4812,
	3412, 783, 1542, 3468, 4334, 779, 2901, 3474, 3177, 2481,
	3503, 2885, 2894, 2896, 2897, 2898, 998, 1277, 2582, 3083,
	3084, 2856, 2859, 2970, 2971, 4459, 2846, 1238, 2175, 2981,
	3090, 3091, 3092, 3178, 2983, 1932, 1640, 3183, 4460, 1122,
	3127, 4524, 2974, 1238, 2915, 4699, 3466, 2161, 1252, 3593,
	3013, 2195, 2153, 892, 3151, 3152, 2187, 2138, 2139, 2907,
	2906, 2194, 3939, 2910, 905, 906, 3077, 2909, 4531, 4550,
	4148, 4461, 2920, 4597, 4818, 1568, 3402, 2838, 2143, 3440,
	746, 1717, 1668, 1500, 1262, 2972, 2172, 2176, 178, 1891,
	2159, 3100, 2857, 814, 2002, 2002, 817, 3938, 2979, 1721,
	1122, 3444, 1785, 3002, 1999, 3173, 1122, 1122, 3058, 4221,
	4820, 1506, 2984, 2501, 4598, 3080, 1936, 3369, 2154, 2155,
	3085, 3048, 3086, 814, 4758, 2908, 817, 3046, 2996, 2184,
	912, 1009, 3006, 2144, 4463, 2041, 3439, 1654, 1656, 3106,
	3097, 999, 2150, 2131, 4027, 999, 3007, 2908, 1993, 1993,
	1807, 1809, 3131, 3446, 3133, 3538, 3108, 4462, 3110, 2509,
	3112, 3039, 1122, 1122, 2172, 1939, 3049, 2756, 1122, 4302,
	4781, 3060, 1718, 2322, 2188, 4464, 2142, 2316, 1932, 2498,
	1934, 1122, 1122, 3078, 3121, 2151, 4651, 1122, 1122, 3047,
	3028, 1722, 1756, 1122, 3104, 715, 3105, 4639, 1937, 2121,
	2483, 2041, 3937, 1339, 2122, 4179, 3413, 999, 2496, 1800,
	1842, 3935, 2041, 3223, 2724, 3099, 4842, 3445, 1958, 2564,
	2979, 3179, 3107, 4286, 822, 823, 4733, 2960, 2737, 1062,
	3109, 3181, 3111, 3728, 3113, 3481, 4734, 4829, 1122, 1122,
	1122, 1935, 3174, 4231, 1122, 4021, 1071, 3139, 4827, 4199,
	3824, 1777, 1778, 1267, 1122, 4032, 2164, 907, 908, 1936,
	2952, 2950, 3150, 3671, 3142, 3936, 3952, 2954, 2956, 2946,
	4557, 1122, 693, 3324, 1808, 1673, 3862, 4698, 4769, 3141,
	3134, 1780, 1830, 3136, 3140, 1767, 1000, 4028, 1053, 3939,
	1000, 4767, 4644, 4870, 4576, 1936, 3160, 4441, 2427, 3145,
	893, 894, 4236, 4198, 2156, 4197, 3975, 1833, 1939, 3581,
	2243, 2678, 1929, 3201, 3202, 1250, 1779, 2123, 3205, 2430,
	3197, 4237, 2140, 1934, 3938, 4757, 1265, 4222, 1258, 684,
	1766, 2169, 2141, 2093, 2127, 3767, 2052, 1240, 4367, 1001,
	4847, 1937, 4450, 1001, 1939, 4076, 4510, 3976, 3908, 3359,
	2492, 694, 1000, 1240, 3895, 3848, 3419, 1938, 1801, 2722,
	4285, 1122, 1122, 1122, 1122, 3172, 3582, 825, 824, 1766,
	2493, 1122, 1122, 1122, 2165, 2494, 1122, 1937, 3573, 2499,
	2157, 3415, 1761, 3018, 1935, 2858, 1122, 1244, 1383, 3012,
	3000, 2191, 1122, 2269, 1122, 3316, 3317, 2263, 2257, 2090,
	695, 3711, 696, 1244, 2121, 1001, 2249, 2124, 2129, 2122,
	2229, 1536, 2420, 1269, 3933, 4558, 1832, 755, 3782, 4614,
	1785, 1383, 4465, 3840, 3206, 2886, 3672, 2841, 4466, 826,
	827, 4579, 2997, 1244, 1765, 3640, 1383, 1766, 2372, 2086,
	4033, 3978, 4252, 1280, 3633, 3795, 2189, 3212, 2948, 4419,
	3299, 4417, 4345, 1690, 3431, 1063, 2005, 3427, 3426, 2962,
	1383, 3339, 3165, 2307, 3143, 2002, 3318, 3817, 1807, 1809,
	3323, 3321, 1602, 1765, 1602, 2088, 1325, 1325, 3320, 4732,
	2961, 2953, 2951, 2955, 2957, 2947, 2949, 2963, 2762, 2190,
	2125, 2761, 3936, 895, 896, 2760, 2959, 3352, 4287, 1122,
	1938, 1767, 1696, 1695, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1122, 3328, 3326, 2759, 2089, 3353, 1993,
	3943, 3818, 2123, 1325, 2130, 4034, 3768, 1800, 2005, 2966,
	3348, 3407, 3408, 4234, 3450, 3769, 1938, 1842, 2131, 2127,
	1767, 1765, 3635, 1591, 1589, 4077, 1122, 3819, 4846, 3816,
	2421, 3004, 3429, 1577, 1060, 3433, 910, 3634, 2130, 2715,
	4356, 4518, 1325, 2495, 3294, 3295, 3296, 1578, 3398, 4414,
	3391, 3387, 3345, 2497, 3389, 3390, 3855, 1242, 3310, 3393,
	3357, 3394, 3404, 3395, 1325, 3338, 1325, 1353, 4213, 3448,
	3325, 2162, 2862, 1242, 2718, 3623, 2267, 3327, 2887, 2888,
	1830, 3430, 3337, 3547, 3435, 1383, 2183, 3437, 3340, 3341,
	4778, 4559, 2124, 2129, 4269, 2183, 1325, 1674, 2172, 3841,
	1325, 3845, 4554, 1242, 3506, 3364, 3508, 4332, 2977, 3512,
	3382, 3367, 3449, 3518, 3416, 2717, 4618, 3493, 3370, 3081,
	2716, 3376, 3377, 3461, 3378, 2982, 2170, 1325, 2980, 3379,
	1239, 3361, 3362, 3363, 2295, 2511, 3343, 2200, 3344, 1648,
	4340, 1325, 4519, 1325, 4352, 4357, 1239, 1383, 3388, 3504,
	4351, 1855, 4625, 4611, 808, 3392, 1801, 3465, 3360, 3486,
	2355, 4083, 3399, 3784, 2589, 1325, 4268, 3501, 4782, 2163,
	1740, 4646, 3479, 3463, 3556, 2125, 1239, 1325, 4783, 3405,
	1742, 4780, 2383, 1739, 754, 1737, 4341, 2967, 4718, 4546,
	3420, 1714, 4538, 1712, 1244, 3477, 2958, 1684, 3589, 2126,
	4308, 2171, 3565, 4075, 4619, 2684, 1682, 3332, 2363, 3447,
	3942, 1999, 3073, 3291, 1832, 3457, 3687, 1680, 3572, 1325,
	1325, 3073, 1678, 2131, 1676, 3646, 1670, 3513, 3820, 1664,
	4520, 3519, 3587, 3542, 3471, 3545, 3470, 3645, 3472, 3380,
	1974, 3254, 1325, 3184, 3473, 3641, 3636, 3637, 3638, 3639,
	3580, 3609, 3001, 3494, 2923, 2876, 2789, 2392, 1969, 3502,
	3598, 1965, 3846, 1590, 1588, 1743, 1626, 1662, 3529, 4406,
	3524, 3515, 3523, 3521, 3406, 2331, 909, 1587, 2209, 1238,
	3292, 3489, 3667, 1999, 3666, 1761, 1383, 3119, 3650, 1383,
	3118, 3088, 2409, 1701, 2334, 1238, 2248, 2228, 2215, 2034,
	3530, 1875, 3333, 3534, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1637, 1560, 2588, 3583, 4693, 4180, 3549, 2884, 3541,
	3899, 3898, 1122, 4181, 4164, 1238, 4610, 3590, 1122, 1122,
	1010, 3569, 1122, 1122, 1122, 3570, 1122, 3528, 178, 178,
	3568, 3643, 3586, 4250, 4755, 1122, 2005, 4186, 814, 4177,
	4119, 817, 3331, 3621, 1122, 3974, 3965, 3708, 3505, 1122,
	3625, 3595, 2385, 3911, 1741, 1383, 2384, 1738, 3597, 1736,
	3604, 3607, 3608, 3665, 1122, 1713, 3642, 1711, 3896, 3869,
	4245, 1683, 1383, 3867, 1242, 3336, 3664, 3619, 2362, 3847,
	1681, 3576, 2005, 2005, 1122, 1122, 3571, 1122, 1122, 1122,
	3588, 1679, 3561, 3031, 2126, 3654, 1677, 3655, 1675, 3656,
	1669, 2121, 3023, 1663, 3016, 1122, 2122, 3008, 3690, 1122,
	3673, 2005, 2005, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 3661, 1122, 3700, 3701, 2994, 3740, 3644,
	3741, 1661, 1122, 1122, 2005, 2330, 2975, 1239, 2208, 1122,
	2807, 1586, 2802, 3660, 3670, 1063, 2227, 2225, 2202, 2185,
	1122, 2158, 2145, 2132, 2073, 2070, 2067, 2064, 2059, 2057,
	2053, 1244, 1244, 2044, 4746, 1122, 1219, 1015, 1017, 1019,
	4236, 1770, 3334, 3335, 3516, 3662, 1977, 3163, 4771, 2194,
	2094, 4517, 3137, 2395, 3668, 3135, 2968, 4656, 4274, 4237,
	3695, 3697, 1220, 4267, 2113, 1383, 4266, 4193, 4111, 3074,
	1541, 4452, 3813, 2863, 3707, 4445, 2838, 3986, 2140, 2123,
	2838, 3640, 2321, 3779, 1301, 3723, 3714, 3716, 3717, 2266,
	3633, 2836, 3730, 3800, 4655, 2860, 2127, 1734, 1735, 2393,
	2358, 2353, 1300, 2328, 4188, 3718, 4156, 3738, 262, 1660,
	4487, 3739, 1777, 1778, 1122, 4354, 2866, 3743, 3771, 1777,
	1778, 3745, 2002, 4084, 2440, 3731, 4062, 3442, 3737, 2867,
	2889, 1774, 3780, 1334, 1122, 1268, 4774, 4765, 3907, 1240,
	178, 4727, 3164, 3791, 3792, 2394, 3962, 2041, 2867, 1780,
	3772, 1771, 259, 2440, 3746, 1240, 1238, 2993, 2930, 3786,
	3906, 2360, 3517, 2250, 1345, 2928, 2937, 1122, 1122, 2124,
	2129, 1999, 1221, 2917, 1301, 2869, 1993, 1779, 1602, 3788,
	3789, 4617, 2919, 2871, 1779, 1240, 3775, 1301, 3635, 3838,
	4604, 4570, 4566, 3839, 2002, 2918, 2870, 4564, 4516, 681,
	4436, 3802, 4412, 3634, 4333, 3972, 3964, 3951, 3810, 3575,
	3038, 1122, 2702, 2079, 1986, 4814, 4353, 1999, 1999, 3522,
	4648, 1242, 1242, 1498, 1497, 4649, 3368, 4845, 3260, 3261,
	1777, 1778, 2830, 2831, 3868, 1508, 3870, 2987, 1325, 4054,
	2990, 3880, 2992, 1325, 3803, 4786, 1999, 1999, 1993, 4648,
	2828, 2829, 2125, 1647, 4649, 3821, 3822, 2584, 3884, 1646,
	3009, 3830, 2684, 3826, 2830, 3885, 3887, 2005, 2828, 2617,
	3834, 3835, 1716, 3837, 3971, 1715, 4437, 4388, 4190, 1999,
	3851, 4185, 4184, 3909, 4050, 3903, 3035, 3825, 3719, 3035,
	3510, 3507, 3901, 3631, 1239, 1239, 2119, 3872, 1325, 1869,
	2131, 3877, 1868, 4831, 1122, 4793, 4608, 4607, 4606, 3910,
	4545, 4544, 1244, 1122, 4503, 3988, 4415, 4382, 4330, 3925,
	3927, 4327, 4325, 1325, 1325, 1325, 3044, 4224, 3995, 4210,
	2884, 4154, 4106, 4010, 3992, 3946, 3865, 3858, 3979, 3579,
	1325, 3578, 3436, 2684, 2684, 3386, 3124, 3116, 3941, 3096,
	3095, 2117, 3094, 3073, 3093, 3022, 1325, 3980, 3921, 3958,
	2995, 2861, 1383, 3983, 3999, 2798, 2793, 2782, 3114, 2781,
	2770, 3929, 2513, 2386, 3919, 2359, 3945, 2731, 2352, 3959,
	3918, 2351, 2350, 2349, 3982, 2348, 2264, 2238, 1383, 3963,
	3931, 1122, 1122, 3940, 2118, 4011, 3930, 1122, 1122, 2005,
	2234, 3968, 1122, 1122, 2233, 1122, 2232, 2231, 2230, 2047,
	1122, 3641, 3636, 3637, 3638, 3639, 2046, 2045, 2043, 1976,
	1733, 1122, 1732, 3966, 1671, 1555, 1554, 1553, 1552, 1551,
	1550, 1549, 1544, 1540, 1538, 1537, 1491, 1122, 3984, 1490,
	1130, 1489, 3981, 1238, 1238, 3990, 1374, 3989, 4019, 3420,
	1373, 1372, 3994, 4017, 1371, 1370, 1338, 4035, 4005, 4002,
	1337, 4009, 1287, 4006, 1286, 1285, 1240, 4000, 4001, 1284,
	4036, 4044, 1283, 1282, 1281, 1279, 1274, 4008, 1273, 4048,
	1272, 2126, 1271, 1270, 882, 8, 266, 266, 266, 1202,
	687, 688, 4018, 703, 687, 703, 713, 2084, 1244, 753,
	4029, 1021, 1242, 772, 1007, 4024, 1244, 4522, 778, 4135,
	1383, 4134, 1383, 4133, 2382, 266, 92, 1546, 844, 1244,
	86, 2192, 3864, 2684, 2684, 2684, 2684, 4721, 976, 4645,
	1325, 1325, 2002, 1530, 4549, 889, 852, 4627, 3960, 3438,
	1383, 266, 1999, 2944, 2333, 1672, 2335, 3347, 2744, 4596,
	4058, 3222, 4494, 4301, 2587, 1873, 3303, 88, 1106, 1152,
	4220, 4219, 4120, 3850, 3063, 1244, 4217, 1244, 4216, 4112,
	4113, 1990, 4074, 1992, 1070, 1239, 1386, 4667, 2002, 2002,
	2095, 1112, 2111, 3352, 2104, 2783, 1993, 2661, 1129, 1325,
	1126, 1319, 4092, 4157, 1994, 1996, 1128, 1127, 1995, 1383,
	1892, 1325, 1125, 1989, 1325, 3970, 3042, 2002, 2002, 3605,
	4085, 4081, 1596, 1594, 978, 1383, 4088, 2099, 4090, 178,
	2507, 4095, 2571, 4145, 3211, 4091, 1866, 1086, 1108, 4142,
	2568, 4142, 1993, 1993, 1263, 4096, 4099, 4189, 1097, 4191,
	2002, 4086, 4087, 4158, 1085, 4116, 3329, 1494, 3308, 3592,
	3809, 2419, 862, 1325, 1325, 4104, 3257, 2574, 1254, 2685,
	2677, 1993, 1993, 2673, 3396, 3032, 4118, 1747, 4110, 687,
	687, 4315, 1844, 1325, 1999, 4214, 3043, 266, 1368, 1090,
	2505, 1532, 1857, 4089, 3189, 1383, 2429, 3599, 1242, 3350,
	1325, 4192, 2041, 2041, 1993, 4178, 1242, 4183, 2776, 4652,
	4211, 3727, 3122, 2242, 1218, 1217, 1261, 1569, 4208, 1242,
	1216, 4633, 4176, 4630, 2182, 1244, 4173, 4003, 3554, 4162,
	2087, 2822, 2517, 4242, 1238, 1325, 1325, 1325, 3562, 1102,
	4253, 1485, 4171, 4202, 1610, 4174, 2376, 3314, 1383, 2041,
	3624, 1557, 4207, 777, 4201, 4361, 4209, 4146, 1623, 4254,
	1122, 1122, 1122, 1240, 1240, 1242, 4200, 1242, 1114, 1829,
	2965, 1239, 2964, 4159, 4160, 4513, 1354, 4248, 1383, 1239,
	4215, 4270, 4257, 1122, 1352, 4230, 1122, 1122, 2041, 4142,
	4239, 1351, 1239, 4262, 1350, 4802, 1122, 4868, 3860, 2005,
	4241, 3859, 233, 3157, 1122, 1122, 1768, 4255, 1760, 230,
	2041, 232, 2041, 1649, 231, 3384, 3385, 4225, 3814, 1383,
	3356, 1325, 4725, 3882, 3546, 23, 22, 4293, 4279, 21,
	112, 42, 20, 4277, 151, 4276, 129, 148, 1239, 4281,
	1239, 147, 2041, 121, 1383, 4288, 2041, 146, 145, 144,
	143, 150, 1122, 142, 141, 136, 4298, 140, 139, 1310,
	138, 137, 3414, 135, 1122, 133, 134, 128, 132, 131,
	130, 4310, 1122, 127, 126, 125, 2005, 4282, 124, 123,
	122, 4304, 120, 152, 119, 1122, 118, 117, 1122, 116,
	115, 114, 113, 765, 3451, 3452, 767, 3453, 3454, 3455,
	61, 3464, 1122, 60, 111, 4336, 110, 4273, 1475, 1383,
	19, 1486, 1310, 2002, 4364, 1242, 1325, 40, 4324, 14,
	1238, 65, 66, 3478, 18, 3480, 1325, 1325, 1238, 4321,
	4322, 4337, 13, 35, 91, 102, 101, 36, 99, 98,
	34, 1238, 3495, 3496, 4344, 3497, 3498, 3499, 4335, 17,
	16, 15, 96, 95, 33, 3514, 31, 4381, 11, 3520,
	4393, 4405, 9, 37, 1953, 3556, 12, 1993, 4373, 4374,
	4427, 1383, 5, 183, 1325, 182, 4379, 185, 4418, 1310,
	1310, 181, 184, 90, 180, 4383, 4384, 1238, 1239, 1238,
	179, 89, 1244, 1244, 29, 10, 4390, 175, 4389, 4428,
	4391, 3956, 4392, 81, 177, 176, 4435, 174, 173, 172,
	82, 268, 1122, 1122, 4446, 4416, 79, 171, 4408, 4410,
	4407, 4411, 85, 170, 4455, 2684, 2684, 4426, 80, 1122,
	2005, 4397, 84, 4447, 4474, 83, 27, 4449, 4431, 6,
	64, 7, 4283, 3647, 1240, 2002, 105, 4395, 4470, 4471,
	106, 38, 77, 4443, 2424, 76, 4142, 4142, 4371, 75,
	4454, 4448, 4257, 4468, 4453, 26, 63, 1122, 25, 169,
	1122, 216, 215, 214, 1999, 213, 212, 211, 210, 209,
	1244, 204, 203, 208, 206, 205, 4483, 4484, 207, 202,
	225, 219, 218, 1244, 4482, 224, 223, 4509, 222, 1993,
	221, 220, 4492, 217, 227, 201, 4486, 200, 4385, 199,
	197, 193, 192, 196, 198, 2684, 2684, 2684, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 4508, 2684, 1238, 195, 4532,
	1256, 4505, 194, 2130, 4142, 1122, 1122, 4526, 191, 4533,
	226, 1999, 4527, 72, 167, 1122, 168, 4142, 71, 4451,
	1244, 4553, 166, 1244, 165, 164, 163, 1325, 162, 161,
	160, 70, 24, 1276, 4540, 1381, 2, 1325, 1325, 1480,
	1, 4542, 1242, 1242, 0, 266, 0, 266, 266, 0,
	1305, 266, 1315, 0, 1325, 0, 0, 4587, 4547, 2679,
	0, 0, 1084, 1335, 4541, 0, 4560, 0, 1122, 1122,
	4565, 4568, 772, 0, 4561, 4562, 4573, 4572, 1122, 4575,
	4581, 4567, 0, 0, 4142, 0, 4580, 4142, 4502, 0,
	1240, 4504, 4585, 4586, 4584, 4431, 4583, 266, 1240, 266,
	266, 1305, 0, 266, 266, 4620, 0, 0, 1315, 4590,
	4591, 1240, 0, 4624, 0, 1239, 1239, 1122, 1122, 0,
	1122, 0, 266, 4601, 1510, 0, 0, 0, 4605, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4600, 1242, 0, 1534, 0, 0, 4632, 4635,
	0, 4654, 4650, 0, 0, 0, 4647, 1240, 4623, 1240,
	4622, 0, 0, 0, 1559, 1999, 0, 1315, 4672, 0,
	4641, 266, 266, 0, 1305, 0, 4676, 0, 1122, 1122,
	1122, 4675, 0, 0, 0, 0, 0, 4637, 0, 0,
	0, 4636, 4657, 0, 4640, 772, 0, 266, 266, 0,
	4663, 4670, 4671, 1239, 0, 0, 0, 0, 0, 1122,
	1242, 4705, 0, 1242, 0, 0, 1239, 4710, 0, 0,
	889, 0, 0, 0, 4692, 4689, 4690, 4691, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 4592, 0,
	4593, 4735, 0, 0, 0, 0, 0, 0, 0, 4728,
	4737, 4708, 0, 0, 0, 0, 0, 0, 4739, 4749,
	4751, 0, 0, 0, 1238, 1238, 1122, 4724, 0, 0,
	4750, 0, 0, 0, 4736, 0, 0, 0, 1486, 0,
	0, 4745, 4756, 1239, 0, 0, 1239, 0, 4744, 4743,
	0, 0, 4747, 4748, 4776, 2002, 0, 266, 4753, 2041,
	4772, 0, 0, 4642, 4762, 4763, 4643, 1240, 4768, 4766,
	4764, 0, 4720, 0, 4723, 0, 0, 4775, 266, 1244,
	0, 1244, 4779, 4798, 4777, 2130, 4632, 4654, 2284, 4635,
	0, 4796, 0, 4785, 4808, 4795, 4790, 4809, 0, 4794,
	4807, 0, 0, 4553, 1319, 2298, 0, 0, 4804, 1993,
	0, 0, 1238, 0, 0, 2300, 0, 0, 4822, 0,
	0, 0, 0, 0, 0, 1238, 0, 2308, 0, 2311,
	2312, 2313, 2002, 4821, 0, 4797, 4824, 4799, 0, 0,
	4833, 4706, 0, 4142, 0, 4142, 0, 0, 0, 4835,
	4839, 0, 0, 0, 4832, 1122, 1122, 0, 0, 4840,
	0, 0, 4837, 0, 1122, 0, 1122, 1122, 0, 0,
	0, 4843, 3920, 0, 0, 0, 4853, 0, 4859, 4849,
	0, 0, 4858, 4864, 4857, 4863, 1993, 4862, 0, 4861,
	4860, 4856, 1238, 0, 3044, 1238, 0, 0, 0, 0,
	4872, 4867, 0, 4876, 4875, 4874, 0, 0, 4877, 4871,
	4878, 0, 4873, 0, 0, 4880, 0, 4884, 4883, 0,
	3967, 0, 0, 0, 0, 0, 4885, 1122, 4888, 0,
	4890, 0, 0, 0, 4891, 4887, 4893, 4894, 0, 0,
	4850, 4851, 4880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 4852,
	0, 0, 0, 4803, 0, 0, 0, 0, 0, 1242,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 2002, 0, 0, 0,
	0, 4020, 0, 0, 2529, 2530, 2531, 2548, 2549, 2550,
	266, 4889, 266, 4828, 0, 2254, 266, 0, 0, 4830,
	0, 0, 0, 0, 2551, 0, 4136, 0, 0, 1510,
	1305, 266, 0, 266, 0, 0, 3147, 0, 0, 266,
	1510, 703, 0, 0, 1240, 1240, 266, 1510, 0, 0,
	1993, 0, 1239, 0, 1239, 0, 0, 1833, 0, 0,
	4130, 2048, 0, 0, 4123, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 2541, 0, 0, 0,
	266, 4121, 0, 0, 0, 2537, 0, 2115, 0, 0,
	4125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3260, 3261, 0, 3278, 3279, 3280, 0, 0, 0, 0,
	0, 0, 1084, 1084, 4131, 2041, 0, 2679, 2679, 0,
	772, 0, 4041, 0, 0, 0, 0, 2041, 0, 1467,
	2041, 0, 1240, 1467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4124, 0, 0, 0,
	2542, 2543, 2544, 2545, 0, 0, 0, 0, 0, 0,
	2536, 0, 0, 0, 0, 3275, 0, 2377, 0, 0,
	0, 0, 3186, 3187, 0, 0, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 0, 0, 2041,
	0, 1238, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 1240, 0, 0, 0, 73,
	0, 880, 879, 0, 0, 0, 0, 0, 4163, 2220,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	4172, 0, 0, 4175, 2546, 2547, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 2684, 0,
	0, 2814, 1319, 0, 0, 0, 0, 0, 0, 3266,
	0, 0, 0, 0, 0, 0, 0, 2539, 0, 0,
	266, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 2679, 2679, 2679,
	2679, 0, 0, 0, 0, 0, 4223, 0, 0, 0,
	0, 0, 4238, 0, 2684, 0, 0, 4126, 0, 4240,
	0, 0, 4127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 3282, 0, 0, 266, 0, 0,
	0, 266, 4261, 0, 49, 0, 107, 266, 0, 0,
	0, 93, 104, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 3284, 3285, 3286, 3287, 0, 0, 0, 266,
	0, 266, 0, 0, 4129, 687, 3276, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	4132, 2969, 0, 889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	1305, 266, 0, 0, 0, 0, 2540, 0, 0, 1310,
	0, 0, 2041, 0, 0, 772, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 1830,
	2332, 0, 0, 0, 0, 266, 266, 0, 266, 0,
	266, 0, 266, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 2368,
	0, 2684, 2369, 0, 2370, 0, 0, 2443, 0, 3089,
	0, 0, 0, 0, 0, 0, 266, 266, 266, 266,
	0, 1240, 0, 1240, 0, 1310, 1310, 3260, 3261, 4128,
	3278, 3279, 3280, 0, 0, 3277, 0, 0, 0, 0,
	0, 0, 0, 753, 0, 0, 0, 772, 0, 4040,
	0, 0, 0, 0, 0, 4396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 4137, 4138,
	0, 0, 0, 0, 0, 2526, 2527, 2528, 2552, 2538,
	2532, 0, 2534, 2535, 2533, 2520, 2521, 2522, 2523, 2524,
	2525, 0, 0, 0, 0, 0, 0, 0, 1467, 0,
	2585, 0, 3275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1475, 0, 186,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2519, 0, 0, 0, 1486, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 0, 3272, 3273, 3274, 0, 0, 0,
	0, 3271, 3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268,
	0, 0, 0, 1808, 0, 2754, 3266, 236, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 3260, 3261,
	687, 3278, 3279, 3280, 1084, 0, 0, 0, 0, 0,
	0, 1467, 0, 153, 0, 266, 1833, 0, 0, 0,
	3692, 0, 0, 0, 687, 1779, 0, 0, 190, 0,
	0, 266, 0, 687, 0, 1799, 235, 0, 0, 0,
	0, 0, 0, 0, 1796, 266, 0, 0, 0, 228,
	0, 3282, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 266, 1315, 0, 0, 0, 0, 4551, 0, 0,
	0, 0, 0, 3275, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 1310, 0, 2679,
	2679, 4571, 0, 3276, 0, 0, 0, 0, 4039, 0,
	0, 3260, 3261, 0, 3278, 3279, 3280, 0, 0, 0,
	266, 1315, 0, 0, 0, 703, 0, 0, 0, 1802,
	1803, 1804, 1805, 3691, 0, 2797, 0, 0, 0, 1785,
	0, 266, 2833, 0, 266, 0, 0, 1486, 266, 1486,
	266, 0, 0, 0, 0, 1305, 0, 266, 266, 0,
	1315, 1315, 2813, 1467, 3683, 3684, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 3266, 0, 0,
	0, 0, 0, 0, 0, 0, 3275, 1807, 1809, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 0,
	2679, 0, 2850, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 4658,
	0, 0, 0, 0, 0, 4660, 266, 0, 0, 0,
	0, 0, 3282, 0, 0, 0, 1800, 0, 0, 266,
	0, 0, 3277, 0, 3747, 3748, 3749, 3750, 3751, 3752,
	3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762,
	3763, 3764, 3765, 3766, 0, 3770, 266, 0, 0, 0,
	3266, 0, 0, 0, 3276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	2985, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 266, 0, 266,
	0, 0, 0, 0, 0, 3282, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3027, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 2850, 0, 687, 0,
	0, 0, 1806, 0, 0, 0, 0, 3056, 889, 0,
	2850, 2850, 0, 0, 0, 1777, 1778, 3276, 0, 0,
	0, 3272, 3273, 3274, 0, 1801, 0, 266, 3271, 3269,
	3270, 3262, 3263, 3264, 3265, 3267, 3268, 0, 1808, 0,
	0, 0, 0, 0, 0, 1780, 266, 1305, 266, 0,
	0, 0, 0, 0, 0, 1510, 0, 1510, 1315, 266,
	0, 1467, 1305, 3277, 1305, 0, 1305, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 3525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 1778, 0, 266, 266,
	266, 266, 1305, 0, 0, 1305, 0, 266, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 3566, 1077, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3574, 0, 0, 0, 0,
	0, 266, 0, 0, 1467, 0, 0, 0, 0, 266,
	0, 1833, 0, 0, 0, 0, 3277, 0, 1797, 1793,
	1779, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1799, 0, 0, 0, 1785, 0, 0, 3615, 3616, 1796,
	0, 0, 0, 0, 0, 1486, 1486, 0, 0, 0,
	0, 0, 3272, 3273, 3274, 0, 0, 0, 0, 3271,
	3269, 3270, 3262, 3263, 3264, 3265, 3267, 3268, 0, 0,
	0, 0, 0, 1467, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3686, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 1486, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 1800, 0, 2254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3272, 3273, 3274, 0, 0,
	0, 0, 3271, 3269, 3270, 3262, 3263, 3264, 3265, 3267,
	3268, 0, 1807, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 3315, 0, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 0, 3342, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 1310, 3355, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3374, 73, 0,
	1801, 0, 0, 266, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 687, 1830, 74, 687, 0, 0, 687,
	687, 0, 0, 0, 0, 687, 0, 0, 1467, 0,
	0, 78, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 1806, 0, 0,
	1510, 87, 0, 1785, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 266, 0, 0, 0, 266, 266, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 0, 0, 2850, 2850, 266, 0,
	3411, 1807, 1809, 0, 0, 107, 2850, 0, 0, 3422,
	93, 104, 0, 0, 0, 0, 0, 2850, 3422, 0,
	2850, 3422, 0, 0, 3422, 0, 0, 0, 1832, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0, 266,
	266, 3411, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 3411, 0, 266, 0, 0, 0, 94,
	3485, 3485, 2679, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3355, 0, 0, 0, 0, 2850,
	0, 2850, 0, 3511, 2850, 3411, 3916, 0, 2850, 3411,
	0, 0, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 0, 2679, 1305,
	0, 0, 0, 1830, 0, 0, 266, 4307, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 3550, 0, 0, 3552, 2850,
	0, 0, 266, 0, 0, 0, 266, 0, 0, 1315,
	0, 0, 0, 0, 0, 3260, 3261, 0, 3278, 3279,
	3280, 3996, 3997, 3998, 266, 0, 1806, 0, 0, 3027,
	0, 0, 1305, 4347, 266, 2773, 0, 2850, 1319, 687,
	0, 0, 0, 0, 0, 0, 2850, 0, 0, 1801,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 1381, 266, 3027, 0,
	0, 3027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3275, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 3653, 0, 0, 1832, 186, 100,
	0, 0, 103, 0, 0, 1814, 1808, 0, 0, 0,
	0, 3659, 0, 1780, 1510, 0, 0, 1305, 266, 0,
	266, 0, 1827, 0, 0, 0, 1305, 0, 234, 0,
	0, 0, 3704, 0, 0, 2679, 884, 0, 0, 1833,
	0, 149, 0, 0, 0, 0, 0, 0, 1779, 3720,
	0, 0, 0, 0, 0, 0, 266, 0, 1799, 0,
	0, 0, 0, 0, 0, 1310, 0, 1796, 0, 0,
	0, 0, 0, 0, 3266, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	4491, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3725, 3283, 0, 190, 4101, 4102,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	2254, 0, 0, 0, 0, 0, 0, 0, 228, 3282,
	0, 0, 1802, 1803, 1804, 1805, 0, 229, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 785, 189, 0, 0, 0, 0, 0, 0,
	0, 3276, 3812, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 1467, 1828, 0, 0, 0, 796, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 1467, 0, 0,
	0, 266, 266, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 1467, 73, 0, 687, 687, 0, 0, 0, 0,
	0, 1319, 0, 0, 1816, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 1830, 0, 1510, 1510, 0, 1800,
	73, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	1084, 1510, 1510, 0, 1510, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	790, 0, 0, 78, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 1826, 0, 87, 0, 0, 0, 0,
	795, 0, 0, 4278, 0, 4280, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	3277, 0, 1830, 87, 0, 0, 3260, 3261, 0, 3278,
	3279, 3280, 0, 0, 0, 883, 0, 0, 0, 772,
	0, 0, 0, 0, 0, 0, 0, 49, 794, 107,
	0, 0, 0, 0, 93, 104, 0, 0, 0, 0,
	0, 0, 0, 883, 1813, 748, 1467, 0, 0, 0,
	0, 0, 0, 0, 3485, 1806, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 0, 266, 0, 4326,
	792, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 3275, 0, 0, 3260, 3261, 0, 3278, 3279, 3280,
	0, 0, 3411, 94, 266, 0, 0, 0, 703, 703,
	1315, 0, 0, 0, 0, 1819, 0, 0, 1467, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 266, 2254, 0, 0, 0, 0, 0, 801,
	0, 0, 266, 0, 0, 0, 1832, 266, 0, 3272,
	3273, 3274, 266, 1310, 0, 0, 3271, 3269, 3270, 3262,
	3263, 3264, 3265, 3267, 3268, 0, 0, 0, 0, 3275,
	0, 2850, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 3056, 3056, 0, 4409, 3266, 0, 889, 889, 2850,
	0, 0, 0, 3027, 3027, 0, 0, 889, 2850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 787, 0, 0, 0, 0, 1817, 0,
	266, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 791, 0, 0, 4067, 0, 97,
	3282, 4066, 0, 0, 0, 0, 0, 1467, 0, 0,
	1467, 0, 0, 3266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3276, 0, 797, 4059, 0, 0, 0, 0,
	789, 0, 186, 100, 0, 0, 103, 0, 0, 4094,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 100, 234, 0, 103, 0, 1467, 4108, 0, 0,
	884, 0, 0, 0, 0, 149, 0, 786, 0, 0,
	0, 0, 0, 1467, 0, 0, 0, 0, 266, 0,
	234, 0, 0, 0, 1510, 1830, 266, 0, 884, 0,
	3276, 0, 0, 149, 0, 793, 0, 0, 0, 266,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	788, 0, 0, 0, 0, 0, 153, 1315, 236, 0,
	0, 0, 0, 0, 2850, 2850, 0, 3485, 2850, 0,
	0, 190, 0, 799, 800, 4144, 0, 4144, 1510, 235,
	0, 0, 0, 0, 153, 1319, 1319, 0, 2850, 0,
	3422, 3277, 228, 1830, 1510, 1510, 266, 3411, 0, 190,
	0, 229, 1319, 0, 0, 0, 0, 235, 0, 0,
	3411, 0, 266, 3411, 0, 266, 0, 3485, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 1607, 0, 229,
	0, 0, 2850, 0, 2850, 266, 1467, 1777, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 1813, 0, 189, 0, 0, 0, 1813,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 3277,
	2850, 0, 0, 0, 0, 4227, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 1381, 266, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 266, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 4299, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 4144, 0, 0, 1510, 0,
	3272, 3273, 3274, 0, 0, 0, 0, 3271, 3269, 3270,
	3262, 3263, 3264, 3265, 3267, 3268, 0, 0, 1813, 0,
	0, 0, 0, 1813, 0, 0, 4299, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 3681, 0, 0, 0, 0,
	0, 2443, 0, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 3272, 3273,
	3274, 0, 0, 0, 0, 3271, 3269, 3270, 3262, 3263,
	3264, 3265, 3267, 3268, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 1813, 733,
	2850, 0, 3422, 0, 0, 4339, 2443, 0, 0, 0,
	0, 0, 0, 266, 1807, 1809, 0, 0, 0, 716,
	0, 0, 0, 4362, 717, 4362, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	1794, 1795, 0, 0, 0, 0, 1931, 772, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 3485, 1780,
	1305, 0, 0, 718, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 1800, 719, 3411, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 1467, 1779, 720, 0, 0, 0, 0,
	0, 0, 4339, 0, 1799, 0, 0, 0, 0, 0,
	2850, 0, 0, 1796, 0, 0, 0, 739, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 4440, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 721, 0, 0,
	1510, 0, 0, 0, 0, 0, 1830, 0, 0, 1813,
	0, 0, 4144, 4144, 0, 0, 0, 0, 0, 0,
	722, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	266, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 724, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 3725, 0, 0, 0, 1785, 1806,
	0, 0, 748, 0, 0, 0, 0, 2683, 0, 1510,
	0, 0, 1510, 3485, 4507, 0, 0, 0, 0, 0,
	1813, 4339, 1801, 0, 0, 0, 1813, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1069, 0, 1828,
	4144, 1467, 0, 1467, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 4144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 1467, 1794, 1795, 0, 266, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 735, 703, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4227, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4144, 0, 266, 4144, 0, 0, 0, 0, 0, 0,
	1467, 0, 0, 3422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 0, 0, 1826,
	0, 0, 0, 0, 0, 745, 0, 726, 0, 1510,
	0, 1510, 0, 0, 0, 1797, 1793, 1815, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 727, 0,
	0, 0, 0, 0, 0, 4615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4362,
	0, 0, 266, 0, 0, 0, 1467, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 747, 1510, 0, 0,
	0, 1806, 0, 0, 728, 0, 2850, 0, 0, 743,
	744, 741, 0, 0, 0, 0, 0, 736, 0, 0,
	729, 0, 0, 0, 1801, 73, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 3725, 0, 0, 0, 78, 0,
	0, 0, 730, 0, 737, 0, 0, 0, 0, 1467,
	0, 0, 1510, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 266, 0, 0, 0, 749, 0, 0, 0,
	1467, 0, 0, 0, 0, 0, 0, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 0, 883, 0,
	0, 0, 0, 0, 4339, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 1817, 0, 0, 93, 104, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1084,
	0, 0, 2850, 3235, 0, 0, 0, 3236, 0, 4144,
	0, 4144, 0, 0, 1510, 0, 0, 0, 0, 0,
	1467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3056, 0, 0, 1813, 0, 0, 0, 1813, 0, 2850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 3056, 0, 0, 0, 0,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 0, 0, 0, 0,
	0, 1813, 0, 1813, 1813, 1813, 1813, 0, 0, 0,
	1330, 0, 97, 0, 0, 2683, 2683, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 1069, 1069, 1814,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 100, 0, 0, 103,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 1813, 1779, 0, 0, 0, 1084, 1084, 0, 1512,
	0, 1518, 1799, 1524, 0, 234, 0, 0, 0, 0,
	0, 1796, 0, 884, 0, 0, 0, 0, 149, 0,
	0, 1813, 0, 0, 1813, 0, 0, 1813, 0, 0,
	1813, 0, 0, 0, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 1618, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 1627, 0, 1632, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 190, 0, 1785, 0, 0, 0,
	1813, 0, 235, 3281, 0, 2683, 2683, 2683, 2683, 1084,
	0, 0, 1813, 0, 1813, 228, 0, 0, 0, 1813,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	1605, 1697, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	733, 0, 1854, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1814, 1808, 0, 0, 0, 0,
	0, 0, 1780, 0, 718, 0, 0, 0, 0, 0,
	0, 1827, 1801, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 720, 1779, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 1925, 1925, 1925, 1796, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 1813, 1813, 0, 1813, 0, 721, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 724, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 1817, 748, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 738, 0,
	0, 2562, 0, 0, 0, 2563, 0, 0, 0, 1818,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 1069,
	1813, 0, 0, 0, 0, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 1813, 1813, 0, 2683, 2683, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3281, 3281, 0, 0, 1813, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 726, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 1830, 0, 0, 0, 0, 0, 746, 0, 727,
	0, 0, 0, 1107, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 2683, 747, 2683, 3281,
	3281, 3281, 3281, 0, 1806, 728, 0, 0, 0, 0,
	743, 744, 741, 0, 0, 0, 0, 0, 736, 0,
	0, 729, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 109, 0, 0,
	0, 0, 0, 730, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 732, 0,
	0, 0, 0, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 0, 0,
	2654, 2655, 2656, 2657, 2650, 2651, 2652, 2653, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 1813, 1817, 0, 0,
	0, 0, 0, 2356, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	4065, 0, 2630, 2631, 2632, 2633, 0, 0, 2380, 0,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2642, 2643, 2644, 2645, 2638,
	2639, 2640, 2641, 2646, 2647, 2648, 2649, 0, 0, 0,
	0, 0, 2418, 0, 2422, 0, 0, 0, 0, 0,
	0, 2436, 0, 0, 0, 0, 0, 0, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 0, 2486, 0, 2488, 2489, 2490,
	2491, 2626, 2627, 2628, 2629, 2634, 2635, 2636, 2637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 2566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2596, 2599, 2602, 2605, 0,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2675, 0,
	2687, 2689, 2694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1813, 0, 0, 1813, 3281, 3281,
	1813, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1813, 1813,
	1813, 1813, 0, 0, 0, 0, 1245, 1813, 0, 1813,
	0, 0, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281,
	3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281, 3281,
	3281, 3281, 0, 0, 0, 3281, 0, 0, 1813, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1245, 0, 0, 0, 1245, 0, 0, 0, 1813,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 1245, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 1813, 1814, 1808, 1245,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 1245, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2988, 2989, 0, 2991, 1777, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	1833, 0, 1813, 1813, 0, 0, 0, 1813, 1813, 1779,
	0, 1813, 1813, 0, 0, 0, 1813, 0, 0, 1799,
	1813, 0, 0, 0, 0, 1813, 0, 0, 1796, 0,
	0, 0, 1818, 0, 0, 1828, 0, 109, 0, 109,
	2683, 109, 1807, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 3115, 0, 0, 0, 0,
	0, 0, 3680, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 1064, 109, 109, 0, 2683, 0, 0, 0,
	0, 1800, 0, 1802, 1803, 1804, 1805, 0, 109, 0,
	109, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1809, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 1794, 1795, 0,
	0, 0, 0, 1245, 0, 1245, 0, 0, 3169, 3170,
	0, 0, 0, 0, 3176, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 3190, 3191, 0, 0, 1806, 2006, 2566,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1813, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1813, 3281, 2683, 3200, 0, 0, 1819, 0, 1813,
	1044, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	3214, 0, 0, 1830, 0, 0, 0, 0, 1245, 0,
	0, 1847, 0, 0, 0, 0, 0, 3226, 1832, 1245,
	0, 0, 3281, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 1859, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1245, 0, 1813, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 1806, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 2694, 2694, 2694,
	0, 0, 0, 3694, 0, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 0, 0, 0, 1832, 0, 0,
	3319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 0, 1948, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 3281, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1813, 0, 0,
	1813, 1777, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1780, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 1777, 1778, 0,
	0, 0, 0, 0, 1813, 1069, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 1069,
	1808, 0, 0, 0, 0, 0, 1799, 1780, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 1245,
	0, 1245, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 3441, 1833, 0, 0, 0, 0, 0, 1245,
	1245, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1245, 0, 1245, 1245, 1245, 0, 0, 3175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3168, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1118, 0, 0,
	0, 2006, 2006, 1245, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 265, 265, 265, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 1813,
	0, 0, 815, 1813, 0, 1833, 0, 0, 0, 1064,
	0, 1064, 0, 0, 1779, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 1799, 0, 1245, 0, 815, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 2436, 0,
	0, 0, 0, 1806, 3678, 3679, 0, 0, 3682, 0,
	0, 0, 3685, 0, 0, 0, 0, 0, 1245, 0,
	0, 3689, 0, 0, 0, 1245, 1801, 0, 0, 109,
	3696, 0, 0, 0, 1245, 3319, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 0, 0, 0, 1785, 1806,
	3709, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3732, 3733, 1801, 3734, 3735, 3736, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 1818, 0, 0, 1828,
	0, 3742, 0, 0, 1241, 3744, 1807, 1809, 0, 0,
	0, 0, 0, 1044, 0, 0, 1044, 1044, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 3773, 3774,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 3785, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 1245, 1245, 0, 0,
	0, 3794, 2504, 0, 0, 0, 0, 0, 0, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 1064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 1853, 0, 1245, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1793, 1815, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 1830, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	3842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3853, 0, 0, 0, 0, 0, 0, 0, 1228, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 1948, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 3881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 1245, 0, 0, 1777, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 1832, 0, 0, 1245, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1245, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 1817, 0, 0, 0, 0, 3991,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 3238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4037, 4038, 0,
	0, 0, 0, 4042, 4043, 0, 0, 0, 4046, 4047,
	0, 0, 0, 0, 0, 0, 4051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4055, 0, 0,
	0, 0, 0, 0, 1807, 1809, 109, 0, 0, 109,
	0, 109, 0, 4060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 265, 265, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	0, 0, 0, 1800, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 265, 265, 0, 0,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 265, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2504,
	1832, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 1245,
	1853, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 1245, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4294, 4295, 4296, 1245,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2436,
	0, 0, 4305, 4306, 0, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	4314, 4317, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 0, 1245, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	4363, 0, 0, 0, 0, 0, 0, 1245, 4370, 1245,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 4377, 1779, 0, 1069, 0, 0, 0, 1245, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 4386, 1245,
	0, 1796, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 1245, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 1245, 1241,
	0, 0, 0, 265, 0, 0, 1802, 1803, 1804, 1805,
	1245, 0, 0, 0, 0, 0, 1785, 0, 265, 1947,
	265, 0, 0, 0, 0, 0, 815, 1245, 0, 0,
	0, 0, 0, 815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 1245, 1818, 0, 0, 1828, 0, 0,
	265, 0, 0, 0, 1807, 1809, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 4512, 0, 0, 4515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 1245,
	0, 0, 1245, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 109, 109, 109, 1826, 0, 0,
	0, 1069, 1069, 0, 0, 0, 0, 0, 0, 2006,
	0, 4569, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 2436, 0, 0, 0, 0,
	0, 0, 0, 0, 4317, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 2006, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 815, 1801, 0, 0, 0, 0, 1228, 0, 0,
	1064, 0, 0, 0, 1069, 0, 0, 2006, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 265, 0,
	1832, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 4688, 4688, 4688, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 265, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 265, 0, 0, 265, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 265,
	0, 0, 4688, 0, 0, 3237, 0, 0, 0, 0,
	0, 0, 815, 265, 0, 265, 0, 265, 0, 265,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 265, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4688, 4844, 0, 1228, 1228, 0, 0, 0, 0,
	4848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	1131, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 267, 267, 267, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 1245, 0, 1245, 0, 265, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 1245, 1234, 0, 0, 265, 109,
	0, 265, 0, 1245, 0, 265, 0, 265, 0, 0,
	0, 0, 0, 0, 265, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 1228, 0, 0, 1245, 0,
	1245, 0, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 261, 261, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 835, 0, 0, 0, 0, 836,
	0, 0, 1245, 0, 1245, 0, 0, 1245, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 837, 0,
	854, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 1245, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 0, 0, 0,
	839, 0, 0, 265, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 863, 1245, 0, 0, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1245,
	1245, 0, 0, 0, 265, 834, 815, 0, 0, 0,
	0, 1245, 0, 265, 0, 109, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 841, 0, 1228,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 865, 0, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 265, 1245, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 265, 265, 265, 265, 0,
	0, 0, 0, 0, 265, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 109, 0, 0, 265, 1245,
	1245, 843, 0, 0, 0, 0, 265, 0, 109, 0,
	0, 0, 845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 1245, 0, 0, 1245, 0, 0,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 1245, 1245, 0, 0, 855,
	0, 0, 0, 0, 1814, 1808, 0, 0, 0, 0,
	0, 747, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 832, 0, 856, 0, 0, 0,
	0, 0, 0, 2006, 0, 847, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	853, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 849, 868, 1245, 867, 0, 0, 0, 850, 0,
	0, 0, 0, 0, 0, 267, 1245, 267, 267, 0,
	0, 267, 851, 1328, 0, 0, 0, 860, 0, 0,
	0, 0, 0, 869, 0, 866, 0, 0, 0, 0,
	0, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 267, 1328, 267,
	267, 1785, 1328, 267, 267, 0, 0, 0, 0, 1328,
	0, 0, 0, 1245, 0, 0, 1245, 0, 0, 0,
	1245, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	1245, 1245, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1828, 1328, 0, 0, 0, 1245, 0, 1807,
	1809, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 1825, 1328,
	1241, 267, 267, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2504, 0, 1328,
	0, 0, 0, 1816, 0, 0, 1328, 267, 267, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 1291, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 1826, 0, 265, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 1378, 0, 0, 265, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 265, 265, 0, 0,
	265, 0, 0, 0, 1806, 0, 109, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 1801, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1612, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 1245, 1832, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 815, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 1724, 0, 0, 0, 0, 1817, 109, 0,
	0, 0, 0, 0, 109, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 265, 0, 0, 0, 0, 0,
	3234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 267, 267, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 265, 267, 265, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 1328, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 1802,
	1803, 1804, 1805, 0, 0, 1484, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 1328, 1328, 267, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 267, 0, 0,
	0, 267, 0, 1794, 1795, 0, 0, 267, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 267, 0, 0, 0, 0, 1800, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 1328, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 267, 0,
	1826, 267, 0, 0, 265, 0, 0, 0, 0, 1328,
	0, 1328, 1328, 1328, 0, 0, 0, 0, 1815, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 271, 1830,
	0, 265, 0, 0, 0, 267, 267, 0, 267, 0,
	267, 0, 267, 0, 267, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 265,
	0, 0, 1806, 0, 0, 0, 267, 267, 267, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 2240, 807, 0, 1801, 2247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 1819, 0, 2272, 0, 2272, 0, 0, 0,
	1328, 0, 2279, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2247, 0, 0, 2304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2340, 0, 2342, 0, 2344, 0, 2346, 0, 2347,
	0, 0, 0, 1328, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 3233, 0,
	0, 2373, 2374, 2375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 265, 0, 267, 0, 0, 0, 267, 0,
	267, 0, 0, 1123, 0, 0, 0, 267, 267, 0,
	0, 0, 0, 1328, 1328, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 267, 0, 0, 0,
	2751, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 267, 1328, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 267,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 2799, 0, 0, 1291,
	0, 0, 0, 1291, 1796, 1291, 0, 267, 0, 267,
	0, 1328, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 267, 0, 267, 1785,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 1484, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	267, 267, 0, 0, 1824, 0, 1825, 267, 0, 0,
	267, 0, 0, 1794, 1795, 0, 0, 0, 0, 1947,
	1947, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 265, 265, 0,
	0, 267, 2247, 0, 0, 0, 1800, 0, 0, 267,
	0, 2260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3087, 0, 0, 0, 0, 1947, 1815, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 1830,
	1947, 3098, 0, 3101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 3130, 1484, 3132, 1484, 1947, 0, 265,
	1947, 0, 3138, 1777, 1778, 1801, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 1819, 1780, 0, 0, 1291, 0, 0, 0,
	0, 0, 1827, 1326, 3166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 1832, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 265, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 1328, 1802, 1803, 1804, 1805, 0, 0, 3232, 0,
	0, 0, 1785, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	1818, 0, 0, 1828, 0, 0, 1328, 1328, 0, 0,
	1807, 1809, 0, 267, 0, 0, 1327, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1328, 1816, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 1385, 0, 0, 0, 1800,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 1947, 267,
	267, 0, 1328, 267, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 1826, 1328, 267, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 1815, 1327, 0, 0, 1328, 0, 807, 0, 0,
	0, 0, 1830, 0, 807, 0, 1328, 1326, 0, 0,
	1328, 0, 1327, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 1328, 0, 1328, 0, 1806, 0, 1328, 1291, 0,
	0, 0, 1484, 1484, 267, 0, 0, 0, 0, 0,
	0, 0, 267, 1326, 0, 1328, 267, 0, 1801, 0,
	0, 0, 0, 0, 1326, 0, 0, 1328, 1327, 0,
	0, 0, 0, 3409, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	1328, 0, 0, 0, 3460, 3462, 1832, 267, 2260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 267, 1328,
	267, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 267, 4616, 0, 0,
	1326, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 3563, 0, 0,
	0, 3567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 0, 1326, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	1385, 0, 0, 3663, 0, 1484, 0, 1326, 0, 1326,
	1326, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 0, 0, 0, 0, 0, 0,
	0, 3676, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 1328, 267, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 1327, 1327, 0, 0, 0,
	0, 0, 267, 0, 0, 1385, 0, 267, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 1328, 1328, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	267, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 1327, 0, 1327, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 1327, 1327, 1327, 0, 0, 2260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2260, 0, 0,
	0, 1326, 1326, 0, 0, 0, 0, 3955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 3973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 4022, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 267, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 1328, 267, 0, 1328, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 807, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 1328, 1328, 0, 0, 0, 1777, 1778,
	1326, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 1326, 1328, 1326, 0, 267, 0, 0, 0,
	1814, 1808, 0, 0, 0, 1328, 267, 0, 1780, 1326,
	1328, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1385, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 1328, 1328, 1328, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 1328, 0,
	0, 1385, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 4161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 1328, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 1327, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2260, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 4249, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 1328,
	0, 1794, 1795, 0, 0, 0, 1328, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 1328, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	267, 267, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 4348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 1327, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1327, 0, 1384, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 1328, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 1328, 0,
	0, 0, 0, 0, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 4481, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 1326, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 267, 0, 1777, 1778, 2563, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 1326, 1827, 1326, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 1384, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 1326, 0, 0, 0, 1326, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 4574, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 1326, 267, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	1326, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4665, 0, 0, 0, 0, 0, 1824, 0,
	1825, 1385, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 1816, 0, 1384, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4729, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 1327, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 4612, 0,
	0, 0, 1327, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 1385,
	0, 0, 1385, 0, 0, 1827, 1326, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 1326, 1326, 0, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 1802, 1803, 1804, 1805, 0,
	1384, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	1384, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 1326,
	0, 0, 0, 0, 1815, 0, 0, 0, 1384, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 1806, 1326,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 1326, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 1384, 0, 0, 0, 0, 1326, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 1327, 1327, 0,
	0, 0, 0, 1326, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 1817, 0, 0, 0, 1385, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 1384, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	4528, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 1384, 0, 1326,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 1384, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 0, 0, 1385, 1326, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 1326, 0, 0, 0, 0,
	0, 0, 0, 1327, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 1384,
	0, 0, 1326, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 1327, 0, 0, 1327, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 1385, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 1327, 1327, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 1327, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 1326, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 1385, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 1385, 0, 0, 1327, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 4490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 1327, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 1327, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 2729, 0, 0, 0, 0,
	0, 0, 0, 2730, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	3703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3705, 275, 277, 276, 278, 279, 280, 281, 1387,
	282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393,
	1394, 1395, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1396, 634,
	294, 295, 296, 297, 298, 299, 1397, 1398, 0, 300,
	635, 636, 637, 1399, 301, 302, 638, 1400, 1329, 1401,
	303, 304, 305, 306, 307, 308, 309, 0, 1402, 311,
	312, 313, 310, 314, 1403, 315, 0, 316, 317, 318,
	319, 320, 321, 1404, 322, 323, 324, 1186, 325, 326,
	327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1412, 337, 334,
	335, 1413, 338, 336, 339, 1414, 340, 341, 342, 1415,
	1416, 343, 344, 345, 1417, 346, 347, 1418, 348, 349,
	350, 1419, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1420, 272,
	1421, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1422, 369, 370, 1423, 1424, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1425, 383, 647, 1426, 648, 384, 1427,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 1428, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1429, 1188, 400, 652,
	653, 1430, 654, 1431, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1432, 414, 416, 415, 1433, 417, 656,
	1193, 418, 419, 1194, 1434, 420, 0, 0, 0, 421,
	422, 425, 1435, 1436, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1437, 274, 1197, 466, 467, 1438, 657, 468, 658, 470,
	471, 1439, 0, 472, 0, 1440, 1441, 474, 475, 476,
	1442, 1443, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1444, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1445, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1446, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1447, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1448, 555, 556, 554, 557, 558, 559, 1449, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1450, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1451, 587, 588, 0, 584, 575, 1452, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1453, 597,
	670, 671, 672, 673, 1454, 606, 1455, 598, 599, 600,
	674, 601, 675, 1456, 602, 603, 604, 605, 0, 607,
	608, 1457, 1458, 609, 610, 611, 613, 614, 612, 615,
	1459, 616, 1460, 0, 617, 618, 619, 676, 677, 678,
	1461, 621, 620, 622, 679, 1462, 623, 1463, 1464, 1465,
	1466, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4093, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4300, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4170, 275, 277,
	276, 278, 279, 280, 281, 1387, 282, 283, 1388, 1389,
	1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1396, 634, 294, 295, 296, 297,
	298, 299, 1397, 1398, 0, 300, 635, 636, 637, 1399,
	301, 302, 638, 1400, 1329, 1401, 303, 304, 305, 306,
	307, 308, 309, 0, 1402, 311, 312, 313, 310, 314,
	1403, 315, 0, 316, 317, 318, 319, 320, 321, 1404,
	322, 323, 324, 1186, 325, 326, 327, 1405, 1406, 1408,
	1407, 1409, 1410, 1411, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1412, 337, 334, 335, 1413, 338, 336,
	339, 1414, 340, 341, 342, 1415, 1416, 343, 344, 345,
	1417, 346, 347, 1418, 348, 349, 350, 1419, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1420, 272, 1421, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1422,
	369, 370, 1423, 1424, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1425,
	383, 647, 1426, 648, 384, 1427, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 1428, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1429, 1188, 400, 652, 653, 1430, 654, 1431,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1432,
	414, 416, 415, 1433, 417, 656, 1193, 418, 419, 1194,
	1434, 420, 0, 0, 0, 421, 422, 425, 1435, 1436,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1437, 274, 1197, 466,
	467, 1438, 657, 468, 658, 470, 471, 1439, 0, 472,
	0, 1440, 1441, 474, 475, 476, 1442, 1443, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1444, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1445, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1446,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1447, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1448, 555, 556, 554,
	557, 558, 559, 1449, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1450, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1451, 587,
	588, 0, 584, 575, 1452, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1453, 597, 670, 671, 672, 673,
	1454, 606, 1455, 598, 599, 600, 674, 601, 675, 1456,
	602, 603, 604, 605, 0, 607, 608, 1457, 1458, 609,
	610, 611, 613, 614, 612, 615, 1459, 616, 1460, 0,
	617, 618, 619, 676, 677, 678, 1461, 621, 620, 622,
	679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4023, 275, 277, 276, 278, 279,
	280, 281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391,
	629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 1396, 634, 294, 295, 296, 297, 298, 299, 1397,
	1398, 0, 300, 635, 636, 637, 1399, 301, 302, 638,
	1400, 1329, 1401, 303, 304, 305, 306, 307, 308, 309,
	0, 1402, 311, 312, 313, 310, 314, 1403, 315, 0,
	316, 317, 318, 319, 320, 321, 1404, 322, 323, 324,
	1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410,
	1411, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	1412, 337, 334, 335, 1413, 338, 336, 339, 1414, 340,
	341, 342, 1415, 1416, 343, 344, 345, 1417, 346, 347,
	1418, 348, 349, 350, 1419, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 1420, 272, 1421, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 1422, 369, 370, 1423,
	1424, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 1425, 383, 647, 1426,
	648, 384, 1427, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 1428, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 1429,
	1188, 400, 652, 653, 1430, 654, 1431, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1432, 414, 416, 415,
	1433, 417, 656, 1193, 418, 419, 1194, 1434, 420, 0,
	0, 0, 421, 422, 425, 1435, 1436, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1437, 274, 1197, 466, 467, 1438, 657,
	468, 658, 470, 471, 1439, 0, 472, 0, 1440, 1441,
	474, 475, 476, 1442, 1443, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 1444, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	1445, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 1446, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 1447, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 1448, 555, 556, 554, 557, 558, 559,
	1449, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 1450, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 1451, 587, 588, 0, 584,
	575, 1452, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 1453, 597, 670, 671, 672, 673, 1454, 606, 1455,
	598, 599, 600, 674, 601, 675, 1456, 602, 603, 604,
	605, 0, 607, 608, 1457, 1458, 609, 610, 611, 613,
	614, 612, 615, 1459, 616, 1460, 0, 617, 618, 619,
	676, 677, 678, 1461, 621, 620, 622, 679, 1462, 623,
	1463, 1464, 1465, 1466, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3721, 275, 277, 276, 278, 279, 280, 281, 1387,
	282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393,
	1394, 1395, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1396, 634,
	294, 295, 296, 297, 298, 299, 1397, 1398, 0, 300,
	635, 636, 637, 1399, 301, 302, 638, 1400, 1329, 1401,
	303, 304, 305, 306, 307, 308, 309, 0, 1402, 311,
	312, 313, 310, 314, 1403, 315, 0, 316, 317, 318,
	319, 320, 321, 1404, 322, 323, 324, 1186, 325, 326,
	327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1412, 337, 334,
	335, 1413, 338, 336, 339, 1414, 340, 341, 342, 1415,
	1416, 343, 344, 345, 1417, 346, 347, 1418, 348, 349,
	350, 1419, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1420, 272,
	1421, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1422, 369, 370, 1423, 1424, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1425, 383, 647, 1426, 648, 384, 1427,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 1428, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1429, 1188, 400, 652,
	653, 1430, 654, 1431, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1432, 414, 416, 415, 1433, 417, 656,
	1193, 418, 419, 1194, 1434, 420, 0, 0, 0, 421,
	422, 425, 1435, 1436, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1437, 274, 1197, 466, 467, 1438, 657, 468, 658, 470,
	471, 1439, 0, 472, 0, 1440, 1441, 474, 475, 476,
	1442, 1443, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1444, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1445, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1446, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1447, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1448, 555, 556, 554, 557, 558, 559, 1449, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1450, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1451, 587, 588, 0, 584, 575, 1452, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1453, 597,
	670, 671, 672, 673, 1454, 606, 1455, 598, 599, 600,
	674, 601, 675, 1456, 602, 603, 604, 605, 0, 607,
	608, 1457, 1458, 609, 610, 611, 613, 614, 612, 615,
	1459, 616, 1460, 0, 617, 618, 619, 676, 677, 678,
	1461, 621, 620, 622, 679, 1462, 623, 1463, 1464, 1465,
	1466, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3548, 275,
	277, 276, 278, 279, 280, 281, 1387, 282, 283, 1388,
	1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 1396, 634, 294, 295, 296,
	297, 298, 299, 1397, 1398, 0, 300, 635, 636, 637,
	1399, 301, 302, 638, 1400, 1329, 1401, 303, 304, 305,
	306, 307, 308, 309, 0, 1402, 311, 312, 313, 310,
	314, 1403, 315, 0, 316, 317, 318, 319, 320, 321,
	1404, 322, 323, 324, 1186, 325, 326, 327, 1405, 1406,
	1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 1412, 337, 334, 335, 1413, 338,
	336, 339, 1414, 340, 341, 342, 1415, 1416, 343, 344,
	345, 1417, 346, 347, 1418, 348, 349, 350, 1419, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 1420, 272, 1421, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	1422, 369, 370, 1423, 1424, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1425, 383, 647, 1426, 648, 384, 1427, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 1428,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1429, 1188, 400, 652, 653, 1430, 654,
	1431, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1432, 414, 416, 415, 1433, 417, 656, 1193, 418, 419,
	1194, 1434, 420, 0, 0, 0, 421, 422, 425, 1435,
	1436, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1437, 274, 1197,
	466, 467, 1438, 657, 468, 658, 470, 471, 1439, 0,
	472, 0, 1440, 1441, 474, 475, 476, 1442, 1443, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1444, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 1445, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	1446, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 1447, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 1448, 555, 556,
	554, 557, 558, 559, 1449, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 1450, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 1451,
	587, 588, 0, 584, 575, 1452, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 1453, 597, 670, 671, 672,
	673, 1454, 606, 1455, 598, 599, 600, 674, 601, 675,
	1456, 602, 603, 604, 605, 0, 607, 608, 1457, 1458,
	609, 610, 611, 613, 614, 612, 615, 1459, 616, 1460,
	0, 617, 618, 619, 676, 677, 678, 1461, 621, 620,
	622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2586, 275, 277, 276, 278,
	279, 280, 281, 1387, 282, 283, 1388, 1389, 1390, 0,
	1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1396, 634, 294, 295, 296, 297, 298, 299,
	1397, 1398, 0, 300, 635, 636, 637, 1399, 301, 302,
	638, 1400, 1329, 1401, 303, 304, 305, 306, 307, 308,
	309, 0, 1402, 311, 312, 313, 310, 314, 1403, 315,
	0, 316, 317, 318, 319, 320, 321, 1404, 322, 323,
	324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409,
	1410, 1411, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1412, 337, 334, 335, 1413, 338, 336, 339, 1414,
	340, 341, 342, 1415, 1416, 343, 344, 345, 1417, 346,
	347, 1418, 348, 349, 350, 1419, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1420, 272, 1421, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1422, 369, 370,
	1423, 1424, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1425, 383, 647,
	1426, 648, 384, 1427, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 1428, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1429, 1188, 400, 652, 653, 1430, 654, 1431, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1432, 414, 416,
	415, 1433, 417, 656, 1193, 418, 419, 1194, 1434, 420,
	0, 0, 0, 421, 422, 425, 1435, 1436, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1437, 274, 1197, 466, 467, 1438,
	657, 468, 658, 470, 471, 1439, 0, 472, 0, 1440,
	1441, 474, 475, 476, 1442, 1443, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1444, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1445, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1446, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1447,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1448, 555, 556, 554, 557, 558,
	559, 1449, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1450,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1451, 587, 588, 0,
	584, 575, 1452, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1453, 597, 670, 671, 672, 673, 1454, 606,
	1455, 598, 599, 600, 674, 601, 675, 1456, 602, 603,
	604, 605, 0, 607, 608, 1457, 1458, 609, 610, 611,
	613, 614, 612, 615, 1459, 616, 1460, 0, 617, 618,
	619, 676, 677, 678, 1461, 621, 620, 622, 679, 1462,
	623, 1463, 1464, 1465, 1466, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 1478, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2221, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 1379, 0,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 1387, 282, 283, 1388, 1389, 1390,
	0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1396, 634, 294, 295, 296, 297, 298,
	299, 1397, 1398, 0, 300, 635, 636, 637, 1399, 301,
	302, 638, 1400, 1329, 1401, 303, 304, 305, 306, 307,
	308, 309, 0, 1402, 311, 312, 313, 310, 314, 1403,
	315, 0, 316, 317, 318, 319, 320, 321, 1404, 322,
	323, 324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407,
	1409, 1410, 1411, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1412, 337, 334, 335, 1413, 338, 336, 339,
	1414, 340, 341, 342, 1415, 1416, 343, 344, 345, 1417,
	346, 347, 1418, 348, 349, 350, 1419, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1420, 272, 1421, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1422, 369,
	370, 1423, 1424, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1425, 383,
	647, 1426, 648, 384, 1427, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 1428, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1429, 1188, 400, 652, 653, 1430, 654, 1431, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1432, 414,
	416, 415, 1433, 417, 656, 1193, 418, 419, 1194, 1434,
	420, 0, 0, 0, 421, 422, 425, 1435, 1436, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1437, 274, 1197, 466, 467,
	1438, 657, 468, 658, 470, 471, 1439, 0, 472, 0,
	1440, 1441, 474, 475, 476, 1442, 1443, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1444, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1445, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1446, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1447, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1448, 555, 556, 554, 557,
	558, 559, 1449, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1450, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1451, 587, 588,
	0, 584, 575, 1452, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1453, 597, 670, 671, 672, 673, 1454,
	606, 1455, 598, 599, 600, 674, 601, 675, 1456, 602,
	603, 604, 605, 0, 607, 608, 1457, 1458, 609, 610,
	611, 613, 614, 612, 615, 1459, 616, 1460, 0, 617,
	618, 619, 676, 677, 678, 1461, 621, 620, 622, 679,
	1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680, 626,
	627, 628, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 1387, 282, 283, 1388,
	1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 1396, 634, 294, 295, 296,
	297, 298, 299, 1397, 1398, 0, 300, 635, 636, 637,
	1399, 301, 302, 638, 1400, 1329, 1401, 303, 304, 305,
	306, 307, 308, 309, 0, 1402, 311, 312, 313, 310,
	314, 1403, 315, 0, 316, 317, 318, 319, 320, 321,
	1404, 322, 323, 324, 1186, 325, 326, 327, 1405, 1406,
	1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 1412, 337, 334, 335, 1413, 338,
	336, 339, 1414, 340, 341, 342, 1415, 1416, 343, 344,
	345, 1417, 346, 347, 1418, 348, 349, 350, 1419, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 1420, 272, 1421, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	1422, 369, 370, 1423, 1424, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1425, 383, 647, 1426, 648, 384, 1427, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 1428,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1429, 1188, 400, 652, 653, 1430, 654,
	1431, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1432, 414, 416, 415, 1433, 417, 656, 1193, 418, 419,
	1194, 1434, 420, 0, 0, 0, 421, 422, 425, 1435,
	1436, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1437, 274, 1197,
	466, 467, 1438, 657, 468, 658, 470, 471, 1439, 0,
	472, 0, 1440, 1441, 474, 475, 476, 1442, 1443, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1444, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 1445, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	1446, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 1447, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 1448, 555, 556,
	554, 557, 558, 559, 1449, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 1450, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 1451,
	587, 588, 0, 584, 575, 1452, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 1453, 597, 670, 671, 672,
	673, 1454, 606, 1455, 598, 599, 600, 674, 601, 675,
	1456, 602, 603, 604, 605, 0, 607, 608, 1457, 1458,
	609, 610, 611, 613, 614, 612, 615, 1459, 616, 1460,
	0, 617, 618, 619, 676, 677, 678, 1461, 621, 620,
	622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625,
	680, 626, 627, 628, 2561, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	2558, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	2559, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 2557, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 2560,
	0, 0, 0, 0, 0, 0, 1105, 2556, 0, 1065,
	1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 234, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 236, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 1603, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 228, 624, 625, 680,
	626, 627, 628, 1079, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 1858, 1856, 0, 0, 1103, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 234,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 236, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 1603, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 228,
	624, 625, 680, 626, 627, 628, 1079, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 1858, 3188, 0, 0, 1103, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 234, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	236, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 1603,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 228, 624, 625, 680, 626, 627, 628, 1079,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 1858, 1856, 0,
	0, 1103, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 2690, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 2695, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 2691, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 2692, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 2606, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 0,
	0, 0, 0, 0, 0, 0, 1105, 2604, 0, 2603,
	1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 0, 0, 0, 0, 0, 0,
	0, 1105, 2601, 0, 2600, 1103, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 0,
	0, 0, 0, 0, 0, 0, 1105, 2598, 0, 2597,
	1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 0, 0, 0, 0, 0, 0,
	0, 1105, 2595, 0, 1699, 1103, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 1698, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	1068, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 1083, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 4638, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 1083, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	2438, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 2437, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	1083, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 4380, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 1083, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 3985, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 1926, 0, 0, 0, 0,
	0, 0, 1105, 0, 0, 0, 1103, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 3699, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 1926, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 1103, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	2695, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 0, 0, 0,
	0, 0, 0, 0, 1105, 1856, 0, 2700, 1103, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 2698, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 2686,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 2674, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 2672, 0, 2663, 2670, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 2666, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 2667, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 2668, 435, 2665, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 2669, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 2664, 628, 1079, 0, 2660, 0, 2663,
	2670, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 2666, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 2667, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 2668,
	435, 2665, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 2669, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 2664,
	628, 1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 0, 0,
	0, 0, 0, 1864, 0, 1105, 0, 0, 0, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 2417, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 2381, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	2357, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 1704, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 1633, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 1628, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 1619, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	1614, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 1526, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1525, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 1520, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1519, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 1513, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 1331, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 4687, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 4686, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	4685, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 4687,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 4686, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 4319, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 4320, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 4318, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 1121, 1093, 1094, 1095,
	3155, 3156, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 1121, 1093, 1094, 1095, 3153, 3154, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 2425,
	2426, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 0, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 2682, 0,
	0, 0, 0, 0, 0, 2680, 2681, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 0, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	3148, 3149, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 2109, 2110, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 0, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 4687, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 0, 1148, 0,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 0, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	4686, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	1065, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 1144, 0, 300, 635, 636, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1229, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 274, 1197,
	466, 467, 0, 1149, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 1235, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 1237, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 234, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 0, 584, 575, 236, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 1603, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 1243, 228, 624, 625,
	680, 626, 627, 628, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 0,
	1233, 0, 1950, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 1144, 0,
	300, 635, 636, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1229, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 274, 1197, 466, 467, 0, 1149, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1235, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 1237, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 0, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 1603, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 3312, 0,
	1243, 228, 624, 625, 680, 626, 627, 628, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 0, 1233, 0, 1950, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 1144, 0, 300, 635, 636, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1229, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 274, 1197, 466, 467,
	0, 1149, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 1235, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 1237, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 1225, 0, 1243, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 0, 1233, 0,
	1231, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1144, 0, 300, 635,
	636, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1229, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 0, 1149, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1235, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 1237, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 1243, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1145, 0, 1233, 0, 1231, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	1144, 0, 300, 635, 636, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1229, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 274, 1197, 466, 467, 0, 1149,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 1235,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 1237,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 1243, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1145, 0, 1233, 0, 1231, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 1144, 0, 300, 635, 636, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 274, 1197,
	466, 467, 0, 1149, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 1243, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 0,
	0, 0, 4143, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 1144, 0,
	300, 635, 636, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 274, 1197, 466, 467, 0, 1149, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 1237, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	269, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	2529, 2530, 2531, 2548, 2549, 2550, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	2551, 0, 629, 0, 0, 0, 1848, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 1833, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 2541, 0, 311, 312, 313, 310, 314, 0,
	315, 2537, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 2542, 2543, 2544, 2545,
	365, 366, 367, 644, 0, 0, 2536, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	2546, 2547, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 2539, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 2540, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	1832, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 1065, 0,
	1324, 2526, 2527, 2528, 2552, 2538, 2532, 0, 2534, 2535,
	2533, 2520, 2521, 2522, 2523, 2524, 2525, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 234, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 236, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 1603, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 1600, 0, 1324, 228, 624, 625, 680, 626,
	627, 628, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	189, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 234,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 236, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 1603, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 228,
	624, 625, 680, 626, 627, 628, 1324, 1323, 229, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 189, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1324, 1323,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 1625, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 3614, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 2299, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1324, 2213, 0, 0, 0, 0, 2214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	1625, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 2212, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1324, 1323, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 1625, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 1065, 0, 269, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 1609, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 234, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 236, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	1603, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 1243, 228, 624, 625, 680, 626, 627, 628,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1145, 0, 0, 0, 189, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 1144, 0, 300, 635, 636, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 274, 1197,
	466, 467, 0, 1149, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 269, 3057, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 1964, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 269, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 4854, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 3564, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 1597, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 269, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 3045,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 269, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 3724, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 901,
	0, 806, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 2290, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 813, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 899, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 811, 589, 590, 591, 592, 593,
	812, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 806, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 2031, 282, 283, 0, 0,
	0, 0, 0, 629, 816, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 813, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 2030, 550, 551, 552, 553, 0, 2032, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 811, 589, 590, 591, 592, 593,
	812, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 2029, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 806, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 1982, 282, 283, 0, 0,
	0, 0, 0, 629, 816, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 813, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 1981, 550, 551, 552, 553, 0, 1983, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 811, 589, 590, 591, 592, 593,
	812, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 1980, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 804, 623, 806, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 816, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 813,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 811, 589, 590, 591,
	592, 593, 812, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 2004, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 0, 816, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 0,
	2010, 0, 292, 2000, 293, 2016, 0, 2023, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 2026, 2027,
	0, 0, 301, 302, 0, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 1168, 333, 2014, 2013, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 0, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 2012, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	2021, 2022, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 0, 0, 0, 384, 0, 385, 386,
	387, 388, 389, 0, 0, 0, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 2007, 2008, 0,
	2003, 0, 402, 403, 1190, 0, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 0, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 0, 468, 2015, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 0, 1198, 479, 1199, 0, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 1997, 493, 494, 495, 1998, 496, 497, 498,
	0, 499, 0, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 2011, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 0, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	2009, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 2025, 578, 579, 580, 581, 0, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 2017, 2018,
	2019, 2020, 0, 606, 0, 598, 599, 600, 0, 601,
	0, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 0, 2001, 2024, 0, 621,
	620, 622, 0, 0, 623, 0, 0, 0, 806, 624,
	625, 0, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1991, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 813, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 811, 589, 590, 591, 592, 593, 812, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 806, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 816, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 813, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 2336, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 2337, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 811, 589, 590, 591, 592, 593, 812, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 2338,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 269, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 816, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 2075, 623,
	1324, 2042, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 816, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 2039, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 2040, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	2036, 623, 1324, 2042, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 2039, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 2040, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 1324, 2042, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 2039, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 2040, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1324, 1323, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 3917, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1324, 1323,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 3526, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1653, 0, 1324, 1323, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 1652, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 1651, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 1650, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1571, 0, 1324, 1323, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1570, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1531, 0,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1496, 0, 1324, 1323, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1495, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1318, 0, 1324, 1323,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1317, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 1324, 2042, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 2082, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 1324, 1323, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 1324,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 2851, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 2848, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 2855, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 3070, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 2854, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	3067, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 3069, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 3066, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 2853, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 3068, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 2851, 301, 302,
	638, 0, 0, 2845, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 2848, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 2855, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	2854, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 2844,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 2853, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 2852, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1730,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 1729, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 1728, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 1731,
	542, 549, 550, 551, 552, 553, 0, 1727, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 1725, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 1726, 620, 622,
	679, 1471, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1473, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 1235, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1468, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1470, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 1235, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1375, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1377, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 1235, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 712, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	711, 280, 281, 701, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 704, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 705, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 706, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 700,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 701, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 704,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 705,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 706, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	701, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 704, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 705, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 706, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 701, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 704,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 3928,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 706, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1235, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 3469, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 3015, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 3014, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 2305, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 2246, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	2253, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2252, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 2239, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 2241, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 2206,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1575,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1574, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1488, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1481, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1483, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1308, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1307, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1298, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1297,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1295,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1294, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1290, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1289, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 682, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 260, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 704, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 705, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 706, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 2345, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 2343, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 2341, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 2259, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2061, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 2055, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 888, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 887, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 886, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 3070, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 4218, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 766, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1345, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 1343, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 771, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 770, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 1346, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 768, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 766, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1345, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 1343, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 771, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 770, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 1346, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 768, 671, 672, 673, 0, 606, 0,
	598, 1344, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 691, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 690, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	689, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 269, 3057, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 269, 4228, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 4506, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 4117, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 3883, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 2735, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 269, 3057, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	3054, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 2315, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 2303, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 766, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 759, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 771, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 770, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 1608, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	768, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1581, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1580, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1565, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1563,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1558,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1535, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1533, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1493, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1476, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1313, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1312,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1304,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1303, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	1257, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 776, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 766, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 759, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 757, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 758, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	771, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 760, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 770, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 761, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 768, 671,
	672, 673, 0, 606, 0, 598, 763, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 751, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	752, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 714, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 708, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 686,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3584, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 770, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 768, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3509, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3487, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3484, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3434, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3432, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3417, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3025, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 752, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 2277, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 0, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1275, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 1208, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 0,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 0, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 0, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 0, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 1777, 1778, 1779, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1828, 0, 0, 1800, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 0, 0, 1806, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 1801, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 1819, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 4489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1818, 0, 0, 1828, 4303, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	1800, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 1814,
	1808, 1818, 0, 0, 1828, 0, 0, 1780, 0, 0,
	0, 1807, 1809, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 1824, 0,
	1825, 0, 0, 1833, 0, 0, 0, 1794, 1795, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 1816, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 1826, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 4139, 0,
	0, 0, 1815, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 1830, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 1814, 1808, 1807, 1809, 1806, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 1801,
	1794, 1795, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 1799, 1819, 0, 0, 0,
	0, 0, 0, 1800, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 1818, 4070, 1806,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 1819,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 1800, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 4069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 1814, 1808, 1818, 0, 0,
	1828, 0, 0, 1780, 0, 0, 0, 1807, 1809, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 1824, 0, 1825, 0, 0, 1833,
	0, 0, 0, 1794, 1795, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 1816, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1826, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 4068, 0, 0, 0, 1815, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 1830,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	1818, 0, 0, 1828, 0, 0, 0, 0, 1814, 1808,
	1807, 1809, 1806, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 1801, 1794, 1795, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 1799, 1819, 0, 0, 0, 0, 0, 0, 1800,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 1818, 3729, 1806, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 1819, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 1800, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 3230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 1814, 1808, 1818, 0, 0, 1828, 0, 0, 1780,
	0, 0, 0, 1807, 1809, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	1824, 0, 1825, 0, 0, 1833, 0, 0, 0, 1794,
	1795, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 1816, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 1826, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	3229, 0, 0, 0, 1815, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 1830, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 1814, 1808, 1807, 1809, 1806, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 1801, 1794, 1795, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 1799, 1819, 0,
	0, 0, 0, 0, 0, 1800, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 1818,
	3228, 1806, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1824, 0, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822,
	1823, 1819, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1808, 0, 0, 1800, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 3227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 4761, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 1814, 1808, 1818,
	0, 0, 1828, 0, 0, 1780, 0, 0, 0, 1807,
	1809, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1824, 0, 1825, 0,
	0, 1833, 0, 0, 0, 1794, 1795, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 1816, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 1826, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 3192, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 1830, 0, 0, 1785, 0, 3292, 0, 0, 0,
	3291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4760, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	1814, 1808, 1807, 1809, 1806, 0, 3163, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 1801, 1794, 1795,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 1799, 1819, 0, 0, 0, 0, 0,
	0, 1800, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3164, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 1818, 0, 1806, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2708, 0, 0, 0, 1819, 0, 1816,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 2707, 1832, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 1826, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 1815, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 1801, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 1814, 1808, 1807, 1809, 0,
	0, 1832, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 1800, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	1818, 0, 1806, 1828, 0, 0, 1780, 0, 0, 0,
	1807, 1809, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 1824, 0, 1825,
	0, 0, 1833, 0, 0, 0, 1794, 1795, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 1819, 0, 1816, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1062, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 1830, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 1801, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 1777, 1778, 1819, 1810, 1811, 1812, 1821,
	1822, 1823, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 1832, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 1830, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 3298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	1818, 0, 0, 1828, 0, 0, 0, 0, 0, 1832,
	1807, 1809, 0, 1814, 1808, 0, 0, 0, 3293, 0,
	0, 1780, 3710, 0, 0, 0, 0, 1824, 0, 1825,
	1827, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1816, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 1800,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1814, 1808, 1818, 0,
	0, 1828, 0, 0, 1780, 0, 0, 0, 1807, 1809,
	0, 0, 0, 1827, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 0,
	1833, 0, 0, 0, 1794, 1795, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 1799,
	0, 0, 1816, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	1830, 0, 0, 1785, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1807, 1809, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 1801, 1794, 1795, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 1814, 1808, 0, 0,
	1800, 3231, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 1814,
	1808, 1818, 0, 0, 1828, 0, 0, 1780, 0, 0,
	0, 1807, 1809, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 1824, 0,
	1825, 0, 0, 1833, 0, 0, 0, 1794, 1795, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 1816, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 1826, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 1830, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 1814, 1808, 1807, 1809, 1806, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 1801,
	1794, 1795, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 1799, 1819, 0, 0, 0,
	0, 0, 0, 1800, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 1818, 0, 1806,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 948, 0, 997, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 956, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 1819,
	0, 1816, 0, 0, 971, 0, 954, 953, 0, 0,
	0, 0, 0, 1808, 0, 0, 1800, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 973, 1827,
	1832, 0, 0, 0, 955, 0, 0, 0, 0, 958,
	0, 0, 0, 0, 1005, 0, 1833, 0, 0, 0,
	0, 0, 0, 968, 969, 1779, 0, 0, 0, 0,
	1826, 0, 986, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	998, 960, 0, 0, 0, 0, 961, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 962, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 995, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 996, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 964, 0, 1801, 0, 0, 0, 0,
	0, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	965, 966, 1819, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 974,
	972, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 983, 0, 1832, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 1002,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1826, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 959, 0, 0, 1004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	957, 0, 0, 0, 990, 991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 1806, 0, 0, 0, 0, 0, 1003, 984,
	0, 0, 977, 975, 0, 980, 0, 0, 0, 0,
	0, 981, 0, 0, 950, 1801, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	992, 0, 982, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 1832, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
}

var sqlPact = [...]int{
	288, -1000, -1000, -1000, -1000, 275, -1000, -1000, 274, 269,
	267, 261, 257, 256, 255, 254, 252, 248, 247, -1000,
	-1000, -1000, -1000, -1000, -1000, 235, -1000, -1000, 227, -1000,
	225, 223, 222, -1000, -1000, 221, -1000, 216, -1000, -1000,
	-1000, -1000, 215, 213, 212, 94573, 94021, 95118, 2305, 115437,
	101686, 2220, 84127, 114885, 83575, 114333, 2157, 7847, 113781, 2735,
	206, -1000, 113229, 205, 204, 203, -1000, 112677, -1000, 1828,
	-1000, 201, -1000, 7010, 69709, 199, 198, 196, 2295, 194,
	-1000, 187, 186, -1000, -1000, 185, -1000, 13002, 1533, -1000,
	183, 182, -1000, 5140, 99485, 181, 180, 2371, 178, 177,
	68057, 173, 172, 2135, 2874, -1000, -1000, 2004, -1000, -1000,
	164, 156, 143, 139, 137, 136, 135, 133, 132, 128,
	126, 120, -1000, 117, 113, 112, 108, 100, -1000, 99,
	98, 97, -1000, 96, -1000, 95, 92, 91, 90, 87,
	86, 83, 82, 81, 76, 73, 70, 68, 67, 129250,
	-1000, -1000, 66, 1954, 1688, 1687, 1683, 1676, 1671, 1011,
	59, 56, 51, 50, 49, 48, 47, 45, 44, 43,
	42, 36, 35, 34, 33, 32, 30, 28, 158, 27,
	19, 18, 17, 16, 15, 14, 2154, -1000, 1495, 867,
	32528, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 123067, 115982,
	12, -23, 11, -1000, 3324, 1063, 56380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 539, 2138, 797, -1000, -1000, -1000, 112132,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2304, -26,
	-1000, 2016, -1000, -1000, -1000, -1000, -1000, 796, -1000, 2302,
	208, 2226, -1000, -1000, -1000, 3365, 2440, 3771, 3770, 3768,
	3766, 3764, 122522, 1840, 3763, 2503, 3762, 3761, 3760, 3757,
	3753, 3752, 3750, -1000, 93469, 1043, 92917, 92365, 3390, 111587,
	91813, 111035, 77514, 48492, 812, 3363, -1000, -1000, -1000, -1000,
	-1000, -1000, 115982, -1000, 1041, -1000, -1000, 3748, 3744, 2064,
	791, 101134, -1000, 1748, -1000, -1000, -1000, -1000, 964, 1250,
	34226, 34226, 333, -1000, -1000, -1000, -1000, -1000, -1000, 3743,
	3742, 3739, 3738, 3734, -1000, -1000, 83023, 25546, 82471, 81919,
	110483, 24982, 91261, 90709, 3729, 3727, 3724, 109931, 76950, 3486,
	3485, 1040, 2015, 1437, -1000, -1000, -1000, -1000, -1000, -1000,
	-13, 71914, 3517, 115982, -1000, 329, -1000, -1000, -1000, -1000,
	-1000, -1000, 47926, 633, 47360, 632, 46794, 552, -1000, -1000,
	-1000, -1000, 76386, -1000, 109379, 2438, 3723, 3722, 1138, 3721,
	3262, 1825, 3720, 1819, 1233, 3719, 3718, 3717, 3716, 3715,
	3714, 3713, 1476, 108827, 2970, 1509, 108275, 1658, 75822, 1039,
	90157, 95118, 2643, 107723, 1429, 1428, -1000, -1000, -1000, -1000,
	3115, 2862, 2861, 1279, -1000, -1000, -1000, -1000, 59720, 8276,
	7043, -1000, -1000, 8998, 107171, 62530, 95118, 95118, -1000, -1000,
	-1000, -1000, -1000, 46228, 499, 45662, 765, -1000, -1000, 60282,
	2920, -1000, -1000, -1000, -1000, 45096, 309, 44530, 749, 115982,
	-1000, 2969, 1859, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2216, 1653, 3541, 2758, 75258, 1998, 1458, 3325, 3105, 3067,
	1541, 2014, 3064, 3712, 2593, 3062, 3060, 3055, 3044, 3035,
	1440, 2523, 549, 2573, 31962, 2951, 1675, 43964, 1522, 1539,
	3031, 3029, 3560, 2008, 2013, 2032, 81367, 3710, 3708, 3299,
	3023, 3021, 2809, 3018, -1000, 2919, 1474, -1000, -1000, -1000,
	-1000, 1494, -1000, -1000, -1000, -1000, -1000, 85762, -1000, -1000,
	1511, -1000, -1000, 1511, -1000, -1000, -1000, -1000, -1000, 1260,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1495, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2150, -1000, 2053, -1000, -1000, 2520, 3303,
	3303, 3303, 3361, 512, 507, -1000, 158, -1000, -1000, 128826,
	-1000, -1000, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058,
	2174, -1000, 788, -1000, -1000, 827, -1000, 787, 728, 643,
	-1000, -1000, -1000, -1000, -1000, -1000, 785, -1000, -1000, -1000,
	-1000, -1000, -1000, 3517, -1000, 28433, -1000, -1000, -1000, 509,
	783, 49058, -1000, -1000, 3587, 3584, 971, -1000, 328, 982,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2959, 782, 779, -1000, 778, 775, 774, 773,
	772, -1000, -1000, -1000, 771, 768, 766, 763, 762, 761,
	760, 757, -1000, 2026, -1000, -1000, -1000, -1000, -1000, -1000,
	711, 707, 707, 707, -1000, 1034, -1000, -1000, -1000, 358,
	706, 341, 704, 700, 698, -1000, 756, 755, 753, 747,
	743, 740, 738, 735, 733, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1033, -1000, -1000, -1000, -1000, -14, 115982, -1000,
	539, -14, -1000, -1000, 732, -1000, 36519, 36519, 36519, -1000,
	-1000, 2288, 49058, -1000, 2392, -1000, 0, 0, 916, 58042,
	-1000, 55272, 916, 324, 840, 64183, -1000, 2915, -1000, -1000,
	729, 318, -1000, -1000, -1000, -1000, 26108, 2912, 115982, 115982,
	95118, 95118, 95118, 3707, 3199, 49058, -1000, -1000, 69157, 115982,
	95663, -1000, -1000, 3466, 70259, 68607, 115982, 2957, 73018, 3706,
	-1000, -1000, -1000, -1000, -1000, 3170, 3705, 3704, 3697, -1000,
	115982, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 236, 3167,
	-1000, -1000, 98933, 236, 3166, -1000, 236, 3165, -1000, 98388,
	-1000, -1000, 2235, 3164, -1000, -1000, 238, 3163, -1000, -1000,
	-1000, 237, 3162, -1000, -1000, 314, -105, 3161, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	128826, -1000, -1000, -1000, 72466, -1000, 3287, -1000, -1000, 115982,
	-1000, 49058, -1000, 3465, 1698, 78628, 3411, -21, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2488, 2509, 1146, 2315, -1000,
	3210, 1443, 34226, 3245, -1000, -1000, -1000, -1000, 311, 26108,
	-1000, -1000, -1000, -1000, -1000, -1000, 3227, 3160, 1400, -1000,
	2314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2039,
	3159, -1000, 2147, 3158, 1953, -1000, -1000, 2552, -1000, 3278,
	-1000, -1000, 1873, 3156, 1, -1000, -1000, 2352, -1000, -1000,
	-1000, -1000, 1957, -1000, 1340, 3155, -1000, 2756, 2756, 89605,
	3116, 61968, 60282, 71914, -17, -1000, -1000, -1000, -1000, -269,
	-1000, 24415, 128826, -1000, -1000, -1000, -1000, 1843, 128826, 963,
	-1000, -1000, 3154, -1000, 128826, 960, -1000, -1000, 3153, -1000,
	2955, -1000, -1000, 2401, -1000, -1000, 3696, -1000, -1000, 3695,
	-1000, 3694, 3692, 3688, -1000, 1721, 2011, 3675, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 89060, 2286, -1000, -1000,
	87956, 2954, -1000, 2397, 3410, -1000, 88508, 1038, -1000, 1004,
	2389, -1000, 97843, 1066, 2388, -1000, 3674, 3377, 2686, 1004,
	2384, -1000, -1000, -1000, -1000, -1000, 1069, -1000, 65843, -1000,
	65843, -1000, 1589, -1000, 121977, 0, 95118, 3517, -1000, -27,
	-1000, -1000, -1000, 1063, -1000, 59166, -1000, 59166, 100582, 78076,
	985, 818, 67503, 128826, -1000, -1000, -1000, -1000, 128826, -1000,
	-1000, -1000, -255, 2753, -1000, 78076, 61406, 128826, -1000, -1000,
	-1000, -1000, 128826, -1000, -1000, -1000, 78076, 87956, -1000, 106619,
	87411, -1000, -1000, 1472, 2531, -1000, -1000, -1000, 78076, 1341,
	78076, 78076, 78076, -1000, 106067, -1000, -1000, 2037, 1256, 3283,
	2033, 95118, -1000, 1818, -1000, -1000, -1000, 3313, 3113, 115982,
	-1000, -1000, 2952, -1000, 71364, 97298, -1000, 96753, -1000, 96208,
	-1000, 95118, -1000, 95118, -1000, 3673, 3671, 3670, -1000, -1000,
	3669, -1000, 3666, 3306, -1000, 699, 43398, 128826, 3305, -1000,
	3663, 3405, 2951, 128826, -1000, 3046, 1680, 1674, 115982, -1000,
	-1000, 115982, -1000, 115982, -1000, -1000, -1000, 1548, -1000, -1000,
	2487, -1000, -1000, -1000, -1000, 95118, 95118, 95118, 95118, 1459,
	-1000, 42832, -1000, -1000, 3020, 3661, 1740, -1000, 1801, -1000,
	2911, 3315, -1000, 1467, 1684, -1000, -1000, 240, -1000, -1000,
	-21, -1000, 121432, -1000, 2520, -1000, 115982, -1000, 2481, 2943,
	2950, 1581, 2265, 2588, -1000, 42266, 2556, 52454, 2301, 158,
	-1000, -1000, 158, 158, 33660, -1000, -1000, 70259, 70259, 26108,
	1324, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058,
	49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058,
	49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058, 49058,
	49058, 49058, 49058, 49058, 49058, 49058, 49058, 2057, 49058, 1259,
	49058, 49058, 49058, 49058, 2361, -1000, -1000, 1942, 580, 2005,
	728, -1000, -1000, -1000, 3509, 3509, 3509, 395, 395, 395,
	129269, 129269, 609, 3660, 827, -1000, 49058, -1000, 926, 58596,
	49058, 26672, -1000, 507, 8636, 2501, -1000, 501, 27267, -1000,
	-1000, -1000, 28433, 643, 41671, 49058, 1026, 128826, -1000, -1000,
	1408, 3539, 23848, 2978, 2799, 726, 910, 903, 31367, 30772,
	30177, 29582, 636, 49058, 49058, 49058, 49058, 49058, 49058, 49058,
	49058, -1000, -1000, 3551, -1000, 3539, -1000, -1000, -1000, -1000,
	3539, 1267, 1253, 3539, -1000, 3539, 3539, 9348, 9348, 41105,
	40539, 39973, 53020, 39407, 49058, 29016, 38841, 38275, -1000, 115982,
	-14, 3464, 49058, 191, -1000, 127369, -1000, 191, 191, 721,
	-28, 128826, 2670, 2670, 56934, 2428, 2180, 2180, 2180, -1000,
	916, 19283, 916, 104970, 2197, 916, 916, 305, 336, 489,
	54718, 2392, 104970, 815, 719, 9, 8, 7, -1000, -1000,
	5, 4, -1000, -1000, 95118, 718, 26672, 26108, 303, 2007,
	-29, 2591, 2570, 2566, -1000, 2563, -1000, 1737, -30, 1258,
	95118, 115982, 1435, 3658, -121, -1000, 6419, -37, -1000, 1370,
	301, 3539, -1000, -1000, -1000, -1000, -1000, 3657, 3655, -1000,
	1032, 716, 712, 830, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 711, 707, 707, 707, -1000, 358, 706, 341,
	704, 700, 698, -1000, -1000, -1000, -1000, -1000, 2910, 95118,
	115982, 1405, 3654, -269, 95663, -36, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115982, -1000, -1000, -1000, 3653, -1000,
	95118, -1000, -1000, 95118, 236, 3149, -1000, 95118, -1000, 95118,
	230, 3147, -1000, -1000, 115982, -1000, 95118, 95118, -1000, 115982,
	115982, 115982, 78076, 78076, 239, -1000, 95118, 932, -40, 1149,
	-21, -1000, -1000, -1000, 1511, -1000, 1682, -1000, -1000, -1000,
	-1000, -1000, -1000, 1444, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 971, -1000, -1000, -1000, -1000, -1000, -1000, 3532,
	3514, -15, -1000, -1000, 26108, -1000, -22, 1627, 1803, 1254,
	-1000, 80815, 2319, 3292, 3649, 2680, 3270, 1588, -1000, 1515,
	-1000, 3378, 85762, 3424, 3445, 1372, -1000, 2909, -1000, -1000,
	962, 1715, 1699, 1252, 1248, 85762, 2147, -1000, 70259, -1000,
	2627, 3360, 1426, 1422, 1426, 1426, 1417, -1000, 85762, 1695,
	1247, 1243, 1242, 2098, 1982, 1978, -1000, -1000, -1000, 1241,
	1238, 864, 1959, -1000, -42, 3422, 3444, 1369, -1000, 2908,
	1236, -1000, -1000, -1000, 3359, 95118, 26108, 1560, 1559, 1554,
	1694, 1229, -16, -1000, 3414, 1228, 1226, -1000, 1078, 2484,
	3226, -1000, 78076, 1078, 1078, 1948, 3143, 2727, 1663, -1000,
	2747, 875, 2744, -1000, -1000, -1000, 875, -17, 71914, 115982,
	299, -1000, 926, 49058, 49058, 926, 49058, 926, 3401, 3134,
	-1000, -1000, -1000, -1000, -1000, 3648, 1996, 2492, -1000, -1000,
	688, 2381, 2906, 115982, 2629, -18, 95118, -1000, 70814, 3104,
	73570, 2147, 2380, -1000, -1000, 86859, -1000, 3101, 539, 2374,
	-1000, 751, 3643, 3099, -1000, 120887, -1000, 3287, 1268, 3090,
	1077, 634, 3462, -1000, 634, 66395, -1000, 115982, -1000, 0,
	319, 79725, -46, -49, 476, -1000, 105522, 115982, 1076, 80270,
	115982, 3240, 1000, 60282, -1000, 60282, -51, -255, 2738, 1500,
	985, 985, 875, -1000, 875, -1000, 95118, 2949, -1000, -1000,
	78076, 985, 985, 985, -1000, -1000, -1000, -1000, 3642, 3640,
	3638, 3637, -1000, -1000, 1001, 95118, 115982, 95118, -1000, -1000,
	1631, -1000, 297, -1000, 115982, -1000, 115982, 115982, 95118, -1000,
	1001, 115982, 1001, 115982, 1001, 115982, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 926, -1000, -1000, 128826, -1000, 49058, -1000,
	-1000, 3635, 1602, -1000, 2948, -1000, 2945, -1000, 41, -1000,
	-1000, 1822, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3634,
	128826, -1000, 1863, -1000, -1000, -1000, -1000, 95118, 95118, 95118,
	95118, 115982, 3225, -1000, 115982, 3221, 95118, -1000, -1000, 85762,
	-1000, 2481, 2943, -1000, -1000, -1000, -1000, -1000, -1000, 1406,
	2239, -1000, 2528, -1000, 1571, -1000, -1000, -1000, 128826, 53586,
	-1000, -1000, 128826, 1940, -1000, 51888, 51322, -1000, -1000, 1711,
	95118, 2634, -1000, 2634, -196, -1000, 127107, 2526, 95118, -1000,
	-1000, -1000, -1000, -1000, 957, 1158, 1158, 1307, 1307, 1307,
	1307, 3398, 2560, 6014, 687, 448, 448, 6343, 6343, 6343,
	6343, 6343, 448, 2242, 395, 395, 2242, 2242, 2242, 2242,
	2242, 395, 395, 395, 448, 448, 448, 395, 129269, 129019,
	10696, 49058, 49058, 1225, 1934, 580, 10650, 49058, 11386, 11386,
	11386, 11386, -1000, 2019, -1000, -1000, -1000, -1000, 2897, 686,
	53020, 53020, -1000, -1000, -1000, -1000, 27850, 49058, -1000, -1000,
	-1000, -1000, 37680, -1000, -1000, 126481, -313, 474, -1000, 295,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 471, -186, -35, -1000, 49058, 49058, 49058,
	469, -1000, 293, 49058, 115982, -1000, 16717, 810, -137, -1000,
	-54, 1438, -1000, 49058, -1000, -1000, 1221, -1000, 1220, 1218,
	1217, -1000, 685, 468, -1000, 292, -1000, 2178, 674, 670,
	49058, -1000, -1000, -1000, -1000, -1000, 126288, -1000, -1000, 126105,
	-1000, -1000, 125855, -1000, -1000, 125662, -1000, -1000, -1000, 128643,
	14929, 14089, 13391, 7868, 11986, 10928, -57, 467, -59, 465,
	956, 946, 464, 462, 459, -62, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -67, 458,
	-1000, 2895, -186, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 457, -1000, 456, -1000, 128393, -186, 453, 6734, -1000,
	53020, 53020, 53020, 53020, -1000, 449, -1000, 126914, -1000, 128210,
	37114, 37114, 37114, 434, 128012, 49058, -186, -69, -1000, -70,
	-1000, -1000, 601, -76, 1013, 36519, 55826, 26108, -1000, 1013,
	1013, 49058, -1000, 49058, 2547, -1000, -1000, -1000, -1000, 2540,
	2249, 2670, 56934, -1000, -1000, -1000, -1000, 104970, -1000, 3517,
	3008, -1000, 104970, -1000, -1000, 115982, 539, -1000, 104970, 104970,
	26108, 916, -1000, 916, 104970, 615, -1000, -1000, -1000, -1000,
	-1000, 427, 63638, -35, 284, 26108, 1004, -1000, -1000, 2664,
	2664, 2664, 2664, -1000, -1000, 115982, 1216, -19, -68, 2730,
	-1000, 3491, -1000, 2066, -1000, 70259, -1000, 826, 1249, 26108,
	-1000, -1000, -1000, 669, -1000, 3539, 3539, -1000, 3539, 115982,
	2893, 165, 2729, -1000, 160, 73570, 73570, 3633, -1000, -1000,
	236, -1000, 95118, 236, 236, -1000, 95118, 95118, 2235, -1000,
	238, -1000, 237, -1000, -1000, -105, -1000, 1017, 34226, -1000,
	1511, -1000, -1000, 1580, -1000, 2000, -1000, 1162, -1000, -1000,
	-1000, -1000, 34226, -1000, 2700, 115982, 115982, 95118, -1000, 115982,
	-1000, 2120, 73570, -1000, 2372, 120342, 2347, 70259, 115982, -1000,
	-1000, 660, 972, 2522, 2521, 1074, 115982, 115982, 2518, 119797,
	119252, -1000, 3630, 115982, 2060, 49058, 3357, 2143, 2495, 926,
	926, -1000, 926, 926, 926, -1000, 650, 1317, 95118, 95118,
	115982, 73570, 95118, 1909, -1000, -1000, -1000, -1000, -1000, 86307,
	-1000, -1000, 3550, 3546, -1000, 1426, -1000, -1000, -1000, 1426,
	2147, 1870, 115982, 73570, 95118, 73570, -1000, -1000, 2133, 118707,
	118162, 1692, 115982, 1478, -1000, 864, 2086, 926, 926, -1000,
	926, 926, 926, 647, 26108, 1916, -1000, 2984, 115982, 3576,
	117617, 3575, 115982, 115982, 115982, 73570, 3310, 115982, 115982, 73570,
	-1000, 117072, 3481, 2150, 2484, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 74694, 1067, 115982, 1340,
	-1000, -1000, 1677, 1215, 1214, 85762, 2048, 1669, 1777, 115982,
	60282, 997, 60282, 2697, -1000, -1000, 23281, -1000, 128826, 128826,
	-1000, 128826, -1000, 70814, 115982, -1000, 1036, 115982, 80270, 977,
	3089, 65291, -269, 985, 78076, 95118, -18, 2629, 115982, -1000,
	-1000, 2147, 3083, 539, 2369, -1000, 78076, 3461, 3078, 646,
	3629, 3627, -1000, 95118, 2285, 2357, -1000, -1000, 116527, 3038,
	864, 115982, 1013, 56934, 1945, -1000, 63084, 1054, 115982, 1793,
	127, -1000, -1000, -1000, 26, 115982, -1000, 834, -1000, -1000,
	319, 319, 985, -270, 645, -1000, 898, 897, 60844, 78076,
	-77, -1000, -1000, -1000, -1000, 2347, 95118, 115982, 1309, 2685,
	115982, -78, -1000, 279, 644, -1000, 3235, -1000, -255, -1000,
	1000, 60282, 2891, 2879, -1000, -1000, 1016, -1000, 1450, 985,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1, 1744, 115982, -269, -269, -79, -19, -1000, 1001,
	-1000, 1001, -1000, 1001, -1000, 128826, -1000, -1000, 1598, 1596,
	115982, -1000, -1000, 115982, -1000, 26108, 115982, 95118, 26108, 95118,
	2942, 2940, -1000, -1000, -1000, 115982, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1090, -1000, 1940, 2238, -1000, 643, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2463, -1000,
	-20, 33660, 922, -1000, -1000, 95118, -2, 49058, 49058, 10113,
	7636, 49058, 53020, 53020, -1000, 49058, 6104, -1000, -1000, -1000,
	-1000, -1000, 2870, 642, 49058, 70259, 5740, 5637, -1000, 426,
	9994, 2242, -1000, 49058, -1000, 4940, -1000, 425, 35953, -1000,
	127562, -43, -83, -1000, 19863, -186, -90, -1000, -1000, 825,
	-1000, 3051, -1000, 49058, 127745, 2425, 1890, 1816, 1613, 3539,
	3573, 22714, -1000, 66949, 1023, 2203, 125479, -1000, -1000, -1000,
	-1000, 70259, 70259, 49058, 49058, -1000, 49058, 49058, 49058, -1000,
	-1000, -1000, 3539, 920, -1000, -1000, -1000, 920, -1000, -1000,
	1426, -1000, 1426, -1000, 49058, -1000, -1000, 2867, 49058, -1000,
	70259, 70259, 53020, 53020, 53020, 53020, 53020, 53020, 53020, 53020,
	53020, 53020, 53020, 53020, 53020, 53020, 53020, 53020, 53020, 53020,
	53020, 53020, 2517, 53020, 3507, 3507, 3507, 961, -1000, 2938,
	2867, 49058, 49058, 70259, 423, 422, 421, -1000, 49058, -186,
	-1000, -1000, 7071, 641, -1000, 2449, -1000, 2798, -1000, 49058,
	-1000, -129, -1000, 2392, -1000, -1000, 2798, 2798, -93, 128826,
	56934, 56934, -1000, 639, 49058, 2514, -1000, -1000, 808, -311,
	-1000, 896, -1000, -1000, -1000, -1000, -1000, -1000, 539, -1000,
	-1000, -1000, 278, 104970, 104970, 807, -1000, -100, -1000, -1000,
	-102, -1000, 3460, 420, 26108, -1000, 1013, 2734, -1000, -1000,
	-1000, -1000, -1000, -1000, -269, 115982, 115982, 1667, 2223, 3572,
	-1000, 3545, 823, 805, 277, 3539, 416, 415, 410, -269,
	115982, 115982, 1651, 115982, -1000, -1000, -1000, -1000, 236, -1000,
	-1000, -1000, 230, -1000, -1000, -1000, -1000, 2624, -1000, -21,
	-1000, -1000, -1000, 49058, -1000, -1000, 3288, 1213, 1211, -1000,
	-1000, -1000, -1000, 2881, -1000, 3076, -1000, 2346, -1000, 1060,
	-1000, 1592, -1000, 49058, 635, 2666, 631, 627, 3625, 2139,
	3624, 1075, 3070, 2235, 3066, 2235, -1000, -1000, -1000, 967,
	-1000, 128826, 2143, -1000, 626, 622, -1000, -22, 1599, 1790,
	1206, 1012, -1000, -1000, -1000, -1000, 49058, 49058, 104425, -1000,
	470, 3278, -9, -1000, -1000, -1000, 1643, 1205, 1202, -1000,
	-1000, -1000, -1000, 2147, 1642, 1201, 1200, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2345, -1000, -1000, 3065, 1009, -1000,
	2995, 2994, 941, 115982, -1000, 1008, -1000, -1000, -1000, -1000,
	49058, -1000, -42, 1199, 3402, 2339, 95118, -1000, 2235, 3050,
	1197, -1000, 1194, -1000, -1000, -1000, 3413, 3406, 1178, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74132, -1000, -1000,
	1078, 115982, 73570, 95118, 1705, -1000, -1000, 84672, 85217, 115982,
	2727, -269, 875, -1000, 2386, 875, 997, 2864, -1000, 2598,
	1007, 95118, 3623, 408, -103, -47, 70259, 3459, -1000, 2244,
	648, 95118, 918, -1000, 3517, -1000, -1000, -1000, 1005, -1000,
	3393, 95118, 3458, 3043, 1004, 926, 95118, 3559, -1000, -1000,
	3457, 95118, 3042, 2282, 2338, 2496, 864, 79180, 1004, 2199,
	-96, -1000, 1793, 35358, 3276, -111, -1000, -1000, -1000, 1013,
	66395, 56934, 49058, 3622, -116, -1000, -1000, -1000, -1000, -1000,
	102238, 102238, 78076, 78076, 78076, 985, 115982, 115982, 80270, -1000,
	-1000, 621, 115982, 115982, 619, -1000, 115982, 115982, 3621, 78076,
	-52, 618, -1000, 894, 893, 892, -1000, -1000, -1000, -1000,
	-1000, -1000, 1000, -1000, -255, 60282, 926, -1000, 2217, 95118,
	-1000, 22147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1001,
	-269, -1000, -1000, 2101, 2269, 2101, 1761, 1755, -1000, -1000,
	2230, -1000, -1000, -1000, -1000, 2584, 3298, 26108, 3391, 11386,
	49058, 49058, 5599, 5456, 5039, 11386, 49058, 49058, 70259, 576,
	-123, 49058, 49058, -1000, 49058, 803, 128826, -1000, 3569, 49058,
	407, 405, -1000, -1000, -1000, 3521, -1000, -1000, -1000, 128826,
	49058, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 402, -1000,
	166, -1000, -1000, -1000, 123612, -1000, 49058, 400, 3356, -1000,
	399, 398, 9021, 6812, 125229, 125036, 124853, 397, -1000, -1000,
	396, 392, 128826, 2938, 128826, -1000, -1000, 929, 929, 1399,
	1399, 1399, 1399, 3507, 1044, 663, 502, 701, 701, 701,
	381, 961, 961, 701, 701, 701, 961, 2857, 2527, 617,
	7165, -1000, -1000, 128826, 128826, 391, -1000, -1000, -1000, -186,
	384, 7071, -1000, 2793, 3353, 128826, -1000, 56934, 2793, 2793,
	-1000, -1000, 2249, 115982, 128826, 56934, -1000, 3008, -1000, 20441,
	-1000, 26108, -1000, -1000, -1000, -1000, 3517, -1000, 63638, -1000,
	613, -1000, 161, -1000, 2734, -1000, 891, -1000, -1000, 78076,
	78076, -269, -136, 115982, -1000, -1000, 802, 3620, 817, 26108,
	382, -1000, -1000, -1000, -269, -269, 115982, -269, -1000, -1000,
	-1000, 3239, 128826, 115982, 115982, 1498, 103880, 115982, 3037, -1000,
	4938, -1000, 1074, 124603, 57488, -1000, 57488, 115982, -1000, -1000,
	-1000, 1904, 1521, 3619, 1118, -1000, 3317, 115982, -1000, 115982,
	-1000, -1000, -1000, 115982, 115982, 95118, 115982, -1000, 73570, 3004,
	-131, 128826, -64, -1000, 889, -1000, 1431, -1000, 21580, 115982,
	73570, 95118, 115982, 73570, 95118, 3036, 115982, 2164, -1000, -1000,
	2990, -1000, 3003, -142, 26108, -1000, 3567, 3566, 3034, 3318,
	-1000, 115982, 3563, 115982, 95118, 3238, -1000, -1000, -1000, -1000,
	-1000, -1000, 1618, 1193, 1182, 2281, -72, 2279, 2222, -79,
	2048, 997, -88, 612, -1000, 888, -1000, -1000, 885, -1000,
	997, -1000, 78076, 60282, 3617, 539, -1000, 2676, -1000, 100030,
	2261, 926, -1000, 3615, 102790, 611, -1000, 2215, -1000, 799,
	-1000, 2505, 73570, 2147, 926, 95118, -1000, -1000, 539, 367,
	-89, -1000, 3073, 1071, 26108, 95118, 3030, 2498, 864, 79180,
	-1000, 1268, 2588, -1000, -95, -1000, 577, 926, 2199, -1000,
	-96, 128826, -1000, 882, -1000, -147, -1000, -1000, 366, -1000,
	3237, 3234, -1000, 2782, 57488, 610, 603, 115982, 3229, -1000,
	-1000, -148, 2619, 2619, 78076, 60282, 78076, -1000, 1000, 875,
	-1000, 2450, -1000, -1000, -1000, -1000, -1000, 26108, 1713, -1000,
	596, 595, -1000, -1000, -1000, -1000, 3298, 11386, 11386, 49058,
	49058, 49058, 11386, 576, -156, -1000, 11386, 11386, -186, -1000,
	-1000, 127562, -1000, -1000, -1000, 128826, -1000, 21013, 2126, -1000,
	124230, -1000, 33660, -1000, -1000, 49058, 49058, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 53020, 2854, 594, 70259, -1000,
	-1000, 356, 1020, 49058, 50756, 2392, 1020, 1020, -1000, -158,
	-1000, -1000, -1000, 3517, 161, -1000, -1000, 3610, 26108, -1000,
	78076, -1000, -1000, 3609, -197, 813, -1000, 3606, -1000, -1000,
	119, -1000, -1000, -1000, 2726, 3456, -1000, 1919, -1000, 115982,
	-1000, 115982, -1000, 26108, 115982, 2812, 1277, -1000, 972, 2516,
	593, 53020, 95118, 930, 2777, 2771, -1000, 3476, 3345, 2750,
	-164, -1000, 115982, 49058, 115982, -166, -167, 2324, -1000, -1000,
	1275, 49058, -1000, -1000, -1000, 70259, 591, 2235, 2235, -175,
	-177, -1000, -1000, -1000, 49058, 1181, 115982, 34792, -1000, 3605,
	3278, -1000, -1000, -1000, -1000, -1000, -1000, 115982, -1000, 115982,
	-1000, 49058, 1174, -1000, -1000, -1000, 3562, 2235, 26108, 2235,
	-1000, 2235, 3318, 1113, 115982, 73570, 95118, 1764, 1764, 2927,
	-1000, -1000, -1000, 2159, 2159, 78076, 60282, -1000, -105, 997,
	-1000, 3454, 2655, 3604, -1000, -1000, -1000, -1000, 2515, -1000,
	-1000, 115982, 2513, 986, -1000, -184, -1000, 878, 873, 80270,
	977, 965, -1000, -113, 590, -1000, 872, -1000, -1000, -1000,
	-1000, 539, 3452, -1000, 3561, 589, 583, 115982, 2273, 582,
	26108, 3273, 864, 79180, -1000, 3038, 1793, -1000, 2332, 115982,
	3268, -1000, 2588, 580, -1000, 985, 579, 578, 2264, 2264,
	-185, 57488, 57488, -190, 574, 985, -1000, -191, -1000, -1000,
	-1000, -1000, -1000, -130, -1000, 921, 919, -1000, -1000, 95118,
	95118, 49058, 49058, -1000, 11386, 11386, 11386, -1000, 351, -1000,
	-1000, 2199, 3340, -1000, -144, 124167, 18523, 7243, 53020, 70259,
	-198, -1000, -1000, 115982, 128826, -145, -1000, 128826, 573, 563,
	500, -1000, -1000, -1000, 616, -1000, -1000, -1000, 115982, 3602,
	-1000, 115982, 103335, 115982, -1000, -1000, 1520, -1000, -1000, -1000,
	115982, 2337, -1000, -1000, -1000, 1073, 49058, 7165, 556, 49058,
	-1000, -1000, -1000, 3450, 3215, -1000, 2646, 2851, 1874, 57488,
	-1000, 3298, -1000, 17925, -1000, 1064, 1986, -1000, -1000, -1000,
	128826, 3318, 57488, -1000, -1000, 555, 550, 128826, 545, 866,
	2846, -1000, -1000, -1000, -1000, -1000, 128826, 544, 3402, -1000,
	-1000, -1000, -1000, 2235, 95118, -1000, -1000, -1000, 1173, -1000,
	-1000, -1000, -1000, 3599, 3598, 2843, 84672, -1000, -199, -1000,
	-1000, 1989, 926, 2100, 2721, -1000, 2261, 542, -1000, -1000,
	2246, 2616, -1000, 102790, 34226, 34226, 344, 3449, 965, -1000,
	3473, -1000, 3213, 3213, 49058, 3443, 926, -1000, 3559, 57488,
	-1000, 95118, 57488, 2270, 2020, 2478, 79180, -1000, 2496, -1000,
	-1000, -204, 115982, 1793, -1000, -1000, 78076, 78076, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064,
	-210, -212, -1000, 78076, -1000, -1000, 2450, -1000, 115982, -1000,
	115982, -1000, -1000, -213, -215, -1000, 1999, 49058, 33660, -1000,
	-1000, 7243, -220, -1000, -153, -1000, 3442, 50756, 3596, 3595,
	3594, -1000, -269, -1000, -269, -1000, 1897, -1000, -1000, -1000,
	3013, 2784, 17303, 2451, 115982, 15352, -1000, 3433, 2825, -1000,
	-1000, 2655, 541, -1000, -1000, -1000, -1000, 922, 115982, 2655,
	2783, 95118, 1072, -221, 2101, 2101, 49058, 33094, 2156, 49058,
	-1000, -1000, 3318, 115982, -1000, -1000, 115982, 2268, -1000, 2824,
	3534, -1000, 977, -1000, 2145, 115982, -1000, 3302, -1000, 3228,
	-1000, -1000, -1000, 2676, 926, -1000, -1000, -1000, -223, 128826,
	926, -1000, 342, -226, 1071, -228, 95118, 1903, -1000, 864,
	-1000, 2498, 1013, -1000, -1000, -233, -235, 1874, 1064, 2086,
	-236, -1000, -241, -242, -1000, -1000, 339, 50190, 50190, 50190,
	-186, -196, -1000, 115982, 540, -1000, -1000, -1000, -1000, -1000,
	2987, 996, -1000, 2253, 1901, 129, 1101, -1000, -1000, -1000,
	2086, 115982, -1000, -1000, -1000, 994, 539, -1000, 49058, 1064,
	-243, -1000, 1053, -252, -1000, 1052, -254, -1000, 2842, -1000,
	-257, 2235, -260, 229, 1764, 993, 3385, -1000, -1000, -1000,
	2246, 95118, -259, -1000, -1000, 2414, -1000, 2655, 986, -1000,
	-1000, -1000, 1064, 534, 1874, 531, 1491, 864, -1000, -1000,
	1426, 3273, 3185, 985, 985, 2655, 1874, 978, -1000, 985,
	-1000, -1000, -1000, 3033, -1000, 54152, 2263, 1745, 126731, 3033,
	3033, -1000, -1000, 115982, 3372, -1000, 2267, 2254, 1487, -1000,
	-1000, -1000, -1000, -1000, -1000, 2750, -264, 3371, 2451, 128826,
	2655, -1000, 2101, 2709, -1000, 2101, 2835, -1000, 2129, -1000,
	-1000, -1000, 2806, -1000, 2832, -1000, 1678, 3505, 2467, 528,
	-1000, 115982, 1731, 1726, 3593, 2100, 2246, 1874, 57488, 2655,
	57488, 2076, -1000, 115982, -1000, 2020, 1342, -1000, -1000, 2086,
	2655, 1013, 527, -1000, -1000, 1811, 3472, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 863, -1000, 3206, -1000, 1088,
	1973, 1973, 1013, -1000, 860, 2253, -1000, -1000, 524, -1000,
	520, -1000, 2221, 115982, 2209, -1000, -1000, -1000, -1000, 115982,
	-1000, -1000, 3591, -1000, 977, -1000, 2655, -271, 2086, -272,
	-1000, -1000, -1000, -269, 1903, -1000, 1579, 978, 2086, -1000,
	1714, -1000, -1000, 2184, 49624, 49058, -1000, 3494, -1000, -1000,
	2534, -1000, -1000, 49058, 2750, 49058, 49058, -1000, 229, 64737,
	-273, -1000, 2246, 2086, 1064, 978, 1874, 1491, 66395, 1013,
	978, -1000, -1000, -1000, 128826, -1000, -1000, -1000, 128826, -1000,
	-274, -287, -1000, -270, 102238, 2192, 2467, 978, 1874, 1013,
	2655, 2076, -266, -1000, 1013, 2086, 1170, -289, -1000, -1000,
	-1000, -1000, 1013, 2655, -1000, 2086, -1000, -1000, -1000, -1000,
	-1000, 516, -1000, -1000, 2086, 978, 49058, 978, 1013, -303,
	1013, -1000, 2086, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4460, 4456, 4452, 4451, 4450, 4449, 4448, 4446, 4445,
	4444, 4442, 4438, 139, 4436, 4434, 4433, 4430, 4428, 4422,
	4418, 4394, 4393, 4392, 4391, 4390, 4389, 4387, 4385, 4384,
	4383, 4381, 4380, 4378, 4376, 4375, 4372, 4371, 4370, 4369,
	4368, 4365, 4364, 4363, 4362, 4361, 4359, 4358, 4357, 4356,
	4355, 4353, 4352, 4351, 4349, 4348, 4346, 4345, 4339, 4335,
	4332, 4331, 4330, 4326, 4323, 4322, 53, 4321, 4320, 4319,
	4316, 4315, 4312, 4308, 4303, 4302, 4297, 4296, 4290, 4289,
	4288, 4287, 4285, 4284, 4283, 4281, 4279, 61, 4277, 276,
	4275, 4274, 4271, 4270, 4264, 4263, 4262, 4261, 4257, 4255,
	4253, 4252, 274, 4246, 119, 160, 4244, 4243, 3774, 4242,
	4238, 273, 4236, 4234, 4233, 4232, 287, 4231, 4230, 4229,
	4220, 4219, 4218, 4217, 4216, 4215, 4214, 4213, 92, 207,
	4212, 4204, 1304, 4202, 4201, 4199, 4197, 4190, 4186, 4184,
	4183, 4180, 4176, 251, 171, 4173, 270, 4172, 4171, 4170,
	4169, 4167, 4166, 4164, 4163, 4162, 4160, 4159, 4158, 4155,
	4154, 4153, 4150, 4149, 4148, 4147, 4146, 4145, 4143, 4141,
	4140, 4138, 4137, 4135, 4134, 4133, 4131, 4130, 4129, 4128,
	4127, 4123, 4121, 4117, 4116, 4114, 249, 168, 210, 4112,
	4111, 267, 265, 4110, 4109, 4106, 4105, 4104, 131, 6,
	38, 4103, 4102, 91, 96, 93, 100, 102, 99, 4100,
	111, 4098, 140, 62, 4097, 19, 2, 268, 247, 9393,
	240, 4094, 4091, 4089, 244, 196, 4088, 245, 4086, 4083,
	4082, 4081, 4078, 70, 52, 184, 180, 176, 173, 90,
	4077, 161, 105, 85, 51, 40, 17, 88, 215, 22,
	1, 216, 4075, 258, 11, 141, 12, 29, 4074, 4071,
	4064, 4056, 3730, 129, 4055, 264, 248, 165, 4052, 4050,
	4049, 722, 4048, 4035, 47, 4033, 208, 82, 125, 15,
	123, 4031, 151, 170, 36, 4030, 169, 63, 4027, 157,
	97, 87, 10917, 12965, 4026, 4021, 107, 66, 114, 3398,
	197, 194, 203, 132, 162, 166, 121, 213, 212, 186,
	190, 4019, 253, 4018, 3442, 83, 187, 155, 6144, 4012,
	4011, 4010, 77, 201, 109, 4008, 4007, 73, 18, 3,
	4, 9, 144, 23, 27, 10, 4004, 33, 124, 48,
	31, 4003, 26, 4001, 4000, 3996, 3995, 3994, 44, 164,
	3993, 3992, 285, 3991, 84, 54, 56, 3989, 179, 226,
	3988, 231, 133, 3979, 3977, 254, 205, 185, 3976, 74,
	236, 3974, 3972, 3970, 3969, 3968, 134, 8, 136, 3966,
	3962, 152, 3961, 50, 243, 202, 3957, 60, 3955, 3954,
	183, 106, 146, 278, 135, 230, 113, 228, 188, 235,
	3953, 3950, 3949, 193, 3948, 3947, 227, 159, 3946, 3942,
	242, 286, 95, 45, 79, 241, 81, 199, 158, 3941,
	206, 3940, 3939, 282, 181, 220, 7, 13, 108, 130,
	3938, 5, 239, 156, 229, 117, 3936, 7896, 2631, 2566,
	3934, 3928, 149, 118, 76, 142, 154, 260, 72, 3924,
	3920, 1132, 3918, 3917, 3916, 3914, 195, 3912, 3910, 3907,
	147, 189, 234, 3904, 98, 67, 49, 24, 112, 266,
	284, 116, 232, 167, 252, 3903, 3902, 3899, 192, 3896,
	86, 137, 172, 204, 256, 58, 3895, 182, 3893, 150,
	690, 65, 153, 3892, 225, 3890, 3888, 3887, 3886, 3885,
	3884, 3880, 636, 238, 3878, 3877, 3875, 37, 198, 3874,
	259, 175, 178, 104, 69, 3872, 89, 3667, 3871, 275,
	1186, 59, 261, 1299, 262, 3870, 3138, 55, 3867, 0,
	14843, 9143, 12780, 14448, 3866, 4291, 3864, 3863, 3861, 224,
	148, 3858, 3856, 3854, 110, 3853, 80, 3852, 3851, 78,
	3850, 28, 20, 21, 32, 30, 412, 263, 3849, 3848,
	64, 143, 127, 3847, 277, 233, 3846, 3845, 3844, 3843,
	122, 3842, 43, 3841, 39, 3840, 3839, 46, 16, 34,
	3838, 3837, 217, 3836, 222, 255, 3835, 163, 3834, 71,
	138, 3833, 3829, 3828, 68, 57, 257, 94, 3827, 280,
	3826, 209, 3824, 3823, 25, 3819, 3818, 246, 115, 103,
	3817, 250, 145, 42, 214, 177, 218, 3812, 3811, 174,
	3810, 3808, 3807, 271, 3806, 3804, 35, 3803, 3801, 3799,
	14, 3797, 3794, 211, 3170, 3791, 3787, 41, 3779, 200,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 596, 596,
	614, 614, 23, 23, 44, 44, 24, 45, 17, 597,
	597, 597, 597, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 236,
	236, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 592, 592, 238,
	238, 237, 231, 231, 232, 232, 598, 598, 239, 239,
	239, 241, 241, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 491, 491, 491, 524, 524, 523, 523,
	523, 522, 522, 618, 618, 619, 619, 619, 619, 619,
	131, 131, 389, 389, 389, 55, 55, 55, 55, 55,
	587, 587, 203, 203, 203, 205, 205, 204, 204, 204,
	204, 204, 78, 78, 603, 603, 604, 604, 602, 605,
	605, 605, 202, 202, 202, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 206, 206, 206, 208, 208,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 212,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 526, 526, 527, 527, 197, 197,
	198, 198, 198, 198, 199, 199, 200, 200, 200, 69,
	69, 209, 209, 211, 211, 210, 210, 210, 210, 210,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 188,
	188, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 621, 621, 622,
	622, 623, 623, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 350, 350, 313, 313, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 585, 585, 366, 366, 482, 482,
	72, 593, 593, 593, 595, 595, 594, 594, 89, 89,
	388, 388, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 584,
	302, 302, 96, 96, 96, 95, 95, 95, 367, 367,
	101, 101, 101, 101, 314, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 484, 484,
	103, 103, 103, 449, 449, 108, 108, 108, 404, 404,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 589, 589, 359, 359, 265, 265, 265, 265,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 193,
	193, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	615, 615, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 516, 516, 375, 375, 514, 514, 536, 536,
	515, 515, 320, 320, 320, 320, 320, 321, 321, 321,
	525, 525, 525, 525, 525, 525, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 194,
	194, 195, 196, 196, 196, 196, 196, 171, 171, 171,
	187, 187, 187, 187, 187, 187, 187, 174, 174, 174,
	158, 158, 147, 147, 147, 147, 147, 147, 147, 152,
	152, 152, 152, 152, 152, 152, 152, 148, 148, 160,
	160, 160, 160, 160, 153, 153, 154, 154, 154, 155,
	155, 155, 155, 181, 181, 157, 157, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 149, 149, 149, 149,
	162, 162, 162, 162, 411, 411, 411, 186, 186, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 184, 184, 184, 184, 184,
	184, 606, 606, 607, 607, 178, 178, 178, 178, 178,
	178, 463, 463, 172, 172, 172, 172, 177, 177, 177,
	177, 180, 180, 180, 180, 394, 394, 169, 169, 169,
	170, 170, 170, 175, 175, 176, 351, 351, 173, 173,
	179, 179, 179, 179, 150, 150, 150, 150, 150, 150,
	150, 151, 151, 151, 151, 182, 182, 168, 168, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	625, 625, 164, 164, 164, 163, 163, 163, 163, 166,
	166, 167, 167, 167, 167, 167, 167, 165, 156, 185,
	586, 586, 582, 582, 582, 582, 582, 582, 582, 582,
	583, 583, 583, 583, 588, 588, 113, 113, 113, 113,
	113, 123, 123, 123, 123, 123, 114, 114, 114, 114,
	114, 116, 116, 115, 115, 115, 115, 79, 79, 79,
	79, 79, 15, 15, 15, 80, 80, 256, 256, 215,
	215, 215, 339, 339, 216, 216, 328, 328, 328, 328,
	213, 213, 214, 214, 81, 81, 626, 626, 626, 599,
	599, 599, 600, 600, 600, 600, 600, 600, 322, 322,
	323, 323, 429, 429, 429, 429, 429, 326, 326, 326,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 329,
	329, 240, 240, 240, 337, 338, 338, 330, 330, 336,
	335, 335, 334, 334, 333, 333, 331, 332, 332, 332,
	341, 341, 340, 343, 343, 342, 428, 545, 545, 547,
	547, 547, 547, 547, 547, 547, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	412, 412, 627, 627, 628, 629, 543, 543, 543, 544,
	539, 539, 540, 540, 540, 540, 540, 324, 324, 325,
	325, 325, 325, 541, 542, 357, 357, 467, 546, 546,
	548, 548, 550, 630, 630, 630, 630, 630, 630, 631,
	631, 631, 427, 427, 426, 426, 348, 348, 551, 551,
	551, 551, 552, 552, 552, 552, 552, 555, 554, 553,
	553, 553, 553, 553, 83, 83, 83, 391, 391, 390,
	390, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 190, 190, 268, 268,
	77, 77, 77, 12, 12, 12, 12, 12, 12, 12,
	283, 283, 13, 13, 13, 601, 601, 601, 82, 82,
	82, 82, 82, 82, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 591, 591, 590, 590, 269, 269,
	633, 633, 88, 88, 88, 88, 88, 88, 88, 88,
	485, 485, 486, 486, 76, 76, 76, 76, 76, 413,
	413, 410, 410, 409, 409, 356, 356, 465, 465, 465,
	466, 273, 273, 274, 274, 233, 233, 233, 31, 30,
	21, 21, 26, 26, 27, 27, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 28, 28, 48, 48, 48,
	48, 49, 49, 49, 49, 52, 52, 53, 53, 47,
	47, 47, 47, 50, 50, 43, 43, 54, 54, 54,
	54, 54, 608, 610, 610, 609, 609, 613, 613, 613,
	613, 613, 613, 611, 611, 612, 612, 616, 616, 617,
	617, 119, 119, 124, 124, 124, 124, 124, 125, 125,
	125, 125, 126, 126, 126, 126, 135, 135, 189, 189,
	189, 189, 189, 189, 189, 56, 56, 56, 56, 68,
	68, 68, 68, 133, 635, 635, 635, 134, 134, 134,
	634, 634, 266, 266, 423, 423, 424, 424, 636, 636,
	425, 425, 425, 425, 425, 259, 258, 260, 260, 261,
	261, 74, 74, 74, 249, 249, 248, 250, 250, 251,
	251, 246, 246, 528, 528, 253, 253, 253, 254, 254,
	242, 242, 243, 243, 244, 244, 245, 245, 257, 257,
	637, 637, 111, 111, 111, 192, 192, 312, 312, 312,
	420, 420, 420, 349, 349, 280, 280, 422, 422, 422,
	422, 387, 387, 387, 191, 191, 364, 364, 377, 377,
	378, 378, 479, 479, 379, 117, 117, 118, 118, 132,
	132, 219, 219, 217, 217, 217, 217, 217, 217, 217,
	217, 224, 224, 225, 225, 226, 226, 227, 228, 228,
	228, 228, 368, 368, 229, 229, 229, 218, 218, 218,
	220, 220, 220, 220, 220, 220, 220, 223, 223, 223,
	223, 230, 230, 230, 222, 222, 562, 562, 562, 564,
	564, 566, 566, 565, 565, 561, 561, 563, 563, 632,
	632, 393, 393, 393, 346, 347, 344, 344, 345, 345,
	354, 354, 352, 353, 353, 355, 355, 464, 464, 464,
	234, 234, 234, 384, 384, 384, 384, 385, 385, 416,
	416, 414, 414, 414, 414, 415, 415, 417, 417, 417,
	418, 418, 419, 419, 381, 381, 382, 382, 383, 383,
	383, 383, 445, 445, 221, 221, 221, 361, 361, 361,
	362, 362, 435, 435, 435, 435, 435, 435, 435, 436,
	436, 434, 434, 434, 434, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 469, 470, 470, 363, 363, 471,
	421, 421, 580, 580, 580, 581, 581, 462, 462, 472,
	472, 472, 472, 472, 472, 460, 460, 461, 461, 480,
	481, 481, 397, 397, 397, 397, 395, 395, 398, 398,
	398, 398, 398, 396, 396, 473, 473, 473, 473, 386,
	386, 474, 474, 474, 474, 475, 476, 476, 477, 477,
	430, 431, 431, 487, 487, 487, 487, 489, 360, 360,
	360, 360, 360, 538, 537, 537, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 504, 504, 504,
	504, 504, 504, 504, 490, 490, 490, 490, 490, 494,
	494, 494, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 495, 495, 500, 500, 501, 501, 501,
	496, 497, 502, 502, 502, 502, 638, 638, 506, 506,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 492,
	492, 492, 499, 499, 499, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 405, 405,
	407, 407, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 439, 439, 439, 439, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 556, 556, 556, 556, 556, 556, 556, 556,
	441, 441, 559, 559, 560, 560, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 567, 567, 568, 568, 570,
	570, 571, 571, 572, 573, 573, 573, 574, 575, 575,
	569, 569, 576, 576, 576, 576, 577, 577, 578, 578,
	578, 578, 578, 579, 579, 579, 579, 579, 451, 451,
	452, 452, 458, 458, 458, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	319, 319, 318, 270, 270, 270, 270, 270, 270, 373,
	373, 371, 371, 371, 374, 374, 372, 372, 370, 370,
	369, 369, 448, 448, 446, 446, 450, 450, 399, 399,
	505, 505, 505, 505, 505, 505, 505, 505, 400, 400,
	400, 408, 401, 401, 402, 402, 402, 402, 402, 442,
	443, 403, 403, 403, 444, 444, 453, 457, 457, 456,
	455, 455, 454, 454, 432, 432, 433, 433, 380, 380,
	639, 639, 376, 376, 478, 478, 478, 478, 316, 316,
	365, 365, 315, 315, 307, 307, 308, 308, 308, 308,
	358, 358, 459, 459, 507, 507, 508, 508, 509, 509,
	510, 510, 511, 512, 513, 447, 447, 291, 290, 277,
	278, 289, 288, 287, 276, 279, 284, 285, 286, 281,
	282, 298, 297, 296, 247, 252, 303, 304, 304, 306,
	306, 305, 305, 293, 294, 295, 483, 275, 309, 309,
	310, 310, 310, 311, 311, 311, 311, 271, 271, 272,
	272, 299, 299, 300, 301, 301, 292, 292, 292, 262,
	262, 262, 263, 263, 264, 264, 521, 521, 518, 518,
	518, 519, 519, 519, 520, 520, 520, 520, 517, 517,
	517, 517, 517, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 530,
	530, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 532,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 535, 535,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 5, 5, 5, 2, 2, 2,
	2, 0, 1, 1, 3, 4, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 597, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -620, 102, -563, -92,
	-95, -126, -624, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 462,
	-176, -185, -154, 523, 49, 477, 82, 146, 431, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -562, -93,
	-94, -97, -99, -100, -96, -98, 419, -220, -218, 594,
	538, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 559, 568,
	-223, -221, -222, -230, 449, 546, 497, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, -314,
	2, -293, -299, -300, -301, -292, -262, -532, -535, 4,
	-529, -533, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 505, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 400, 399, 401, 403, 405, 406, 407, 412,
	418, 414, 415, 416, 417, 419, 420, 421, 422, 423,
	425, 426, 427, 429, 430, 431, 432, 433, 435, 437,
	438, 442, 443, 459, 460, 479, 439, 440, 441, 444,
	445, 446, 447, 448, 452, 450, 451, 453, 454, 455,
	457, 458, 461, 462, 464, 465, 466, 467, 468, 469,
	470, 473, 475, 476, 477, 496, 478, 480, 484, 485,
	486, 487, 481, 482, 495, 489, 490, 492, 493, 498,
	499, 500, 501, 502, 503, 504, 506, 508, 516, 517,
	518, 520, 523, 524, 525, 526, 514, 528, 529, 532,
	533, 534, 537, 535, 536, 538, 540, 543, 544, 545,
	551, 550, 552, 555, 560, 561, 563, 564, 565, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 191, 192, 204, 206, 214,
	215, 216, 238, 239, 241, 246, 268, 335, 337, 353,
	357, 373, 377, 381, 383, 397, 434, 471, 483, 488,
	509, 510, 511, 512, 519, 521, 546, 547, 548, 553,
	562, -314, 2, -293, 344, -286, 2, -262, -262, 384,
	28, 2, 28, 372, 451, 500, 502, 2, -589, -359,
	2, 28, -265, -262, 102, 202, 449, -286, 2, -589,
	-359, 25, 2, -262, 2, 358, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -623, 360, 391, 437, 453,
	495, 506, 520, 2, 550, 289, 450, 497, 230, 120,
	525, 444, -601, 442, 443, 358, 389, 429, 205, 539,
	-266, 2, 439, -262, 289, 2, 597, 94, 279, 74,
	434, 454, -143, 517, -144, -145, 2, -142, 509, -516,
	444, 311, -262, 597, 597, 597, 28, -275, -262, 497,
	230, 444, 120, 493, 597, 2, 497, 363, 550, 450,
	120, 394, 230, 525, 188, 140, 27, 444, -601, 573,
	574, 289, 126, -587, 2, -582, 4, -533, -529, -308,
	-307, 497, 503, 120, -301, -292, 587, -300, 597, 597,
	597, 2, 249, 250, 393, 392, 454, 455, 597, 597,
	597, 597, 442, 2, 163, 22, 27, 66, 93, 98,
	126, 185, 188, 349, -621, 360, 391, 453, 495, 499,
	506, 520, -600, 478, 68, 417, 444, -599, -601, 289,
	525, 140, -409, 120, 279, 200, 533, 502, 500, 531,
	132, 237, 536, 535, 597, 597, -105, 2, 594, 32,
	31, -104, -108, 142, 457, -212, 497, 242, 2, -262,
	597, 597, 2, 249, 250, 442, 443, 597, 597, 186,
	-582, 2, 597, 597, 2, 249, 250, 442, 443, 242,
	2, 68, 446, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 2, -187,
	454, 478, 211, 47, 46, 74, 28, 390, 79, 364,
	121, 126, 148, 526, 203, 230, 231, 257, 93, 94,
	-411, 44, 250, 68, 249, 443, -606, 442, -463, 498,
	445, 451, 492, 261, 439, 517, 102, 540, 430, 565,
	394, 395, 490, 407, 280, 157, 187, 4, 120, 311,
	456, 509, 279, 438, 367, 84, 597, -632, 2, 497,
	-634, 2, 517, 517, 2, -634, 2, -634, 2, -634,
	2, -635, 517, 562, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, -218, -220, -219, 597, 597, 597, 597, 597,
	597, 597, -187, 454, 2, 74, 28, -352, -354, 530,
	240, 150, 350, -217, -219, 2, -562, -514, 2, -437,
	-536, -439, 585, 586, 578, 494, 67, -318, 329, 566,
	-451, 126, 531, 344, -535, -440, -453, 153, 360, 434,
	-374, 8, 9, 5, 6, 7, -271, -441, -447, 522,
	167, 334, -311, 598, 10, 594, -559, -219, -452, 37,
	206, 65, -518, -310, -272, -490, 241, -309, -292, -556,
	-557, 4, -529, -530, -519, -493, -501, -497, -498, -504,
	-262, -532, 77, 111, 112, 110, 115, 114, 282, 281,
	116, 113, 456, 539, 66, 36, 214, 215, 246, 335,
	216, 75, -558, 141, -531, 238, 239, 471, 51, 397,
	177, 125, 124, 337, 56, 54, 547, -502, 122, 509,
	510, 511, 512, 191, 192, 58, 164, 165, 357, 381,
	488, 519, 521, 204, 268, 43, 106, 187, 236, 218,
	245, 247, 251, 269, 272, 312, 326, 331, 354, 356,
	428, 463, -638, 548, 483, 69, 70, -564, 399, -565,
	-286, -564, 597, 597, 599, 597, -344, -346, -347, 2,
	28, 138, 594, 2, -468, 2, -469, -473, -219, 262,
	-472, 594, -470, 592, -293, 345, -560, 435, -556, -557,
	-271, -292, -310, 4, -529, -531, 596, -348, 594, 120,
	497, 78, 230, 163, -404, 594, -262, 28, 344, 513,
	599, -345, 388, -449, 594, 344, 186, 347, 60, 293,
	2, 2, 2, 2, 2, 214, -262, 497, 119, 2,
	260, 2, 2, 2, 2, 2, 2, 2, -367, 214,
	2, -293, 550, -367, 214, 2, -367, 214, 2, -410,
	2, 87, -276, 214, 2, -262, -302, 214, 2, -297,
	-299, -306, 214, 2, -304, -262, -527, 214, 2, -526,
	-521, 10, -520, 5, 4, -529, -533, -530, -532, 77,
	-437, 2, -132, 2, 60, -262, 550, 2, 2, 459,
	2, 594, -143, 71, 517, 43, 454, -424, 2, -425,
	-258, -259, -260, -480, -261, 248, 387, 396, 569, 130,
	329, 565, -615, 186, 577, 513, -514, -514, -375, 596,
	2, 2, 2, 2, 2, 2, -473, 214, -293, 2,
	-290, -517, 4, -529, -533, -530, -534, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 402, 424, 449, 456,
	474, 491, 497, 507, 513, 515, 522, 530, 531, 539,
	541, 549, 554, 556, 557, 558, 559, -535, 2, -473,
	214, 2, -296, 214, -473, -299, 2, -276, 2, -289,
	-517, 2, -315, 214, -293, -295, -299, -297, 2, 2,
	2, 2, -304, 2, -526, 214, 2, 28, 28, 550,
	388, 242, 513, 599, -365, -307, -308, -513, 8, -358,
	-262, 596, -437, 2, -132, -116, 2, 182, -437, 214,
	2, -132, 214, 2, -437, 214, 2, -132, 214, 2,
	-603, 2, -526, 214, -262, 2, 293, 2, 2, 520,
	2, 98, 497, 119, 2, 416, -622, 437, 524, 2,
	2, 2, 2, 2, 2, 2, 497, -281, 2, -262,
	182, 481, -304, 214, -305, 2, 450, -633, 399, -526,
	214, 2, 550, -297, 214, 2, -297, 230, 244, -276,
	214, 2, 502, 500, 502, 500, 186, 2, 242, 2,
	242, 2, -474, 2, -475, -469, -476, 592, 345, -484,
	2, -483, -520, 546, -105, 594, -105, 594, 454, 594,
	-526, -293, -293, -437, 2, -132, -116, 2, -437, 2,
	-132, 2, -129, -526, -128, 594, 186, -437, 2, -132,
	-116, 2, -437, 2, -132, 2, -212, 182, 2, 120,
	497, -187, 2, 182, 541, 2, 8, 2, 221, -526,
	445, 395, 174, 2, 459, 2, 460, 74, -411, 565,
	74, 186, 2, 186, 2, -394, 2, 559, 388, 186,
	2, 2, -586, 2, 344, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -186, 455, 518, 496, 392,
	250, 2, -132, 556, -116, 250, 249, -437, 556, 2,
	-607, 182, 443, -437, 2, 516, 259, 158, 186, -394,
	2, 186, 2, 186, 2, 5, 2, 393, 479, 2,
	248, 387, 479, 2, -293, 497, 550, 450, 120, 28,
	2, 442, 2, 2, 88, 89, 186, 2, 186, 2,
	201, 186, 2, 186, 497, 565, 2, -386, -473, -423,
	-424, -423, 513, -352, -354, -187, 459, 2, -224, -384,
	-226, 182, -414, -415, -227, 273, 169, 340, -228, -393,
	28, 138, -393, -393, 60, 595, 595, 11, 12, 76,
	41, 585, 586, 587, 588, 180, 589, 590, 583, 584,
	582, 575, 576, 580, 254, 255, 95, 579, 577, 86,
	287, 436, 170, 171, 172, 173, 413, 228, 34, 229,
	14, 15, 16, -318, 33, 349, 272, 566, 218, 463,
	578, 17, 18, 19, 245, 247, 331, 50, 221, -270,
	360, -317, 494, 67, -437, -437, -437, -437, -437, -437,
	-437, -437, 356, 594, -380, -432, 592, -219, 594, 594,
	594, 594, -513, -219, -437, -451, 595, -372, 594, -219,
	-451, -446, 594, 434, 592, 594, -454, -437, 5, 5,
	5, 594, 596, -567, 560, 182, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 383, -495, 594, -494, 594, -494, -494, 551, -492,
	594, 568, 561, 594, -492, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 551, 599,
	-564, -348, 594, -376, -478, -437, 587, -376, -376, 344,
	-369, -437, 106, -397, 251, 312, 187, 269, 428, 236,
	-434, 598, -434, -462, 568, -219, -470, -292, -219, -472,
	594, -468, -462, -106, -513, -89, -102, -111, -132, -146,
	-191, -192, 587, -293, 594, 186, 594, 596, -517, 186,
	-358, -276, -293, -309, -310, -315, 2, 137, -369, -582,
	525, 444, 28, 450, -358, -265, 38, -448, -487, -488,
	-538, 598, -537, -490, -500, -496, -499, 373, 377, -519,
	54, 547, -502, 241, 4, -529, -531, 238, 239, 471,
	51, 397, 177, 125, 124, 337, 56, 509, 510, 511,
	512, 191, 192, 58, 548, 483, 69, 70, -582, 525,
	444, 28, 450, -358, 182, -524, 2, -523, -522, 116,
	456, -520, 5, 2, 153, 2, 2, 2, -262, -239,
	599, 64, 421, 153, -367, 214, -239, 153, -239, 153,
	-316, 214, -315, -239, 153, -239, 599, 153, -239, 599,
	153, 596, 599, 153, -524, 2, -410, -516, -369, 38,
	-424, 2, 126, -522, -636, 599, 271, -321, 286, 328,
	210, 345, 563, 338, 130, -525, 5, 4, -447, -459,
	126, 279, 241, -507, -509, 8, -508, 9, -510, 585,
	586, -515, -514, 109, 596, -517, -236, 414, 457, 359,
	-235, 24, 29, 142, 232, 315, 544, 159, -334, 233,
	-331, 363, 153, 475, 534, -596, -597, 441, 504, 505,
	90, 338, 457, 359, 414, 153, -390, -392, 38, 118,
	315, 358, 61, 225, 291, 292, 477, 553, 153, 457,
	359, 414, 359, 457, 24, 142, -253, -248, -597, 99,
	414, 489, 386, -597, -238, 475, 534, -596, -597, 441,
	414, -237, -336, -331, 363, 153, 598, 24, 142, 414,
	457, 359, -618, -619, 29, 414, 359, -590, -283, -561,
	221, 559, 153, -283, -283, -473, 214, -611, 182, 2,
	-604, -128, 263, 5, 10, -526, -128, -365, 599, 599,
	-517, 587, 443, 442, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -599, -623, 2, 2,
	-293, 214, -350, 344, -585, -366, 497, -293, 182, 329,
	43, -296, 214, 2, -299, 550, -590, 329, -298, 214,
	-293, 38, 594, 329, 2, -410, 2, 230, -561, 329,
	-474, -312, -293, -469, -312, 457, -286, 38, -434, -293,
	595, 599, -484, -484, -526, -200, 559, 186, 102, 594,
	594, -212, -481, 599, -480, 221, -527, -129, -526, 417,
	-526, -585, -276, 2, -293, 2, 497, 252, -526, -200,
	221, -526, -526, -526, -516, 28, 460, 2, -186, 455,
	518, 89, 460, 2, -293, 497, 120, 230, 80, -611,
	182, 2, -262, -588, 182, -583, 429, 444, 525, -582,
	-293, 120, -293, 120, -293, 120, -293, -293, 2, 2,
	2, 2, 2, 85, 2, -132, -437, 2, 85, 2,
	46, -607, 182, 2, 516, 2, 516, 2, -262, -262,
	-262, 478, 271, -293, -293, -293, -294, -299, 498, 443,
	-437, 2, -625, 2, 186, 182, 2, 497, 230, 497,
	230, 120, 186, 74, 120, 28, 497, 440, -239, 599,
	-266, -224, -384, -516, -385, -384, -225, -224, -227, 182,
	396, 535, 315, 461, 256, -415, -414, 28, -437, -419,
	176, 314, -437, -417, -439, 585, 586, -508, -510, -368,
	338, -218, -218, -218, -355, -464, -437, 386, 230, -489,
	-487, -487, -291, -517, 509, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, 272, 218, 463, 50, 221, -437, 513, -437, -437,
	-437, -437, 309, 329, 334, 522, 167, 532, 138, 338,
	-639, 491, 40, -444, -219, -373, 594, -458, 35, 474,
	28, -451, 594, 2, -432, -437, -433, -319, -317, -262,
	585, 586, 587, 588, 589, 590, 575, 576, 577, 14,
	15, 16, 580, 584, 582, 583, 180, 95, 579, 287,
	436, 86, 170, 171, 172, 173, 254, 255, 17, 18,
	19, 34, 578, -370, -369, -369, 595, 549, 28, 138,
	587, 2, 595, 599, 38, 595, -437, -370, -450, -446,
	-369, -457, -456, 556, -405, -406, 564, 296, 123, 212,
	294, -407, 448, -511, 8, -517, 587, -568, 175, 205,
	594, 595, 2, 595, 2, 595, -437, 2, 595, -437,
	2, 595, -437, 2, 595, -437, 2, 595, 2, -437,
	-437, -437, -437, -437, -437, -437, -369, 8, -511, -511,
	509, 509, -511, -511, -511, -503, 373, 374, 375, 376,
	274, 275, 276, 277, 377, 378, 379, 380, 301, 302,
	303, 304, 297, 298, 299, 300, 305, 306, 307, 308,
	196, 197, 198, 199, 192, 193, 194, 195, -503, -399,
	2, -505, -369, 4, 564, 296, 123, 212, 294, 448,
	5, -399, 2, -400, 2, -437, -369, -401, -438, -439,
	585, 586, 578, -318, -451, -402, 2, -437, -370, -437,
	57, 266, 515, -403, -437, 186, -369, -369, 2, -369,
	2, -565, 38, -369, -361, 599, 186, 38, 4, -361,
	-361, 594, 595, 599, -398, 209, 290, 285, 244, -398,
	-468, -397, 251, -395, 354, -395, -395, -462, -277, 592,
	600, -517, -462, -461, -460, 38, -286, 351, -462, -462,
	596, 595, -461, 593, -580, 594, 597, 597, 597, 597,
	597, -293, 594, -369, -517, 596, 480, 2, 595, 245,
	245, 245, 245, 435, 595, 513, -584, -302, -306, 498,
	2, 559, -104, 346, 595, 599, -360, 37, 592, 596,
	-511, 2, 2, -506, 551, 594, 594, -406, 594, 186,
	-584, -306, 498, 2, -359, 599, 513, -262, 2, -293,
	-367, -239, 153, -367, -367, -239, 599, 153, -276, -297,
	-302, -304, -306, -262, -526, -527, -239, -298, -615, 595,
	517, -425, -320, 396, 473, 415, 452, 493, 8, 9,
	8, 9, 599, -517, 599, -616, 93, 513, 78, 444,
	-255, 280, 513, -428, 214, 78, -539, -279, 93, -540,
	-262, 72, 531, 386, 185, 151, -616, 93, 386, -616,
	93, 2, 232, 93, 457, 478, 28, 60, -473, 41,
	41, 28, -614, 327, 267, 555, 186, 565, 497, 230,
	444, 513, 513, -473, -392, -487, 118, 291, 292, 60,
	-512, -507, 585, 586, -512, 60, -512, -512, -512, 559,
	-296, -473, 444, 513, 513, 513, -251, -248, 369, 405,
	405, 513, 513, -637, 577, 405, 599, 41, 41, 28,
	-614, 327, 267, 186, 513, -315, -277, 545, 42, 545,
	42, 545, 513, 42, 444, 513, 599, 42, 513, 513,
	-13, 457, 572, 419, -591, -267, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 552, 332,
	63, 316, 295, 323, -268, -269, 365, 543, 120, -526,
	-13, -13, 457, 359, 414, 153, -612, 221, 28, -601,
	221, -481, 221, -481, -307, -262, 596, -132, -437, -437,
	-132, -437, -132, 46, 153, 2, -633, 260, 594, -324,
	329, 186, -358, -482, 242, 599, -366, -582, 153, -523,
	-391, -390, 329, -298, 214, 2, 153, -348, 329, 147,
	594, 394, 2, 153, -278, 214, -263, -262, -410, -242,
	501, 153, -388, 541, -420, -132, 594, 126, 38, -420,
	-377, -378, -479, -379, -279, 594, -286, -434, -105, -483,
	595, 595, 595, -199, 348, -198, -262, 5, -212, 541,
	-323, -429, -428, -543, -544, -539, 272, 230, 531, 244,
	168, -349, -280, -279, 119, -206, 559, -128, -129, 595,
	-481, 221, 481, -200, -200, -481, -481, -293, 182, -526,
	-200, -200, -200, 2, 2, 2, 2, -394, -293, -276,
	-315, -293, 28, 596, -358, -358, -306, -302, -394, -276,
	-394, -276, -394, -276, -132, -437, 2, 454, 182, 182,
	596, -394, -351, 424, 2, 394, 120, 497, 363, 230,
	-293, -315, -293, -315, -276, 120, -276, 121, -293, -473,
	-385, -225, 345, 256, 461, -417, -418, -439, 434, 435,
	-418, 434, 435, 8, 9, 8, 9, -229, 465, 333,
	-367, 599, -233, 39, 134, 256, -293, 565, 149, -437,
	-437, 513, -639, 491, -444, 149, -437, 309, 334, 522,
	167, 532, 138, 338, 186, 594, -438, -438, 595, -371,
	-437, -437, 593, 602, 595, 596, 595, -354, 599, -352,
	-437, -369, -369, 595, 596, -369, -358, 593, 593, 599,
	595, -455, -456, 143, -437, 513, 513, 513, 513, 594,
	595, 596, -573, 355, 594, 594, -437, 595, 595, 595,
	595, 38, 599, 599, 599, 595, 599, 599, 599, 595,
	595, 595, 599, 595, 565, 565, 595, 595, 595, 595,
	599, 595, 599, 595, 186, 595, 595, -408, 370, 595,
	11, 12, 585, 586, 587, 588, 180, 589, 590, 583,
	584, 582, 575, 576, 577, 86, 287, 436, 14, 15,
	16, -318, 245, 221, -438, -438, -438, -438, 595, -442,
	-443, 186, 182, 38, -403, -403, -403, 595, 186, -369,
	595, 595, 594, -566, 289, 329, 595, -431, -430, 557,
	-478, -362, 2, -468, -288, -517, -431, -431, -369, -437,
	251, 251, -396, 541, 344, -398, -468, -461, -513, -436,
	-435, 184, 39, 134, 324, 325, 217, -461, -286, -348,
	-461, -461, -517, -462, -462, -460, 595, -581, -513, 595,
	-363, -471, -560, -354, 596, -517, -209, -561, -188, 5,
	334, -188, -188, -188, -358, 513, 513, 221, 25, 371,
	-487, 592, 593, 8, -517, 594, -511, -511, -511, -358,
	186, 186, 221, 186, -523, -523, 2, -239, -367, -239,
	-239, -315, -316, -239, -239, -239, -389, 559, -514, -424,
	529, 83, 396, 509, -514, -235, 414, -279, -279, -293,
	-303, -262, 200, 406, -523, 329, -428, 214, -241, 329,
	-487, -287, -262, 594, -412, 561, 256, 256, 541, -279,
	-287, 256, 214, -279, 214, -287, 2, -287, -592, 396,
	339, -437, 60, -332, 278, 394, 330, -236, 414, 457,
	359, -132, -132, -132, -132, -132, 594, -615, 541, 137,
	-293, -315, -293, -303, -523, -298, 457, 359, 414, 326,
	-309, -512, -512, -390, 457, 359, 414, -303, -523, -296,
	-523, 422, 126, -247, 214, -262, -247, 214, 444, -276,
	405, 565, 45, -637, -237, -132, -132, -132, -132, -132,
	594, -277, -238, 414, 5, 214, -279, 5, -279, 214,
	5, -262, -279, -303, -523, -619, 24, 142, -279, -303,
	-523, -144, 28, -187, -267, -526, 334, 537, -276, -590,
	-283, 444, 513, 513, -473, -608, -609, 202, 427, 444,
	430, -358, -128, -203, 559, -128, -197, 226, 587, -587,
	-262, 550, -262, -322, -325, -323, -279, -215, -216, 561,
	559, 153, -313, -293, 592, -200, -526, -293, -482, -304,
	-305, 153, -348, 329, -526, 38, 153, 594, 2, 2,
	-297, 344, 329, -278, 214, -243, 144, -637, -276, -431,
	-362, -387, -422, 424, 344, -349, 546, -286, -387, -364,
	599, 186, 577, 596, -349, -477, 587, -105, -105, -200,
	599, 594, 577, 577, 594, -526, -526, 595, 599, -241,
	-293, -278, 230, 230, -285, -263, 595, 599, 596, 594,
	-208, 348, -207, 145, 258, 243, 467, 468, 469, 470,
	136, 466, -481, -206, -129, 186, 186, -64, 559, 497,
	-200, 598, 430, -262, -394, -394, -394, 454, 454, -262,
	-358, -289, -276, -293, -290, -315, 182, 182, -276, 535,
	-418, 345, 283, -464, -234, 567, -293, 598, -437, -437,
	149, 149, -437, -438, -438, -437, 149, 186, 594, -437,
	-448, 33, 33, 595, 599, -433, -437, -317, 595, 549,
	-354, -354, 595, 587, -517, 598, 595, -446, 146, -437,
	507, 296, 212, 294, -407, 294, -407, -407, -511, 5,
	-517, 587, -574, -282, 594, -262, 557, -353, 350, 595,
	-489, -487, -437, -437, -437, -437, -437, -511, -492, -492,
	-507, -507, -437, -442, -437, -489, -487, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, 138, 329, 338,
	-438, -443, -442, -437, -437, -487, 595, 595, 595, -369,
	-104, 594, 289, -381, 205, -437, -481, 599, -381, -381,
	595, -468, -468, 594, -437, 251, 593, 599, 601, 577,
	-348, 596, -460, -461, 593, 595, 599, 595, 599, -421,
	38, 595, -517, -431, -211, -210, 135, 53, 107, 133,
	334, -358, -358, 444, 347, 5, 8, 592, 593, 596,
	-511, 595, 595, 595, -358, -358, 444, -358, -239, -239,
	119, 315, -437, 513, 513, 60, 221, 153, 329, 543,
	-545, -540, 151, -437, 594, 230, 594, 594, 2, -231,
	-232, 142, 457, 24, -617, 2, 541, 153, -239, 153,
	-239, 563, -332, 594, 594, 513, 444, -255, 513, 559,
	-369, -437, -201, 126, -516, -597, 598, -597, 598, 444,
	513, 513, 444, 513, 513, 329, 153, 559, 166, 166,
	565, -247, 559, -369, 513, -491, 48, 26, 329, -297,
	-239, 153, 513, 513, 525, 457, -526, 334, -13, -303,
	-523, -298, 457, 359, 414, -589, -359, -589, 202, -306,
	-612, -481, -205, 348, -204, 145, 426, 136, 258, 223,
	-481, -203, 186, 242, 559, -298, 2, 595, 595, 599,
	-546, 38, 342, 342, 594, -293, -85, 559, -480, -513,
	-593, 559, 43, -296, 38, 153, -590, -132, -298, -485,
	-486, 5, 38, -293, 153, 344, 329, -244, 265, -637,
	-521, -561, -354, -387, -376, 330, 91, 595, -431, -378,
	-362, -437, 2, 595, -198, -199, -526, -526, -526, -200,
	-212, -212, -429, -326, 594, -278, -263, 594, -212, -280,
	2, -527, 599, 594, 577, 577, 577, -206, -481, -128,
	-132, 348, -293, 587, -394, -338, -337, 363, 338, -338,
	434, 434, 345, 176, 261, -233, -277, -437, -437, 149,
	33, 33, -437, -437, -448, 595, -437, -437, -369, 593,
	5, -437, 595, 595, 8, -437, 595, 596, -575, -262,
	-437, 595, 60, 595, 595, 599, 599, 595, 595, 595,
	595, 595, 595, 595, -443, 186, 138, 338, 594, 595,
	595, -104, -445, 208, 60, -468, -445, -445, -396, -358,
	-468, -435, -277, 592, -517, -513, -471, 594, 596, -210,
	577, -526, -526, 559, -306, 593, 2, 592, -517, 595,
	-306, 119, -279, -279, 497, 434, -247, 386, -428, 153,
	-547, 93, -549, 76, 168, 102, 329, 334, 531, 386,
	72, 126, 402, -627, -628, -629, 38, 570, 571, 595,
	-356, -465, -560, 594, -262, -356, -358, 329, 486, 126,
	329, 126, 554, 119, 2, 525, 79, -279, -287, -358,
	-358, -293, -303, -523, 160, 595, 599, 577, 2, 587,
	587, -303, -523, -298, -303, -523, -296, 153, -247, 361,
	166, 160, 595, -277, 5, 5, 153, -274, 76, -279,
	5, -279, -297, 119, 444, 513, 513, 344, 344, 347,
	-608, -609, -203, 599, 594, 577, 577, -203, -527, -128,
	2, -348, -339, 232, -279, -544, -541, -542, 386, -548,
	-550, 168, 386, -132, 2, -214, -213, -262, 5, 594,
	-324, 348, 593, -595, 348, -594, 117, 136, -523, -391,
	-132, -298, -348, 595, 599, 147, -413, 541, -277, -293,
	153, -245, 264, -637, -521, -242, -416, -414, 139, 594,
	344, -132, -354, 577, 595, 595, 119, 119, 224, 152,
	-356, 594, 594, -358, 119, 595, -207, -208, -526, -128,
	-526, -206, -481, -65, -66, 230, 93, 368, -290, 497,
	230, 594, 594, -233, -437, -437, -437, 595, -354, -517,
	587, -569, 363, 595, -464, -437, -437, -438, 186, 594,
	-448, 595, -570, 558, -437, -382, -383, -437, 432, 108,
	206, -570, -570, 595, -513, 2, -526, 2, 513, 592,
	2, 186, 221, 38, 405, -428, -287, -291, -284, -262,
	168, 214, 334, 554, -412, 256, 594, -438, -293, 594,
	2, 213, 213, 30, 60, -630, 130, 235, 595, 599,
	-466, -273, -262, -437, -466, 595, 595, 334, 334, 554,
	-437, -487, 594, -239, -239, 595, 595, -437, 513, -516,
	100, -514, 2, -597, -247, -276, -437, 513, 5, -239,
	-291, -239, -239, -274, 525, -303, -523, -298, -613, 498,
	451, 526, 445, 189, 433, -613, 182, -204, -205, -526,
	-128, -203, 38, -329, 234, 2, -546, 256, -284, 256,
	-626, 559, 595, 599, 577, 577, -322, -215, -86, -87,
	514, -480, 599, 594, 577, -348, 38, 5, 594, 594,
	-262, 344, 594, -277, -257, 92, -637, -521, -243, -387,
	330, -358, 93, -416, -444, -200, 594, 594, -327, 81,
	94, 127, 213, 190, 231, 478, 484, 28, -327, 595,
	-356, -356, 595, 594, -200, 595, 599, 28, 594, 28,
	594, -293, -315, -369, -369, 595, -354, 60, 599, 595,
	595, -438, -448, 595, -571, -572, -282, 599, 594, 594,
	458, 593, -358, 2, -358, -247, 386, -262, -549, -284,
	329, 541, -437, -264, 594, -437, 38, 126, 235, 131,
	219, -427, -631, 101, 487, 222, -465, -233, 595, -426,
	541, 402, -274, -356, 594, 594, 594, 577, 186, 594,
	-491, -239, -297, 513, 2, 2, 186, -589, 595, -602,
	400, -132, -333, -334, 221, 594, -328, 344, 119, 315,
	-213, -514, -514, 595, 38, -87, 9, -594, -595, -437,
	38, -132, -485, -356, -293, -356, 344, -249, -248, 273,
	-521, -244, 595, -287, -387, -527, -527, -426, 595, 595,
	-527, -66, -358, -358, 595, 595, -576, 394, 435, 207,
	-369, -355, 595, 599, 38, -383, 2, 2, 2, 405,
	153, 209, 595, -551, 288, -262, 595, 38, 131, 219,
	-329, 594, -234, -466, -329, 209, -293, -598, 541, 595,
	-341, -340, -337, -343, -342, -337, -369, -514, 100, 361,
	-369, -274, -358, -358, 344, -605, 187, -604, 5, 10,
	-215, 361, -357, -467, -279, 82, 119, -339, -132, 595,
	-132, 595, 595, -413, 595, -293, -246, -528, 405, 407,
	-637, -245, -431, 595, 595, -427, -426, -335, -331, 595,
	595, 595, 595, -577, -578, 50, 528, 109, -437, -577,
	-577, -572, -574, 168, 559, -552, -555, -554, 344, 464,
	187, 362, 595, 486, 553, -335, -358, 559, -348, -437,
	-426, 595, 599, 546, 595, 599, 546, 595, 186, 595,
	-239, -610, 559, -239, -613, -202, 559, 46, -328, -293,
	595, 599, 385, 132, 142, -329, -626, -426, 594, -427,
	594, -254, -253, -637, -507, -257, 139, -200, -200, -329,
	-427, -216, 559, -200, -579, 151, -578, 382, 181, 434,
	382, 181, -579, -579, -284, 55, -554, 344, -555, 344,
	535, 132, -630, 595, 55, -551, -329, -340, 221, -342,
	186, 361, 202, 186, 442, -604, 30, -256, -255, 594,
	-467, 435, 435, 2, -333, -328, -427, -356, -329, -356,
	-250, -251, -252, -358, -249, 330, 535, -335, -329, -431,
	109, 205, 508, 315, 33, 577, -553, 315, 421, 64,
	457, -553, -431, 577, -552, 594, 594, 347, -358, 348,
	-358, 2, -215, -329, 595, -335, 595, -246, 457, -216,
	-335, 434, 352, -578, -437, 23, 334, 126, -437, -630,
	-369, -369, -239, -199, 594, 595, -328, -335, -426, -216,
	-427, -254, -377, -431, -216, 595, 595, -199, -240, 64,
	421, -256, -216, -427, -431, -329, -250, -431, -431, -330,
	-331, 513, 595, -431, -329, -335, 594, -335, -216, -369,
	-216, -431, 595, -431, -330,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1388, 1390, 1392, 1394, 0, 791, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 996, 998, 0, 630, 632,
	0, 1001, 1003, 0, 0, 652, 653, 0, 1499, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, 787, -2, -2, 0, -2, -2, -2, 1406,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	422, 424, 426, 428, 430, 433, 435, 437, 1557, 485,
	487, 489, 491, 493, 495, 497, 0, -2, 1571, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1530, 1532, 1534, 1536, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 547,
	551, 554, 556, 558, 562, 565, 571, 573, 575, 530,
	531, 534, 2263, 2281, 2282, 2283, 2286, 2287, 2288, 2289,
	2290, 2291, 2739, 2821, 2822, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 532, 533, 1177, 0, 599, 597, 2248, 600, 2538,
	602, 604, 472, 473, 474, 475, 476, 477, 0, 623,
	613, 1569, 624, 626, 627, 628, 629, 594, 592, 0,
	623, 2317, 621, 1386, 1387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 401, 1235, 1236, 1237,
	1371, 1372, 2584, 1413, 0, 231, 642, -2, -2, -2,
	2704, -2, 674, -2, 685, 688, 689, 681, 2708, 0,
	2587, -2, 692, 1389, 1391, 1393, 789, 790, 2267, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 241, -2, -2, -2, -2,
	0, 0, 2632, 2369, 2216, 2283, 2219, 2214, 331, 333,
	335, 336, 0, 0, 0, 0, 0, 0, 362, 365,
	367, 371, -2, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 1049, 1050, 1293,
	0, 0, 0, -2, 480, 482, 535, 536, 0, 1558,
	1558, 543, 544, -2, 0, 0, 0, 0, 301, 289,
	997, 999, 1000, 0, 0, 0, 0, 631, 633, 0,
	0, 270, 1002, 1004, 1005, 0, 0, 0, 0, 0,
	303, 0, 0, 647, 649, 651, 717, 719, 721, 723,
	725, 727, 729, 731, 733, 736, 738, 740, 742, 744,
	747, 749, 751, 754, 757, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 779, 781, 783, 784, 797,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 893, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 977, 0, 0, 800, 802, 803,
	804, 0, 866, 891, 892, 901, 788, 0, 1217, 1559,
	1415, 1396, 1410, 1415, 1398, 1399, 1400, 1401, 1402, 1407,
	1409, 1403, 1404, 1405, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 423, 425, 427, 429, 431, 434,
	436, 438, -2, 1528, 1529, 486, 488, 490, 492, 494,
	496, 498, 634, 0, 636, 0, 801, -2, 0, 1563,
	1563, 1563, 0, 0, 1529, 1527, 0, 639, 640, 696,
	697, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 1920, 0, 698, -2, 1953, 1955, 2679, 2511, 2704,
	2089, 1957, 1958, 1959, 1960, 1961, 0, 1963, 1964, 1965,
	1966, 1967, 1968, 0, 1970, 0, 1975, 1976, 1977, 0,
	2686, 2193, 2277, -2, 0, 0, 2692, 2273, 0, 2056,
	1993, -2, -2, 2300, 2279, 1764, 1765, 1766, 1767, 1768,
	-2, -2, 2722, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 0, 2667, 2687, 2688, 2693, 2695,
	2689, 2676, 2018, 2382, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1791, 1800, -2,
	-2, -2, -2, -2, -2, -2, 2680, 2681, 2698, 2701,
	2707, 2712, 2713, 2685, 2694, 2721, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 1792, -2, -2, -2, -2, 1546, 2551, 1549,
	1177, 1547, 1531, 1533, 0, 1535, 0, 0, 0, 1540,
	1566, 1564, 0, 1615, 1544, 1545, 1634, 1634, 1658, 0,
	1639, 0, 1658, 1558, 1685, 0, 1645, 2576, 1994, 1995,
	0, 2283, 2278, -2, -2, 2719, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 601, 603, 0, 0,
	0, 622, 1568, 0, 0, 0, 0, 0, 0, 0,
	404, 405, 406, 407, 408, 2687, 0, 0, 0, 413,
	0, 415, 416, 417, 418, 419, 420, 421, 200, 2687,
	503, 528, 0, 200, 2687, 506, 200, 2687, 509, 0,
	512, 1291, 200, 2687, 515, 2244, 200, 2687, 518, 520,
	2252, 200, 2687, 524, 2259, 2257, 525, 2687, 527, 306,
	304, 305, 2296, 2297, 2304, 2305, 2306, 2307, 2720, 2722,
	1382, 1383, 1384, 1385, 0, 1412, 1292, 644, 645, 0,
	669, 0, 673, 2675, -2, 0, 2596, -2, 677, 1416,
	1420, 1421, 1422, 1423, 1424, 0, 0, 0, 0, 1429,
	0, 0, 0, 0, 670, 671, 684, 690, 693, 0,
	792, 793, 794, 795, 796, 72, 0, 2687, 1685, 74,
	0, 2238, 2308, 2309, 2310, 2311, 2312, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 78, 0,
	2687, 83, 0, 2687, 0, -2, 95, 0, 106, 0,
	2241, 115, 0, 2687, 0, 2213, -2, 0, 212, 290,
	291, 292, 0, 1024, -2, 2687, 1229, 1231, 1231, 0,
	-2, 0, 0, 0, 987, 2210, 2215, 988, 2234, 989,
	2220, 0, 337, 338, 339, 340, 341, 0, 342, 2687,
	344, 345, 0, 347, 348, 2687, 350, 351, 0, 353,
	0, 253, 254, 2687, 375, 377, 0, 379, 380, 0,
	382, 0, 0, 0, 386, -2, 402, 0, 399, 389,
	390, 392, 393, 394, 395, 396, 0, 442, 440, 2249,
	0, 0, -2, 2687, 0, 1021, 0, 0, 1271, -2,
	2687, 1222, 0, 1278, 2687, 1274, 0, -2, 0, 1556,
	2687, 1433, 1053, 1054, 1055, 1056, 1697, 469, 0, 1464,
	0, 1466, 0, 1485, 1691, 1634, 0, 0, 1696, 0,
	-2, 588, 2266, -2, 538, 0, 539, 0, -2, 0,
	318, 0, 0, 1006, 1007, 1008, 1009, 1010, 1013, 1014,
	1015, 1016, 1671, 271, 273, 0, 0, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 0, 0, 654, 0,
	0, 798, 799, 0, 0, 809, 810, 811, 0, 318,
	2588, 2547, 2403, 818, 0, 821, 824, -2, 0, 0,
	0, 0, 828, 0, 833, 834, 835, 0, -2, 0,
	842, 844, 995, 846, 0, 0, 848, 0, 852, 0,
	855, 0, 857, 0, 859, -2, -2, -2, 867, 868,
	-2, 873, -2, 0, 877, -2, 0, 880, 0, 883,
	-2, 0, 893, 889, 890, 0, 0, 0, 0, 909,
	910, 0, 919, 0, 922, 923, 924, 0, 928, 929,
	0, 931, 932, 933, 934, 0, 2659, 2593, 2369, 0,
	940, -2, 946, 948, 0, -2, 0, 964, 0, 968,
	0, 0, 976, 0, 0, 805, 806, 200, 1689, 1395,
	-2, 1397, 0, -2, 0, 635, 0, 638, 1588, 1514,
	1511, 0, 1585, 1586, 1515, 0, 0, 0, 1522, 0,
	1561, 1562, 0, 0, 0, 1501, 1502, 0, 0, 0,
	0, 2095, 2096, 2097, 2098, 2111, 2099, 2100, 2110, 2108,
	2109, 2101, 2102, 2107, 2121, 2122, 2112, 2113, 2103, 2116,
	2114, 2115, 2117, 2118, 2119, 2120, 0, 0, 2126, 0,
	2104, 2105, 2106, 2134, 0, 0, 2135, 0, 2137, 0,
	2127, 2123, 2124, 2125, 0, 1899, 1901, 2201, 0, 0,
	0, 2133, 2128, 2129, 1837, 1838, 1839, 1840, 1841, 1874,
	1878, 1879, 0, 0, 1954, 2198, 2197, 1956, 0, 0,
	2149, 0, 1969, -2, 0, 2090, 2144, 0, 0, 1978,
	1979, 1980, 0, 0, 2149, 0, 0, 2192, 1990, 1991,
	1829, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1777, 0, 1779, 0, 1780, 1781, 1788, 1801,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 2173, -2, 0, 0, 0, 0, 1793, 0,
	1548, 0, 0, 1619, 2202, 2206, 2207, 1619, 1619, 0,
	0, 2150, 1682, 1682, 0, 0, 1677, 1677, 1677, 1675,
	1658, 0, 1658, 1668, 0, 1658, 1658, 0, -2, 1639,
	0, 0, 1668, 0, 1652, 576, 578, 580, 582, 583,
	584, 586, 1686, 1687, 0, 0, 0, 0, 2284, 0,
	0, 0, 0, 0, 2269, 0, 358, 0, 0, 0,
	2642, 2587, 0, -2, 606, 625, 1558, 0, 2152, 1712,
	1716, 0, 1718, 1719, 1720, 1721, 1722, 0, 0, 1713,
	-2, 1789, 1791, 1812, 2301, 2302, 2303, 1772, 1773, 1774,
	1775, 1776, 1784, 1771, 1771, 1771, 1782, 1811, 1803, 1811,
	1807, 1757, 1758, 1759, 1794, 1795, 1796, 1797, 0, 2642,
	2587, 0, -2, 615, 0, 0, 1496, 216, 218, 219,
	220, 221, 222, 403, 0, 410, 411, 412, 0, 499,
	0, 198, 199, 0, 200, 2687, 504, 0, 507, 0,
	200, 2687, 2208, 513, 0, 516, 0, 0, 522, 0,
	0, 0, 0, 0, 200, 1498, 0, 0, 0, 0,
	-2, 679, 686, 687, 0, 1418, 0, 1425, 707, 708,
	709, 1427, 1428, 0, 1430, 682, 710, 711, 712, 713,
	714, 715, 0, 2222, 2223, 2224, 2225, 2228, 2229, 0,
	0, 680, 700, 683, 0, 694, 116, 1368, 0, 0,
	159, 0, 1368, 1368, 0, 0, 0, 0, 185, 0,
	1092, 0, 0, 0, 0, 131, 144, 155, 128, 129,
	0, 0, 0, 0, 0, 0, 84, 1199, 0, 1202,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 103, 143, 0,
	0, 1461, 0, 138, 118, 0, 0, 131, 145, 157,
	0, 189, 191, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 223, 0, 0, 0, 1223, 0, 0,
	0, 1555, 0, 0, 0, 0, 2687, 1366, 0, 1351,
	0, 1671, 2452, -2, -2, 271, 1671, 986, 0, 0,
	2284, 2218, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 381, 383, 384, 385, 0, 1270, 0, 391, 432,
	1148, 2687, 0, 0, 459, 454, 0, 456, 0, 0,
	0, 1198, 2687, 1196, 2253, 0, 1220, 0, 1177, 2687,
	2251, 0, 0, 0, 1279, 2293, 1288, 1292, 1451, 0,
	471, 0, 1467, 1469, 0, 0, 1692, 0, 1694, 1634,
	1558, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 277, 0, 1670, 0, 0, 1671, 271, 2562,
	318, 318, 1671, 656, 1671, 658, 0, 0, 812, 813,
	0, 318, 318, 318, 819, 820, 822, 823, -2, -2,
	-2, -2, 825, 826, 916, 0, 0, 0, 915, 836,
	0, 838, 841, 845, 0, 980, 2571, 2587, 2642, 993,
	916, 2369, 916, 2369, 916, 2369, 856, 858, 861, 904,
	912, 872, 879, 0, 874, 878, 881, 884, 0, 886,
	894, -2, 0, 896, 0, 898, 0, 900, 916, 917,
	920, 927, 930, 935, 936, 937, 938, 2264, 939, -2,
	943, 944, 0, 955, 960, 961, 957, 0, 0, 0,
	0, 0, 0, 971, 972, 0, 0, 979, 1216, 0,
	1408, 1588, 1514, 637, 1505, 1587, 1506, 1513, 1516, 0,
	0, 1518, 0, 1520, 0, 1583, 1584, 1591, 1592, 0,
	1602, 1603, 1595, 0, -2, 0, 0, 1598, 1599, 1524,
	0, 1541, 1542, 1543, 1572, 1575, 1307, 0, 2821, 1833,
	1707, 1834, 1835, 2237, 0, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, -2, -2, -2, -2, -2,
	-2, -2, -2, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, -2, -2, -2, 1875, 1876, 1877,
	-2, 2136, 2138, 0, 2201, 0, -2, 0, -2, -2,
	-2, -2, 1896, 0, 1898, 1903, 1905, 1907, 0, 0,
	0, 0, 2200, 1917, 2184, 2185, 0, 0, 2092, 2093,
	2094, 1902, 0, 1921, 2199, 2196, 0, 0, 2130, 0,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 0, 2148, 1571, 1982, 0, 0, 0,
	0, 1989, 1974, 2146, 0, 2145, 0, 0, 0, 2156,
	0, 2191, 2187, 0, 2235, 1828, 1815, 1816, 1817, 1818,
	1819, 1820, 1830, 0, 2232, 2270, 2276, 2066, 0, 0,
	0, 2019, 2020, 2021, 2022, 2023, 0, 2025, 2026, 0,
	2028, 2029, 0, 2031, 2032, 0, 2034, 2035, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0, 0,
	2038, 0, 2159, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2040, 0, 2042, 2150, 2170, 0, 0, 1922,
	0, 0, 0, 0, 2090, 0, 2045, 2150, 2178, 0,
	0, 0, 0, 0, 2150, 0, 2183, 0, 2052, 0,
	2054, 1550, 0, 0, 1702, 0, 0, 0, 2205, 1702,
	1702, 0, 1614, 0, 0, 1678, 1679, 1680, 1681, 0,
	0, 1682, 0, 1672, 1676, 1673, 1674, 1668, 1631, 0,
	0, 2239, 1668, 1637, 1667, 0, 1177, 1657, 1668, 1668,
	0, -2, 1641, 1658, 0, 0, 577, 579, 581, 585,
	587, 0, 0, 1571, -2, 0, -2, 320, 1176, 0,
	0, 0, 0, 596, 598, 0, 0, 519, 0, 0,
	612, 0, 590, 0, 593, 0, 1703, 1706, 0, 0,
	1717, 1723, 1724, 0, -2, 0, 0, 1813, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 414, 529,
	200, 501, 0, 200, 200, 510, 0, 0, 200, 521,
	200, 2260, 200, 2258, 307, 526, 1497, 234, 0, 672,
	0, 1417, 1426, 0, 704, 0, 706, 0, 2226, 2230,
	2227, 2231, 0, 695, 0, 0, 0, 0, 1367, 0,
	1314, 0, 0, 163, 2687, 0, 202, 0, 0, 1141,
	2245, 0, 1131, 0, 0, 2389, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 1201, 1203, 1210, 1212, 0,
	1206, 2233, 0, 0, 1207, 0, 1209, 1211, 1213, 0,
	0, 0, 0, 0, 0, 0, 97, 104, 0, 0,
	0, 0, 0, 0, 1460, 1461, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 1266, 1264, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 0, 0, 0, -2,
	1227, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 309, 2211, 2221, 0, 1011, 1012, 343,
	346, 349, 352, 240, 0, 387, 0, 0, 1059, 1034,
	0, 0, 441, 318, 0, 0, 455, 459, 2262, 1019,
	1194, 1197, 0, 1177, 2687, 1243, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 2687, 2240, 2292, 2293, 1453,
	1461, 0, 1702, 0, 1483, 1470, 0, 0, 0, 1483,
	1487, 1488, 1490, 1491, 0, 0, 1693, 1699, 537, 589,
	1558, 1558, 318, 316, 2514, 314, 311, 313, 0, 0,
	0, 1060, 1062, 1063, 1064, 202, 0, 2293, 1131, 2441,
	2293, 0, 1473, 1475, 0, 265, 0, 274, 1671, 272,
	277, 0, 0, 0, 453, 655, 660, 807, 0, 318,
	815, 816, 817, 863, 906, 914, 959, 827, 829, 830,
	831, 0, 0, 0, 994, 990, 991, 992, 847, 916,
	850, 916, 853, 916, 876, 882, 888, 895, 0, 0,
	0, 908, 925, 0, 942, 0, 0, 0, 0, 0,
	0, 0, 965, 966, 967, 969, 974, 973, 978, 1690,
	1509, 1510, 1512, 0, 1521, 0, 0, 1597, -2, -2,
	1596, 1600, 1601, -2, -2, -2, -2, 1517, 0, 1526,
	1523, 0, 1582, 1305, 1306, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1918, 0, -2, 1897, 1900, 1904,
	1906, 1908, 0, 0, 0, 0, 0, 0, 2139, 0,
	2141, 1919, 2194, 2197, 2132, 0, 2088, 0, 0, 1570,
	1571, 1571, 0, 1988, 0, 2147, 0, 2154, 2155, 0,
	1981, 0, 2188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 2024, 2027, 2030,
	2033, 0, 0, 0, 0, 2013, 0, 0, 0, 2017,
	1783, 1769, 0, 1811, 1809, 1810, 1804, 1811, 1808, 1761,
	0, 1760, 0, 2037, 0, 2039, 2041, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 1926, 1927, 1947, 2044, 2176,
	2177, 0, 0, 0, 0, 0, 0, 2050, 0, 2182,
	2051, 2053, 1558, 0, 1551, 0, 1616, 1605, 1701, 0,
	2203, 1671, 1618, 1620, 2204, 2242, 1605, 1605, 0, 2151,
	0, 0, 1662, 0, 0, 0, 1664, 1635, 0, 0,
	1629, 0, 1624, 1625, 1626, 1627, 1628, 1636, 1177, 1666,
	1638, 1642, 2270, 0, 1668, 0, 1653, 0, 1655, 1688,
	0, 1647, 1650, 0, 0, 2285, 1702, 0, 354, 359,
	360, 355, 356, 357, 605, 0, 0, 0, 0, 0,
	2153, 0, 1708, 0, 1714, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 217, 1495, 409, 500, 200, 505,
	508, 2209, 200, 514, 517, 523, 230, 0, 668, -2,
	702, 703, 705, 0, 701, 160, 1368, 0, 0, 1310,
	1312, 2256, 1316, 1322, 1325, 0, 165, 2687, 176, 0,
	1108, 0, 2243, 0, 0, 0, 0, 0, 0, 1370,
	0, 0, 2687, 200, 2687, 200, 179, 181, 184, 0,
	188, 186, 0, 1096, 0, 0, 1099, 117, 1368, 0,
	0, 120, 124, 132, 133, 136, 0, 0, 0, 142,
	0, 0, 0, 1327, 1331, 1339, 0, 0, 0, 1204,
	1205, 1208, 1214, 85, 0, 0, 0, 1335, 1337, 1343,
	96, 1439, 1440, 98, 2687, 2254, 100, 2687, 0, 1309,
	0, 0, 0, 0, 190, 122, 126, 134, 135, 137,
	0, 1345, 119, 0, 215, 0, 0, 205, 200, 2687,
	0, 207, 0, 208, 209, 224, 0, 0, 0, 1022,
	1023, 1232, 1233, 1234, 1265, 1218, 1219, 0, 1230, 1224,
	0, 0, 0, 0, 0, 1347, 1348, 0, 0, 0,
	1366, 1363, 1671, 236, 0, 1671, 244, 0, 2217, 0,
	374, 0, 0, 0, 0, 1058, 1159, 0, 1029, 0,
	0, 0, 447, 443, 0, 452, 458, 457, 463, -2,
	0, 0, 0, 0, -2, 0, 0, 1281, 1275, 1276,
	0, 0, 0, 0, 2687, 1455, 1461, 0, 1556, 1571,
	470, 1462, 1483, 0, 0, 0, 1472, 1468, 1465, 1702,
	0, 0, 0, 0, 0, 1695, 1698, 540, 541, 293,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 1065,
	1069, 0, 2293, 2293, 0, 2247, 0, 0, 0, 0,
	275, 0, 278, 0, 0, 0, 283, 284, 285, 286,
	287, 288, 277, 267, 1671, 0, 0, 657, 0, 0,
	814, 0, 837, 840, 849, 851, 854, 897, 899, 916,
	926, 949, 950, 1086, 0, 1086, 0, 0, 970, 1519,
	0, 1594, 1525, 1576, 1577, 0, 1307, 0, 1836, 1881,
	0, 0, -2, 0, 0, 1885, 0, 0, 0, -2,
	0, 0, 0, 2140, 2142, 0, 2196, 2131, 1983, 0,
	0, 0, 1987, 1971, 1972, 0, 2091, 2157, 2186, 2190,
	0, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 0, 2236,
	2271, 2275, 2064, 2065, 2069, 2250, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1806,
	0, 0, 2158, 2169, 2171, 1923, 1924, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, -2, -2, -2,
	1941, 1942, 1943, -2, -2, -2, 1948, 0, 0, 0,
	2172, 2174, 2175, 2179, 2180, 0, 2047, 2048, 2049, 2181,
	0, 1558, 1552, 1613, 0, 1700, 1617, 0, 1613, 1613,
	1565, 1660, 0, 0, 1684, 0, 1632, 0, 1633, 0,
	1665, 0, 1640, 1643, 1644, 1654, 0, 1646, 0, 1649,
	0, 1983, -2, 319, 321, 323, 0, 326, 327, 0,
	0, 608, 609, 0, 607, 591, 0, 0, 1710, 0,
	0, 1786, 1790, 1814, 617, 618, 0, 616, 502, 511,
	232, 0, 1669, 0, 0, 0, 0, 0, 0, 201,
	1106, 1140, 0, 0, 0, 1130, 0, 0, 1146, 167,
	168, 0, 0, 0, 0, 177, 0, 0, 174, 0,
	183, 187, 1093, 0, 0, 0, 0, 1315, 0, 0,
	0, 139, 140, 141, 0, 146, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 1446,
	0, 1436, 0, 0, 0, 203, 0, 0, 0, 1304,
	226, 0, 0, 0, 0, 0, 1268, 1269, 1226, 1328,
	1332, 1340, 0, 0, 0, 0, 623, 0, 628, 1365,
	0, 244, 242, 0, 245, 0, 248, 249, 0, 251,
	244, 238, 0, 0, 0, 1177, 388, 1032, 1147, 0,
	1149, 0, 1030, 0, 0, 1148, 439, 0, 446, 0,
	460, 0, 0, 1198, 0, 0, 1221, 1241, 1177, 0,
	1280, 1282, 0, 1290, 0, 0, 0, 1457, 1461, 0,
	1450, 1451, 1590, 1463, 1481, -2, 0, 0, 1571, 1489,
	1486, 1492, 1493, 0, 315, 0, 310, 312, 0, 296,
	0, 0, 1061, 1066, 0, 0, 0, 0, 0, 1474,
	1476, 0, 0, 0, 0, 0, 0, 266, 277, 1671,
	302, 0, 808, 832, 907, 951, 1085, 0, 0, 953,
	0, 0, 1593, 1580, 1581, 1578, 1307, 1883, 1887, 0,
	0, 0, 1889, -2, 0, 1911, -2, -2, 2143, 2195,
	1962, 1571, 1984, 1986, 1973, 2189, 1831, 0, 2071, 2068,
	0, 2055, 0, 2008, 2009, 0, 0, 2012, 2014, 2015,
	2016, 1770, 1763, 1762, 2168, 0, 0, 0, 0, 2046,
	1553, 0, 2060, 0, 0, 1621, 2060, 2060, 1661, 0,
	1663, 1630, 1622, 0, 2271, 1656, 1648, 0, 0, 324,
	0, 328, 329, 0, 0, 1704, 1709, 0, 1715, 1785,
	0, 233, 161, 162, 1319, 1323, 1320, 0, 164, 0,
	1107, 0, 1110, 0, 0, 0, 0, 1117, 1131, 0,
	0, 0, 0, 0, 1133, 0, 1132, 0, 0, 1163,
	0, 1295, 1302, 0, -2, 0, 0, 0, 170, 193,
	0, 0, 194, 1369, 172, 0, 0, 200, 200, 0,
	0, 1311, 1313, 1326, 0, 0, 0, 0, 149, 0,
	0, 1329, 1333, 1341, 1336, 1338, 1344, 0, 101, 0,
	1447, 0, 0, 1346, 213, 214, 0, 200, 0, 200,
	206, 200, 1304, 0, 0, 0, 0, 0, 0, 0,
	1349, 1350, 235, 0, 0, 0, 0, 237, 308, 244,
	376, 0, 1080, 0, 1159, 1151, 1152, 1153, 0, 1158,
	1160, 0, 0, 1046, 1031, 0, 1042, 0, 0, 1059,
	1034, 0, 444, 461, 0, 464, 0, 467, 1020, 1195,
	1238, 1177, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 1459, 1461, 0, 1452, 1453, 1483, 1589, 0, 0,
	0, 1471, 1590, 0, 317, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 279, 0, 280, 281,
	282, 268, 269, 659, 661, 0, 0, 667, 1084, 0,
	0, 0, 0, 1579, 1891, -2, -2, 1912, 0, 2272,
	2274, 1571, 0, 2057, 1573, 0, 0, -2, 0, 0,
	0, 1554, 1537, 0, 1612, 1604, 1606, 1608, 2574, 2364,
	2686, 1538, 1539, 1683, 0, 1651, 325, 610, 0, 0,
	1711, 0, 0, 0, 1321, 166, 0, 1111, 1112, 2246,
	1114, 0, 1116, 1118, 1119, 1120, 0, 1123, 2295, 0,
	1127, 1128, 1129, 0, 0, 1142, 1164, 0, 1173, 0,
	1297, 1307, 1301, 0, 1299, 1175, 0, 169, 171, 195,
	192, 1304, 0, 173, 182, 0, 0, 121, 0, 0,
	2358, 152, 150, 148, 99, 1308, 123, 0, 215, 225,
	1303, 227, 210, 200, 0, 1330, 1334, 1342, 0, 1357,
	1358, 1359, 1360, 0, 0, 0, 0, 246, 0, 247,
	250, 0, 0, 1095, 0, 1033, 1150, 0, 1161, 1162,
	1036, 0, 1035, 0, 0, 0, 0, 0, 445, 448,
	0, 451, 0, 0, 0, 0, 0, 1283, 1281, 0,
	1289, 0, 0, 0, 1435, 0, 0, 1454, 1455, 468,
	1477, 0, 0, 1483, 1494, 295, 0, 0, 1067, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1068, 1175,
	0, 0, 1139, 0, 300, 276, 0, 663, 0, 665,
	0, 952, 954, 0, 0, 1985, 2075, 0, 0, 2010,
	2011, -2, 0, 1951, 2059, 2061, 0, 0, 0, 0,
	0, 1623, 611, 1705, 619, 1317, 0, 1324, 1109, 1113,
	0, 0, 0, 1181, 0, 0, 1134, 0, 0, 1167,
	1168, 1080, 0, 1169, 1170, 1171, 1296, 1582, 1302, 1080,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	204, 228, 1304, 0, 1361, 1362, 0, 0, 243, 261,
	0, 1239, 1034, 1094, 0, 0, 1044, 0, 1047, 0,
	1043, 1040, 1041, 1032, 0, 449, 450, 465, 0, 466,
	0, 1242, 0, 0, 1290, 0, 0, 1442, 1434, 1461,
	1456, 1457, 1702, 1480, 1484, 0, 0, 1173, 1175, 1091,
	0, 662, 0, 0, 962, 963, 0, 0, 0, 0,
	2070, 1574, 1952, 0, 0, 1607, 1609, 1610, 1611, 1318,
	0, 0, 1122, 1186, 0, 0, 0, 1135, 1165, 1166,
	1091, 0, 1300, 1298, 1144, 0, 1177, 175, 0, 1175,
	0, 1100, 0, 0, 1103, 0, 0, 153, 2358, 151,
	0, 200, 1354, 200, 0, 264, 0, 258, 256, 257,
	1036, 0, 0, 1155, 1157, 0, 1048, 1080, 1046, 462,
	1240, 1273, 1175, 0, 1173, 0, 1449, 1461, 1443, 1444,
	0, 1459, 0, 318, 318, 1080, 1173, 1034, 1090, 318,
	664, 666, 2067, 2087, 2076, -2, 2645, 2365, 0, 2087,
	2087, 2062, 2063, 0, 0, 1124, 1182, 1183, 0, 1178,
	1179, 1180, 2294, 1125, 1126, 1163, 0, 0, 1181, 196,
	1080, 1097, 0, 0, 1098, 0, 0, 156, 0, 158,
	229, 1352, 0, 1355, 0, 252, 0, 0, 1028, 0,
	1154, 0, 0, 0, 0, 1095, 1036, 1173, 0, 1080,
	0, 1438, 1448, 0, 1458, 1435, 0, 297, 298, 1091,
	1080, 1702, 0, 299, 2072, 0, 0, 2078, 2079, 2080,
	2081, 2082, 2073, 2074, 1115, 0, 1184, 0, 1185, 0,
	0, 0, 1702, 1172, 0, 1186, 180, 1101, 0, 1104,
	0, 154, 0, 0, 0, 259, 260, 1025, 1027, 0,
	1156, 1037, 0, 1039, 1034, 1045, 1080, 0, 1091, 0,
	1431, 1437, 1441, 2255, 1442, 1478, 0, 1034, 1091, 1138,
	0, 2084, 2085, 0, 0, 0, 1187, 0, 1190, 1191,
	0, 1188, 1143, 0, 1163, 0, 0, 1353, 200, 0,
	0, 1038, 1036, 1091, 1175, 1034, 1173, 1449, 0, 1702,
	1034, 2083, 2086, 2077, 1121, 1189, 1192, 1193, 1174, 1145,
	0, 0, 1356, 262, 0, 1083, 1028, 1034, 1173, 1702,
	1080, 1438, 1702, 1136, 1702, 1088, 0, 0, 1079, 1081,
	1082, 1026, 1702, 1080, 1286, 1091, 1432, 1479, 1137, 1102,
	1087, 0, 263, 1284, 1091, 1034, 0, 1034, 1702, 0,
	1702, 1287, 1088, 1285, 1105,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 583, 3, 589, 584, 3,
	594, 595, 587, 585, 599, 586, 596, 588, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 602, 3,
	575, 577, 576, 580, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 592, 3, 593, 590, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 600, 582, 601, 578,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 579, 57918, 581, 57919, 591,
	57920, 597, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1466
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1678
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1762
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1794
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1818
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1827
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1879
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1880
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1905
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1929
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1936
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1983
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1993
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2003
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2023
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2029
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2060
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2146
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2189
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2192
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2198
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2423
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2427
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2600
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2608
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3028
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3037
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3043
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3048
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3053
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3058
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3063
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3067
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3094
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3170
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3350
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3366
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3408
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3437
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3438
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3441
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3442
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3589
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3624
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3711
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4003
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4027
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4035
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4116
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4149
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4239
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4254
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4317
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4403
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.str = "client_encoding"
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.str = "timezone"
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4899
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4962
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4971
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = true
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = true
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = false
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5350
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = true
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = false
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = true
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = false
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5467
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5478
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5500
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5543
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5567
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5611
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5619
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5650
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
		}
	case 962:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5663
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5686
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5767
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5914
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5966
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6198
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6214
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{

			sqlVAL.union.val = nil
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.str = ""
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = nil
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6282
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6286
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6312
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6326
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6341
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6448
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.str = ""
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6612
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6712
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{

			sqlVAL.union.val = true
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = false
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6755
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6862
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6900
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6984
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6985
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7141
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7150
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7158
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7211
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.str = ""
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{

			sqlVAL.union.val = true
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = false
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7319
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7333
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7345
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7357
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7367
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7377
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = nil
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7487
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7515
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7517
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7519
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7523
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7561
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7579
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7598
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7615
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7632
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7636
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = false
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = false
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = true
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = false
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.str = ""
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.str = ""
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7769
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7775
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8000
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8006
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8018
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8024
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8038
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8044
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.Types
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8192
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8195
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8196
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8234
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8284
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8351
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8362
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8426
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.str = ""
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8564
		{

		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8579
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.str = ""
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.str = ""
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8634
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8699
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8784
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8788
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8879
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8894
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9038
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9180
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = true
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9250
		{
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = nil
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9264
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = true
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = false
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = false
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = true
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9293
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9294
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9298
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9360
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9365
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9552
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9589
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9646
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9696
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9742
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9772
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = nil
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = true
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = false
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.str = tree.AstFull
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.str = tree.AstRight
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.str = tree.AstInner
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9925
		{
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.str = tree.AstHash
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.str = ""
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10017
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10029
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = true
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = false
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = true
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = false
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10088
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10101
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10109
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10110
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10128
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10138
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10158
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = types.Geography
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10269
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10277
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10311
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = nil
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = types.Int2
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = types.Int
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = types.Float4
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = types.Float
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = types.Bool
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = types.Float
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10409
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = types.String
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = true
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = false
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = types.Date
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10511
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = true
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = false
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = false
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = types.Interval
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10560
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = nil
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10689
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10749
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10898
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11215
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11324
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11374
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11404
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11415
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11416
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11431
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11506
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11701
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11702
		{
			return unimplemented(sqllex, "treat")
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.str = ""
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11877
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11974
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12391
		{
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12463
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12544
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12560
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12597
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12614
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12833
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12846
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12853
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.str = ""
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
